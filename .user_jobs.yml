.only-default: &only-default
    only:
      refs:
        - merge_requests
    except:
      variables:
        - $CI_COMMIT_REF_NAME =~ /^test\/.*$/i
        - $CI_MERGE_REQUEST_TITLE =~ /^Draft:.*$/ && $CI_COMMIT_MESSAGE !~ /^RESOLVE_WIP:/

.tag-hog: &tag-hog
        tags:
           - hog

.user_sim: &user_sim
    <<: *only-default
    image: gitlab-registry.cern.ch/hog/hog-docker
    stage: user_pre
    script:
        - if [[ -v HOG_CHECK_PROJVER ]] && [[ $HOG_CHECK_PROJVER == '1' ]]; then
            vivado -mode batch -notrace -source ./Hog/Tcl/CI/check_proj_ver.tcl -tclargs -ext_path "$HOG_EXTERNAL_PATH" -sim $PROJECT_NAME ;
          else
            echo "Project version checker is disabled.";
          fi
        - if [ -f "./VivadoProjects/$PROJECT_NAME/skip.me" ]; then
            echo "CI disabled for $PROJECT_NAME";
          else
            if [ -z ${HOG_SIMULATION_LIB_PATH+x} ]; then
              echo 'Simulation library path is not defined';
            else
              vivado -mode batch -notrace -source ./Hog/Tcl/launchers/launch_simulation.tcl -tclargs -lib_path $HOG_SIMULATION_LIB_PATH $PROJECT_NAME ;
            fi;
          fi
    artifacts:
        name: user_sim
        paths:
            - $CI_PROJECT_DIR/VivadoProject/$PROJECT_NAME/$PROJECT_NAME.sim
            - $CI_PROJECT_DIR/SkippedProjects/$PROJECT_NAME
        expire_in: 30 day

.sim_check: &sim_check
    <<: *only-default
    image: gitlab-registry.cern.ch/hog/hog-docker
    stage: user_proj
    script:
        - cd tools/post_scripts
        - python sim_check.py $PROJECT_NAME

