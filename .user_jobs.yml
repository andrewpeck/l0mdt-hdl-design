.only-default: &only-default
   rules:
      - if: '$CI_COMMIT_REF_NAME =~ /^test\/.*$/i'
        when: never
      - if: '$CI_MERGE_REQUEST_TITLE =~ /^Draft:.*$/ && $CI_COMMIT_MESSAGE !~ /^RESOLVE_WIP:/'
        when: never
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^master.*$/ && $HOG_TARGET_BRANCH == null && $INTERMEDIATE_BUILD == null'
        when: on_success
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $HOG_TARGET_BRANCH && $HOG_TARGET_BRANCH != null && $INTERMEDIATE_BUILD == null'
        when: on_success
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $HOG_INTERMEDIATE_BRANCH && $INTERMEDIATE_BUILD == "1"'
        when: on_success
      - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $HOG_INTERMEDIATE_BRANCH && $CI_BUILD_STAGE == "collect" && $HOG_INTERMEDIATE_BRANCH != null'
        when: on_success

.tag-hog: &tag-hog
  tags:
    - hog

.tag-sr: &tag-sr
  tags:
     - docker

.riviera_vars: &riviera_vars
  GIT_STRATEGY: clone
  HOG_PATH: "/opt/Xilinx/Vivado/2019.2/bin:/mnt/vd/Xilinx/Vivado/2019.2/bin:/afs/cern.ch/project/parc/riviera20214/bin/"
  HOG_SIMULATION_LIB_PATH: "/afs/cern.ch/user/l/l0mdtel/public/RivieraLibs/riviera"
#   CI_DEBUG_TRACE: "true"

.user_sim: &user_sim
  <<: *only-default
  <<: *tag-hog
  stage: user_pre
  script:
    - if [[ -v HOG_CHECK_PROJVER ]] && [[ $HOG_CHECK_PROJVER == '1' ]]; then
      vivado -mode batch -notrace -source ./Hog/Tcl/CI/check_proj_ver.tcl -tclargs -ext_path "$HOG_EXTERNAL_PATH" -sim $PROJECT_NAME ;
      else
      echo "Project version checker is disabled.";
      fi
    - if [ -f "./Projects/$PROJECT_NAME/skip.me" ]; then
      echo "CI disabled for $PROJECT_NAME";
      else
      if [ -z ${HOG_SIMULATION_LIB_PATH+x} ]; then
      echo 'Simulation library path is not defined';
      else
      vivado -mode batch -notrace -source ./Hog/Tcl/launchers/launch_simulation.tcl -tclargs -lib_path $HOG_SIMULATION_LIB_PATH $PROJECT_NAME ;
      fi;
      fi
  artifacts:
    name: user_sim
    paths:
      - $CI_PROJECT_DIR/Projects/$PROJECT_NAME/$PROJECT_NAME.sim
      - $CI_PROJECT_DIR/SkippedProjects/$PROJECT_NAME
    expire_in: 30 day
  allow_failure: false
  interruptible: true

.riviera_sim: &riviera_sim
  <<: *only-default
  <<: *tag-hog
  stage: generation_and_simulation
  script:
    - export PATH=${HOG_PATH}:$PATH
    - which vsim
    - if [[ -v HOG_CHECK_PROJVER ]] && [[ $HOG_CHECK_PROJVER == '1' ]]; then
      vivado -mode batch -notrace -source ./Hog/Tcl/CI/check_proj_ver.tcl -tclargs -ext_path "$HOG_EXTERNAL_PATH" -sim $PROJECT_NAME ;
      else
      echo "Project version checker is disabled.";
      fi
    - if [ -f "./Projects/$PROJECT_NAME/skip.me" ]; then
      echo "CI disabled for $PROJECT_NAME";
      else
      if [ -z ${HOG_SIMULATION_LIB_PATH+x} ]; then
      echo 'Simulation library path is not defined';
      else
        sed -i 's/questa/riviera/' ./Top/$PROJECT_NAME/list/project_lib.sim;
        vivado -mode batch -notrace -source ./Hog/Tcl/launchers/launch_simulation.tcl -tclargs -lib_path $HOG_SIMULATION_LIB_PATH $PROJECT_NAME ;
      fi;
      fi
  artifacts:
    name: user_sim
    paths:
      - $CI_PROJECT_DIR/Projects/$PROJECT_NAME/$PROJECT_NAME.sim
      - $CI_PROJECT_DIR/SkippedProjects/$PROJECT_NAME
    expire_in: 30 day
  allow_failure: false
  tags:
    - riviera
   interruptible: true


.user_hls: &user_hls
  <<: *only-default
  <<: *tag-hog
  stage: user_pre
  script:
    - cd l0mdt-hls/LSF/Run
    - source run.sh calc_LE_r_offset_barrel
    - source run.sh compute_r_bins
    - source run.sh find_max_bin
    - source run.sh get_legendre_segment_barrel
    - source run.sh get_rom_addr
    - source run.sh trig_vals
    - source run.sh load_LE_refPos
  allow_failure: true

.sim_comp: &sim_comp
  <<: *only-default
  <<: *tag-sr
  image: gitlab-registry.cern.ch/hog/hog-docker:ubuntu
  stage: user_proj
  script:
    - cd tools/simComp
    - python3 comparator.py $PROJECT_NAME
  allow_failure: true

.sim_check: &sim_check
  <<: *only-default
  <<: *tag-sr
  image: gitlab-registry.cern.ch/hog/hog-docker:ubuntu
  stage: user_post
  script:
    - cd tools/simCheck
    - python3 checker.py $PROJECT_NAME -v 1
  allow_failure: true
