include:
    - project: 'hog/Hog'
      file: '/gitlab-ci.yml'
    #  ref: 'feature/timing_error'
before_script:
    - env
    - export REPO=`echo $CI_PROJECT_URL | sed -e s#https://##`
    - git remote set-url origin https://${HOG_USER}:${HOG_PUSH_TOKEN}@$REPO
    - git config user.email ${HOG_EMAIL}
    - git config user.name ${HOG_USER}
    - git fetch
    - git fetch origin $CI_COMMIT_REF_NAME
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git checkout $CI_COMMIT_REF_NAME
    - git submodule init
    - git submodule update
    - ./Hog/Ignore_ip_xml.sh
    - export XILINXD_LICENSE_FILE=${HOG_XIL_LICENSE}
    - export PATH=$PATH:${HOG_PATH}
    - echo $HOG_PASSWORD | kinit $HOG_USER
    - source ${PROFPGA_PATH}/bin/settings64.sh

#################### Hp Project ###########################

create_project:pt:
    extends: .create_project
    variables:
      extends: .vars
      PROJECT_NAME: hp

# synthesise_ips:pt:
#     extends: .synthesise_ips
#     variables:
#       extends: .vars
#       PROJECT_NAME: pt
#       IP_PATH: IP
#     dependencies:
#         - create_project:pt

# synthesise_project:pt:
#     extends: .synthesise_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: pt
#     dependencies:
#         - synthesise_ips:pt
#         - create_project:pt

# implement_project:pt:
#     extends: .implement_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: pt
#     dependencies:
#        - create_project:pt
#        - synthesise_ips:pt
#        - synthesise_project:pt

# write_bitstream:pt:
#     extends: .write_bitstream
#     variables:
#       extends: .vars
#       PROJECT_NAME: pt
#     dependencies:
#        - create_project:pt
#        - synthesise_ips:pt
#        - synthesise_project:pt
#        - implement_project:pt


# #################### CSF Project ###########################

# create_project:csf_plus_pt:
#     extends: .create_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt

# synthesise_ips:csf_plus_pt:
#     extends: .synthesise_ips
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
#       IP_PATH: IP
#     dependencies:
#         - create_project:csf_plus_pt

# synthesise_project:csf_plus_pt:
#     extends: .synthesise_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
#     dependencies:
#         - synthesise_ips:csf_plus_pt
#         - create_project:csf_plus_pt

# implement_project:csf_plus_pt:
#     extends: .implement_project
#     variables: 
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
# #      HOG_NO_BITSTREAM_STAGE: 1
#     dependencies:
#        - create_project:csf_plus_pt
#        - synthesise_ips:csf_plus_pt
#        - synthesise_project:csf_plus_pt

# check_timing:profpga_duo_csf_plus_pt.0:
#     extends: .check_timing
#     variables: 
#       extends: .vars
#       PROJECT_NAME: profpga_duo_csf_plus_pt.0
#       HOG_NO_BITSTREAM_STAGE: 1
#     dependencies:
#       - create_project:profpga_duo_csf_plus_pt.0
#       - synthesise_ips:profpga_duo_csf_plus_pt.0
#       - synthesise_project:profpga_duo_csf_plus_pt.0
#       - implement_project:profpga_duo_csf_plus_pt.0

# write_bitstream:profpga_duo_csf_plus_pt.0:
#     extends: .write_bitstream
#     variables:
#       extends: .vars
#       PROJECT_NAME: profpga_duo_csf_plus_pt.0
#     dependencies:
#        - create_project:profpga_duo_csf_plus_pt.0
#        - synthesise_ips:profpga_duo_csf_plus_pt.0
#        - synthesise_project:profpga_duo_csf_plus_pt.0
#        - implement_project:profpga_duo_csf_plus_pt.0
    #   - check_timing:profpga_duo_csf_plus_pt.0

#################### pT Project ###########################

create_project:pt:
    extends: .create_project
    variables:
      extends: .vars
      PROJECT_NAME: pt

synthesise_ips:pt:
    extends: .synthesise_ips
    variables:
      extends: .vars
      PROJECT_NAME: pt
      IP_PATH: IP
    dependencies:
        - create_project:pt

synthesise_project:pt:
    extends: .synthesise_project
    variables:
      extends: .vars
      PROJECT_NAME: pt
    dependencies:
        - synthesise_ips:pt
        - create_project:pt

implement_project:pt:
    extends: .implement_project
    variables:
      extends: .vars
      PROJECT_NAME: pt
    dependencies:
       - create_project:pt
       - synthesise_ips:pt
       - synthesise_project:pt

# write_bitstream:pt:
#     extends: .write_bitstream
#     variables:
#       extends: .vars
#       PROJECT_NAME: pt
#     dependencies:
#        - create_project:pt
#        - synthesise_ips:pt
#        - synthesise_project:pt
#        - implement_project:pt

#################### CSF+pT Project ###########################

# create_project:csf_plus_pt:
#     extends: .create_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt

# synthesise_ips:csf_plus_pt:
#     extends: .synthesise_ips
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
#       IP_PATH: IP
#     dependencies:
#         - create_project:csf_plus_pt

# synthesise_project:csf_plus_pt:
#     extends: .synthesise_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
#     dependencies:
#         - synthesise_ips:csf_plus_pt
#         - create_project:csf_plus_pt

# implement_project:csf_plus_pt:
#     extends: .implement_project
#     variables:
#       extends: .vars
#       PROJECT_NAME: csf_plus_pt
#     dependencies:
#        - create_project:csf_plus_pt
#        - synthesise_ips:csf_plus_pt
#        - synthesise_project:csf_plus_pt

# write_bitstream:csf_plus_pt:
#      extends: .write_bitstream
#      variables:
#        extends: .vars
#        PROJECT_NAME: csf_plus_pt
#      dependencies:
#         - create_project:csf_plus_pt
#         - synthesise_ips:csf_plus_pt
#         - synthesise_project:csf_plus_pt
#         - implement_project:csf_plus_pt

######## Devel automatic mr #######
OpenMR:
    only:
        refs:
            - schedules
    stage: merge
    script:
        - git pull
        - HOST=${CI_PROJECT_URL} CI_PROJECT_ID=${CI_PROJECT_ID} CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME} GITLAB_USER_ID=${GITLAB_USER_ID}               PRIVATE_TOKEN=GXK25m5GX9Ysf5ySqz6J ./autoMergeRequest.sh       
