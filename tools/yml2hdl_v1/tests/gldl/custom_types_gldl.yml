config:
    basic_convert_functions : on
    packages:
      work:
        - custom_types_pkg

hdl:

- MAX_NUM_HP: [type: integer, value: LEN1]
- MAX_NUM_HEG: [type: integer, value: 3]
- MAX_NUM_HPS: [type: integer, value: 3]
- MAX_NUM_SL:   [type: integer , value: 5]

# -----------------------------------------------------------
#       Sector Logic Rx interface ouytput signal types
# -----------------------------------------------------------

# slc_muid 

- SLC_SLCID_LEN: [qualifier: constant , type: integer , value: 2 , comment: a comment]
- SLC_SLID_LEN:  [qualifier: constant , type: integer , value: LEN1]
- BCID_LEN:      [qualifier: constant , type: integer , value: 12]
  
- slc_muid:
  - slcid: [type: logic , length: SLC_SLCID_LEN , comment: another comment]
  - slid:  [type: logic , length: SLC_SLID_LEN]
  - bcid:  [type: logic , length: BCID_LEN]
  - _: off

# slc chambers

- SLC_CHAMBER_LEN:     [qualifier: constant , type: integer , value: 6]
- slc_chid:
  - mdt_inn:           [type: logic , length: SLC_CHAMBER_LEN]
  - mdt_mid:           [type: logic , length: SLC_CHAMBER_LEN]
  - mdt_out:           [type: logic , length: SLC_CHAMBER_LEN]
  - mdt_ext:           [type: logic , length: SLC_CHAMBER_LEN]
    
# slc common 
    
- SLC_TCID_LEN:     [ qualifier: constant , type: integer , value: 2 , _: off]
- SLC_TCSENT_LEN:   [ qualifier: constant , type: integer , value: 1 ]
- SLC_POS_ETA_LEN:  [ qualifier: constant , type: integer , value: 15 ]
- SLC_POS_ETA_MULT: [ qualifier: constant , type: real , value: 0.014 ]  
- SLC_POS_PHI_LEN:  [ qualifier: constant , type: integer , value: 9 ]
- SLC_POS_PHI_MULT: [ qualifier: constant , type: real , value: 0.012 ]  
- SLC_PT_TH_LEN:    [ qualifier: constant , type: integer , value: 4 ]
- SLC_CHARGE_LEN:   [ qualifier: constant , type: integer , value: 1 ]  
  
- slc_common:
  - tcid:           [ type: logic , length: SLC_TCID_LEN, _: off]
  - tcsent:         [ type: logic , length: SLC_TCSENT_LEN ]
  - pos_eta:        [ type: signed , length: SLC_POS_ETA_LEN]
  - pos_phi:        [ type: unsigned , length: SLC_POS_PHI_LEN]
  - pt_th:          [ type: logic , length: SLC_PT_TH_LEN]
  - charge:         [ type: logic , length: SLC_CHARGE_LEN ]

# slc specific barrel

- SLC_B_SPARE_LEN:    [ qualifier: constant , type: integer , value: 8 ]
- SLC_COIN_TYPE_LEN:  [ qualifier: constant , type: integer , value: 3 ]
- SLC_Z_RPC_LEN:      [ qualifier: constant , type: integer , value: 10 ]
- SLC_Z_RPC_MULT:     [qualifier: constant , type: real , value: 0.0234 ] 

- slc_barrel: 
  - spare_bits:     [type: logic , length: SLC_B_SPARE_LEN]
  - coin_type:      [type: logic , length: SLC_COIN_TYPE_LEN]
  - z_rpc0:         [type: signed , length: SLC_Z_RPC_LEN]
  - z_rpc1:         [type: signed , length: SLC_Z_RPC_LEN]
  - z_rpc2:         [type: signed , length: SLC_Z_RPC_LEN]
  - z_rpc3:         [type: signed , length: SLC_Z_RPC_LEN]

# slc specific endcap

- SLC_E_SPARE_LEN:            [ qualifier: constant , type: integer , value: 8 ]
- SLC_R_LEN:                  [ qualifier: constant , type: integer , value: 10 ]
- SLC_ANGLE_WRT_PHI_LEN:      [ qualifier: constant , type: integer , value: 7 ]
- SLC_ANGLE_WRT_ETA_LEN:      [ qualifier: constant , type: integer , value: 4 ]  
- SLC_NSW_ETA_LEN:            [ qualifier: constant , type: integer , value: 14 ]
- SLC_NSW_PHI_LEN:            [ qualifier: constant , type: integer , value: 8 ]
- SLC_NSW_ANGLE_WRT_ETA_LEN:  [ qualifier: constant , type: integer , value: 5 ]

- slc_endcap:
  - spare_bits:         [ type: logic , length: SLC_E_SPARE_LEN ]
  - r:                  [ type: unsigned , length: SLC_R_LEN ]
  - angle_wrt_phi:      [ type: signed , length: SLC_ANGLE_WRT_PHI_LEN ]
  - angle_wrt_eta:      [ type: signed , length: SLC_ANGLE_WRT_ETA_LEN ]
  - nsw_eta:            [ type: unsigned , length: SLC_NSW_ETA_LEN]
  - nsw_phi:            [ type: unsigned , length: SLC_NSW_PHI_LEN]
  - nsw_angle_wrt_eta:  [ type: signed , length: SLC_NSW_ANGLE_WRT_ETA_LEN ]
  - nsw_monitor:        [ type: logic ]

# slc rx data

- SLC_SPECIFIC_LEN:     [ qualifier: constant , type: integer , value: 51 ]

- slc_rx_data:
  - muid:       [type: slc_muid]
  - chambers:       [type: slc_chid]
  - common:     [type: slc_common]
  - specific:   [type: logic , length: SLC_SPECIFIC_LEN , comment: can be either slc_barrel_vt or slc_endcap_vt]
  - data_valid: [type: logic]
    
### slc_rx_data_art: [array: open , type: slc_rx_data ]
### slc_rx_data_avt: [array: open , type: slc_rx_data_vt ]

# -----------------------------------------------------------
#       UCM : Muon candidate manager internal signal types
# -----------------------------------------------------------

# ucm preprocesor output

- ucm_prepro:
  - muid       : [type: slc_muid]
  - chambers   : [type: slc_chid]
  - common     : [type: slc_common]
  - specific   : [type: logic, length: SLC_SPECIFIC_LEN, comment: can be either slc_barrel_vt or slc_endcap_vt]
  - data_valid : [type: logic]

- N_UCM_PREPROS : [type: integer, value: 2]

- ucm_prepros: [array: N_UCM_PREPROS , type: ucm_prepro]
#ucm_prepro_art: [array: open , type: slc_rx_data ]
#ucm_prepro_avt: [array: open , type: slc_rx_data_vt ]

# main cross switch control

- N_UCM_CSW_DEST : [type: integer, value: 2]

- ucm_csw_dest: [array: N_UCM_CSW_DEST , type: logic, length: 4]
# ucm_csw_dest: [type: logic, length: 4]
# ucm_csw_dest_a: [array: MAX_NUM_SL ,type: ucm_csw_dest]

# ucm_csw_dest_a: [array: MAX_NUM_SL , type: logic, length: 4 ]

- ucm_csw_control:
  - data_present: [ type: logic , length: MAX_NUM_SL ]
  - addr_orig: [type: ucm_csw_dest]

# -----------------------------------------------------------
#       UCM : Muon candidate manager output signal types
# -----------------------------------------------------------

# slc ucm pam

- ucm_ctrl:
  - sel: [type: logic]
  - addr: [type: logic , length: 4]
  
- ucm_ctrl_a: [array: open , type: ucm_ctrl]

# slc ucm cvp
# barrel

- UCM_MBAR_LEN: [ qualifier: constant , type: integer , value: 10 ]
- UCM_Z_ROI_LEN: [ qualifier: constant , type: integer , value: 7 ]
- UCM_R_ROI_LEN: [ qualifier: constant , type: integer , value: 4 ]  
- UCM_PHI_LEN: [ qualifier: constant , type: integer , value: 14 ]
- UCM_ETA_LEN: [ qualifier: constant , type: integer , value: 8 ]
- UCM_CHAMBER_ID_LEN: [ qualifier: constant , type: integer , value: 5 ]

- ucm_csf_barrel:
  - mbar: [ type: unsigned , length: UCM_MBAR_LEN ]
  - z: [ type: unsigned , length: UCM_Z_ROI_LEN ]
  - r: [ type: unsigned , length: UCM_R_ROI_LEN ]
  - phi: [ type: unsigned , length: UCM_PHI_LEN ]
  - eta: [ type: unsigned , length: UCM_ETA_LEN ]
  - chamber_id: [ type: unsigned , length: UCM_CHAMBER_ID_LEN ]
  
- ucm_csf_barrel_a: [array: open , type: ucm_csf_barrel]

# slc ucm pipeline

- pipeline_data:
  - muid          : [type: slc_muid]
  - pl_common     : [type: slc_common]
  - specific      : [type: logic , length: SLC_SPECIFIC_LEN]
  - process_ch    : [type: logic , length: 4]
  - processed     : [type: logic ]
  - data_valid    : [type: logic]


- pipeline_data_a: [array: open , type: pipeline_data]
  
# mdt tdc
- MDT_TDC_CH_LEN: [ qualifier: constant , type: integer , value: 5 ]
- MDT_TDC_MODE_LEN: [ qualifier: constant , type: integer , value: 2 ]
- MDT_TDC_COARSE_LEN: [ qualifier: constant , type: integer , value: 12 ]
- MDT_TDC_FINE_LEN: [ qualifier: constant , type: integer , value: 5 ]
- MDT_TDC_PW_LEN: [ qualifier: constant , type: integer , value: 8 ]
  
- mdt_tdc:
  - ch: [ type: logic , length: MDT_TDC_CH_LEN ]
  - mode: [ type: logic , length: MDT_TDC_MODE_LEN ]
  - coarse: [ type: unsigned , length: MDT_TDC_COARSE_LEN ]
  - fine: [ type: unsigned , length: MDT_TDC_FINE_LEN ]
  - pw: [ type: unsigned , length: MDT_TDC_PW_LEN ]
  
# mdt pullmux

- MDT_FIBER_LEN: [ qualifier: constant , type: integer , value: 5 ]
- MDT_MUXCH_LEN: [ qualifier: constant , type: integer , value: 4 ]  

- mdt_pullmux_data:
  - fiberID: [ type: logic , length: MDT_FIBER_LEN ]
  - muxID: [ type: logic , length: MDT_MUXCH_LEN ]
  - tdc: [type: mdt_tdc]
  - data_valid: [type: logic]

# mdt tar

- MDT_TUBE_LEN: [ qualifier: constant , type: integer , value: 5 ]
- MDT_LAYER_LEN: [ qualifier: constant , type: integer , value: 9 ]
- MDT_TIME_LEN: [ qualifier: constant , type: integer , value: 18 ] 

- mdt_tar_data:
  - tube: [ type: logic , length: MDT_TUBE_LEN ]
  - layer: [ type: logic , length: MDT_LAYER_LEN ]
  - time: [ type: unsigned , length: MDT_TIME_LEN ]
  - data_valid: [type: logic]
  

- mdt_tar_data_a: [array: open , type: mdt_tar_data]

# hp 2 sf

- MDT_RADIUS_LEN: [ qualifier: constant , type: integer , value: 9 ]
- MDT_LOCAL_AXI_LEN: [ qualifier: constant , type: integer , value: 15 ]

- hp_data:
  - local_z: [ type: signed , length: MDT_LOCAL_AXI_LEN ]
  - local_x: [ type: unsigned , length: MDT_LOCAL_AXI_LEN ]
  - radius: [ type: unsigned , length: MDT_RADIUS_LEN ]
  - multilayer: [type: logic]
  - data_valid: [type: logic]

