config:
  basic_convert_functions: off
  packages:
    - ieee: [std_logic_1164, numeric_std, math_real]
    - types_def: [common_defs]
    - ttc_def: [ttc_defs]
    - daq_def: [daq_devel_defs]

hdl:

# ----------------------------------------------------------------------------

- daq_stream_data_t: [type: logic, length: DAQ_MAX_DATA_LEN]
  
- daq_stream_rt:
  - bcid: [type: bcid_t]
  - valid: [type: logic]
  - data: [type: daq_stream_data_t]
    
- daq_branch_t: [array: DAQ_MAX_STREAMS, type: daq_stream_rt]

- daq_branch_struct_t:
    [array: DAQ_MAX_STREAMS, type: integer, _up: on, _pkd: false]

- daq_branches_t: [array: DAQ_MAX_BRANCHES, type: daq_branch_t]
  
- daq_branches_map_at:
    [array: DAQ_MAX_BRANCHES, type: daq_branch_struct_t, _up: on, _pkd: false]

# ----------------------------------------------------------------------------

- daq_sys_rt:
    - clk320: [type: logic]
    - rst: [type: logic]

- daq_hdr_swrod_rt:
    - ~: Fields required by swROD
    - flag_0: [type: logic, length: 8, ~: example of flag from swROD]
    - flag_1: [type: logic, length: 8]
    - flag_2: [type: logic, length: 16]
    - evid: [type: evid_t]

- daq_hdr_extra_rt:
    - daq_bcid: [type: bcid_t]
    - win_start: [type: bcid_t]
    - win_width: [type: bcid_t]
    - latency_ref: [type: bcid_t]
    - win_lower_ref: [type: bcid_t]
    - win_upper_ref: [type: bcid_t]
    - bcid: [type: bcid_t]

- daq_hdr_rt:
    - swrod: [type: daq_hdr_swrod_rt]
    - extra: [type: daq_hdr_extra_rt]

- daq_hdr_vt: [type: logic, length: daq_hdr_rt]

- daq_cnt_rt:
    - daq_bcid: [type: bcid_t]
    - win_start: [type: bcid_t]

- stability_rt:
    - win_upper: [type: logic]
    - win_lower: [type: logic]
    - latency: [type: logic]

- stability_vt: [type: logic, length: stability_rt]

- daq_win_rt:
    - upper: [type: bcid_t]
    - lower: [type: bcid_t]
    - latency: [type: bcid_t]
    - width: [type: bcid_t]

- pbldr_payload_t: [type: logic, length: DAQ_MAX_DATA_LEN]

- forward_rt:
    - nempty: [type: logic]
    - data: [type: logic, length: DAQ_MAX_DATA_LEN]

      
- backward_rt:
    - rd_strb: [type: logic]
  
# node FIFO interface ----------------------------------------------------------

- node_fifo_write_irt:
    - clk: [type: logic]
    - en:  [type: logic]
    - data: [type: logic, length: DAQ_MAX_DATA_LEN]

- node_fifo_write_ort:
    - full: [type: logic]
    - rst_busy: [type: logic]

- node_fifo_read_irt:
    - clk: [type: logic]
    - en: [type: logic]

- node_cnt_t : [type: logic, length: DAQ_MAX_COUNTER_LEN]
      
- node_fifo_read_ort:
    - data: [type: daq_stream_data_t]
    - count: [type: node_cnt_t]
    - empty: [type: logic]
    - rst_busy: [type: logic]

- node_fifo_irt:
    - wr: [type: node_fifo_write_irt]
    - rd: [type: node_fifo_read_irt]

- node_fifo_ort:
    - wr: [type: node_fifo_write_ort]
    - rd: [type: node_fifo_read_ort]

- node_fifo_rt:
    - i: [type: node_fifo_irt]
    - o: [type: node_fifo_ort]

# Basic interfaces =============================================================

# management | row -------------------------------------------------------------

- row_to_mngt_rt:
    - done: [type: logic, length: DAQ_MAX_PIPELINES]
    - nempty: [type: logic, length: DAQ_MAX_PIPELINES]
    - err : [type: logic, length: DAQ_MAX_PIPELINES]
      
- mngt_to_row_rt:
    - en: [type: logic, length: DAQ_MAX_PIPELINES, _up: true]
    - rd_en: [type: logic, length: DAQ_MAX_PIPELINES, _up: true]

# management | packet builder --------------------------------------------------

- mngt_to_pbldr_rt:
    - en: [type: logic]

- pbldr_to_mngt_rt:
    - done: [type: logic]

# packet builder | row ---------------------------------------------------------

- row_to_pbldr_rt:
    - payload: [type: forward_rt]

- pbldr_to_row_rt:
    - payload: [type: backward_rt]
    - sel: [type: logic]

- pbldr_to_rows_rt:
    - payload: [type: backward_rt]
    - sel: [type: logic, length: DAQ_MAX_ROWS, _up: true]

# req | row --------------------------------------------------------------------

- req_to_row_common_rt:
  - strb: [type: logic]
  - win_start: [type: bcid_t]
  - win_width: [type: bcid_t]

- req_to_row_extra_rt:
  - latency: [type: bcid_t]
  - win_lower: [type: bcid_t]
  - win_upper: [type: bcid_t]
  - daq_bcid: [type: bcid_t]
  - bcid: [type: bcid_t]
  - evid: [type: evid_t]
    
- req_to_row_rt:
  - common: [type: req_to_row_common_rt]
  - extra: [type: req_to_row_extra_rt]
    
# daq top | daq algo -----------------------------------------------------------

- felix_to_daq_rt:
    - hfull: [type: logic]

- felix_data_t: [type: logic, length: DAQ_MAX_DATA_LEN]

- daq_to_felix_rt:
    - wr_en: [type: logic]
    - data: [type: felix_data_t]

# payload | daq top ------------------------------------------------------------

- ctrl_to_daq_rt:
    - wr_en : [type: logic]
    - latency: [type: bcid_t]
    - win_lower: [type: bcid_t]
    - win_upper: [type: bcid_t]

- daq_to_status_rt:
    - stability: [type: stability_rt]

# Entities =====================================================================

# DAQ request handler interface ------------------------------------------------

- daq_req_status_rt:
    - stability : [type: stability_rt]

- daq_req_irt:
    - sys: [type: daq_sys_rt]
    - ttc: [type: ttc_ort]
    - ctrl: [type: ctrl_to_daq_rt]

- daq_req_ort:
    - status: [type: daq_req_status_rt]
    - row: [type: req_to_row_rt]

- daq_req_ert:
    - i: [type: daq_req_irt]
    - o: [type: daq_req_ort]
      
- daq_req_ivt: [type: logic, length: daq_req_irt]
      
- daq_req_ovt: [type: logic, length: daq_req_ort]

# Row --------------------------------------------------------------------------

- daq_row_grt:
    - PIPELINES: [type: natural]
    - INPUT_DATA_LEN: [type: natural]
    - OUTPUT_DATA_LEN: [type: natural]
    - COUNTER_LEN: [type: natural]

- daq_hrow_irt:
    - sys: [type: daq_sys_rt]
    - mngt: [type: mngt_to_row_rt]
    - req: [type: req_to_row_rt]
    - pbldr: [type: pbldr_to_row_rt]

- daq_drow_irt:
    - sys: [type: daq_sys_rt]
    - mngt: [type: mngt_to_row_rt]
    - req: [type: req_to_row_common_rt]
    - stream: [type: daq_stream_rt]
    - pbldr: [type: pbldr_to_row_rt]

- daq_row_ort:
    - mngt: [type: row_to_mngt_rt]
    - pbldr: [type: row_to_pbldr_rt]

- daq_hrow_ert:
    - i: [type: daq_hrow_irt]
    - o: [type: daq_row_ort]

- daq_drow_ert:
    - i: [type: daq_drow_irt]
    - o: [type: daq_row_ort]

- daq_hrow_ivt: [type: logic, length: daq_hrow_irt]

- daq_drow_ivt: [type: logic, length: daq_drow_irt]

- daq_row_ovt: [type: logic, length: daq_row_ort]

# - daq_row_aert: [array: DAQ_ROWS, type: daq_row_ert]

# Packet builder ---------------------------------------------------------------

- daq_pbldr_grt:
    - DATA_LEN: [type: natural]

- daq_pbldr_irt:
    - sys: [type: daq_sys_rt]
    - mngt: [type: mngt_to_pbldr_rt]
    - row: [type: row_to_pbldr_rt]
    - f2e: [type: felix_to_daq_rt]

- daq_pbldr_ort:
    - row: [type:  pbldr_to_rows_rt]
    - f2e: [type:  daq_to_felix_rt]

- daq_pbldr_ert:
    - i: [type: daq_pbldr_irt]
    - o: [type: daq_pbldr_ort]

- daq_pbldr_ivt: [type: logic, length: daq_pbldr_irt]

- daq_pbldr_ovt: [type: logic, length: daq_pbldr_ort]
      
# DAQ mngt ---------------------------------------------------------------------

- daq_mngt_grt:
    - STREAMS: [type: natural]
    - PIPELINES: [type: natural]
      
- daq_mngt_irt:
    - sys: [type: daq_sys_rt]
    - ttc: [type: ttc_ort]
    - row: [type: row_to_mngt_rt]

- daq_mngt_ort:
    - row: [type: mngt_to_row_rt]
    - pbldr: [type: mngt_to_pbldr_rt]
    - err: [type: logic, length: DAQ_MAX_PIPELINES]

- daq_mngt_ert:
    - i: [type: daq_mngt_irt]
    - o: [type: daq_mngt_ort]

- daq_mngt_ivt: [type: logic, length: daq_mngt_irt]
               
- daq_mngt_ovt: [type: logic, length: daq_mngt_ort]

  
# DAQ algo ---------------------------------------------------------------------

- daq_algo_grt:
    - PIPELINES: [type: natural]
    - BRANCH_STRUCT: [type: daq_branch_struct_t]
    - OUTPUT_DATA_LEN: [type: natural]
    - COUNTER_LEN: [type: natural]
    - _pkd: off

- daq_algo_irt:
    - sys: [type: daq_sys_rt]
    - ttc: [type: ttc_ort]
    - ctrl: [type: ctrl_to_daq_rt]
    - branch: [type: daq_branch_t]
    - f2e: [type: felix_to_daq_rt]

- daq_algo_ort:
    - status: [type: daq_to_status_rt]
    - f2e: [type: daq_to_felix_rt]

- daq_algo_ert:
    - i: [type: daq_algo_irt]
    - o: [type: daq_algo_ort]

- daq_algo_gvt: [type: logic, length: daq_algo_grt]
- daq_algo_ivt: [type: logic, length: daq_algo_irt]
- daq_algo_ovt: [type: logic, length: daq_algo_ort]

  
# DAQ top ----------------------------------------------------------------------

- mfelix_to_top_at: [array: DAQ_MAX_BRANCHES, type: felix_to_daq_rt, _up: true]
  
- top_to_mfelix_at: [array: DAQ_MAX_BRANCHES, type: daq_to_felix_rt, _up: true]

- top_to_status_at: [array: DAQ_MAX_BRANCHES, type: daq_to_status_rt]
      
- daq_top_grt:
    - PIPELINES: [type: natural]
    - BRANCHES_STRUCT: [type: daq_branches_map_at]
    - OUTPUT_DATA_LEN: [type: natural]
    - COUNTER_LEN: [type: natural]
    - _pkd: off

- daq_top_irt:
    - sys: [type: daq_sys_rt]
    - ttc: [type: ttc_ort]
    - ctrl: [type: ctrl_to_daq_rt]
    - branches: [type: daq_branches_t]
    - f2e_bus: [type: mfelix_to_top_at] 

- daq_top_ort:
    - status_bus: [type: top_to_status_at]
    - f2e_bus: [type: top_to_mfelix_at] 

- daq_top_ert:
    - i: [type: daq_top_irt]
    - o: [type: daq_top_ort]

- daq_top_gvt: [type: logic, length: daq_top_grt]
- daq_top_ivt: [type: logic, length: daq_top_irt]
- daq_top_ovt: [type: logic, length: daq_top_ort]
 
 
# DAQ top ----------------------------------------------------------------------

- daq_usr_irt:
    - sys: [type: ttc_sys_rt]
    - ttc: [type: ttc_fmt_vt]
    - ctrl: [type: ctrl_to_daq_rt]
    - stream_0: [type: daq_stream_rt]
    - stream_1: [type: daq_stream_rt]
    - stream_2: [type: daq_stream_rt]
    - stream_3: [type: daq_stream_rt]
    - stream_4: [type: daq_stream_rt]
    - stream_5: [type: daq_stream_rt]
    - stream_6: [type: daq_stream_rt]
    - stream_7: [type: daq_stream_rt]
    - stream_8: [type: daq_stream_rt]
    - f2e0: [type: felix_to_daq_rt]
    - f2e1: [type: felix_to_daq_rt]

- daq_usr_ort:
    - status0: [type: daq_to_status_rt]
    - status1: [type: daq_to_status_rt]
    - f2e0: [type: daq_to_felix_rt]
    - f2e1: [type: daq_to_felix_rt]

- daq_usr_ert:
    - i: [type: daq_usr_irt]
    - o: [type: daq_usr_ort]


  
  
# ------------------------------------------------------------------------------

# - integer_: [array: open, type: integer, _: off]
#
# - generics:
#     - STREAMS: [type: natural, value: 5]
#     - PIPELINES: [type: natural, value: 4]
#     - PAYLOAD_LEN: [type: integer_, length: 16]
#
#
#
# - DAQ_INIT_LATENCY: [qualifier: constant, type: natural, value: 11]
#
# - DAQ_MAX_BUS_LEN: [qualifier: constant, type: natural, value: 1024]
# - DAQ_NODE_COUNTER_LEN: [qualifier: constant, type: natural, value: 11]
#
# - DAQ_COUNTER_LEN: [qualifier: constant, type: natural, value: 16]
#
# - DAQ_PACKET_BUILDER_PAYLOAD_LEN: [qualifier: constant, type: natural, value: 16]
#
# - DAQ_EVENT_COUNTER_LEN: [qualifier: constant, type: natural, value: 16]
#
#
# - daq_counters:
#     - daq_bcid: [type: bcid_t]
#     - daq_orbit: [type: logic, length: 2]
#     - daq_event: [type: logic, length: 8]
#     - daq_ext: [type: logic, length: 8]
#
# - daq_bcid_: [array: open, type: bcid_t, _: off]
#
# - daq_counter: [type: logic; length: DAQ_COUNTER_LEN]
# - daq_counter_at: [array: open, type: daq_counter]
#
# - daq_payload_bus: [type: logic; length: 512]
# - daq_payload_bus_: [array: open, type: daq_payload_bus]
#
# - daq_pkt_payload: [type: logic; length: 16]
# - daq_pkt_payload_: [array: open, type: daq_pkt_payload]
#
#
# - daq_ctrl_i:
#     - _: off
#     - wr_en : [type: logic]
#     - latency : [type: daq_bcid]
#     - win_lower: [type: daq_bcid]
#     - win_upper: [type: daq_bcid]
#
# - stream_i:
#     - wr_en: [type: logic, length: open, _: off]
#     - bcid: [type: daq_bcid_]
#     - payload: [type: payload_]
#
# - f2e_direct:
#     - wr_en: [type: logic]
#     - data: [type: logic, length: 18]
#
# - f2e_return:
#     hfull: [type: logic]
#
# - status:
#     - invalid_values: [type: logic]
#     - stability: [type: logic, length: 4]
#
#
# - pkt_ctrl_foth:
#     - rd_row_sel: [type: logic, length: log2_f(ROWS)]
#    -
