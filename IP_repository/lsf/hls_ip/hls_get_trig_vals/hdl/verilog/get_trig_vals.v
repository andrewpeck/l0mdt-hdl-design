// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="get_trig_vals,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku15p-ffva1760-2-e,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.636125,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=909,HLS_SYN_LUT=1475,HLS_VERSION=2019_2_1}" *)

module get_trig_vals (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hw_trig_vals_0_V,
        hw_trig_vals_1_V,
        hw_trig_vals_2_V,
        hw_trig_vals_3_V,
        hw_trig_vals_4_V,
        hw_trig_vals_5_V,
        hw_trig_vals_6_V,
        hw_trig_vals_7_V,
        hw_trig_vals_8_V,
        hw_trig_vals_9_V,
        hw_trig_vals_10_V,
        hw_trig_vals_11_V,
        hw_trig_vals_12_V,
        hw_trig_vals_13_V,
        hw_trig_vals_14_V,
        hw_trig_vals_15_V,
        rom_idx_V,
        lut_start_addr_V
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [35:0] hw_trig_vals_0_V;
output  [35:0] hw_trig_vals_1_V;
output  [35:0] hw_trig_vals_2_V;
output  [35:0] hw_trig_vals_3_V;
output  [35:0] hw_trig_vals_4_V;
output  [35:0] hw_trig_vals_5_V;
output  [35:0] hw_trig_vals_6_V;
output  [35:0] hw_trig_vals_7_V;
output  [35:0] hw_trig_vals_8_V;
output  [35:0] hw_trig_vals_9_V;
output  [35:0] hw_trig_vals_10_V;
output  [35:0] hw_trig_vals_11_V;
output  [35:0] hw_trig_vals_12_V;
output  [35:0] hw_trig_vals_13_V;
output  [35:0] hw_trig_vals_14_V;
output  [35:0] hw_trig_vals_15_V;
input  [2:0] rom_idx_V;
input  [11:0] lut_start_addr_V;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    hw_trig_vals_0_V_1_ack_in;
reg    hw_trig_vals_1_V_1_ack_in;
reg    hw_trig_vals_2_V_1_ack_in;
reg    hw_trig_vals_3_V_1_ack_in;
reg    hw_trig_vals_4_V_1_ack_in;
reg    hw_trig_vals_5_V_1_ack_in;
reg    hw_trig_vals_6_V_1_ack_in;
reg    hw_trig_vals_7_V_1_ack_in;
reg    hw_trig_vals_8_V_1_ack_in;
reg    hw_trig_vals_9_V_1_ack_in;
reg    hw_trig_vals_10_V_1_ack_in;
reg    hw_trig_vals_11_V_1_ack_in;
reg    hw_trig_vals_12_V_1_ack_in;
reg    hw_trig_vals_13_V_1_ack_in;
reg    hw_trig_vals_14_V_1_ack_in;
reg    hw_trig_vals_15_V_1_ack_in;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [35:0] hw_trig_vals_0_V_1_data_reg;
reg    hw_trig_vals_0_V_1_vld_reg;
reg    hw_trig_vals_0_V_1_vld_in;
reg   [35:0] hw_trig_vals_1_V_1_data_reg;
reg    hw_trig_vals_1_V_1_vld_reg;
reg    hw_trig_vals_1_V_1_vld_in;
reg   [35:0] hw_trig_vals_2_V_1_data_reg;
reg    hw_trig_vals_2_V_1_vld_reg;
reg    hw_trig_vals_2_V_1_vld_in;
reg   [35:0] hw_trig_vals_3_V_1_data_reg;
reg    hw_trig_vals_3_V_1_vld_reg;
reg    hw_trig_vals_3_V_1_vld_in;
reg   [35:0] hw_trig_vals_4_V_1_data_reg;
reg    hw_trig_vals_4_V_1_vld_reg;
reg    hw_trig_vals_4_V_1_vld_in;
reg   [35:0] hw_trig_vals_5_V_1_data_reg;
reg    hw_trig_vals_5_V_1_vld_reg;
reg    hw_trig_vals_5_V_1_vld_in;
reg   [35:0] hw_trig_vals_6_V_1_data_reg;
reg    hw_trig_vals_6_V_1_vld_reg;
reg    hw_trig_vals_6_V_1_vld_in;
reg   [35:0] hw_trig_vals_7_V_1_data_reg;
reg    hw_trig_vals_7_V_1_vld_reg;
reg    hw_trig_vals_7_V_1_vld_in;
reg   [35:0] hw_trig_vals_8_V_1_data_reg;
reg    hw_trig_vals_8_V_1_vld_reg;
reg    hw_trig_vals_8_V_1_vld_in;
reg   [35:0] hw_trig_vals_9_V_1_data_reg;
reg    hw_trig_vals_9_V_1_vld_reg;
reg    hw_trig_vals_9_V_1_vld_in;
reg   [35:0] hw_trig_vals_10_V_1_data_reg;
reg    hw_trig_vals_10_V_1_vld_reg;
reg    hw_trig_vals_10_V_1_vld_in;
reg   [35:0] hw_trig_vals_11_V_1_data_reg;
reg    hw_trig_vals_11_V_1_vld_reg;
reg    hw_trig_vals_11_V_1_vld_in;
reg   [35:0] hw_trig_vals_12_V_1_data_reg;
reg    hw_trig_vals_12_V_1_vld_reg;
reg    hw_trig_vals_12_V_1_vld_in;
reg   [35:0] hw_trig_vals_13_V_1_data_reg;
reg    hw_trig_vals_13_V_1_vld_reg;
reg    hw_trig_vals_13_V_1_vld_in;
reg   [35:0] hw_trig_vals_14_V_1_data_reg;
reg    hw_trig_vals_14_V_1_vld_reg;
reg    hw_trig_vals_14_V_1_vld_in;
reg   [35:0] hw_trig_vals_15_V_1_data_reg;
reg    hw_trig_vals_15_V_1_vld_reg;
reg    hw_trig_vals_15_V_1_vld_in;
wire   [8:0] lut_tables_0_address0;
reg    lut_tables_0_ce0;
wire   [35:0] lut_tables_0_q0;
wire   [8:0] lut_tables_0_address1;
reg    lut_tables_0_ce1;
wire   [35:0] lut_tables_0_q1;
wire   [8:0] lut_tables_1_address0;
reg    lut_tables_1_ce0;
wire   [35:0] lut_tables_1_q0;
wire   [8:0] lut_tables_1_address1;
reg    lut_tables_1_ce1;
wire   [35:0] lut_tables_1_q1;
wire   [8:0] lut_tables_2_address0;
reg    lut_tables_2_ce0;
wire   [35:0] lut_tables_2_q0;
wire   [8:0] lut_tables_2_address1;
reg    lut_tables_2_ce1;
wire   [35:0] lut_tables_2_q1;
wire   [8:0] lut_tables_3_address0;
reg    lut_tables_3_ce0;
wire   [35:0] lut_tables_3_q0;
wire   [8:0] lut_tables_3_address1;
reg    lut_tables_3_ce1;
wire   [35:0] lut_tables_3_q1;
wire   [8:0] lut_tables_4_address0;
reg    lut_tables_4_ce0;
wire   [35:0] lut_tables_4_q0;
wire   [8:0] lut_tables_4_address1;
reg    lut_tables_4_ce1;
wire   [35:0] lut_tables_4_q1;
wire   [8:0] lut_tables_5_address0;
reg    lut_tables_5_ce0;
wire   [35:0] lut_tables_5_q0;
wire   [8:0] lut_tables_5_address1;
reg    lut_tables_5_ce1;
wire   [35:0] lut_tables_5_q1;
wire   [8:0] lut_tables_6_address0;
reg    lut_tables_6_ce0;
wire   [35:0] lut_tables_6_q0;
wire   [8:0] lut_tables_6_address1;
reg    lut_tables_6_ce1;
wire   [35:0] lut_tables_6_q1;
wire   [8:0] lut_tables_7_address0;
reg    lut_tables_7_ce0;
wire   [35:0] lut_tables_7_q0;
wire   [8:0] lut_tables_7_address1;
reg    lut_tables_7_ce1;
wire   [35:0] lut_tables_7_q1;
wire   [12:0] zext_ln215_fu_462_p1;
reg   [12:0] zext_ln215_reg_1453;
wire   [2:0] trunc_ln647_fu_466_p1;
reg   [2:0] trunc_ln647_reg_1464;
wire   [2:0] add_ln647_fu_474_p2;
reg   [2:0] add_ln647_reg_1469;
wire   [2:0] add_ln647_1_fu_484_p2;
reg   [2:0] add_ln647_1_reg_1474;
wire   [2:0] add_ln647_2_fu_494_p2;
reg   [2:0] add_ln647_2_reg_1479;
wire   [12:0] add_ln1353_8_fu_514_p2;
reg   [12:0] add_ln1353_8_reg_1484;
reg   [12:0] add_ln1353_8_reg_1484_pp0_iter1_reg;
reg   [9:0] tmp_8_reg_1492;
reg   [9:0] tmp_8_reg_1492_pp0_iter1_reg;
wire   [2:0] add_ln647_3_fu_534_p2;
reg   [2:0] add_ln647_3_reg_1497;
wire   [2:0] add_ln647_4_fu_544_p2;
reg   [2:0] add_ln647_4_reg_1502;
wire   [2:0] add_ln647_5_fu_554_p2;
reg   [2:0] add_ln647_5_reg_1507;
wire   [12:0] add_ln1353_fu_563_p2;
reg   [12:0] add_ln1353_reg_1512;
reg   [9:0] tmp_reg_1519;
wire   [0:0] icmp_ln895_1_fu_584_p2;
reg   [0:0] icmp_ln895_1_reg_1524;
reg   [9:0] tmp_1_reg_1529;
wire   [12:0] add_ln1353_2_fu_603_p2;
reg   [12:0] add_ln1353_2_reg_1534;
reg   [9:0] tmp_2_reg_1541;
wire   [0:0] icmp_ln895_9_fu_624_p2;
reg   [0:0] icmp_ln895_9_reg_1546;
reg   [9:0] tmp_3_reg_1551;
wire   [12:0] add_ln1353_4_fu_643_p2;
reg   [12:0] add_ln1353_4_reg_1556;
reg   [9:0] tmp_4_reg_1563;
wire   [0:0] icmp_ln895_10_fu_664_p2;
reg   [0:0] icmp_ln895_10_reg_1568;
reg   [9:0] tmp_5_reg_1573;
wire   [12:0] add_ln1353_6_fu_683_p2;
reg   [12:0] add_ln1353_6_reg_1578;
reg   [9:0] tmp_6_reg_1585;
wire   [0:0] icmp_ln895_11_fu_704_p2;
reg   [0:0] icmp_ln895_11_reg_1590;
reg   [9:0] tmp_7_reg_1595;
wire   [0:0] icmp_ln895_12_fu_725_p2;
reg   [0:0] icmp_ln895_12_reg_1600;
reg   [9:0] tmp_9_reg_1605;
wire   [12:0] add_ln1353_10_fu_744_p2;
reg   [12:0] add_ln1353_10_reg_1610;
reg   [9:0] tmp_10_reg_1617;
wire   [0:0] icmp_ln895_13_fu_765_p2;
reg   [0:0] icmp_ln895_13_reg_1622;
reg   [9:0] tmp_11_reg_1627;
wire   [12:0] add_ln1353_12_fu_784_p2;
reg   [12:0] add_ln1353_12_reg_1632;
reg   [9:0] tmp_12_reg_1639;
wire   [0:0] icmp_ln895_14_fu_805_p2;
reg   [0:0] icmp_ln895_14_reg_1644;
reg   [9:0] tmp_13_reg_1649;
wire   [12:0] add_ln1353_14_fu_824_p2;
reg   [12:0] add_ln1353_14_reg_1654;
reg   [9:0] tmp_14_reg_1661;
wire   [0:0] icmp_ln895_15_fu_845_p2;
reg   [0:0] icmp_ln895_15_reg_1666;
reg   [9:0] tmp_15_reg_1671;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln895_1_fu_896_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln895_3_fu_930_p1;
wire   [63:0] zext_ln895_5_fu_970_p1;
wire   [63:0] zext_ln895_7_fu_1004_p1;
wire   [63:0] zext_ln895_9_fu_1044_p1;
wire   [63:0] zext_ln895_11_fu_1078_p1;
wire   [63:0] zext_ln895_13_fu_1118_p1;
wire   [63:0] zext_ln895_15_fu_1152_p1;
wire   [63:0] zext_ln895_17_fu_1192_p1;
wire   [63:0] zext_ln895_19_fu_1226_p1;
wire   [63:0] zext_ln895_21_fu_1266_p1;
wire   [63:0] zext_ln895_23_fu_1300_p1;
wire   [63:0] zext_ln895_25_fu_1340_p1;
wire   [63:0] zext_ln895_27_fu_1374_p1;
wire   [63:0] zext_ln895_29_fu_1414_p1;
wire   [63:0] zext_ln895_31_fu_1448_p1;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] zext_ln1354_fu_452_p1;
wire   [3:0] ret_V_fu_456_p2;
wire   [2:0] trunc_ln1353_fu_470_p1;
wire   [2:0] trunc_ln1353_1_fu_480_p1;
wire   [2:0] trunc_ln1353_2_fu_490_p1;
wire   [2:0] trunc_ln1353_3_fu_500_p1;
wire   [2:0] xor_ln647_fu_504_p2;
wire   [12:0] zext_ln215_5_fu_510_p1;
wire   [2:0] trunc_ln1353_4_fu_530_p1;
wire   [2:0] trunc_ln1353_5_fu_540_p1;
wire   [2:0] trunc_ln1353_6_fu_550_p1;
wire   [12:0] zext_ln215_1_fu_560_p1;
wire   [12:0] add_ln1353_1_fu_578_p2;
wire   [12:0] zext_ln215_2_fu_600_p1;
wire   [12:0] add_ln1353_3_fu_618_p2;
wire   [12:0] zext_ln215_3_fu_640_p1;
wire   [12:0] add_ln1353_5_fu_658_p2;
wire   [12:0] zext_ln215_4_fu_680_p1;
wire   [12:0] add_ln1353_7_fu_698_p2;
wire   [12:0] add_ln1353_9_fu_720_p2;
wire   [12:0] zext_ln215_6_fu_741_p1;
wire   [12:0] add_ln1353_11_fu_759_p2;
wire   [12:0] zext_ln215_7_fu_781_p1;
wire   [12:0] add_ln1353_13_fu_799_p2;
wire   [12:0] zext_ln215_8_fu_821_p1;
wire   [12:0] add_ln1353_15_fu_839_p2;
wire   [12:0] add_ln1354_fu_866_p2;
wire   [9:0] trunc_ln_fu_871_p4;
wire   [0:0] icmp_ln895_fu_861_p2;
wire  signed [32:0] sext_ln1503_fu_881_p1;
wire   [32:0] zext_ln895_fu_885_p1;
wire   [32:0] select_ln895_fu_888_p3;
wire   [12:0] add_ln1354_1_fu_901_p2;
wire   [9:0] trunc_ln1503_1_fu_906_p4;
wire  signed [33:0] sext_ln1503_1_fu_916_p1;
wire   [33:0] zext_ln895_2_fu_920_p1;
wire   [33:0] select_ln895_1_fu_923_p3;
wire   [12:0] add_ln1354_2_fu_940_p2;
wire   [9:0] trunc_ln1503_2_fu_945_p4;
wire   [0:0] icmp_ln895_8_fu_935_p2;
wire  signed [32:0] sext_ln1503_2_fu_955_p1;
wire   [32:0] zext_ln895_4_fu_959_p1;
wire   [32:0] select_ln895_2_fu_962_p3;
wire   [12:0] add_ln1354_3_fu_975_p2;
wire   [9:0] trunc_ln1503_3_fu_980_p4;
wire  signed [33:0] sext_ln1503_3_fu_990_p1;
wire   [33:0] zext_ln895_6_fu_994_p1;
wire   [33:0] select_ln895_3_fu_997_p3;
wire   [12:0] add_ln1354_4_fu_1014_p2;
wire   [9:0] trunc_ln1503_4_fu_1019_p4;
wire   [0:0] icmp_ln895_2_fu_1009_p2;
wire  signed [32:0] sext_ln1503_4_fu_1029_p1;
wire   [32:0] zext_ln895_8_fu_1033_p1;
wire   [32:0] select_ln895_4_fu_1036_p3;
wire   [12:0] add_ln1354_5_fu_1049_p2;
wire   [9:0] trunc_ln1503_5_fu_1054_p4;
wire  signed [33:0] sext_ln1503_5_fu_1064_p1;
wire   [33:0] zext_ln895_10_fu_1068_p1;
wire   [33:0] select_ln895_5_fu_1071_p3;
wire   [12:0] add_ln1354_6_fu_1088_p2;
wire   [9:0] trunc_ln1503_6_fu_1093_p4;
wire   [0:0] icmp_ln895_3_fu_1083_p2;
wire  signed [32:0] sext_ln1503_6_fu_1103_p1;
wire   [32:0] zext_ln895_12_fu_1107_p1;
wire   [32:0] select_ln895_6_fu_1110_p3;
wire   [12:0] add_ln1354_7_fu_1123_p2;
wire   [9:0] trunc_ln1503_7_fu_1128_p4;
wire  signed [33:0] sext_ln1503_7_fu_1138_p1;
wire   [33:0] zext_ln895_14_fu_1142_p1;
wire   [33:0] select_ln895_7_fu_1145_p3;
wire   [12:0] add_ln1354_8_fu_1162_p2;
wire   [9:0] trunc_ln1503_8_fu_1167_p4;
wire   [0:0] icmp_ln895_4_fu_1157_p2;
wire  signed [32:0] sext_ln1503_8_fu_1177_p1;
wire   [32:0] zext_ln895_16_fu_1181_p1;
wire   [32:0] select_ln895_8_fu_1184_p3;
wire   [12:0] add_ln1354_9_fu_1197_p2;
wire   [9:0] trunc_ln1503_9_fu_1202_p4;
wire  signed [33:0] sext_ln1503_9_fu_1212_p1;
wire   [33:0] zext_ln895_18_fu_1216_p1;
wire   [33:0] select_ln895_9_fu_1219_p3;
wire   [12:0] add_ln1354_10_fu_1236_p2;
wire   [9:0] trunc_ln1503_s_fu_1241_p4;
wire   [0:0] icmp_ln895_5_fu_1231_p2;
wire  signed [32:0] sext_ln1503_10_fu_1251_p1;
wire   [32:0] zext_ln895_20_fu_1255_p1;
wire   [32:0] select_ln895_10_fu_1258_p3;
wire   [12:0] add_ln1354_11_fu_1271_p2;
wire   [9:0] trunc_ln1503_10_fu_1276_p4;
wire  signed [33:0] sext_ln1503_11_fu_1286_p1;
wire   [33:0] zext_ln895_22_fu_1290_p1;
wire   [33:0] select_ln895_11_fu_1293_p3;
wire   [12:0] add_ln1354_12_fu_1310_p2;
wire   [9:0] trunc_ln1503_11_fu_1315_p4;
wire   [0:0] icmp_ln895_6_fu_1305_p2;
wire  signed [32:0] sext_ln1503_12_fu_1325_p1;
wire   [32:0] zext_ln895_24_fu_1329_p1;
wire   [32:0] select_ln895_12_fu_1332_p3;
wire   [12:0] add_ln1354_13_fu_1345_p2;
wire   [9:0] trunc_ln1503_12_fu_1350_p4;
wire  signed [33:0] sext_ln1503_13_fu_1360_p1;
wire   [33:0] zext_ln895_26_fu_1364_p1;
wire   [33:0] select_ln895_13_fu_1367_p3;
wire   [12:0] add_ln1354_14_fu_1384_p2;
wire   [9:0] trunc_ln1503_13_fu_1389_p4;
wire   [0:0] icmp_ln895_7_fu_1379_p2;
wire  signed [32:0] sext_ln1503_14_fu_1399_p1;
wire   [32:0] zext_ln895_28_fu_1403_p1;
wire   [32:0] select_ln895_14_fu_1406_p3;
wire   [12:0] add_ln1354_15_fu_1419_p2;
wire   [9:0] trunc_ln1503_14_fu_1424_p4;
wire  signed [33:0] sext_ln1503_15_fu_1434_p1;
wire   [33:0] zext_ln895_30_fu_1438_p1;
wire   [33:0] select_ln895_15_fu_1441_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 hw_trig_vals_0_V_1_data_reg = 36'd0;
#0 hw_trig_vals_0_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_1_V_1_data_reg = 36'd0;
#0 hw_trig_vals_1_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_2_V_1_data_reg = 36'd0;
#0 hw_trig_vals_2_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_3_V_1_data_reg = 36'd0;
#0 hw_trig_vals_3_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_4_V_1_data_reg = 36'd0;
#0 hw_trig_vals_4_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_5_V_1_data_reg = 36'd0;
#0 hw_trig_vals_5_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_6_V_1_data_reg = 36'd0;
#0 hw_trig_vals_6_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_7_V_1_data_reg = 36'd0;
#0 hw_trig_vals_7_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_8_V_1_data_reg = 36'd0;
#0 hw_trig_vals_8_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_9_V_1_data_reg = 36'd0;
#0 hw_trig_vals_9_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_10_V_1_data_reg = 36'd0;
#0 hw_trig_vals_10_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_11_V_1_data_reg = 36'd0;
#0 hw_trig_vals_11_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_12_V_1_data_reg = 36'd0;
#0 hw_trig_vals_12_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_13_V_1_data_reg = 36'd0;
#0 hw_trig_vals_13_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_14_V_1_data_reg = 36'd0;
#0 hw_trig_vals_14_V_1_vld_reg = 1'b0;
#0 hw_trig_vals_15_V_1_data_reg = 36'd0;
#0 hw_trig_vals_15_V_1_vld_reg = 1'b0;
end

get_trig_vals_lutbkb #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_0_address0),
    .ce0(lut_tables_0_ce0),
    .q0(lut_tables_0_q0),
    .address1(lut_tables_0_address1),
    .ce1(lut_tables_0_ce1),
    .q1(lut_tables_0_q1)
);

get_trig_vals_lutcud #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_1_address0),
    .ce0(lut_tables_1_ce0),
    .q0(lut_tables_1_q0),
    .address1(lut_tables_1_address1),
    .ce1(lut_tables_1_ce1),
    .q1(lut_tables_1_q1)
);

get_trig_vals_lutdEe #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_2_address0),
    .ce0(lut_tables_2_ce0),
    .q0(lut_tables_2_q0),
    .address1(lut_tables_2_address1),
    .ce1(lut_tables_2_ce1),
    .q1(lut_tables_2_q1)
);

get_trig_vals_luteOg #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_3_address0),
    .ce0(lut_tables_3_ce0),
    .q0(lut_tables_3_q0),
    .address1(lut_tables_3_address1),
    .ce1(lut_tables_3_ce1),
    .q1(lut_tables_3_q1)
);

get_trig_vals_lutfYi #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_4_address0),
    .ce0(lut_tables_4_ce0),
    .q0(lut_tables_4_q0),
    .address1(lut_tables_4_address1),
    .ce1(lut_tables_4_ce1),
    .q1(lut_tables_4_q1)
);

get_trig_vals_lutg8j #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_5_address0),
    .ce0(lut_tables_5_ce0),
    .q0(lut_tables_5_q0),
    .address1(lut_tables_5_address1),
    .ce1(lut_tables_5_ce1),
    .q1(lut_tables_5_q1)
);

get_trig_vals_luthbi #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_6_address0),
    .ce0(lut_tables_6_ce0),
    .q0(lut_tables_6_q0),
    .address1(lut_tables_6_address1),
    .ce1(lut_tables_6_ce1),
    .q1(lut_tables_6_q1)
);

get_trig_vals_lutibs #(
    .DataWidth( 36 ),
    .AddressRange( 394 ),
    .AddressWidth( 9 ))
lut_tables_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_tables_7_address0),
    .ce0(lut_tables_7_ce0),
    .q0(lut_tables_7_q0),
    .address1(lut_tables_7_address1),
    .ce1(lut_tables_7_ce1),
    .q1(lut_tables_7_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1353_10_reg_1610 <= add_ln1353_10_fu_744_p2;
        add_ln1353_12_reg_1632 <= add_ln1353_12_fu_784_p2;
        add_ln1353_14_reg_1654 <= add_ln1353_14_fu_824_p2;
        add_ln1353_2_reg_1534 <= add_ln1353_2_fu_603_p2;
        add_ln1353_4_reg_1556 <= add_ln1353_4_fu_643_p2;
        add_ln1353_6_reg_1578 <= add_ln1353_6_fu_683_p2;
        add_ln1353_8_reg_1484 <= add_ln1353_8_fu_514_p2;
        add_ln1353_8_reg_1484_pp0_iter1_reg <= add_ln1353_8_reg_1484;
        add_ln1353_reg_1512 <= add_ln1353_fu_563_p2;
        add_ln647_1_reg_1474 <= add_ln647_1_fu_484_p2;
        add_ln647_2_reg_1479 <= add_ln647_2_fu_494_p2;
        add_ln647_3_reg_1497 <= add_ln647_3_fu_534_p2;
        add_ln647_4_reg_1502 <= add_ln647_4_fu_544_p2;
        add_ln647_5_reg_1507 <= add_ln647_5_fu_554_p2;
        add_ln647_reg_1469 <= add_ln647_fu_474_p2;
        icmp_ln895_10_reg_1568 <= icmp_ln895_10_fu_664_p2;
        icmp_ln895_11_reg_1590 <= icmp_ln895_11_fu_704_p2;
        icmp_ln895_12_reg_1600 <= icmp_ln895_12_fu_725_p2;
        icmp_ln895_13_reg_1622 <= icmp_ln895_13_fu_765_p2;
        icmp_ln895_14_reg_1644 <= icmp_ln895_14_fu_805_p2;
        icmp_ln895_15_reg_1666 <= icmp_ln895_15_fu_845_p2;
        icmp_ln895_1_reg_1524 <= icmp_ln895_1_fu_584_p2;
        icmp_ln895_9_reg_1546 <= icmp_ln895_9_fu_624_p2;
        tmp_10_reg_1617 <= {{add_ln1353_10_fu_744_p2[12:3]}};
        tmp_11_reg_1627 <= {{add_ln1353_11_fu_759_p2[12:3]}};
        tmp_12_reg_1639 <= {{add_ln1353_12_fu_784_p2[12:3]}};
        tmp_13_reg_1649 <= {{add_ln1353_13_fu_799_p2[12:3]}};
        tmp_14_reg_1661 <= {{add_ln1353_14_fu_824_p2[12:3]}};
        tmp_15_reg_1671 <= {{add_ln1353_15_fu_839_p2[12:3]}};
        tmp_1_reg_1529 <= {{add_ln1353_1_fu_578_p2[12:3]}};
        tmp_2_reg_1541 <= {{add_ln1353_2_fu_603_p2[12:3]}};
        tmp_3_reg_1551 <= {{add_ln1353_3_fu_618_p2[12:3]}};
        tmp_4_reg_1563 <= {{add_ln1353_4_fu_643_p2[12:3]}};
        tmp_5_reg_1573 <= {{add_ln1353_5_fu_658_p2[12:3]}};
        tmp_6_reg_1585 <= {{add_ln1353_6_fu_683_p2[12:3]}};
        tmp_7_reg_1595 <= {{add_ln1353_7_fu_698_p2[12:3]}};
        tmp_8_reg_1492 <= {{add_ln1353_8_fu_514_p2[12:3]}};
        tmp_8_reg_1492_pp0_iter1_reg <= tmp_8_reg_1492;
        tmp_9_reg_1605 <= {{add_ln1353_9_fu_720_p2[12:3]}};
        tmp_reg_1519 <= {{add_ln1353_fu_563_p2[12:3]}};
        trunc_ln647_reg_1464 <= trunc_ln647_fu_466_p1;
        zext_ln215_reg_1453[11 : 0] <= zext_ln215_fu_462_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_0_V_1_vld_reg == 1'b0) & (hw_trig_vals_0_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_0_V_1_vld_in == 1'b1) & (hw_trig_vals_0_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_0_V_1_data_reg <= lut_tables_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_10_V_1_vld_reg == 1'b0) & (hw_trig_vals_10_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_10_V_1_vld_in == 1'b1) & (hw_trig_vals_10_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_10_V_1_data_reg <= lut_tables_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_11_V_1_vld_reg == 1'b0) & (hw_trig_vals_11_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_11_V_1_vld_in == 1'b1) & (hw_trig_vals_11_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_11_V_1_data_reg <= lut_tables_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_12_V_1_vld_reg == 1'b0) & (hw_trig_vals_12_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_12_V_1_vld_in == 1'b1) & (hw_trig_vals_12_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_12_V_1_data_reg <= lut_tables_4_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_13_V_1_vld_reg == 1'b0) & (hw_trig_vals_13_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_13_V_1_vld_in == 1'b1) & (hw_trig_vals_13_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_13_V_1_data_reg <= lut_tables_5_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_14_V_1_vld_reg == 1'b0) & (hw_trig_vals_14_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_14_V_1_vld_in == 1'b1) & (hw_trig_vals_14_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_14_V_1_data_reg <= lut_tables_6_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_15_V_1_vld_reg == 1'b0) & (hw_trig_vals_15_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_15_V_1_vld_in == 1'b1) & (hw_trig_vals_15_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_15_V_1_data_reg <= lut_tables_7_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_1_V_1_vld_reg == 1'b0) & (hw_trig_vals_1_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_1_V_1_vld_in == 1'b1) & (hw_trig_vals_1_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_1_V_1_data_reg <= lut_tables_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_2_V_1_vld_reg == 1'b0) & (hw_trig_vals_2_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_2_V_1_vld_in == 1'b1) & (hw_trig_vals_2_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_2_V_1_data_reg <= lut_tables_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_3_V_1_vld_reg == 1'b0) & (hw_trig_vals_3_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_3_V_1_vld_in == 1'b1) & (hw_trig_vals_3_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_3_V_1_data_reg <= lut_tables_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_4_V_1_vld_reg == 1'b0) & (hw_trig_vals_4_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_4_V_1_vld_in == 1'b1) & (hw_trig_vals_4_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_4_V_1_data_reg <= lut_tables_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_5_V_1_vld_reg == 1'b0) & (hw_trig_vals_5_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_5_V_1_vld_in == 1'b1) & (hw_trig_vals_5_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_5_V_1_data_reg <= lut_tables_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_6_V_1_vld_reg == 1'b0) & (hw_trig_vals_6_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_6_V_1_vld_in == 1'b1) & (hw_trig_vals_6_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_6_V_1_data_reg <= lut_tables_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_7_V_1_vld_reg == 1'b0) & (hw_trig_vals_7_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_7_V_1_vld_in == 1'b1) & (hw_trig_vals_7_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_7_V_1_data_reg <= lut_tables_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_8_V_1_vld_reg == 1'b0) & (hw_trig_vals_8_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_8_V_1_vld_in == 1'b1) & (hw_trig_vals_8_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_8_V_1_data_reg <= lut_tables_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hw_trig_vals_9_V_1_vld_reg == 1'b0) & (hw_trig_vals_9_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hw_trig_vals_9_V_1_vld_in == 1'b1) & (hw_trig_vals_9_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_9_V_1_data_reg <= lut_tables_1_q1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_0_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_0_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_0_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_0_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_0_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_0_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_10_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_10_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_10_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_10_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_10_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_10_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_11_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_11_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_11_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_11_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_11_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_11_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_12_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_12_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_12_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_12_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_12_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_12_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_13_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_13_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_13_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_13_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_13_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_13_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_14_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_14_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_14_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_14_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_14_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_14_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_15_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_15_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_15_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_15_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_15_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_15_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_1_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_1_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_1_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_1_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_1_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_1_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_2_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_2_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_2_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_2_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_2_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_2_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_3_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_3_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_3_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_3_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_3_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_3_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_4_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_4_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_4_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_4_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_4_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_4_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_5_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_5_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_5_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_5_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_5_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_5_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_6_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_6_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_6_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_6_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_6_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_6_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_7_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_7_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_7_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_7_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_7_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_7_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_8_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_8_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_8_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_8_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_8_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_8_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hw_trig_vals_9_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hw_trig_vals_9_V_1_vld_reg == 1'b1)))) begin
        hw_trig_vals_9_V_1_ack_in = 1'b1;
    end else begin
        hw_trig_vals_9_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        hw_trig_vals_9_V_1_vld_in = 1'b1;
    end else begin
        hw_trig_vals_9_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_0_ce0 = 1'b1;
    end else begin
        lut_tables_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_0_ce1 = 1'b1;
    end else begin
        lut_tables_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_1_ce0 = 1'b1;
    end else begin
        lut_tables_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_1_ce1 = 1'b1;
    end else begin
        lut_tables_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_2_ce0 = 1'b1;
    end else begin
        lut_tables_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_2_ce1 = 1'b1;
    end else begin
        lut_tables_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_3_ce0 = 1'b1;
    end else begin
        lut_tables_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_3_ce1 = 1'b1;
    end else begin
        lut_tables_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_4_ce0 = 1'b1;
    end else begin
        lut_tables_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_4_ce1 = 1'b1;
    end else begin
        lut_tables_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_5_ce0 = 1'b1;
    end else begin
        lut_tables_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_5_ce1 = 1'b1;
    end else begin
        lut_tables_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_6_ce0 = 1'b1;
    end else begin
        lut_tables_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_6_ce1 = 1'b1;
    end else begin
        lut_tables_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_7_ce0 = 1'b1;
    end else begin
        lut_tables_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_tables_7_ce1 = 1'b1;
    end else begin
        lut_tables_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_10_fu_744_p2 = (zext_ln215_6_fu_741_p1 + zext_ln215_reg_1453);

assign add_ln1353_11_fu_759_p2 = (13'd8 + add_ln1353_10_fu_744_p2);

assign add_ln1353_12_fu_784_p2 = (zext_ln215_7_fu_781_p1 + zext_ln215_reg_1453);

assign add_ln1353_13_fu_799_p2 = (13'd8 + add_ln1353_12_fu_784_p2);

assign add_ln1353_14_fu_824_p2 = (zext_ln215_8_fu_821_p1 + zext_ln215_reg_1453);

assign add_ln1353_15_fu_839_p2 = (13'd8 + add_ln1353_14_fu_824_p2);

assign add_ln1353_1_fu_578_p2 = (13'd8 + add_ln1353_fu_563_p2);

assign add_ln1353_2_fu_603_p2 = (zext_ln215_2_fu_600_p1 + zext_ln215_reg_1453);

assign add_ln1353_3_fu_618_p2 = (13'd8 + add_ln1353_2_fu_603_p2);

assign add_ln1353_4_fu_643_p2 = (zext_ln215_3_fu_640_p1 + zext_ln215_reg_1453);

assign add_ln1353_5_fu_658_p2 = (13'd8 + add_ln1353_4_fu_643_p2);

assign add_ln1353_6_fu_683_p2 = (zext_ln215_4_fu_680_p1 + zext_ln215_reg_1453);

assign add_ln1353_7_fu_698_p2 = (13'd8 + add_ln1353_6_fu_683_p2);

assign add_ln1353_8_fu_514_p2 = (zext_ln215_5_fu_510_p1 + zext_ln215_fu_462_p1);

assign add_ln1353_9_fu_720_p2 = (13'd8 + add_ln1353_8_reg_1484);

assign add_ln1353_fu_563_p2 = (zext_ln215_1_fu_560_p1 + zext_ln215_reg_1453);

assign add_ln1354_10_fu_1236_p2 = ($signed(13'd5040) + $signed(add_ln1353_10_reg_1610));

assign add_ln1354_11_fu_1271_p2 = ($signed(13'd5048) + $signed(add_ln1353_10_reg_1610));

assign add_ln1354_12_fu_1310_p2 = ($signed(13'd5040) + $signed(add_ln1353_12_reg_1632));

assign add_ln1354_13_fu_1345_p2 = ($signed(13'd5048) + $signed(add_ln1353_12_reg_1632));

assign add_ln1354_14_fu_1384_p2 = ($signed(13'd5040) + $signed(add_ln1353_14_reg_1654));

assign add_ln1354_15_fu_1419_p2 = ($signed(13'd5048) + $signed(add_ln1353_14_reg_1654));

assign add_ln1354_1_fu_901_p2 = ($signed(13'd5048) + $signed(add_ln1353_reg_1512));

assign add_ln1354_2_fu_940_p2 = ($signed(13'd5040) + $signed(add_ln1353_2_reg_1534));

assign add_ln1354_3_fu_975_p2 = ($signed(13'd5048) + $signed(add_ln1353_2_reg_1534));

assign add_ln1354_4_fu_1014_p2 = ($signed(13'd5040) + $signed(add_ln1353_4_reg_1556));

assign add_ln1354_5_fu_1049_p2 = ($signed(13'd5048) + $signed(add_ln1353_4_reg_1556));

assign add_ln1354_6_fu_1088_p2 = ($signed(13'd5040) + $signed(add_ln1353_6_reg_1578));

assign add_ln1354_7_fu_1123_p2 = ($signed(13'd5048) + $signed(add_ln1353_6_reg_1578));

assign add_ln1354_8_fu_1162_p2 = ($signed(13'd5040) + $signed(add_ln1353_8_reg_1484_pp0_iter1_reg));

assign add_ln1354_9_fu_1197_p2 = ($signed(13'd5048) + $signed(add_ln1353_8_reg_1484_pp0_iter1_reg));

assign add_ln1354_fu_866_p2 = ($signed(13'd5040) + $signed(add_ln1353_reg_1512));

assign add_ln647_1_fu_484_p2 = (3'd2 + trunc_ln1353_1_fu_480_p1);

assign add_ln647_2_fu_494_p2 = (3'd3 + trunc_ln1353_2_fu_490_p1);

assign add_ln647_3_fu_534_p2 = ($signed(3'd5) + $signed(trunc_ln1353_4_fu_530_p1));

assign add_ln647_4_fu_544_p2 = ($signed(3'd6) + $signed(trunc_ln1353_5_fu_540_p1));

assign add_ln647_5_fu_554_p2 = ($signed(3'd7) + $signed(trunc_ln1353_6_fu_550_p1));

assign add_ln647_fu_474_p2 = (3'd1 + trunc_ln1353_fu_470_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((hw_trig_vals_13_V_1_ack_in == 1'b0) | (hw_trig_vals_12_V_1_ack_in == 1'b0) | (hw_trig_vals_11_V_1_ack_in == 1'b0) | (hw_trig_vals_10_V_1_ack_in == 1'b0) | (hw_trig_vals_9_V_1_ack_in == 1'b0) | (hw_trig_vals_8_V_1_ack_in == 1'b0) | (hw_trig_vals_7_V_1_ack_in == 1'b0) | (hw_trig_vals_6_V_1_ack_in == 1'b0) | (hw_trig_vals_5_V_1_ack_in == 1'b0) | (hw_trig_vals_4_V_1_ack_in == 1'b0) | (hw_trig_vals_3_V_1_ack_in == 1'b0) | (hw_trig_vals_2_V_1_ack_in == 1'b0) | (hw_trig_vals_1_V_1_ack_in == 1'b0) | (hw_trig_vals_0_V_1_ack_in == 1'b0) | (hw_trig_vals_15_V_1_ack_in == 1'b0) | (hw_trig_vals_14_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((hw_trig_vals_13_V_1_ack_in == 1'b0) | (hw_trig_vals_12_V_1_ack_in == 1'b0) | (hw_trig_vals_11_V_1_ack_in == 1'b0) | (hw_trig_vals_10_V_1_ack_in == 1'b0) | (hw_trig_vals_9_V_1_ack_in == 1'b0) | (hw_trig_vals_8_V_1_ack_in == 1'b0) | (hw_trig_vals_7_V_1_ack_in == 1'b0) | (hw_trig_vals_6_V_1_ack_in == 1'b0) | (hw_trig_vals_5_V_1_ack_in == 1'b0) | (hw_trig_vals_4_V_1_ack_in == 1'b0) | (hw_trig_vals_3_V_1_ack_in == 1'b0) | (hw_trig_vals_2_V_1_ack_in == 1'b0) | (hw_trig_vals_1_V_1_ack_in == 1'b0) | (hw_trig_vals_0_V_1_ack_in == 1'b0) | (hw_trig_vals_15_V_1_ack_in == 1'b0) | (hw_trig_vals_14_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & ((hw_trig_vals_13_V_1_ack_in == 1'b0) | (hw_trig_vals_12_V_1_ack_in == 1'b0) | (hw_trig_vals_11_V_1_ack_in == 1'b0) | (hw_trig_vals_10_V_1_ack_in == 1'b0) | (hw_trig_vals_9_V_1_ack_in == 1'b0) | (hw_trig_vals_8_V_1_ack_in == 1'b0) | (hw_trig_vals_7_V_1_ack_in == 1'b0) | (hw_trig_vals_6_V_1_ack_in == 1'b0) | (hw_trig_vals_5_V_1_ack_in == 1'b0) | (hw_trig_vals_4_V_1_ack_in == 1'b0) | (hw_trig_vals_3_V_1_ack_in == 1'b0) | (hw_trig_vals_2_V_1_ack_in == 1'b0) | (hw_trig_vals_1_V_1_ack_in == 1'b0) | (hw_trig_vals_0_V_1_ack_in == 1'b0) | (hw_trig_vals_15_V_1_ack_in == 1'b0) | (hw_trig_vals_14_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((hw_trig_vals_13_V_1_ack_in == 1'b0) | (hw_trig_vals_12_V_1_ack_in == 1'b0) | (hw_trig_vals_11_V_1_ack_in == 1'b0) | (hw_trig_vals_10_V_1_ack_in == 1'b0) | (hw_trig_vals_9_V_1_ack_in == 1'b0) | (hw_trig_vals_8_V_1_ack_in == 1'b0) | (hw_trig_vals_7_V_1_ack_in == 1'b0) | (hw_trig_vals_6_V_1_ack_in == 1'b0) | (hw_trig_vals_5_V_1_ack_in == 1'b0) | (hw_trig_vals_4_V_1_ack_in == 1'b0) | (hw_trig_vals_3_V_1_ack_in == 1'b0) | (hw_trig_vals_2_V_1_ack_in == 1'b0) | (hw_trig_vals_1_V_1_ack_in == 1'b0) | (hw_trig_vals_0_V_1_ack_in == 1'b0) | (hw_trig_vals_15_V_1_ack_in == 1'b0) | (hw_trig_vals_14_V_1_ack_in == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign hw_trig_vals_0_V = hw_trig_vals_0_V_1_data_reg;

assign hw_trig_vals_10_V = hw_trig_vals_10_V_1_data_reg;

assign hw_trig_vals_11_V = hw_trig_vals_11_V_1_data_reg;

assign hw_trig_vals_12_V = hw_trig_vals_12_V_1_data_reg;

assign hw_trig_vals_13_V = hw_trig_vals_13_V_1_data_reg;

assign hw_trig_vals_14_V = hw_trig_vals_14_V_1_data_reg;

assign hw_trig_vals_15_V = hw_trig_vals_15_V_1_data_reg;

assign hw_trig_vals_1_V = hw_trig_vals_1_V_1_data_reg;

assign hw_trig_vals_2_V = hw_trig_vals_2_V_1_data_reg;

assign hw_trig_vals_3_V = hw_trig_vals_3_V_1_data_reg;

assign hw_trig_vals_4_V = hw_trig_vals_4_V_1_data_reg;

assign hw_trig_vals_5_V = hw_trig_vals_5_V_1_data_reg;

assign hw_trig_vals_6_V = hw_trig_vals_6_V_1_data_reg;

assign hw_trig_vals_7_V = hw_trig_vals_7_V_1_data_reg;

assign hw_trig_vals_8_V = hw_trig_vals_8_V_1_data_reg;

assign hw_trig_vals_9_V = hw_trig_vals_9_V_1_data_reg;

assign icmp_ln895_10_fu_664_p2 = ((add_ln1353_5_fu_658_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_704_p2 = ((add_ln1353_7_fu_698_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_725_p2 = ((add_ln1353_9_fu_720_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_765_p2 = ((add_ln1353_11_fu_759_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_805_p2 = ((add_ln1353_13_fu_799_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_15_fu_845_p2 = ((add_ln1353_15_fu_839_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_584_p2 = ((add_ln1353_1_fu_578_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_1009_p2 = ((add_ln1353_4_reg_1556 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_1083_p2 = ((add_ln1353_6_reg_1578 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_1157_p2 = ((add_ln1353_8_reg_1484_pp0_iter1_reg > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_1231_p2 = ((add_ln1353_10_reg_1610 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_1305_p2 = ((add_ln1353_12_reg_1632 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_1379_p2 = ((add_ln1353_14_reg_1654 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_935_p2 = ((add_ln1353_2_reg_1534 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_624_p2 = ((add_ln1353_3_fu_618_p2 > 13'd3152) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_861_p2 = ((add_ln1353_reg_1512 > 13'd3152) ? 1'b1 : 1'b0);

assign lut_tables_0_address0 = zext_ln895_1_fu_896_p1;

assign lut_tables_0_address1 = zext_ln895_3_fu_930_p1;

assign lut_tables_1_address0 = zext_ln895_5_fu_970_p1;

assign lut_tables_1_address1 = zext_ln895_7_fu_1004_p1;

assign lut_tables_2_address0 = zext_ln895_9_fu_1044_p1;

assign lut_tables_2_address1 = zext_ln895_11_fu_1078_p1;

assign lut_tables_3_address0 = zext_ln895_13_fu_1118_p1;

assign lut_tables_3_address1 = zext_ln895_15_fu_1152_p1;

assign lut_tables_4_address0 = zext_ln895_17_fu_1192_p1;

assign lut_tables_4_address1 = zext_ln895_19_fu_1226_p1;

assign lut_tables_5_address0 = zext_ln895_21_fu_1266_p1;

assign lut_tables_5_address1 = zext_ln895_23_fu_1300_p1;

assign lut_tables_6_address0 = zext_ln895_25_fu_1340_p1;

assign lut_tables_6_address1 = zext_ln895_27_fu_1374_p1;

assign lut_tables_7_address0 = zext_ln895_29_fu_1414_p1;

assign lut_tables_7_address1 = zext_ln895_31_fu_1448_p1;

assign ret_V_fu_456_p2 = ($signed(4'd8) - $signed(zext_ln1354_fu_452_p1));

assign select_ln895_10_fu_1258_p3 = ((icmp_ln895_5_fu_1231_p2[0:0] === 1'b1) ? sext_ln1503_10_fu_1251_p1 : zext_ln895_20_fu_1255_p1);

assign select_ln895_11_fu_1293_p3 = ((icmp_ln895_13_reg_1622[0:0] === 1'b1) ? sext_ln1503_11_fu_1286_p1 : zext_ln895_22_fu_1290_p1);

assign select_ln895_12_fu_1332_p3 = ((icmp_ln895_6_fu_1305_p2[0:0] === 1'b1) ? sext_ln1503_12_fu_1325_p1 : zext_ln895_24_fu_1329_p1);

assign select_ln895_13_fu_1367_p3 = ((icmp_ln895_14_reg_1644[0:0] === 1'b1) ? sext_ln1503_13_fu_1360_p1 : zext_ln895_26_fu_1364_p1);

assign select_ln895_14_fu_1406_p3 = ((icmp_ln895_7_fu_1379_p2[0:0] === 1'b1) ? sext_ln1503_14_fu_1399_p1 : zext_ln895_28_fu_1403_p1);

assign select_ln895_15_fu_1441_p3 = ((icmp_ln895_15_reg_1666[0:0] === 1'b1) ? sext_ln1503_15_fu_1434_p1 : zext_ln895_30_fu_1438_p1);

assign select_ln895_1_fu_923_p3 = ((icmp_ln895_1_reg_1524[0:0] === 1'b1) ? sext_ln1503_1_fu_916_p1 : zext_ln895_2_fu_920_p1);

assign select_ln895_2_fu_962_p3 = ((icmp_ln895_8_fu_935_p2[0:0] === 1'b1) ? sext_ln1503_2_fu_955_p1 : zext_ln895_4_fu_959_p1);

assign select_ln895_3_fu_997_p3 = ((icmp_ln895_9_reg_1546[0:0] === 1'b1) ? sext_ln1503_3_fu_990_p1 : zext_ln895_6_fu_994_p1);

assign select_ln895_4_fu_1036_p3 = ((icmp_ln895_2_fu_1009_p2[0:0] === 1'b1) ? sext_ln1503_4_fu_1029_p1 : zext_ln895_8_fu_1033_p1);

assign select_ln895_5_fu_1071_p3 = ((icmp_ln895_10_reg_1568[0:0] === 1'b1) ? sext_ln1503_5_fu_1064_p1 : zext_ln895_10_fu_1068_p1);

assign select_ln895_6_fu_1110_p3 = ((icmp_ln895_3_fu_1083_p2[0:0] === 1'b1) ? sext_ln1503_6_fu_1103_p1 : zext_ln895_12_fu_1107_p1);

assign select_ln895_7_fu_1145_p3 = ((icmp_ln895_11_reg_1590[0:0] === 1'b1) ? sext_ln1503_7_fu_1138_p1 : zext_ln895_14_fu_1142_p1);

assign select_ln895_8_fu_1184_p3 = ((icmp_ln895_4_fu_1157_p2[0:0] === 1'b1) ? sext_ln1503_8_fu_1177_p1 : zext_ln895_16_fu_1181_p1);

assign select_ln895_9_fu_1219_p3 = ((icmp_ln895_12_reg_1600[0:0] === 1'b1) ? sext_ln1503_9_fu_1212_p1 : zext_ln895_18_fu_1216_p1);

assign select_ln895_fu_888_p3 = ((icmp_ln895_fu_861_p2[0:0] === 1'b1) ? sext_ln1503_fu_881_p1 : zext_ln895_fu_885_p1);

assign sext_ln1503_10_fu_1251_p1 = $signed(trunc_ln1503_s_fu_1241_p4);

assign sext_ln1503_11_fu_1286_p1 = $signed(trunc_ln1503_10_fu_1276_p4);

assign sext_ln1503_12_fu_1325_p1 = $signed(trunc_ln1503_11_fu_1315_p4);

assign sext_ln1503_13_fu_1360_p1 = $signed(trunc_ln1503_12_fu_1350_p4);

assign sext_ln1503_14_fu_1399_p1 = $signed(trunc_ln1503_13_fu_1389_p4);

assign sext_ln1503_15_fu_1434_p1 = $signed(trunc_ln1503_14_fu_1424_p4);

assign sext_ln1503_1_fu_916_p1 = $signed(trunc_ln1503_1_fu_906_p4);

assign sext_ln1503_2_fu_955_p1 = $signed(trunc_ln1503_2_fu_945_p4);

assign sext_ln1503_3_fu_990_p1 = $signed(trunc_ln1503_3_fu_980_p4);

assign sext_ln1503_4_fu_1029_p1 = $signed(trunc_ln1503_4_fu_1019_p4);

assign sext_ln1503_5_fu_1064_p1 = $signed(trunc_ln1503_5_fu_1054_p4);

assign sext_ln1503_6_fu_1103_p1 = $signed(trunc_ln1503_6_fu_1093_p4);

assign sext_ln1503_7_fu_1138_p1 = $signed(trunc_ln1503_7_fu_1128_p4);

assign sext_ln1503_8_fu_1177_p1 = $signed(trunc_ln1503_8_fu_1167_p4);

assign sext_ln1503_9_fu_1212_p1 = $signed(trunc_ln1503_9_fu_1202_p4);

assign sext_ln1503_fu_881_p1 = $signed(trunc_ln_fu_871_p4);

assign trunc_ln1353_1_fu_480_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_2_fu_490_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_3_fu_500_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_4_fu_530_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_5_fu_540_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_6_fu_550_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1353_fu_470_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln1503_10_fu_1276_p4 = {{add_ln1354_11_fu_1271_p2[12:3]}};

assign trunc_ln1503_11_fu_1315_p4 = {{add_ln1354_12_fu_1310_p2[12:3]}};

assign trunc_ln1503_12_fu_1350_p4 = {{add_ln1354_13_fu_1345_p2[12:3]}};

assign trunc_ln1503_13_fu_1389_p4 = {{add_ln1354_14_fu_1384_p2[12:3]}};

assign trunc_ln1503_14_fu_1424_p4 = {{add_ln1354_15_fu_1419_p2[12:3]}};

assign trunc_ln1503_1_fu_906_p4 = {{add_ln1354_1_fu_901_p2[12:3]}};

assign trunc_ln1503_2_fu_945_p4 = {{add_ln1354_2_fu_940_p2[12:3]}};

assign trunc_ln1503_3_fu_980_p4 = {{add_ln1354_3_fu_975_p2[12:3]}};

assign trunc_ln1503_4_fu_1019_p4 = {{add_ln1354_4_fu_1014_p2[12:3]}};

assign trunc_ln1503_5_fu_1054_p4 = {{add_ln1354_5_fu_1049_p2[12:3]}};

assign trunc_ln1503_6_fu_1093_p4 = {{add_ln1354_6_fu_1088_p2[12:3]}};

assign trunc_ln1503_7_fu_1128_p4 = {{add_ln1354_7_fu_1123_p2[12:3]}};

assign trunc_ln1503_8_fu_1167_p4 = {{add_ln1354_8_fu_1162_p2[12:3]}};

assign trunc_ln1503_9_fu_1202_p4 = {{add_ln1354_9_fu_1197_p2[12:3]}};

assign trunc_ln1503_s_fu_1241_p4 = {{add_ln1354_10_fu_1236_p2[12:3]}};

assign trunc_ln647_fu_466_p1 = ret_V_fu_456_p2[2:0];

assign trunc_ln_fu_871_p4 = {{add_ln1354_fu_866_p2[12:3]}};

assign xor_ln647_fu_504_p2 = (trunc_ln1353_3_fu_500_p1 ^ 3'd4);

assign zext_ln1354_fu_452_p1 = rom_idx_V;

assign zext_ln215_1_fu_560_p1 = trunc_ln647_reg_1464;

assign zext_ln215_2_fu_600_p1 = add_ln647_reg_1469;

assign zext_ln215_3_fu_640_p1 = add_ln647_1_reg_1474;

assign zext_ln215_4_fu_680_p1 = add_ln647_2_reg_1479;

assign zext_ln215_5_fu_510_p1 = xor_ln647_fu_504_p2;

assign zext_ln215_6_fu_741_p1 = add_ln647_3_reg_1497;

assign zext_ln215_7_fu_781_p1 = add_ln647_4_reg_1502;

assign zext_ln215_8_fu_821_p1 = add_ln647_5_reg_1507;

assign zext_ln215_fu_462_p1 = lut_start_addr_V;

assign zext_ln895_10_fu_1068_p1 = tmp_5_reg_1573;

assign zext_ln895_11_fu_1078_p1 = select_ln895_5_fu_1071_p3;

assign zext_ln895_12_fu_1107_p1 = tmp_6_reg_1585;

assign zext_ln895_13_fu_1118_p1 = select_ln895_6_fu_1110_p3;

assign zext_ln895_14_fu_1142_p1 = tmp_7_reg_1595;

assign zext_ln895_15_fu_1152_p1 = select_ln895_7_fu_1145_p3;

assign zext_ln895_16_fu_1181_p1 = tmp_8_reg_1492_pp0_iter1_reg;

assign zext_ln895_17_fu_1192_p1 = select_ln895_8_fu_1184_p3;

assign zext_ln895_18_fu_1216_p1 = tmp_9_reg_1605;

assign zext_ln895_19_fu_1226_p1 = select_ln895_9_fu_1219_p3;

assign zext_ln895_1_fu_896_p1 = select_ln895_fu_888_p3;

assign zext_ln895_20_fu_1255_p1 = tmp_10_reg_1617;

assign zext_ln895_21_fu_1266_p1 = select_ln895_10_fu_1258_p3;

assign zext_ln895_22_fu_1290_p1 = tmp_11_reg_1627;

assign zext_ln895_23_fu_1300_p1 = select_ln895_11_fu_1293_p3;

assign zext_ln895_24_fu_1329_p1 = tmp_12_reg_1639;

assign zext_ln895_25_fu_1340_p1 = select_ln895_12_fu_1332_p3;

assign zext_ln895_26_fu_1364_p1 = tmp_13_reg_1649;

assign zext_ln895_27_fu_1374_p1 = select_ln895_13_fu_1367_p3;

assign zext_ln895_28_fu_1403_p1 = tmp_14_reg_1661;

assign zext_ln895_29_fu_1414_p1 = select_ln895_14_fu_1406_p3;

assign zext_ln895_2_fu_920_p1 = tmp_1_reg_1529;

assign zext_ln895_30_fu_1438_p1 = tmp_15_reg_1671;

assign zext_ln895_31_fu_1448_p1 = select_ln895_15_fu_1441_p3;

assign zext_ln895_3_fu_930_p1 = select_ln895_1_fu_923_p3;

assign zext_ln895_4_fu_959_p1 = tmp_2_reg_1541;

assign zext_ln895_5_fu_970_p1 = select_ln895_2_fu_962_p3;

assign zext_ln895_6_fu_994_p1 = tmp_3_reg_1551;

assign zext_ln895_7_fu_1004_p1 = select_ln895_3_fu_997_p3;

assign zext_ln895_8_fu_1033_p1 = tmp_4_reg_1563;

assign zext_ln895_9_fu_1044_p1 = select_ln895_4_fu_1036_p3;

assign zext_ln895_fu_885_p1 = tmp_reg_1519;

always @ (posedge ap_clk) begin
    zext_ln215_reg_1453[12] <= 1'b0;
end

endmodule //get_trig_vals
