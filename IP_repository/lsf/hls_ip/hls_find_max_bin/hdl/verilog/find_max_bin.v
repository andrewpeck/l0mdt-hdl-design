// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="find_max_bin,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku15p-ffva1760-2-e,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.727000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=544,HLS_SYN_LUT=3254,HLS_VERSION=2019_2_1}" *)

module find_max_bin (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        slcvec_angle_polar_offset_mrad_V,
        roi_seed_r_V,
        max_bin_count_0_V,
        max_bin_count_1_V,
        max_bin_count_2_V,
        max_bin_count_3_V,
        max_bin_count_4_V,
        max_bin_count_5_V,
        max_bin_count_6_V,
        max_bin_count_7_V,
        max_bin_count_8_V,
        max_bin_count_9_V,
        max_bin_count_10_V,
        max_bin_count_11_V,
        max_bin_count_12_V,
        max_bin_count_13_V,
        max_bin_count_14_V,
        max_bin_count_15_V,
        max_bin_count_16_V,
        max_bin_count_17_V,
        max_bin_count_18_V,
        max_bin_count_19_V,
        max_bin_count_20_V,
        max_bin_count_21_V,
        max_bin_count_22_V,
        max_bin_count_23_V,
        max_bin_count_24_V,
        max_bin_count_25_V,
        max_bin_count_26_V,
        max_bin_count_27_V,
        max_bin_count_28_V,
        max_bin_count_29_V,
        max_bin_count_30_V,
        max_bin_count_31_V,
        max_bin_count_32_V,
        max_bin_count_33_V,
        max_bin_count_34_V,
        max_bin_count_35_V,
        max_bin_count_36_V,
        max_bin_count_37_V,
        max_bin_count_38_V,
        max_bin_count_39_V,
        max_bin_count_40_V,
        max_bin_count_41_V,
        max_bin_count_42_V,
        max_bin_count_43_V,
        max_bin_count_44_V,
        max_bin_count_45_V,
        max_bin_count_46_V,
        max_bin_count_47_V,
        max_bin_count_48_V,
        max_bin_count_49_V,
        max_bin_count_50_V,
        max_bin_count_51_V,
        max_bin_count_52_V,
        max_bin_count_53_V,
        max_bin_count_54_V,
        max_bin_count_55_V,
        max_bin_count_56_V,
        max_bin_count_57_V,
        max_bin_count_58_V,
        max_bin_count_59_V,
        max_bin_count_60_V,
        max_bin_count_61_V,
        max_bin_count_62_V,
        max_bin_count_63_V,
        max_bin_r_0_V,
        max_bin_r_1_V,
        max_bin_r_2_V,
        max_bin_r_3_V,
        max_bin_r_4_V,
        max_bin_r_5_V,
        max_bin_r_6_V,
        max_bin_r_7_V,
        max_bin_r_8_V,
        max_bin_r_9_V,
        max_bin_r_10_V,
        max_bin_r_11_V,
        max_bin_r_12_V,
        max_bin_r_13_V,
        max_bin_r_14_V,
        max_bin_r_15_V,
        max_bin_r_16_V,
        max_bin_r_17_V,
        max_bin_r_18_V,
        max_bin_r_19_V,
        max_bin_r_20_V,
        max_bin_r_21_V,
        max_bin_r_22_V,
        max_bin_r_23_V,
        max_bin_r_24_V,
        max_bin_r_25_V,
        max_bin_r_26_V,
        max_bin_r_27_V,
        max_bin_r_28_V,
        max_bin_r_29_V,
        max_bin_r_30_V,
        max_bin_r_31_V,
        max_bin_r_32_V,
        max_bin_r_33_V,
        max_bin_r_34_V,
        max_bin_r_35_V,
        max_bin_r_36_V,
        max_bin_r_37_V,
        max_bin_r_38_V,
        max_bin_r_39_V,
        max_bin_r_40_V,
        max_bin_r_41_V,
        max_bin_r_42_V,
        max_bin_r_43_V,
        max_bin_r_44_V,
        max_bin_r_45_V,
        max_bin_r_46_V,
        max_bin_r_47_V,
        max_bin_r_48_V,
        max_bin_r_49_V,
        max_bin_r_50_V,
        max_bin_r_51_V,
        max_bin_r_52_V,
        max_bin_r_53_V,
        max_bin_r_54_V,
        max_bin_r_55_V,
        max_bin_r_56_V,
        max_bin_r_57_V,
        max_bin_r_58_V,
        max_bin_r_59_V,
        max_bin_r_60_V,
        max_bin_r_61_V,
        max_bin_r_62_V,
        max_bin_r_63_V,
        hls_LT_theta_global_V,
        hls_LT_theta_global_V_ap_vld,
        hls_LT_r_global_V,
        hls_LT_r_global_V_ap_vld,
        hls_LT_theta_V,
        hls_LT_theta_V_ap_vld,
        hls_LT_r_V,
        hls_LT_r_V_ap_vld,
        res_max_bin_count_V,
        res_max_bin_count_V_ap_vld,
        res_max_bin_theta_V,
        res_max_bin_theta_V_ap_vld,
        res_max_bin_r_V,
        res_max_bin_r_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] slcvec_angle_polar_offset_mrad_V;
input  [21:0] roi_seed_r_V;
input  [3:0] max_bin_count_0_V;
input  [3:0] max_bin_count_1_V;
input  [3:0] max_bin_count_2_V;
input  [3:0] max_bin_count_3_V;
input  [3:0] max_bin_count_4_V;
input  [3:0] max_bin_count_5_V;
input  [3:0] max_bin_count_6_V;
input  [3:0] max_bin_count_7_V;
input  [3:0] max_bin_count_8_V;
input  [3:0] max_bin_count_9_V;
input  [3:0] max_bin_count_10_V;
input  [3:0] max_bin_count_11_V;
input  [3:0] max_bin_count_12_V;
input  [3:0] max_bin_count_13_V;
input  [3:0] max_bin_count_14_V;
input  [3:0] max_bin_count_15_V;
input  [3:0] max_bin_count_16_V;
input  [3:0] max_bin_count_17_V;
input  [3:0] max_bin_count_18_V;
input  [3:0] max_bin_count_19_V;
input  [3:0] max_bin_count_20_V;
input  [3:0] max_bin_count_21_V;
input  [3:0] max_bin_count_22_V;
input  [3:0] max_bin_count_23_V;
input  [3:0] max_bin_count_24_V;
input  [3:0] max_bin_count_25_V;
input  [3:0] max_bin_count_26_V;
input  [3:0] max_bin_count_27_V;
input  [3:0] max_bin_count_28_V;
input  [3:0] max_bin_count_29_V;
input  [3:0] max_bin_count_30_V;
input  [3:0] max_bin_count_31_V;
input  [3:0] max_bin_count_32_V;
input  [3:0] max_bin_count_33_V;
input  [3:0] max_bin_count_34_V;
input  [3:0] max_bin_count_35_V;
input  [3:0] max_bin_count_36_V;
input  [3:0] max_bin_count_37_V;
input  [3:0] max_bin_count_38_V;
input  [3:0] max_bin_count_39_V;
input  [3:0] max_bin_count_40_V;
input  [3:0] max_bin_count_41_V;
input  [3:0] max_bin_count_42_V;
input  [3:0] max_bin_count_43_V;
input  [3:0] max_bin_count_44_V;
input  [3:0] max_bin_count_45_V;
input  [3:0] max_bin_count_46_V;
input  [3:0] max_bin_count_47_V;
input  [3:0] max_bin_count_48_V;
input  [3:0] max_bin_count_49_V;
input  [3:0] max_bin_count_50_V;
input  [3:0] max_bin_count_51_V;
input  [3:0] max_bin_count_52_V;
input  [3:0] max_bin_count_53_V;
input  [3:0] max_bin_count_54_V;
input  [3:0] max_bin_count_55_V;
input  [3:0] max_bin_count_56_V;
input  [3:0] max_bin_count_57_V;
input  [3:0] max_bin_count_58_V;
input  [3:0] max_bin_count_59_V;
input  [3:0] max_bin_count_60_V;
input  [3:0] max_bin_count_61_V;
input  [3:0] max_bin_count_62_V;
input  [3:0] max_bin_count_63_V;
input  [6:0] max_bin_r_0_V;
input  [6:0] max_bin_r_1_V;
input  [6:0] max_bin_r_2_V;
input  [6:0] max_bin_r_3_V;
input  [6:0] max_bin_r_4_V;
input  [6:0] max_bin_r_5_V;
input  [6:0] max_bin_r_6_V;
input  [6:0] max_bin_r_7_V;
input  [6:0] max_bin_r_8_V;
input  [6:0] max_bin_r_9_V;
input  [6:0] max_bin_r_10_V;
input  [6:0] max_bin_r_11_V;
input  [6:0] max_bin_r_12_V;
input  [6:0] max_bin_r_13_V;
input  [6:0] max_bin_r_14_V;
input  [6:0] max_bin_r_15_V;
input  [6:0] max_bin_r_16_V;
input  [6:0] max_bin_r_17_V;
input  [6:0] max_bin_r_18_V;
input  [6:0] max_bin_r_19_V;
input  [6:0] max_bin_r_20_V;
input  [6:0] max_bin_r_21_V;
input  [6:0] max_bin_r_22_V;
input  [6:0] max_bin_r_23_V;
input  [6:0] max_bin_r_24_V;
input  [6:0] max_bin_r_25_V;
input  [6:0] max_bin_r_26_V;
input  [6:0] max_bin_r_27_V;
input  [6:0] max_bin_r_28_V;
input  [6:0] max_bin_r_29_V;
input  [6:0] max_bin_r_30_V;
input  [6:0] max_bin_r_31_V;
input  [6:0] max_bin_r_32_V;
input  [6:0] max_bin_r_33_V;
input  [6:0] max_bin_r_34_V;
input  [6:0] max_bin_r_35_V;
input  [6:0] max_bin_r_36_V;
input  [6:0] max_bin_r_37_V;
input  [6:0] max_bin_r_38_V;
input  [6:0] max_bin_r_39_V;
input  [6:0] max_bin_r_40_V;
input  [6:0] max_bin_r_41_V;
input  [6:0] max_bin_r_42_V;
input  [6:0] max_bin_r_43_V;
input  [6:0] max_bin_r_44_V;
input  [6:0] max_bin_r_45_V;
input  [6:0] max_bin_r_46_V;
input  [6:0] max_bin_r_47_V;
input  [6:0] max_bin_r_48_V;
input  [6:0] max_bin_r_49_V;
input  [6:0] max_bin_r_50_V;
input  [6:0] max_bin_r_51_V;
input  [6:0] max_bin_r_52_V;
input  [6:0] max_bin_r_53_V;
input  [6:0] max_bin_r_54_V;
input  [6:0] max_bin_r_55_V;
input  [6:0] max_bin_r_56_V;
input  [6:0] max_bin_r_57_V;
input  [6:0] max_bin_r_58_V;
input  [6:0] max_bin_r_59_V;
input  [6:0] max_bin_r_60_V;
input  [6:0] max_bin_r_61_V;
input  [6:0] max_bin_r_62_V;
input  [6:0] max_bin_r_63_V;
output  [13:0] hls_LT_theta_global_V;
output   hls_LT_theta_global_V_ap_vld;
output  [21:0] hls_LT_r_global_V;
output   hls_LT_r_global_V_ap_vld;
output  [13:0] hls_LT_theta_V;
output   hls_LT_theta_V_ap_vld;
output  [21:0] hls_LT_r_V;
output   hls_LT_r_V_ap_vld;
output  [3:0] res_max_bin_count_V;
output   res_max_bin_count_V_ap_vld;
output  [6:0] res_max_bin_theta_V;
output   res_max_bin_theta_V_ap_vld;
output  [6:0] res_max_bin_r_V;
output   res_max_bin_r_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    hls_LT_theta_global_V_1_ack_in;
reg    hls_LT_r_global_V_1_ack_in;
reg    hls_LT_theta_V_1_ack_in;
reg    hls_LT_r_V_1_ack_in;
reg    res_max_bin_count_V_1_ack_in;
reg    res_max_bin_theta_V_1_ack_in;
reg    res_max_bin_r_V_1_ack_in;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [13:0] hls_LT_theta_global_V_1_data_reg;
reg    hls_LT_theta_global_V_1_vld_reg;
reg    hls_LT_theta_global_V_1_vld_in;
reg   [21:0] hls_LT_r_global_V_1_data_reg;
reg    hls_LT_r_global_V_1_vld_reg;
reg    hls_LT_r_global_V_1_vld_in;
reg   [13:0] hls_LT_theta_V_1_data_reg;
reg    hls_LT_theta_V_1_vld_reg;
reg    hls_LT_theta_V_1_vld_in;
reg   [21:0] hls_LT_r_V_1_data_reg;
reg    hls_LT_r_V_1_vld_reg;
reg    hls_LT_r_V_1_vld_in;
reg   [3:0] res_max_bin_count_V_1_data_reg;
reg    res_max_bin_count_V_1_vld_reg;
reg    res_max_bin_count_V_1_vld_in;
reg   [6:0] res_max_bin_theta_V_1_data_reg;
reg    res_max_bin_theta_V_1_vld_reg;
reg    res_max_bin_theta_V_1_vld_in;
reg   [6:0] res_max_bin_r_V_1_data_reg;
reg    res_max_bin_r_V_1_vld_reg;
reg    res_max_bin_r_V_1_vld_in;
reg   [21:0] roi_seed_r_V_read_reg_4733;
reg   [21:0] roi_seed_r_V_read_reg_4733_pp0_iter1_reg;
reg   [13:0] slcvec_angle_polar_o_reg_4738;
reg   [13:0] slcvec_angle_polar_o_reg_4738_pp0_iter1_reg;
wire   [0:0] icmp_ln895_fu_1552_p2;
reg   [0:0] icmp_ln895_reg_4743;
wire   [0:0] icmp_ln895_1_fu_1558_p2;
reg   [0:0] icmp_ln895_1_reg_4748;
wire   [0:0] icmp_ln895_2_fu_1564_p2;
reg   [0:0] icmp_ln895_2_reg_4753;
wire   [0:0] icmp_ln895_3_fu_1570_p2;
reg   [0:0] icmp_ln895_3_reg_4758;
wire   [0:0] icmp_ln895_4_fu_1576_p2;
reg   [0:0] icmp_ln895_4_reg_4763;
wire   [0:0] icmp_ln895_6_fu_1582_p2;
reg   [0:0] icmp_ln895_6_reg_4768;
wire   [0:0] icmp_ln895_64_fu_1588_p2;
reg   [0:0] icmp_ln895_64_reg_4773;
wire   [0:0] icmp_ln895_7_fu_1594_p2;
reg   [0:0] icmp_ln895_7_reg_4778;
wire   [0:0] icmp_ln895_8_fu_1600_p2;
reg   [0:0] icmp_ln895_8_reg_4783;
wire   [0:0] icmp_ln895_9_fu_1606_p2;
reg   [0:0] icmp_ln895_9_reg_4788;
wire   [0:0] icmp_ln895_10_fu_1612_p2;
reg   [0:0] icmp_ln895_10_reg_4793;
wire   [0:0] icmp_ln895_11_fu_1618_p2;
reg   [0:0] icmp_ln895_11_reg_4798;
wire   [0:0] icmp_ln895_12_fu_1624_p2;
reg   [0:0] icmp_ln895_12_reg_4803;
wire   [0:0] icmp_ln895_13_fu_1630_p2;
reg   [0:0] icmp_ln895_13_reg_4808;
wire   [0:0] icmp_ln895_14_fu_1636_p2;
reg   [0:0] icmp_ln895_14_reg_4813;
wire   [0:0] icmp_ln895_15_fu_1642_p2;
reg   [0:0] icmp_ln895_15_reg_4818;
wire   [0:0] icmp_ln895_16_fu_1648_p2;
reg   [0:0] icmp_ln895_16_reg_4823;
wire   [0:0] icmp_ln895_17_fu_1654_p2;
reg   [0:0] icmp_ln895_17_reg_4828;
wire   [0:0] icmp_ln895_18_fu_1660_p2;
reg   [0:0] icmp_ln895_18_reg_4833;
wire   [0:0] icmp_ln895_19_fu_1666_p2;
reg   [0:0] icmp_ln895_19_reg_4838;
wire   [0:0] icmp_ln895_20_fu_1672_p2;
reg   [0:0] icmp_ln895_20_reg_4843;
wire   [0:0] icmp_ln895_21_fu_1678_p2;
reg   [0:0] icmp_ln895_21_reg_4848;
wire   [0:0] icmp_ln895_22_fu_1684_p2;
reg   [0:0] icmp_ln895_22_reg_4853;
wire   [0:0] icmp_ln895_23_fu_1690_p2;
reg   [0:0] icmp_ln895_23_reg_4858;
wire   [0:0] icmp_ln895_24_fu_1696_p2;
reg   [0:0] icmp_ln895_24_reg_4863;
wire   [0:0] icmp_ln895_25_fu_1702_p2;
reg   [0:0] icmp_ln895_25_reg_4868;
wire   [0:0] icmp_ln895_26_fu_1708_p2;
reg   [0:0] icmp_ln895_26_reg_4873;
wire   [0:0] icmp_ln895_27_fu_1714_p2;
reg   [0:0] icmp_ln895_27_reg_4878;
wire   [0:0] icmp_ln895_28_fu_1720_p2;
reg   [0:0] icmp_ln895_28_reg_4883;
wire   [0:0] icmp_ln895_29_fu_1726_p2;
reg   [0:0] icmp_ln895_29_reg_4888;
wire   [0:0] icmp_ln895_30_fu_1732_p2;
reg   [0:0] icmp_ln895_30_reg_4893;
wire   [0:0] icmp_ln895_31_fu_1738_p2;
reg   [0:0] icmp_ln895_31_reg_4898;
wire   [0:0] icmp_ln895_32_fu_1744_p2;
reg   [0:0] icmp_ln895_32_reg_4903;
wire   [0:0] icmp_ln895_33_fu_1750_p2;
reg   [0:0] icmp_ln895_33_reg_4908;
wire   [0:0] icmp_ln895_34_fu_1756_p2;
reg   [0:0] icmp_ln895_34_reg_4913;
wire   [0:0] icmp_ln895_35_fu_1762_p2;
reg   [0:0] icmp_ln895_35_reg_4918;
wire   [0:0] icmp_ln895_36_fu_1768_p2;
reg   [0:0] icmp_ln895_36_reg_4923;
wire   [0:0] icmp_ln895_37_fu_1774_p2;
reg   [0:0] icmp_ln895_37_reg_4928;
wire   [0:0] icmp_ln895_38_fu_1780_p2;
reg   [0:0] icmp_ln895_38_reg_4933;
wire   [0:0] icmp_ln895_39_fu_1786_p2;
reg   [0:0] icmp_ln895_39_reg_4938;
wire   [0:0] icmp_ln895_40_fu_1792_p2;
reg   [0:0] icmp_ln895_40_reg_4943;
wire   [0:0] icmp_ln895_41_fu_1798_p2;
reg   [0:0] icmp_ln895_41_reg_4948;
wire   [0:0] icmp_ln895_42_fu_1804_p2;
reg   [0:0] icmp_ln895_42_reg_4953;
wire   [0:0] icmp_ln895_43_fu_1810_p2;
reg   [0:0] icmp_ln895_43_reg_4958;
wire   [0:0] icmp_ln895_44_fu_1816_p2;
reg   [0:0] icmp_ln895_44_reg_4963;
wire   [0:0] icmp_ln895_45_fu_1822_p2;
reg   [0:0] icmp_ln895_45_reg_4968;
wire   [0:0] icmp_ln895_46_fu_1828_p2;
reg   [0:0] icmp_ln895_46_reg_4973;
wire   [0:0] icmp_ln895_47_fu_1834_p2;
reg   [0:0] icmp_ln895_47_reg_4978;
wire   [0:0] icmp_ln895_48_fu_1840_p2;
reg   [0:0] icmp_ln895_48_reg_4983;
wire   [0:0] icmp_ln895_49_fu_1846_p2;
reg   [0:0] icmp_ln895_49_reg_4988;
wire   [0:0] icmp_ln895_50_fu_1852_p2;
reg   [0:0] icmp_ln895_50_reg_4993;
wire   [0:0] icmp_ln895_51_fu_1858_p2;
reg   [0:0] icmp_ln895_51_reg_4998;
wire   [0:0] icmp_ln895_52_fu_1864_p2;
reg   [0:0] icmp_ln895_52_reg_5003;
wire   [0:0] icmp_ln895_53_fu_1870_p2;
reg   [0:0] icmp_ln895_53_reg_5008;
wire   [0:0] icmp_ln895_54_fu_1876_p2;
reg   [0:0] icmp_ln895_54_reg_5013;
wire   [0:0] icmp_ln895_55_fu_1882_p2;
reg   [0:0] icmp_ln895_55_reg_5018;
wire   [0:0] icmp_ln895_56_fu_1888_p2;
reg   [0:0] icmp_ln895_56_reg_5023;
wire   [0:0] icmp_ln895_57_fu_1894_p2;
reg   [0:0] icmp_ln895_57_reg_5028;
wire   [0:0] icmp_ln895_58_fu_1900_p2;
reg   [0:0] icmp_ln895_58_reg_5033;
wire   [0:0] icmp_ln895_59_fu_1906_p2;
reg   [0:0] icmp_ln895_59_reg_5038;
wire   [0:0] icmp_ln895_60_fu_1912_p2;
reg   [0:0] icmp_ln895_60_reg_5043;
wire   [0:0] icmp_ln895_61_fu_1918_p2;
reg   [0:0] icmp_ln895_61_reg_5048;
wire   [0:0] icmp_ln895_62_fu_1924_p2;
reg   [0:0] icmp_ln895_62_reg_5053;
wire   [0:0] icmp_ln895_63_fu_1930_p2;
reg   [0:0] icmp_ln895_63_reg_5058;
wire   [0:0] icmp_ln895_65_fu_1936_p2;
reg   [0:0] icmp_ln895_65_reg_5063;
wire   [6:0] select_ln422_1_fu_2764_p3;
reg   [6:0] select_ln422_1_reg_5068;
wire   [0:0] icmp_ln895_66_fu_1942_p2;
reg   [0:0] icmp_ln895_66_reg_5073;
wire   [6:0] select_ln422_4_fu_2781_p3;
reg   [6:0] select_ln422_4_reg_5078;
wire   [0:0] icmp_ln895_67_fu_1948_p2;
reg   [0:0] icmp_ln895_67_reg_5083;
wire   [6:0] select_ln422_7_fu_2798_p3;
reg   [6:0] select_ln422_7_reg_5088;
wire   [0:0] icmp_ln895_68_fu_1954_p2;
reg   [0:0] icmp_ln895_68_reg_5093;
wire   [6:0] select_ln422_10_fu_2815_p3;
reg   [6:0] select_ln422_10_reg_5098;
wire   [0:0] icmp_ln895_69_fu_1960_p2;
reg   [0:0] icmp_ln895_69_reg_5103;
wire   [6:0] select_ln422_13_fu_2832_p3;
reg   [6:0] select_ln422_13_reg_5108;
wire   [0:0] icmp_ln895_70_fu_1966_p2;
reg   [0:0] icmp_ln895_70_reg_5113;
wire   [6:0] select_ln422_16_fu_2849_p3;
reg   [6:0] select_ln422_16_reg_5118;
wire   [0:0] icmp_ln895_71_fu_1972_p2;
reg   [0:0] icmp_ln895_71_reg_5123;
wire   [6:0] select_ln422_19_fu_2866_p3;
reg   [6:0] select_ln422_19_reg_5128;
wire   [0:0] icmp_ln895_72_fu_1978_p2;
reg   [0:0] icmp_ln895_72_reg_5133;
wire   [6:0] select_ln422_22_fu_2883_p3;
reg   [6:0] select_ln422_22_reg_5138;
wire   [0:0] icmp_ln895_73_fu_1984_p2;
reg   [0:0] icmp_ln895_73_reg_5143;
wire   [0:0] icmp_ln895_74_fu_1990_p2;
reg   [0:0] icmp_ln895_74_reg_5148;
wire   [0:0] icmp_ln895_75_fu_1996_p2;
reg   [0:0] icmp_ln895_75_reg_5153;
wire   [0:0] icmp_ln895_76_fu_2002_p2;
reg   [0:0] icmp_ln895_76_reg_5158;
wire   [0:0] icmp_ln895_77_fu_2008_p2;
reg   [0:0] icmp_ln895_77_reg_5163;
wire   [0:0] icmp_ln895_78_fu_2014_p2;
reg   [0:0] icmp_ln895_78_reg_5168;
wire   [0:0] icmp_ln895_79_fu_2020_p2;
reg   [0:0] icmp_ln895_79_reg_5173;
wire   [0:0] icmp_ln895_80_fu_2026_p2;
reg   [0:0] icmp_ln895_80_reg_5178;
wire   [0:0] icmp_ln895_81_fu_2032_p2;
reg   [0:0] icmp_ln895_81_reg_5183;
wire   [6:0] select_ln422_49_fu_3036_p3;
reg   [6:0] select_ln422_49_reg_5188;
wire   [0:0] icmp_ln895_82_fu_2038_p2;
reg   [0:0] icmp_ln895_82_reg_5193;
wire   [6:0] select_ln422_52_fu_3053_p3;
reg   [6:0] select_ln422_52_reg_5198;
wire   [0:0] icmp_ln895_83_fu_2044_p2;
reg   [0:0] icmp_ln895_83_reg_5203;
wire   [6:0] select_ln422_55_fu_3070_p3;
reg   [6:0] select_ln422_55_reg_5208;
wire   [0:0] icmp_ln895_84_fu_2050_p2;
reg   [0:0] icmp_ln895_84_reg_5213;
wire   [6:0] select_ln422_58_fu_3087_p3;
reg   [6:0] select_ln422_58_reg_5218;
wire   [0:0] icmp_ln895_85_fu_2056_p2;
reg   [0:0] icmp_ln895_85_reg_5223;
wire   [6:0] select_ln422_61_fu_3104_p3;
reg   [6:0] select_ln422_61_reg_5228;
wire   [0:0] icmp_ln895_86_fu_2062_p2;
reg   [0:0] icmp_ln895_86_reg_5233;
wire   [6:0] select_ln422_64_fu_3121_p3;
reg   [6:0] select_ln422_64_reg_5238;
wire   [0:0] icmp_ln895_87_fu_2068_p2;
reg   [0:0] icmp_ln895_87_reg_5243;
wire   [6:0] select_ln422_67_fu_3138_p3;
reg   [6:0] select_ln422_67_reg_5248;
wire   [0:0] icmp_ln895_88_fu_2074_p2;
reg   [0:0] icmp_ln895_88_reg_5253;
wire   [6:0] select_ln422_70_fu_3155_p3;
reg   [6:0] select_ln422_70_reg_5258;
wire   [0:0] icmp_ln895_89_fu_2080_p2;
reg   [0:0] icmp_ln895_89_reg_5263;
wire   [0:0] icmp_ln895_90_fu_2086_p2;
reg   [0:0] icmp_ln895_90_reg_5268;
wire   [0:0] icmp_ln895_91_fu_2092_p2;
reg   [0:0] icmp_ln895_91_reg_5273;
wire   [0:0] icmp_ln895_92_fu_2098_p2;
reg   [0:0] icmp_ln895_92_reg_5278;
wire   [0:0] icmp_ln895_93_fu_2104_p2;
reg   [0:0] icmp_ln895_93_reg_5283;
wire   [0:0] icmp_ln895_94_fu_2110_p2;
reg   [0:0] icmp_ln895_94_reg_5288;
wire   [0:0] icmp_ln895_95_fu_2116_p2;
reg   [0:0] icmp_ln895_95_reg_5293;
wire   [0:0] icmp_ln895_96_fu_2122_p2;
reg   [0:0] icmp_ln895_96_reg_5298;
wire   [0:0] icmp_ln895_97_fu_2128_p2;
reg   [0:0] icmp_ln895_97_reg_5303;
wire   [3:0] select_ln440_2_fu_3308_p3;
reg   [3:0] select_ln440_2_reg_5309;
wire   [0:0] icmp_ln895_98_fu_2132_p2;
reg   [0:0] icmp_ln895_98_reg_5314;
wire   [3:0] select_ln440_5_fu_3317_p3;
reg   [3:0] select_ln440_5_reg_5320;
wire   [0:0] icmp_ln895_99_fu_2136_p2;
reg   [0:0] icmp_ln895_99_reg_5325;
wire   [3:0] select_ln440_8_fu_3326_p3;
reg   [3:0] select_ln440_8_reg_5331;
wire   [0:0] icmp_ln895_100_fu_2140_p2;
reg   [0:0] icmp_ln895_100_reg_5336;
wire   [3:0] select_ln440_11_fu_3335_p3;
reg   [3:0] select_ln440_11_reg_5342;
wire   [0:0] icmp_ln895_101_fu_2144_p2;
reg   [0:0] icmp_ln895_101_reg_5347;
wire   [3:0] select_ln440_14_fu_3344_p3;
reg   [3:0] select_ln440_14_reg_5353;
wire   [0:0] icmp_ln895_102_fu_2148_p2;
reg   [0:0] icmp_ln895_102_reg_5358;
wire   [3:0] select_ln440_17_fu_3353_p3;
reg   [3:0] select_ln440_17_reg_5364;
wire   [0:0] icmp_ln895_103_fu_2152_p2;
reg   [0:0] icmp_ln895_103_reg_5369;
wire   [3:0] select_ln440_20_fu_3362_p3;
reg   [3:0] select_ln440_20_reg_5375;
wire   [0:0] icmp_ln895_104_fu_2156_p2;
reg   [0:0] icmp_ln895_104_reg_5380;
wire   [3:0] select_ln440_23_fu_3371_p3;
reg   [3:0] select_ln440_23_reg_5386;
wire   [0:0] icmp_ln895_105_fu_2160_p2;
reg   [0:0] icmp_ln895_105_reg_5391;
wire   [6:0] select_ln440_25_fu_3380_p3;
reg   [6:0] select_ln440_25_reg_5396;
wire   [3:0] select_ln440_26_fu_3388_p3;
reg   [3:0] select_ln440_26_reg_5401;
wire   [0:0] icmp_ln895_106_fu_2164_p2;
reg   [0:0] icmp_ln895_106_reg_5406;
wire   [6:0] select_ln440_28_fu_3397_p3;
reg   [6:0] select_ln440_28_reg_5411;
wire   [3:0] select_ln440_29_fu_3405_p3;
reg   [3:0] select_ln440_29_reg_5416;
wire   [0:0] icmp_ln895_107_fu_2168_p2;
reg   [0:0] icmp_ln895_107_reg_5421;
wire   [6:0] select_ln440_31_fu_3414_p3;
reg   [6:0] select_ln440_31_reg_5426;
wire   [3:0] select_ln440_32_fu_3422_p3;
reg   [3:0] select_ln440_32_reg_5431;
wire   [0:0] icmp_ln895_108_fu_2172_p2;
reg   [0:0] icmp_ln895_108_reg_5436;
wire   [6:0] select_ln440_34_fu_3431_p3;
reg   [6:0] select_ln440_34_reg_5441;
wire   [3:0] select_ln440_35_fu_3439_p3;
reg   [3:0] select_ln440_35_reg_5446;
wire   [0:0] icmp_ln895_109_fu_2176_p2;
reg   [0:0] icmp_ln895_109_reg_5451;
wire   [6:0] select_ln440_37_fu_3448_p3;
reg   [6:0] select_ln440_37_reg_5456;
wire   [3:0] select_ln440_38_fu_3456_p3;
reg   [3:0] select_ln440_38_reg_5461;
wire   [0:0] icmp_ln895_110_fu_2180_p2;
reg   [0:0] icmp_ln895_110_reg_5466;
wire   [6:0] select_ln440_40_fu_3465_p3;
reg   [6:0] select_ln440_40_reg_5471;
wire   [3:0] select_ln440_41_fu_3473_p3;
reg   [3:0] select_ln440_41_reg_5476;
wire   [0:0] icmp_ln895_111_fu_2184_p2;
reg   [0:0] icmp_ln895_111_reg_5481;
wire   [6:0] select_ln440_43_fu_3482_p3;
reg   [6:0] select_ln440_43_reg_5486;
wire   [3:0] select_ln440_44_fu_3490_p3;
reg   [3:0] select_ln440_44_reg_5491;
wire   [0:0] icmp_ln895_112_fu_2188_p2;
reg   [0:0] icmp_ln895_112_reg_5496;
wire   [6:0] select_ln440_46_fu_3499_p3;
reg   [6:0] select_ln440_46_reg_5501;
wire   [3:0] select_ln440_47_fu_3507_p3;
reg   [3:0] select_ln440_47_reg_5506;
wire   [0:0] icmp_ln895_113_fu_2192_p2;
reg   [0:0] icmp_ln895_113_reg_5511;
wire   [0:0] icmp_ln895_114_fu_2196_p2;
reg   [0:0] icmp_ln895_114_reg_5518;
wire   [0:0] icmp_ln895_115_fu_2200_p2;
reg   [0:0] icmp_ln895_115_reg_5525;
wire   [0:0] icmp_ln895_116_fu_2204_p2;
reg   [0:0] icmp_ln895_116_reg_5532;
wire   [0:0] icmp_ln895_117_fu_2208_p2;
reg   [0:0] icmp_ln895_117_reg_5539;
wire   [0:0] icmp_ln895_118_fu_2212_p2;
reg   [0:0] icmp_ln895_118_reg_5546;
wire   [0:0] icmp_ln895_119_fu_2216_p2;
reg   [0:0] icmp_ln895_119_reg_5553;
wire   [0:0] icmp_ln895_120_fu_2220_p2;
reg   [0:0] icmp_ln895_120_reg_5560;
wire   [6:0] select_ln476_fu_4492_p3;
reg   [6:0] select_ln476_reg_5567;
wire   [6:0] select_ln476_6_fu_4542_p3;
reg   [6:0] select_ln476_6_reg_5572;
wire   [0:0] icmp_ln895_125_fu_2240_p2;
reg   [0:0] icmp_ln895_125_reg_5577;
wire   [6:0] res_max_bin_r_t_V_fu_4592_p3;
reg   [6:0] res_max_bin_r_t_V_reg_5582;
wire   [3:0] res_max_bin_count_t_s_fu_4600_p3;
reg   [3:0] res_max_bin_count_t_s_reg_5587;
wire   [6:0] res_max_bin_theta_t_1_fu_4608_p3;
reg   [6:0] res_max_bin_theta_t_1_reg_5593;
wire   [6:0] res_max_bin_r_t_V_1_fu_4616_p3;
reg   [6:0] res_max_bin_r_t_V_1_reg_5598;
wire   [3:0] res_max_bin_count_t_1_fu_4624_p3;
reg   [3:0] res_max_bin_count_t_1_reg_5603;
wire   [3:0] res_max_bin_count_t_2_fu_4637_p3;
wire   [6:0] res_max_bin_theta_t_2_fu_4644_p3;
wire   [6:0] tmp_V_fu_4658_p2;
wire   [13:0] zext_ln703_1_fu_4683_p1;
wire   [13:0] add_ln703_1_fu_4702_p2;
wire   [21:0] zext_ln708_fu_4722_p1;
wire   [21:0] add_ln703_2_fu_4727_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [3:0] select_ln422_2_fu_2772_p3;
wire   [3:0] select_ln422_50_fu_3044_p3;
wire   [3:0] select_ln422_5_fu_2789_p3;
wire   [3:0] select_ln422_53_fu_3061_p3;
wire   [3:0] select_ln422_8_fu_2806_p3;
wire   [3:0] select_ln422_56_fu_3078_p3;
wire   [3:0] select_ln422_11_fu_2823_p3;
wire   [3:0] select_ln422_59_fu_3095_p3;
wire   [3:0] select_ln422_14_fu_2840_p3;
wire   [3:0] select_ln422_62_fu_3112_p3;
wire   [3:0] select_ln422_17_fu_2857_p3;
wire   [3:0] select_ln422_65_fu_3129_p3;
wire   [3:0] select_ln422_20_fu_2874_p3;
wire   [3:0] select_ln422_68_fu_3146_p3;
wire   [3:0] select_ln422_23_fu_2891_p3;
wire   [3:0] select_ln422_71_fu_3163_p3;
wire   [3:0] select_ln422_26_fu_2908_p3;
wire   [3:0] select_ln422_74_fu_3180_p3;
wire   [3:0] select_ln422_29_fu_2925_p3;
wire   [3:0] select_ln422_77_fu_3197_p3;
wire   [3:0] select_ln422_32_fu_2942_p3;
wire   [3:0] select_ln422_80_fu_3214_p3;
wire   [3:0] select_ln422_35_fu_2959_p3;
wire   [3:0] select_ln422_83_fu_3231_p3;
wire   [3:0] select_ln422_38_fu_2976_p3;
wire   [3:0] select_ln422_86_fu_3248_p3;
wire   [3:0] select_ln422_41_fu_2993_p3;
wire   [3:0] select_ln422_89_fu_3265_p3;
wire   [3:0] select_ln422_44_fu_3010_p3;
wire   [3:0] select_ln422_92_fu_3282_p3;
wire   [3:0] select_ln422_47_fu_3027_p3;
wire   [3:0] select_ln422_95_fu_3299_p3;
wire   [3:0] select_ln458_2_fu_4353_p3;
wire   [3:0] select_ln458_14_fu_4429_p3;
wire   [3:0] select_ln458_5_fu_4372_p3;
wire   [3:0] select_ln458_17_fu_4448_p3;
wire   [3:0] select_ln458_8_fu_4391_p3;
wire   [3:0] select_ln458_20_fu_4467_p3;
wire   [3:0] select_ln458_11_fu_4410_p3;
wire   [3:0] select_ln458_23_fu_4486_p3;
wire   [3:0] select_ln476_2_fu_4508_p3;
wire   [3:0] select_ln476_8_fu_4558_p3;
wire   [3:0] select_ln476_5_fu_4533_p3;
wire   [3:0] select_ln476_11_fu_4583_p3;
wire   [6:0] select_ln404_1_fu_2252_p3;
wire   [6:0] select_ln404_65_fu_2508_p3;
wire   [6:0] select_ln404_3_fu_2260_p3;
wire   [6:0] select_ln404_67_fu_2516_p3;
wire   [6:0] select_ln404_5_fu_2268_p3;
wire   [6:0] select_ln404_69_fu_2524_p3;
wire   [6:0] select_ln404_7_fu_2276_p3;
wire   [6:0] select_ln404_71_fu_2532_p3;
wire   [6:0] select_ln404_9_fu_2284_p3;
wire   [6:0] select_ln404_73_fu_2540_p3;
wire   [6:0] select_ln404_11_fu_2292_p3;
wire   [6:0] select_ln404_75_fu_2548_p3;
wire   [6:0] select_ln404_13_fu_2300_p3;
wire   [6:0] select_ln404_77_fu_2556_p3;
wire   [6:0] select_ln404_15_fu_2308_p3;
wire   [6:0] select_ln404_79_fu_2564_p3;
wire   [6:0] select_ln404_17_fu_2316_p3;
wire   [6:0] select_ln404_81_fu_2572_p3;
wire   [6:0] select_ln404_19_fu_2324_p3;
wire   [6:0] select_ln404_83_fu_2580_p3;
wire   [6:0] select_ln404_21_fu_2332_p3;
wire   [6:0] select_ln404_85_fu_2588_p3;
wire   [6:0] select_ln404_23_fu_2340_p3;
wire   [6:0] select_ln404_87_fu_2596_p3;
wire   [6:0] select_ln404_25_fu_2348_p3;
wire   [6:0] select_ln404_89_fu_2604_p3;
wire   [6:0] select_ln404_27_fu_2356_p3;
wire   [6:0] select_ln404_91_fu_2612_p3;
wire   [6:0] select_ln404_29_fu_2364_p3;
wire   [6:0] select_ln404_93_fu_2620_p3;
wire   [6:0] select_ln404_31_fu_2372_p3;
wire   [6:0] select_ln404_95_fu_2628_p3;
wire   [6:0] select_ln404_33_fu_2380_p3;
wire   [6:0] select_ln404_97_fu_2636_p3;
wire   [6:0] select_ln404_35_fu_2388_p3;
wire   [6:0] select_ln404_99_fu_2644_p3;
wire   [6:0] select_ln404_37_fu_2396_p3;
wire   [6:0] select_ln404_101_fu_2652_p3;
wire   [6:0] select_ln404_39_fu_2404_p3;
wire   [6:0] select_ln404_103_fu_2660_p3;
wire   [6:0] select_ln404_41_fu_2412_p3;
wire   [6:0] select_ln404_105_fu_2668_p3;
wire   [6:0] select_ln404_43_fu_2420_p3;
wire   [6:0] select_ln404_107_fu_2676_p3;
wire   [6:0] select_ln404_45_fu_2428_p3;
wire   [6:0] select_ln404_109_fu_2684_p3;
wire   [6:0] select_ln404_47_fu_2436_p3;
wire   [6:0] select_ln404_111_fu_2692_p3;
wire   [6:0] select_ln404_49_fu_2444_p3;
wire   [6:0] select_ln404_113_fu_2700_p3;
wire   [6:0] select_ln404_51_fu_2452_p3;
wire   [6:0] select_ln404_115_fu_2708_p3;
wire   [6:0] select_ln404_53_fu_2460_p3;
wire   [6:0] select_ln404_117_fu_2716_p3;
wire   [6:0] select_ln404_55_fu_2468_p3;
wire   [6:0] select_ln404_119_fu_2724_p3;
wire   [6:0] select_ln404_57_fu_2476_p3;
wire   [6:0] select_ln404_121_fu_2732_p3;
wire   [6:0] select_ln404_59_fu_2484_p3;
wire   [6:0] select_ln404_123_fu_2740_p3;
wire   [6:0] select_ln404_61_fu_2492_p3;
wire   [6:0] select_ln404_125_fu_2748_p3;
wire   [6:0] select_ln404_63_fu_2500_p3;
wire   [6:0] select_ln404_127_fu_2756_p3;
wire   [6:0] select_ln422_25_fu_2900_p3;
wire   [6:0] select_ln422_73_fu_3172_p3;
wire   [6:0] select_ln422_28_fu_2917_p3;
wire   [6:0] select_ln422_76_fu_3189_p3;
wire   [6:0] select_ln422_31_fu_2934_p3;
wire   [6:0] select_ln422_79_fu_3206_p3;
wire   [6:0] select_ln422_34_fu_2951_p3;
wire   [6:0] select_ln422_82_fu_3223_p3;
wire   [6:0] select_ln422_37_fu_2968_p3;
wire   [6:0] select_ln422_85_fu_3240_p3;
wire   [6:0] select_ln422_40_fu_2985_p3;
wire   [6:0] select_ln422_88_fu_3257_p3;
wire   [6:0] select_ln422_43_fu_3002_p3;
wire   [6:0] select_ln422_91_fu_3274_p3;
wire   [6:0] select_ln422_46_fu_3019_p3;
wire   [6:0] select_ln422_94_fu_3291_p3;
wire   [6:0] select_ln404_fu_3516_p3;
wire   [6:0] select_ln404_64_fu_3740_p3;
wire   [6:0] select_ln404_2_fu_3523_p3;
wire   [6:0] select_ln404_66_fu_3747_p3;
wire   [6:0] select_ln404_4_fu_3530_p3;
wire   [6:0] select_ln404_68_fu_3754_p3;
wire   [6:0] select_ln404_6_fu_3537_p3;
wire   [6:0] select_ln404_70_fu_3761_p3;
wire   [6:0] select_ln404_8_fu_3544_p3;
wire   [6:0] select_ln404_72_fu_3768_p3;
wire   [6:0] select_ln404_10_fu_3551_p3;
wire   [6:0] select_ln404_74_fu_3775_p3;
wire   [6:0] select_ln404_12_fu_3558_p3;
wire   [6:0] select_ln404_76_fu_3782_p3;
wire   [6:0] select_ln404_14_fu_3565_p3;
wire   [6:0] select_ln404_78_fu_3789_p3;
wire   [6:0] select_ln404_16_fu_3572_p3;
wire   [6:0] select_ln404_80_fu_3796_p3;
wire   [6:0] select_ln404_18_fu_3579_p3;
wire   [6:0] select_ln404_82_fu_3803_p3;
wire   [6:0] select_ln404_20_fu_3586_p3;
wire   [6:0] select_ln404_84_fu_3810_p3;
wire   [6:0] select_ln404_22_fu_3593_p3;
wire   [6:0] select_ln404_86_fu_3817_p3;
wire   [6:0] select_ln404_24_fu_3600_p3;
wire   [6:0] select_ln404_88_fu_3824_p3;
wire   [6:0] select_ln404_26_fu_3607_p3;
wire   [6:0] select_ln404_90_fu_3831_p3;
wire   [6:0] select_ln404_28_fu_3614_p3;
wire   [6:0] select_ln404_92_fu_3838_p3;
wire   [6:0] select_ln404_30_fu_3621_p3;
wire   [6:0] select_ln404_94_fu_3845_p3;
wire   [6:0] select_ln404_32_fu_3628_p3;
wire   [6:0] select_ln404_96_fu_3852_p3;
wire   [6:0] select_ln404_34_fu_3635_p3;
wire   [6:0] select_ln404_98_fu_3859_p3;
wire   [6:0] select_ln404_36_fu_3642_p3;
wire   [6:0] select_ln404_100_fu_3866_p3;
wire   [6:0] select_ln404_38_fu_3649_p3;
wire   [6:0] select_ln404_102_fu_3873_p3;
wire   [6:0] select_ln404_40_fu_3656_p3;
wire   [6:0] select_ln404_104_fu_3880_p3;
wire   [6:0] select_ln404_42_fu_3663_p3;
wire   [6:0] select_ln404_106_fu_3887_p3;
wire   [6:0] select_ln404_44_fu_3670_p3;
wire   [6:0] select_ln404_108_fu_3894_p3;
wire   [6:0] select_ln404_46_fu_3677_p3;
wire   [6:0] select_ln404_110_fu_3901_p3;
wire   [6:0] select_ln404_48_fu_3684_p3;
wire   [6:0] select_ln404_112_fu_3908_p3;
wire   [6:0] select_ln404_50_fu_3691_p3;
wire   [6:0] select_ln404_114_fu_3915_p3;
wire   [6:0] select_ln404_52_fu_3698_p3;
wire   [6:0] select_ln404_116_fu_3922_p3;
wire   [6:0] select_ln404_54_fu_3705_p3;
wire   [6:0] select_ln404_118_fu_3929_p3;
wire   [6:0] select_ln404_56_fu_3712_p3;
wire   [6:0] select_ln404_120_fu_3936_p3;
wire   [6:0] select_ln404_58_fu_3719_p3;
wire   [6:0] select_ln404_122_fu_3943_p3;
wire   [6:0] select_ln404_60_fu_3726_p3;
wire   [6:0] select_ln404_124_fu_3950_p3;
wire   [6:0] select_ln404_62_fu_3733_p3;
wire   [6:0] select_ln404_126_fu_3957_p3;
wire   [6:0] select_ln422_fu_3964_p3;
wire   [6:0] select_ln422_48_fu_4076_p3;
wire   [6:0] select_ln422_3_fu_3971_p3;
wire   [6:0] select_ln422_51_fu_4083_p3;
wire   [6:0] select_ln422_6_fu_3978_p3;
wire   [6:0] select_ln422_54_fu_4090_p3;
wire   [6:0] select_ln422_9_fu_3985_p3;
wire   [6:0] select_ln422_57_fu_4097_p3;
wire   [6:0] select_ln422_12_fu_3992_p3;
wire   [6:0] select_ln422_60_fu_4104_p3;
wire   [6:0] select_ln422_15_fu_3999_p3;
wire   [6:0] select_ln422_63_fu_4111_p3;
wire   [6:0] select_ln422_18_fu_4006_p3;
wire   [6:0] select_ln422_66_fu_4118_p3;
wire   [6:0] select_ln422_21_fu_4013_p3;
wire   [6:0] select_ln422_69_fu_4125_p3;
wire   [6:0] select_ln422_24_fu_4020_p3;
wire   [6:0] select_ln422_72_fu_4132_p3;
wire   [6:0] select_ln422_27_fu_4027_p3;
wire   [6:0] select_ln422_75_fu_4139_p3;
wire   [6:0] select_ln422_30_fu_4034_p3;
wire   [6:0] select_ln422_78_fu_4146_p3;
wire   [6:0] select_ln422_33_fu_4041_p3;
wire   [6:0] select_ln422_81_fu_4153_p3;
wire   [6:0] select_ln422_36_fu_4048_p3;
wire   [6:0] select_ln422_84_fu_4160_p3;
wire   [6:0] select_ln422_39_fu_4055_p3;
wire   [6:0] select_ln422_87_fu_4167_p3;
wire   [6:0] select_ln422_42_fu_4062_p3;
wire   [6:0] select_ln422_90_fu_4174_p3;
wire   [6:0] select_ln422_45_fu_4069_p3;
wire   [6:0] select_ln422_93_fu_4181_p3;
wire   [6:0] select_ln440_fu_4188_p3;
wire   [6:0] select_ln440_24_fu_4284_p3;
wire   [6:0] select_ln440_1_fu_4195_p3;
wire   [6:0] select_ln440_3_fu_4200_p3;
wire   [6:0] select_ln440_27_fu_4291_p3;
wire   [6:0] select_ln440_4_fu_4207_p3;
wire   [6:0] select_ln440_6_fu_4212_p3;
wire   [6:0] select_ln440_30_fu_4298_p3;
wire   [6:0] select_ln440_7_fu_4219_p3;
wire   [6:0] select_ln440_9_fu_4224_p3;
wire   [6:0] select_ln440_33_fu_4305_p3;
wire   [6:0] select_ln440_10_fu_4231_p3;
wire   [6:0] select_ln440_12_fu_4236_p3;
wire   [6:0] select_ln440_36_fu_4312_p3;
wire   [6:0] select_ln440_13_fu_4243_p3;
wire   [6:0] select_ln440_15_fu_4248_p3;
wire   [6:0] select_ln440_39_fu_4319_p3;
wire   [6:0] select_ln440_16_fu_4255_p3;
wire   [6:0] select_ln440_18_fu_4260_p3;
wire   [6:0] select_ln440_42_fu_4326_p3;
wire   [6:0] select_ln440_19_fu_4267_p3;
wire   [6:0] select_ln440_21_fu_4272_p3;
wire   [6:0] select_ln440_45_fu_4333_p3;
wire   [6:0] select_ln440_22_fu_4279_p3;
wire   [0:0] icmp_ln895_121_fu_2224_p2;
wire   [6:0] select_ln458_fu_4340_p3;
wire   [6:0] select_ln458_12_fu_4416_p3;
wire   [6:0] select_ln458_1_fu_4347_p3;
wire   [6:0] select_ln458_13_fu_4423_p3;
wire   [0:0] icmp_ln895_122_fu_2228_p2;
wire   [6:0] select_ln458_3_fu_4359_p3;
wire   [6:0] select_ln458_15_fu_4435_p3;
wire   [6:0] select_ln458_4_fu_4366_p3;
wire   [6:0] select_ln458_16_fu_4442_p3;
wire   [0:0] icmp_ln895_123_fu_2232_p2;
wire   [6:0] select_ln458_6_fu_4378_p3;
wire   [6:0] select_ln458_18_fu_4454_p3;
wire   [6:0] select_ln458_7_fu_4385_p3;
wire   [6:0] select_ln458_19_fu_4461_p3;
wire   [0:0] icmp_ln895_124_fu_2236_p2;
wire   [6:0] select_ln458_9_fu_4397_p3;
wire   [6:0] select_ln458_21_fu_4473_p3;
wire   [6:0] select_ln458_10_fu_4404_p3;
wire   [6:0] select_ln458_22_fu_4480_p3;
wire   [6:0] select_ln476_1_fu_4500_p3;
wire   [6:0] select_ln476_7_fu_4550_p3;
wire   [0:0] icmp_ln895_126_fu_2244_p2;
wire   [6:0] select_ln476_3_fu_4517_p3;
wire   [6:0] select_ln476_9_fu_4567_p3;
wire   [6:0] select_ln476_4_fu_4525_p3;
wire   [6:0] select_ln476_10_fu_4575_p3;
wire   [0:0] icmp_ln895_5_fu_2248_p2;
wire   [6:0] res_max_bin_theta_t_s_fu_4632_p3;
wire   [6:0] res_max_bin_r_t_V_2_fu_4652_p3;
wire   [8:0] t0_V_fu_4665_p3;
wire   [8:0] p_Val2_2_fu_4673_p2;
wire   [11:0] zext_ln703_fu_4679_p1;
wire   [11:0] add_ln703_fu_4688_p2;
wire  signed [12:0] sext_ln703_fu_4694_p1;
wire   [13:0] zext_ln703_2_fu_4698_p1;
wire   [11:0] shl_ln_fu_4708_p3;
wire   [11:0] p_Val2_4_fu_4716_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 hls_LT_theta_global_V_1_data_reg = 14'd0;
#0 hls_LT_theta_global_V_1_vld_reg = 1'b0;
#0 hls_LT_r_global_V_1_data_reg = 22'd0;
#0 hls_LT_r_global_V_1_vld_reg = 1'b0;
#0 hls_LT_theta_V_1_data_reg = 14'd0;
#0 hls_LT_theta_V_1_vld_reg = 1'b0;
#0 hls_LT_r_V_1_data_reg = 22'd0;
#0 hls_LT_r_V_1_vld_reg = 1'b0;
#0 res_max_bin_count_V_1_data_reg = 4'd0;
#0 res_max_bin_count_V_1_vld_reg = 1'b0;
#0 res_max_bin_theta_V_1_data_reg = 7'd0;
#0 res_max_bin_theta_V_1_vld_reg = 1'b0;
#0 res_max_bin_r_V_1_data_reg = 7'd0;
#0 res_max_bin_r_V_1_vld_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_count_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_in == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_data_reg[11 : 4] <= zext_ln708_fu_4722_p1[11 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_in == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_data_reg <= add_ln703_2_fu_4727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_in == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_data_reg[8 : 1] <= zext_ln703_1_fu_4683_p1[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_in == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_data_reg <= add_ln703_1_fu_4702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln895_100_reg_5336 <= icmp_ln895_100_fu_2140_p2;
        icmp_ln895_101_reg_5347 <= icmp_ln895_101_fu_2144_p2;
        icmp_ln895_102_reg_5358 <= icmp_ln895_102_fu_2148_p2;
        icmp_ln895_103_reg_5369 <= icmp_ln895_103_fu_2152_p2;
        icmp_ln895_104_reg_5380 <= icmp_ln895_104_fu_2156_p2;
        icmp_ln895_105_reg_5391 <= icmp_ln895_105_fu_2160_p2;
        icmp_ln895_106_reg_5406 <= icmp_ln895_106_fu_2164_p2;
        icmp_ln895_107_reg_5421 <= icmp_ln895_107_fu_2168_p2;
        icmp_ln895_108_reg_5436 <= icmp_ln895_108_fu_2172_p2;
        icmp_ln895_109_reg_5451 <= icmp_ln895_109_fu_2176_p2;
        icmp_ln895_10_reg_4793 <= icmp_ln895_10_fu_1612_p2;
        icmp_ln895_110_reg_5466 <= icmp_ln895_110_fu_2180_p2;
        icmp_ln895_111_reg_5481 <= icmp_ln895_111_fu_2184_p2;
        icmp_ln895_112_reg_5496 <= icmp_ln895_112_fu_2188_p2;
        icmp_ln895_113_reg_5511 <= icmp_ln895_113_fu_2192_p2;
        icmp_ln895_114_reg_5518 <= icmp_ln895_114_fu_2196_p2;
        icmp_ln895_115_reg_5525 <= icmp_ln895_115_fu_2200_p2;
        icmp_ln895_116_reg_5532 <= icmp_ln895_116_fu_2204_p2;
        icmp_ln895_117_reg_5539 <= icmp_ln895_117_fu_2208_p2;
        icmp_ln895_118_reg_5546 <= icmp_ln895_118_fu_2212_p2;
        icmp_ln895_119_reg_5553 <= icmp_ln895_119_fu_2216_p2;
        icmp_ln895_11_reg_4798 <= icmp_ln895_11_fu_1618_p2;
        icmp_ln895_120_reg_5560 <= icmp_ln895_120_fu_2220_p2;
        icmp_ln895_125_reg_5577 <= icmp_ln895_125_fu_2240_p2;
        icmp_ln895_12_reg_4803 <= icmp_ln895_12_fu_1624_p2;
        icmp_ln895_13_reg_4808 <= icmp_ln895_13_fu_1630_p2;
        icmp_ln895_14_reg_4813 <= icmp_ln895_14_fu_1636_p2;
        icmp_ln895_15_reg_4818 <= icmp_ln895_15_fu_1642_p2;
        icmp_ln895_16_reg_4823 <= icmp_ln895_16_fu_1648_p2;
        icmp_ln895_17_reg_4828 <= icmp_ln895_17_fu_1654_p2;
        icmp_ln895_18_reg_4833 <= icmp_ln895_18_fu_1660_p2;
        icmp_ln895_19_reg_4838 <= icmp_ln895_19_fu_1666_p2;
        icmp_ln895_1_reg_4748 <= icmp_ln895_1_fu_1558_p2;
        icmp_ln895_20_reg_4843 <= icmp_ln895_20_fu_1672_p2;
        icmp_ln895_21_reg_4848 <= icmp_ln895_21_fu_1678_p2;
        icmp_ln895_22_reg_4853 <= icmp_ln895_22_fu_1684_p2;
        icmp_ln895_23_reg_4858 <= icmp_ln895_23_fu_1690_p2;
        icmp_ln895_24_reg_4863 <= icmp_ln895_24_fu_1696_p2;
        icmp_ln895_25_reg_4868 <= icmp_ln895_25_fu_1702_p2;
        icmp_ln895_26_reg_4873 <= icmp_ln895_26_fu_1708_p2;
        icmp_ln895_27_reg_4878 <= icmp_ln895_27_fu_1714_p2;
        icmp_ln895_28_reg_4883 <= icmp_ln895_28_fu_1720_p2;
        icmp_ln895_29_reg_4888 <= icmp_ln895_29_fu_1726_p2;
        icmp_ln895_2_reg_4753 <= icmp_ln895_2_fu_1564_p2;
        icmp_ln895_30_reg_4893 <= icmp_ln895_30_fu_1732_p2;
        icmp_ln895_31_reg_4898 <= icmp_ln895_31_fu_1738_p2;
        icmp_ln895_32_reg_4903 <= icmp_ln895_32_fu_1744_p2;
        icmp_ln895_33_reg_4908 <= icmp_ln895_33_fu_1750_p2;
        icmp_ln895_34_reg_4913 <= icmp_ln895_34_fu_1756_p2;
        icmp_ln895_35_reg_4918 <= icmp_ln895_35_fu_1762_p2;
        icmp_ln895_36_reg_4923 <= icmp_ln895_36_fu_1768_p2;
        icmp_ln895_37_reg_4928 <= icmp_ln895_37_fu_1774_p2;
        icmp_ln895_38_reg_4933 <= icmp_ln895_38_fu_1780_p2;
        icmp_ln895_39_reg_4938 <= icmp_ln895_39_fu_1786_p2;
        icmp_ln895_3_reg_4758 <= icmp_ln895_3_fu_1570_p2;
        icmp_ln895_40_reg_4943 <= icmp_ln895_40_fu_1792_p2;
        icmp_ln895_41_reg_4948 <= icmp_ln895_41_fu_1798_p2;
        icmp_ln895_42_reg_4953 <= icmp_ln895_42_fu_1804_p2;
        icmp_ln895_43_reg_4958 <= icmp_ln895_43_fu_1810_p2;
        icmp_ln895_44_reg_4963 <= icmp_ln895_44_fu_1816_p2;
        icmp_ln895_45_reg_4968 <= icmp_ln895_45_fu_1822_p2;
        icmp_ln895_46_reg_4973 <= icmp_ln895_46_fu_1828_p2;
        icmp_ln895_47_reg_4978 <= icmp_ln895_47_fu_1834_p2;
        icmp_ln895_48_reg_4983 <= icmp_ln895_48_fu_1840_p2;
        icmp_ln895_49_reg_4988 <= icmp_ln895_49_fu_1846_p2;
        icmp_ln895_4_reg_4763 <= icmp_ln895_4_fu_1576_p2;
        icmp_ln895_50_reg_4993 <= icmp_ln895_50_fu_1852_p2;
        icmp_ln895_51_reg_4998 <= icmp_ln895_51_fu_1858_p2;
        icmp_ln895_52_reg_5003 <= icmp_ln895_52_fu_1864_p2;
        icmp_ln895_53_reg_5008 <= icmp_ln895_53_fu_1870_p2;
        icmp_ln895_54_reg_5013 <= icmp_ln895_54_fu_1876_p2;
        icmp_ln895_55_reg_5018 <= icmp_ln895_55_fu_1882_p2;
        icmp_ln895_56_reg_5023 <= icmp_ln895_56_fu_1888_p2;
        icmp_ln895_57_reg_5028 <= icmp_ln895_57_fu_1894_p2;
        icmp_ln895_58_reg_5033 <= icmp_ln895_58_fu_1900_p2;
        icmp_ln895_59_reg_5038 <= icmp_ln895_59_fu_1906_p2;
        icmp_ln895_60_reg_5043 <= icmp_ln895_60_fu_1912_p2;
        icmp_ln895_61_reg_5048 <= icmp_ln895_61_fu_1918_p2;
        icmp_ln895_62_reg_5053 <= icmp_ln895_62_fu_1924_p2;
        icmp_ln895_63_reg_5058 <= icmp_ln895_63_fu_1930_p2;
        icmp_ln895_64_reg_4773 <= icmp_ln895_64_fu_1588_p2;
        icmp_ln895_65_reg_5063 <= icmp_ln895_65_fu_1936_p2;
        icmp_ln895_66_reg_5073 <= icmp_ln895_66_fu_1942_p2;
        icmp_ln895_67_reg_5083 <= icmp_ln895_67_fu_1948_p2;
        icmp_ln895_68_reg_5093 <= icmp_ln895_68_fu_1954_p2;
        icmp_ln895_69_reg_5103 <= icmp_ln895_69_fu_1960_p2;
        icmp_ln895_6_reg_4768 <= icmp_ln895_6_fu_1582_p2;
        icmp_ln895_70_reg_5113 <= icmp_ln895_70_fu_1966_p2;
        icmp_ln895_71_reg_5123 <= icmp_ln895_71_fu_1972_p2;
        icmp_ln895_72_reg_5133 <= icmp_ln895_72_fu_1978_p2;
        icmp_ln895_73_reg_5143 <= icmp_ln895_73_fu_1984_p2;
        icmp_ln895_74_reg_5148 <= icmp_ln895_74_fu_1990_p2;
        icmp_ln895_75_reg_5153 <= icmp_ln895_75_fu_1996_p2;
        icmp_ln895_76_reg_5158 <= icmp_ln895_76_fu_2002_p2;
        icmp_ln895_77_reg_5163 <= icmp_ln895_77_fu_2008_p2;
        icmp_ln895_78_reg_5168 <= icmp_ln895_78_fu_2014_p2;
        icmp_ln895_79_reg_5173 <= icmp_ln895_79_fu_2020_p2;
        icmp_ln895_7_reg_4778 <= icmp_ln895_7_fu_1594_p2;
        icmp_ln895_80_reg_5178 <= icmp_ln895_80_fu_2026_p2;
        icmp_ln895_81_reg_5183 <= icmp_ln895_81_fu_2032_p2;
        icmp_ln895_82_reg_5193 <= icmp_ln895_82_fu_2038_p2;
        icmp_ln895_83_reg_5203 <= icmp_ln895_83_fu_2044_p2;
        icmp_ln895_84_reg_5213 <= icmp_ln895_84_fu_2050_p2;
        icmp_ln895_85_reg_5223 <= icmp_ln895_85_fu_2056_p2;
        icmp_ln895_86_reg_5233 <= icmp_ln895_86_fu_2062_p2;
        icmp_ln895_87_reg_5243 <= icmp_ln895_87_fu_2068_p2;
        icmp_ln895_88_reg_5253 <= icmp_ln895_88_fu_2074_p2;
        icmp_ln895_89_reg_5263 <= icmp_ln895_89_fu_2080_p2;
        icmp_ln895_8_reg_4783 <= icmp_ln895_8_fu_1600_p2;
        icmp_ln895_90_reg_5268 <= icmp_ln895_90_fu_2086_p2;
        icmp_ln895_91_reg_5273 <= icmp_ln895_91_fu_2092_p2;
        icmp_ln895_92_reg_5278 <= icmp_ln895_92_fu_2098_p2;
        icmp_ln895_93_reg_5283 <= icmp_ln895_93_fu_2104_p2;
        icmp_ln895_94_reg_5288 <= icmp_ln895_94_fu_2110_p2;
        icmp_ln895_95_reg_5293 <= icmp_ln895_95_fu_2116_p2;
        icmp_ln895_96_reg_5298 <= icmp_ln895_96_fu_2122_p2;
        icmp_ln895_97_reg_5303 <= icmp_ln895_97_fu_2128_p2;
        icmp_ln895_98_reg_5314 <= icmp_ln895_98_fu_2132_p2;
        icmp_ln895_99_reg_5325 <= icmp_ln895_99_fu_2136_p2;
        icmp_ln895_9_reg_4788 <= icmp_ln895_9_fu_1606_p2;
        icmp_ln895_reg_4743 <= icmp_ln895_fu_1552_p2;
        res_max_bin_count_t_1_reg_5603 <= res_max_bin_count_t_1_fu_4624_p3;
        res_max_bin_count_t_s_reg_5587 <= res_max_bin_count_t_s_fu_4600_p3;
        res_max_bin_r_t_V_1_reg_5598 <= res_max_bin_r_t_V_1_fu_4616_p3;
        res_max_bin_r_t_V_reg_5582 <= res_max_bin_r_t_V_fu_4592_p3;
        res_max_bin_theta_t_1_reg_5593[6 : 1] <= res_max_bin_theta_t_1_fu_4608_p3[6 : 1];
        roi_seed_r_V_read_reg_4733 <= roi_seed_r_V;
        roi_seed_r_V_read_reg_4733_pp0_iter1_reg <= roi_seed_r_V_read_reg_4733;
        select_ln422_10_reg_5098 <= select_ln422_10_fu_2815_p3;
        select_ln422_13_reg_5108 <= select_ln422_13_fu_2832_p3;
        select_ln422_16_reg_5118 <= select_ln422_16_fu_2849_p3;
        select_ln422_19_reg_5128 <= select_ln422_19_fu_2866_p3;
        select_ln422_1_reg_5068 <= select_ln422_1_fu_2764_p3;
        select_ln422_22_reg_5138 <= select_ln422_22_fu_2883_p3;
        select_ln422_49_reg_5188 <= select_ln422_49_fu_3036_p3;
        select_ln422_4_reg_5078 <= select_ln422_4_fu_2781_p3;
        select_ln422_52_reg_5198 <= select_ln422_52_fu_3053_p3;
        select_ln422_55_reg_5208 <= select_ln422_55_fu_3070_p3;
        select_ln422_58_reg_5218 <= select_ln422_58_fu_3087_p3;
        select_ln422_61_reg_5228 <= select_ln422_61_fu_3104_p3;
        select_ln422_64_reg_5238 <= select_ln422_64_fu_3121_p3;
        select_ln422_67_reg_5248 <= select_ln422_67_fu_3138_p3;
        select_ln422_70_reg_5258 <= select_ln422_70_fu_3155_p3;
        select_ln422_7_reg_5088 <= select_ln422_7_fu_2798_p3;
        select_ln440_11_reg_5342 <= select_ln440_11_fu_3335_p3;
        select_ln440_14_reg_5353 <= select_ln440_14_fu_3344_p3;
        select_ln440_17_reg_5364 <= select_ln440_17_fu_3353_p3;
        select_ln440_20_reg_5375 <= select_ln440_20_fu_3362_p3;
        select_ln440_23_reg_5386 <= select_ln440_23_fu_3371_p3;
        select_ln440_25_reg_5396 <= select_ln440_25_fu_3380_p3;
        select_ln440_26_reg_5401 <= select_ln440_26_fu_3388_p3;
        select_ln440_28_reg_5411 <= select_ln440_28_fu_3397_p3;
        select_ln440_29_reg_5416 <= select_ln440_29_fu_3405_p3;
        select_ln440_2_reg_5309 <= select_ln440_2_fu_3308_p3;
        select_ln440_31_reg_5426 <= select_ln440_31_fu_3414_p3;
        select_ln440_32_reg_5431 <= select_ln440_32_fu_3422_p3;
        select_ln440_34_reg_5441 <= select_ln440_34_fu_3431_p3;
        select_ln440_35_reg_5446 <= select_ln440_35_fu_3439_p3;
        select_ln440_37_reg_5456 <= select_ln440_37_fu_3448_p3;
        select_ln440_38_reg_5461 <= select_ln440_38_fu_3456_p3;
        select_ln440_40_reg_5471 <= select_ln440_40_fu_3465_p3;
        select_ln440_41_reg_5476 <= select_ln440_41_fu_3473_p3;
        select_ln440_43_reg_5486 <= select_ln440_43_fu_3482_p3;
        select_ln440_44_reg_5491 <= select_ln440_44_fu_3490_p3;
        select_ln440_46_reg_5501 <= select_ln440_46_fu_3499_p3;
        select_ln440_47_reg_5506 <= select_ln440_47_fu_3507_p3;
        select_ln440_5_reg_5320 <= select_ln440_5_fu_3317_p3;
        select_ln440_8_reg_5331 <= select_ln440_8_fu_3326_p3;
        select_ln476_6_reg_5572[6 : 2] <= select_ln476_6_fu_4542_p3[6 : 2];
        select_ln476_reg_5567[6 : 2] <= select_ln476_fu_4492_p3[6 : 2];
        slcvec_angle_polar_o_reg_4738 <= slcvec_angle_polar_offset_mrad_V;
        slcvec_angle_polar_o_reg_4738_pp0_iter1_reg <= slcvec_angle_polar_o_reg_4738;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_in == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_data_reg <= res_max_bin_count_t_2_fu_4637_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_in == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_data_reg <= tmp_V_fu_4658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_in == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_data_reg <= res_max_bin_theta_t_2_fu_4644_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_count_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_count_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_r_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_theta_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_4702_p2 = (zext_ln703_2_fu_4698_p1 + slcvec_angle_polar_o_reg_4738_pp0_iter1_reg);

assign add_ln703_2_fu_4727_p2 = (zext_ln708_fu_4722_p1 + roi_seed_r_V_read_reg_4733_pp0_iter1_reg);

assign add_ln703_fu_4688_p2 = ($signed(zext_ln703_fu_4679_p1) + $signed(12'd2189));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign hls_LT_r_V = hls_LT_r_V_1_data_reg;

assign hls_LT_r_V_ap_vld = hls_LT_r_V_1_vld_reg;

assign hls_LT_r_global_V = hls_LT_r_global_V_1_data_reg;

assign hls_LT_r_global_V_ap_vld = hls_LT_r_global_V_1_vld_reg;

assign hls_LT_theta_V = hls_LT_theta_V_1_data_reg;

assign hls_LT_theta_V_ap_vld = hls_LT_theta_V_1_vld_reg;

assign hls_LT_theta_global_V = hls_LT_theta_global_V_1_data_reg;

assign hls_LT_theta_global_V_ap_vld = hls_LT_theta_global_V_1_vld_reg;

assign icmp_ln895_100_fu_2140_p2 = ((select_ln422_11_fu_2823_p3 > select_ln422_59_fu_3095_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_101_fu_2144_p2 = ((select_ln422_14_fu_2840_p3 > select_ln422_62_fu_3112_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_102_fu_2148_p2 = ((select_ln422_17_fu_2857_p3 > select_ln422_65_fu_3129_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_103_fu_2152_p2 = ((select_ln422_20_fu_2874_p3 > select_ln422_68_fu_3146_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_104_fu_2156_p2 = ((select_ln422_23_fu_2891_p3 > select_ln422_71_fu_3163_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_105_fu_2160_p2 = ((select_ln422_26_fu_2908_p3 > select_ln422_74_fu_3180_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_106_fu_2164_p2 = ((select_ln422_29_fu_2925_p3 > select_ln422_77_fu_3197_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_107_fu_2168_p2 = ((select_ln422_32_fu_2942_p3 > select_ln422_80_fu_3214_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_108_fu_2172_p2 = ((select_ln422_35_fu_2959_p3 > select_ln422_83_fu_3231_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_109_fu_2176_p2 = ((select_ln422_38_fu_2976_p3 > select_ln422_86_fu_3248_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_10_fu_1612_p2 = ((max_bin_count_10_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_110_fu_2180_p2 = ((select_ln422_41_fu_2993_p3 > select_ln422_89_fu_3265_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_111_fu_2184_p2 = ((select_ln422_44_fu_3010_p3 > select_ln422_92_fu_3282_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_112_fu_2188_p2 = ((select_ln422_47_fu_3027_p3 > select_ln422_95_fu_3299_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_113_fu_2192_p2 = ((select_ln440_2_fu_3308_p3 > select_ln440_26_fu_3388_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_114_fu_2196_p2 = ((select_ln440_5_fu_3317_p3 > select_ln440_29_fu_3405_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_115_fu_2200_p2 = ((select_ln440_8_fu_3326_p3 > select_ln440_32_fu_3422_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_116_fu_2204_p2 = ((select_ln440_11_fu_3335_p3 > select_ln440_35_fu_3439_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_117_fu_2208_p2 = ((select_ln440_14_fu_3344_p3 > select_ln440_38_fu_3456_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_118_fu_2212_p2 = ((select_ln440_17_fu_3353_p3 > select_ln440_41_fu_3473_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_119_fu_2216_p2 = ((select_ln440_20_fu_3362_p3 > select_ln440_44_fu_3490_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_1618_p2 = ((max_bin_count_11_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_120_fu_2220_p2 = ((select_ln440_23_fu_3371_p3 > select_ln440_47_fu_3507_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_121_fu_2224_p2 = ((select_ln458_2_fu_4353_p3 > select_ln458_14_fu_4429_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_122_fu_2228_p2 = ((select_ln458_5_fu_4372_p3 > select_ln458_17_fu_4448_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_123_fu_2232_p2 = ((select_ln458_8_fu_4391_p3 > select_ln458_20_fu_4467_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_124_fu_2236_p2 = ((select_ln458_11_fu_4410_p3 > select_ln458_23_fu_4486_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_125_fu_2240_p2 = ((select_ln476_2_fu_4508_p3 > select_ln476_8_fu_4558_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_126_fu_2244_p2 = ((select_ln476_5_fu_4533_p3 > select_ln476_11_fu_4583_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_1624_p2 = ((max_bin_count_12_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_1630_p2 = ((max_bin_count_13_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_1636_p2 = ((max_bin_count_14_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_15_fu_1642_p2 = ((max_bin_count_15_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_16_fu_1648_p2 = ((max_bin_count_16_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_17_fu_1654_p2 = ((max_bin_count_17_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_18_fu_1660_p2 = ((max_bin_count_18_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_19_fu_1666_p2 = ((max_bin_count_19_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_1558_p2 = ((max_bin_count_1_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_20_fu_1672_p2 = ((max_bin_count_20_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_21_fu_1678_p2 = ((max_bin_count_21_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_22_fu_1684_p2 = ((max_bin_count_22_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_23_fu_1690_p2 = ((max_bin_count_23_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_24_fu_1696_p2 = ((max_bin_count_24_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_25_fu_1702_p2 = ((max_bin_count_25_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_26_fu_1708_p2 = ((max_bin_count_26_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_27_fu_1714_p2 = ((max_bin_count_27_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_28_fu_1720_p2 = ((max_bin_count_28_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_29_fu_1726_p2 = ((max_bin_count_29_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_1564_p2 = ((max_bin_count_2_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_30_fu_1732_p2 = ((max_bin_count_30_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_31_fu_1738_p2 = ((max_bin_count_31_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_32_fu_1744_p2 = ((max_bin_count_32_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_33_fu_1750_p2 = ((max_bin_count_33_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_34_fu_1756_p2 = ((max_bin_count_34_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_35_fu_1762_p2 = ((max_bin_count_35_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_36_fu_1768_p2 = ((max_bin_count_36_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_37_fu_1774_p2 = ((max_bin_count_37_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_38_fu_1780_p2 = ((max_bin_count_38_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_39_fu_1786_p2 = ((max_bin_count_39_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_1570_p2 = ((max_bin_count_3_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_40_fu_1792_p2 = ((max_bin_count_40_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_41_fu_1798_p2 = ((max_bin_count_41_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_42_fu_1804_p2 = ((max_bin_count_42_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_43_fu_1810_p2 = ((max_bin_count_43_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_44_fu_1816_p2 = ((max_bin_count_44_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_45_fu_1822_p2 = ((max_bin_count_45_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_46_fu_1828_p2 = ((max_bin_count_46_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_47_fu_1834_p2 = ((max_bin_count_47_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_48_fu_1840_p2 = ((max_bin_count_48_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_49_fu_1846_p2 = ((max_bin_count_49_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_1576_p2 = ((max_bin_count_4_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_50_fu_1852_p2 = ((max_bin_count_50_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_51_fu_1858_p2 = ((max_bin_count_51_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_52_fu_1864_p2 = ((max_bin_count_52_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_53_fu_1870_p2 = ((max_bin_count_53_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_54_fu_1876_p2 = ((max_bin_count_54_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_55_fu_1882_p2 = ((max_bin_count_55_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_56_fu_1888_p2 = ((max_bin_count_56_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_57_fu_1894_p2 = ((max_bin_count_57_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_58_fu_1900_p2 = ((max_bin_count_58_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_59_fu_1906_p2 = ((max_bin_count_59_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_2248_p2 = ((res_max_bin_count_t_s_reg_5587 > res_max_bin_count_t_1_reg_5603) ? 1'b1 : 1'b0);

assign icmp_ln895_60_fu_1912_p2 = ((max_bin_count_60_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_61_fu_1918_p2 = ((max_bin_count_61_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_62_fu_1924_p2 = ((max_bin_count_62_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_63_fu_1930_p2 = ((max_bin_count_63_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_64_fu_1588_p2 = ((max_bin_count_6_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_65_fu_1936_p2 = ((max_bin_count_0_V > max_bin_count_32_V) ? 1'b1 : 1'b0);

assign icmp_ln895_66_fu_1942_p2 = ((max_bin_count_1_V > max_bin_count_33_V) ? 1'b1 : 1'b0);

assign icmp_ln895_67_fu_1948_p2 = ((max_bin_count_2_V > max_bin_count_34_V) ? 1'b1 : 1'b0);

assign icmp_ln895_68_fu_1954_p2 = ((max_bin_count_3_V > max_bin_count_35_V) ? 1'b1 : 1'b0);

assign icmp_ln895_69_fu_1960_p2 = ((max_bin_count_4_V > max_bin_count_36_V) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_1582_p2 = ((max_bin_count_5_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_70_fu_1966_p2 = ((max_bin_count_5_V > max_bin_count_37_V) ? 1'b1 : 1'b0);

assign icmp_ln895_71_fu_1972_p2 = ((max_bin_count_6_V > max_bin_count_38_V) ? 1'b1 : 1'b0);

assign icmp_ln895_72_fu_1978_p2 = ((max_bin_count_7_V > max_bin_count_39_V) ? 1'b1 : 1'b0);

assign icmp_ln895_73_fu_1984_p2 = ((max_bin_count_8_V > max_bin_count_40_V) ? 1'b1 : 1'b0);

assign icmp_ln895_74_fu_1990_p2 = ((max_bin_count_9_V > max_bin_count_41_V) ? 1'b1 : 1'b0);

assign icmp_ln895_75_fu_1996_p2 = ((max_bin_count_10_V > max_bin_count_42_V) ? 1'b1 : 1'b0);

assign icmp_ln895_76_fu_2002_p2 = ((max_bin_count_11_V > max_bin_count_43_V) ? 1'b1 : 1'b0);

assign icmp_ln895_77_fu_2008_p2 = ((max_bin_count_12_V > max_bin_count_44_V) ? 1'b1 : 1'b0);

assign icmp_ln895_78_fu_2014_p2 = ((max_bin_count_13_V > max_bin_count_45_V) ? 1'b1 : 1'b0);

assign icmp_ln895_79_fu_2020_p2 = ((max_bin_count_14_V > max_bin_count_46_V) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_1594_p2 = ((max_bin_count_7_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_80_fu_2026_p2 = ((max_bin_count_15_V > max_bin_count_47_V) ? 1'b1 : 1'b0);

assign icmp_ln895_81_fu_2032_p2 = ((max_bin_count_16_V > max_bin_count_48_V) ? 1'b1 : 1'b0);

assign icmp_ln895_82_fu_2038_p2 = ((max_bin_count_17_V > max_bin_count_49_V) ? 1'b1 : 1'b0);

assign icmp_ln895_83_fu_2044_p2 = ((max_bin_count_18_V > max_bin_count_50_V) ? 1'b1 : 1'b0);

assign icmp_ln895_84_fu_2050_p2 = ((max_bin_count_19_V > max_bin_count_51_V) ? 1'b1 : 1'b0);

assign icmp_ln895_85_fu_2056_p2 = ((max_bin_count_20_V > max_bin_count_52_V) ? 1'b1 : 1'b0);

assign icmp_ln895_86_fu_2062_p2 = ((max_bin_count_21_V > max_bin_count_53_V) ? 1'b1 : 1'b0);

assign icmp_ln895_87_fu_2068_p2 = ((max_bin_count_22_V > max_bin_count_54_V) ? 1'b1 : 1'b0);

assign icmp_ln895_88_fu_2074_p2 = ((max_bin_count_23_V > max_bin_count_55_V) ? 1'b1 : 1'b0);

assign icmp_ln895_89_fu_2080_p2 = ((max_bin_count_24_V > max_bin_count_56_V) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_1600_p2 = ((max_bin_count_8_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_90_fu_2086_p2 = ((max_bin_count_25_V > max_bin_count_57_V) ? 1'b1 : 1'b0);

assign icmp_ln895_91_fu_2092_p2 = ((max_bin_count_26_V > max_bin_count_58_V) ? 1'b1 : 1'b0);

assign icmp_ln895_92_fu_2098_p2 = ((max_bin_count_27_V > max_bin_count_59_V) ? 1'b1 : 1'b0);

assign icmp_ln895_93_fu_2104_p2 = ((max_bin_count_28_V > max_bin_count_60_V) ? 1'b1 : 1'b0);

assign icmp_ln895_94_fu_2110_p2 = ((max_bin_count_29_V > max_bin_count_61_V) ? 1'b1 : 1'b0);

assign icmp_ln895_95_fu_2116_p2 = ((max_bin_count_30_V > max_bin_count_62_V) ? 1'b1 : 1'b0);

assign icmp_ln895_96_fu_2122_p2 = ((max_bin_count_31_V > max_bin_count_63_V) ? 1'b1 : 1'b0);

assign icmp_ln895_97_fu_2128_p2 = ((select_ln422_2_fu_2772_p3 > select_ln422_50_fu_3044_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_98_fu_2132_p2 = ((select_ln422_5_fu_2789_p3 > select_ln422_53_fu_3061_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_99_fu_2136_p2 = ((select_ln422_8_fu_2806_p3 > select_ln422_56_fu_3078_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_1606_p2 = ((max_bin_count_9_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_1552_p2 = ((max_bin_count_0_V == 4'd0) ? 1'b1 : 1'b0);

assign p_Val2_2_fu_4673_p2 = (t0_V_fu_4665_p3 | 9'd2);

assign p_Val2_4_fu_4716_p2 = (shl_ln_fu_4708_p3 | 12'd16);

assign res_max_bin_count_V = res_max_bin_count_V_1_data_reg;

assign res_max_bin_count_V_ap_vld = res_max_bin_count_V_1_vld_reg;

assign res_max_bin_count_t_1_fu_4624_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln476_5_fu_4533_p3 : select_ln476_11_fu_4583_p3);

assign res_max_bin_count_t_2_fu_4637_p3 = ((icmp_ln895_5_fu_2248_p2[0:0] === 1'b1) ? res_max_bin_count_t_s_reg_5587 : res_max_bin_count_t_1_reg_5603);

assign res_max_bin_count_t_s_fu_4600_p3 = ((icmp_ln895_125_fu_2240_p2[0:0] === 1'b1) ? select_ln476_2_fu_4508_p3 : select_ln476_8_fu_4558_p3);

assign res_max_bin_r_V = res_max_bin_r_V_1_data_reg;

assign res_max_bin_r_V_ap_vld = res_max_bin_r_V_1_vld_reg;

assign res_max_bin_r_t_V_1_fu_4616_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln476_4_fu_4525_p3 : select_ln476_10_fu_4575_p3);

assign res_max_bin_r_t_V_2_fu_4652_p3 = ((icmp_ln895_5_fu_2248_p2[0:0] === 1'b1) ? res_max_bin_r_t_V_reg_5582 : res_max_bin_r_t_V_1_reg_5598);

assign res_max_bin_r_t_V_fu_4592_p3 = ((icmp_ln895_125_fu_2240_p2[0:0] === 1'b1) ? select_ln476_1_fu_4500_p3 : select_ln476_7_fu_4550_p3);

assign res_max_bin_theta_V = res_max_bin_theta_V_1_data_reg;

assign res_max_bin_theta_V_ap_vld = res_max_bin_theta_V_1_vld_reg;

assign res_max_bin_theta_t_1_fu_4608_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln476_3_fu_4517_p3 : select_ln476_9_fu_4567_p3);

assign res_max_bin_theta_t_2_fu_4644_p3 = ((icmp_ln895_5_fu_2248_p2[0:0] === 1'b1) ? res_max_bin_theta_t_s_fu_4632_p3 : res_max_bin_theta_t_1_reg_5593);

assign res_max_bin_theta_t_s_fu_4632_p3 = ((icmp_ln895_125_reg_5577[0:0] === 1'b1) ? select_ln476_reg_5567 : select_ln476_6_reg_5572);

assign select_ln404_100_fu_3866_p3 = ((icmp_ln895_50_reg_4993[0:0] === 1'b1) ? 7'd114 : 7'd50);

assign select_ln404_101_fu_2652_p3 = ((icmp_ln895_50_fu_1852_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_50_V);

assign select_ln404_102_fu_3873_p3 = ((icmp_ln895_51_reg_4998[0:0] === 1'b1) ? 7'd115 : 7'd51);

assign select_ln404_103_fu_2660_p3 = ((icmp_ln895_51_fu_1858_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_51_V);

assign select_ln404_104_fu_3880_p3 = ((icmp_ln895_52_reg_5003[0:0] === 1'b1) ? 7'd116 : 7'd52);

assign select_ln404_105_fu_2668_p3 = ((icmp_ln895_52_fu_1864_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_52_V);

assign select_ln404_106_fu_3887_p3 = ((icmp_ln895_53_reg_5008[0:0] === 1'b1) ? 7'd117 : 7'd53);

assign select_ln404_107_fu_2676_p3 = ((icmp_ln895_53_fu_1870_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_53_V);

assign select_ln404_108_fu_3894_p3 = ((icmp_ln895_54_reg_5013[0:0] === 1'b1) ? 7'd118 : 7'd54);

assign select_ln404_109_fu_2684_p3 = ((icmp_ln895_54_fu_1876_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_54_V);

assign select_ln404_10_fu_3551_p3 = ((icmp_ln895_6_reg_4768[0:0] === 1'b1) ? 7'd69 : 7'd5);

assign select_ln404_110_fu_3901_p3 = ((icmp_ln895_55_reg_5018[0:0] === 1'b1) ? 7'd119 : 7'd55);

assign select_ln404_111_fu_2692_p3 = ((icmp_ln895_55_fu_1882_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_55_V);

assign select_ln404_112_fu_3908_p3 = ((icmp_ln895_56_reg_5023[0:0] === 1'b1) ? 7'd120 : 7'd56);

assign select_ln404_113_fu_2700_p3 = ((icmp_ln895_56_fu_1888_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_56_V);

assign select_ln404_114_fu_3915_p3 = ((icmp_ln895_57_reg_5028[0:0] === 1'b1) ? 7'd121 : 7'd57);

assign select_ln404_115_fu_2708_p3 = ((icmp_ln895_57_fu_1894_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_57_V);

assign select_ln404_116_fu_3922_p3 = ((icmp_ln895_58_reg_5033[0:0] === 1'b1) ? 7'd122 : 7'd58);

assign select_ln404_117_fu_2716_p3 = ((icmp_ln895_58_fu_1900_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_58_V);

assign select_ln404_118_fu_3929_p3 = ((icmp_ln895_59_reg_5038[0:0] === 1'b1) ? 7'd123 : 7'd59);

assign select_ln404_119_fu_2724_p3 = ((icmp_ln895_59_fu_1906_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_59_V);

assign select_ln404_11_fu_2292_p3 = ((icmp_ln895_6_fu_1582_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_5_V);

assign select_ln404_120_fu_3936_p3 = ((icmp_ln895_60_reg_5043[0:0] === 1'b1) ? 7'd124 : 7'd60);

assign select_ln404_121_fu_2732_p3 = ((icmp_ln895_60_fu_1912_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_60_V);

assign select_ln404_122_fu_3943_p3 = ((icmp_ln895_61_reg_5048[0:0] === 1'b1) ? 7'd125 : 7'd61);

assign select_ln404_123_fu_2740_p3 = ((icmp_ln895_61_fu_1918_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_61_V);

assign select_ln404_124_fu_3950_p3 = ((icmp_ln895_62_reg_5053[0:0] === 1'b1) ? 7'd126 : 7'd62);

assign select_ln404_125_fu_2748_p3 = ((icmp_ln895_62_fu_1924_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_62_V);

assign select_ln404_126_fu_3957_p3 = ((icmp_ln895_63_reg_5058[0:0] === 1'b1) ? 7'd127 : 7'd63);

assign select_ln404_127_fu_2756_p3 = ((icmp_ln895_63_fu_1930_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_63_V);

assign select_ln404_12_fu_3558_p3 = ((icmp_ln895_64_reg_4773[0:0] === 1'b1) ? 7'd70 : 7'd6);

assign select_ln404_13_fu_2300_p3 = ((icmp_ln895_64_fu_1588_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_6_V);

assign select_ln404_14_fu_3565_p3 = ((icmp_ln895_7_reg_4778[0:0] === 1'b1) ? 7'd71 : 7'd7);

assign select_ln404_15_fu_2308_p3 = ((icmp_ln895_7_fu_1594_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_7_V);

assign select_ln404_16_fu_3572_p3 = ((icmp_ln895_8_reg_4783[0:0] === 1'b1) ? 7'd72 : 7'd8);

assign select_ln404_17_fu_2316_p3 = ((icmp_ln895_8_fu_1600_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_8_V);

assign select_ln404_18_fu_3579_p3 = ((icmp_ln895_9_reg_4788[0:0] === 1'b1) ? 7'd73 : 7'd9);

assign select_ln404_19_fu_2324_p3 = ((icmp_ln895_9_fu_1606_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_9_V);

assign select_ln404_1_fu_2252_p3 = ((icmp_ln895_fu_1552_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_0_V);

assign select_ln404_20_fu_3586_p3 = ((icmp_ln895_10_reg_4793[0:0] === 1'b1) ? 7'd74 : 7'd10);

assign select_ln404_21_fu_2332_p3 = ((icmp_ln895_10_fu_1612_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_10_V);

assign select_ln404_22_fu_3593_p3 = ((icmp_ln895_11_reg_4798[0:0] === 1'b1) ? 7'd75 : 7'd11);

assign select_ln404_23_fu_2340_p3 = ((icmp_ln895_11_fu_1618_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_11_V);

assign select_ln404_24_fu_3600_p3 = ((icmp_ln895_12_reg_4803[0:0] === 1'b1) ? 7'd76 : 7'd12);

assign select_ln404_25_fu_2348_p3 = ((icmp_ln895_12_fu_1624_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_12_V);

assign select_ln404_26_fu_3607_p3 = ((icmp_ln895_13_reg_4808[0:0] === 1'b1) ? 7'd77 : 7'd13);

assign select_ln404_27_fu_2356_p3 = ((icmp_ln895_13_fu_1630_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_13_V);

assign select_ln404_28_fu_3614_p3 = ((icmp_ln895_14_reg_4813[0:0] === 1'b1) ? 7'd78 : 7'd14);

assign select_ln404_29_fu_2364_p3 = ((icmp_ln895_14_fu_1636_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_14_V);

assign select_ln404_2_fu_3523_p3 = ((icmp_ln895_1_reg_4748[0:0] === 1'b1) ? 7'd65 : 7'd1);

assign select_ln404_30_fu_3621_p3 = ((icmp_ln895_15_reg_4818[0:0] === 1'b1) ? 7'd79 : 7'd15);

assign select_ln404_31_fu_2372_p3 = ((icmp_ln895_15_fu_1642_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_15_V);

assign select_ln404_32_fu_3628_p3 = ((icmp_ln895_16_reg_4823[0:0] === 1'b1) ? 7'd80 : 7'd16);

assign select_ln404_33_fu_2380_p3 = ((icmp_ln895_16_fu_1648_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_16_V);

assign select_ln404_34_fu_3635_p3 = ((icmp_ln895_17_reg_4828[0:0] === 1'b1) ? 7'd81 : 7'd17);

assign select_ln404_35_fu_2388_p3 = ((icmp_ln895_17_fu_1654_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_17_V);

assign select_ln404_36_fu_3642_p3 = ((icmp_ln895_18_reg_4833[0:0] === 1'b1) ? 7'd82 : 7'd18);

assign select_ln404_37_fu_2396_p3 = ((icmp_ln895_18_fu_1660_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_18_V);

assign select_ln404_38_fu_3649_p3 = ((icmp_ln895_19_reg_4838[0:0] === 1'b1) ? 7'd83 : 7'd19);

assign select_ln404_39_fu_2404_p3 = ((icmp_ln895_19_fu_1666_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_19_V);

assign select_ln404_3_fu_2260_p3 = ((icmp_ln895_1_fu_1558_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_1_V);

assign select_ln404_40_fu_3656_p3 = ((icmp_ln895_20_reg_4843[0:0] === 1'b1) ? 7'd84 : 7'd20);

assign select_ln404_41_fu_2412_p3 = ((icmp_ln895_20_fu_1672_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_20_V);

assign select_ln404_42_fu_3663_p3 = ((icmp_ln895_21_reg_4848[0:0] === 1'b1) ? 7'd85 : 7'd21);

assign select_ln404_43_fu_2420_p3 = ((icmp_ln895_21_fu_1678_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_21_V);

assign select_ln404_44_fu_3670_p3 = ((icmp_ln895_22_reg_4853[0:0] === 1'b1) ? 7'd86 : 7'd22);

assign select_ln404_45_fu_2428_p3 = ((icmp_ln895_22_fu_1684_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_22_V);

assign select_ln404_46_fu_3677_p3 = ((icmp_ln895_23_reg_4858[0:0] === 1'b1) ? 7'd87 : 7'd23);

assign select_ln404_47_fu_2436_p3 = ((icmp_ln895_23_fu_1690_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_23_V);

assign select_ln404_48_fu_3684_p3 = ((icmp_ln895_24_reg_4863[0:0] === 1'b1) ? 7'd88 : 7'd24);

assign select_ln404_49_fu_2444_p3 = ((icmp_ln895_24_fu_1696_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_24_V);

assign select_ln404_4_fu_3530_p3 = ((icmp_ln895_2_reg_4753[0:0] === 1'b1) ? 7'd66 : 7'd2);

assign select_ln404_50_fu_3691_p3 = ((icmp_ln895_25_reg_4868[0:0] === 1'b1) ? 7'd89 : 7'd25);

assign select_ln404_51_fu_2452_p3 = ((icmp_ln895_25_fu_1702_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_25_V);

assign select_ln404_52_fu_3698_p3 = ((icmp_ln895_26_reg_4873[0:0] === 1'b1) ? 7'd90 : 7'd26);

assign select_ln404_53_fu_2460_p3 = ((icmp_ln895_26_fu_1708_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_26_V);

assign select_ln404_54_fu_3705_p3 = ((icmp_ln895_27_reg_4878[0:0] === 1'b1) ? 7'd91 : 7'd27);

assign select_ln404_55_fu_2468_p3 = ((icmp_ln895_27_fu_1714_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_27_V);

assign select_ln404_56_fu_3712_p3 = ((icmp_ln895_28_reg_4883[0:0] === 1'b1) ? 7'd92 : 7'd28);

assign select_ln404_57_fu_2476_p3 = ((icmp_ln895_28_fu_1720_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_28_V);

assign select_ln404_58_fu_3719_p3 = ((icmp_ln895_29_reg_4888[0:0] === 1'b1) ? 7'd93 : 7'd29);

assign select_ln404_59_fu_2484_p3 = ((icmp_ln895_29_fu_1726_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_29_V);

assign select_ln404_5_fu_2268_p3 = ((icmp_ln895_2_fu_1564_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_2_V);

assign select_ln404_60_fu_3726_p3 = ((icmp_ln895_30_reg_4893[0:0] === 1'b1) ? 7'd94 : 7'd30);

assign select_ln404_61_fu_2492_p3 = ((icmp_ln895_30_fu_1732_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_30_V);

assign select_ln404_62_fu_3733_p3 = ((icmp_ln895_31_reg_4898[0:0] === 1'b1) ? 7'd95 : 7'd31);

assign select_ln404_63_fu_2500_p3 = ((icmp_ln895_31_fu_1738_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_31_V);

assign select_ln404_64_fu_3740_p3 = ((icmp_ln895_32_reg_4903[0:0] === 1'b1) ? 7'd96 : 7'd32);

assign select_ln404_65_fu_2508_p3 = ((icmp_ln895_32_fu_1744_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_32_V);

assign select_ln404_66_fu_3747_p3 = ((icmp_ln895_33_reg_4908[0:0] === 1'b1) ? 7'd97 : 7'd33);

assign select_ln404_67_fu_2516_p3 = ((icmp_ln895_33_fu_1750_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_33_V);

assign select_ln404_68_fu_3754_p3 = ((icmp_ln895_34_reg_4913[0:0] === 1'b1) ? 7'd98 : 7'd34);

assign select_ln404_69_fu_2524_p3 = ((icmp_ln895_34_fu_1756_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_34_V);

assign select_ln404_6_fu_3537_p3 = ((icmp_ln895_3_reg_4758[0:0] === 1'b1) ? 7'd67 : 7'd3);

assign select_ln404_70_fu_3761_p3 = ((icmp_ln895_35_reg_4918[0:0] === 1'b1) ? 7'd99 : 7'd35);

assign select_ln404_71_fu_2532_p3 = ((icmp_ln895_35_fu_1762_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_35_V);

assign select_ln404_72_fu_3768_p3 = ((icmp_ln895_36_reg_4923[0:0] === 1'b1) ? 7'd100 : 7'd36);

assign select_ln404_73_fu_2540_p3 = ((icmp_ln895_36_fu_1768_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_36_V);

assign select_ln404_74_fu_3775_p3 = ((icmp_ln895_37_reg_4928[0:0] === 1'b1) ? 7'd101 : 7'd37);

assign select_ln404_75_fu_2548_p3 = ((icmp_ln895_37_fu_1774_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_37_V);

assign select_ln404_76_fu_3782_p3 = ((icmp_ln895_38_reg_4933[0:0] === 1'b1) ? 7'd102 : 7'd38);

assign select_ln404_77_fu_2556_p3 = ((icmp_ln895_38_fu_1780_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_38_V);

assign select_ln404_78_fu_3789_p3 = ((icmp_ln895_39_reg_4938[0:0] === 1'b1) ? 7'd103 : 7'd39);

assign select_ln404_79_fu_2564_p3 = ((icmp_ln895_39_fu_1786_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_39_V);

assign select_ln404_7_fu_2276_p3 = ((icmp_ln895_3_fu_1570_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_3_V);

assign select_ln404_80_fu_3796_p3 = ((icmp_ln895_40_reg_4943[0:0] === 1'b1) ? 7'd104 : 7'd40);

assign select_ln404_81_fu_2572_p3 = ((icmp_ln895_40_fu_1792_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_40_V);

assign select_ln404_82_fu_3803_p3 = ((icmp_ln895_41_reg_4948[0:0] === 1'b1) ? 7'd105 : 7'd41);

assign select_ln404_83_fu_2580_p3 = ((icmp_ln895_41_fu_1798_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_41_V);

assign select_ln404_84_fu_3810_p3 = ((icmp_ln895_42_reg_4953[0:0] === 1'b1) ? 7'd106 : 7'd42);

assign select_ln404_85_fu_2588_p3 = ((icmp_ln895_42_fu_1804_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_42_V);

assign select_ln404_86_fu_3817_p3 = ((icmp_ln895_43_reg_4958[0:0] === 1'b1) ? 7'd107 : 7'd43);

assign select_ln404_87_fu_2596_p3 = ((icmp_ln895_43_fu_1810_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_43_V);

assign select_ln404_88_fu_3824_p3 = ((icmp_ln895_44_reg_4963[0:0] === 1'b1) ? 7'd108 : 7'd44);

assign select_ln404_89_fu_2604_p3 = ((icmp_ln895_44_fu_1816_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_44_V);

assign select_ln404_8_fu_3544_p3 = ((icmp_ln895_4_reg_4763[0:0] === 1'b1) ? 7'd68 : 7'd4);

assign select_ln404_90_fu_3831_p3 = ((icmp_ln895_45_reg_4968[0:0] === 1'b1) ? 7'd109 : 7'd45);

assign select_ln404_91_fu_2612_p3 = ((icmp_ln895_45_fu_1822_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_45_V);

assign select_ln404_92_fu_3838_p3 = ((icmp_ln895_46_reg_4973[0:0] === 1'b1) ? 7'd110 : 7'd46);

assign select_ln404_93_fu_2620_p3 = ((icmp_ln895_46_fu_1828_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_46_V);

assign select_ln404_94_fu_3845_p3 = ((icmp_ln895_47_reg_4978[0:0] === 1'b1) ? 7'd111 : 7'd47);

assign select_ln404_95_fu_2628_p3 = ((icmp_ln895_47_fu_1834_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_47_V);

assign select_ln404_96_fu_3852_p3 = ((icmp_ln895_48_reg_4983[0:0] === 1'b1) ? 7'd112 : 7'd48);

assign select_ln404_97_fu_2636_p3 = ((icmp_ln895_48_fu_1840_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_48_V);

assign select_ln404_98_fu_3859_p3 = ((icmp_ln895_49_reg_4988[0:0] === 1'b1) ? 7'd113 : 7'd49);

assign select_ln404_99_fu_2644_p3 = ((icmp_ln895_49_fu_1846_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_49_V);

assign select_ln404_9_fu_2284_p3 = ((icmp_ln895_4_fu_1576_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_4_V);

assign select_ln404_fu_3516_p3 = ((icmp_ln895_reg_4743[0:0] === 1'b1) ? 7'd64 : 7'd0);

assign select_ln422_10_fu_2815_p3 = ((icmp_ln895_68_fu_1954_p2[0:0] === 1'b1) ? select_ln404_7_fu_2276_p3 : select_ln404_71_fu_2532_p3);

assign select_ln422_11_fu_2823_p3 = ((icmp_ln895_68_fu_1954_p2[0:0] === 1'b1) ? max_bin_count_3_V : max_bin_count_35_V);

assign select_ln422_12_fu_3992_p3 = ((icmp_ln895_69_reg_5103[0:0] === 1'b1) ? select_ln404_8_fu_3544_p3 : select_ln404_72_fu_3768_p3);

assign select_ln422_13_fu_2832_p3 = ((icmp_ln895_69_fu_1960_p2[0:0] === 1'b1) ? select_ln404_9_fu_2284_p3 : select_ln404_73_fu_2540_p3);

assign select_ln422_14_fu_2840_p3 = ((icmp_ln895_69_fu_1960_p2[0:0] === 1'b1) ? max_bin_count_4_V : max_bin_count_36_V);

assign select_ln422_15_fu_3999_p3 = ((icmp_ln895_70_reg_5113[0:0] === 1'b1) ? select_ln404_10_fu_3551_p3 : select_ln404_74_fu_3775_p3);

assign select_ln422_16_fu_2849_p3 = ((icmp_ln895_70_fu_1966_p2[0:0] === 1'b1) ? select_ln404_11_fu_2292_p3 : select_ln404_75_fu_2548_p3);

assign select_ln422_17_fu_2857_p3 = ((icmp_ln895_70_fu_1966_p2[0:0] === 1'b1) ? max_bin_count_5_V : max_bin_count_37_V);

assign select_ln422_18_fu_4006_p3 = ((icmp_ln895_71_reg_5123[0:0] === 1'b1) ? select_ln404_12_fu_3558_p3 : select_ln404_76_fu_3782_p3);

assign select_ln422_19_fu_2866_p3 = ((icmp_ln895_71_fu_1972_p2[0:0] === 1'b1) ? select_ln404_13_fu_2300_p3 : select_ln404_77_fu_2556_p3);

assign select_ln422_1_fu_2764_p3 = ((icmp_ln895_65_fu_1936_p2[0:0] === 1'b1) ? select_ln404_1_fu_2252_p3 : select_ln404_65_fu_2508_p3);

assign select_ln422_20_fu_2874_p3 = ((icmp_ln895_71_fu_1972_p2[0:0] === 1'b1) ? max_bin_count_6_V : max_bin_count_38_V);

assign select_ln422_21_fu_4013_p3 = ((icmp_ln895_72_reg_5133[0:0] === 1'b1) ? select_ln404_14_fu_3565_p3 : select_ln404_78_fu_3789_p3);

assign select_ln422_22_fu_2883_p3 = ((icmp_ln895_72_fu_1978_p2[0:0] === 1'b1) ? select_ln404_15_fu_2308_p3 : select_ln404_79_fu_2564_p3);

assign select_ln422_23_fu_2891_p3 = ((icmp_ln895_72_fu_1978_p2[0:0] === 1'b1) ? max_bin_count_7_V : max_bin_count_39_V);

assign select_ln422_24_fu_4020_p3 = ((icmp_ln895_73_reg_5143[0:0] === 1'b1) ? select_ln404_16_fu_3572_p3 : select_ln404_80_fu_3796_p3);

assign select_ln422_25_fu_2900_p3 = ((icmp_ln895_73_fu_1984_p2[0:0] === 1'b1) ? select_ln404_17_fu_2316_p3 : select_ln404_81_fu_2572_p3);

assign select_ln422_26_fu_2908_p3 = ((icmp_ln895_73_fu_1984_p2[0:0] === 1'b1) ? max_bin_count_8_V : max_bin_count_40_V);

assign select_ln422_27_fu_4027_p3 = ((icmp_ln895_74_reg_5148[0:0] === 1'b1) ? select_ln404_18_fu_3579_p3 : select_ln404_82_fu_3803_p3);

assign select_ln422_28_fu_2917_p3 = ((icmp_ln895_74_fu_1990_p2[0:0] === 1'b1) ? select_ln404_19_fu_2324_p3 : select_ln404_83_fu_2580_p3);

assign select_ln422_29_fu_2925_p3 = ((icmp_ln895_74_fu_1990_p2[0:0] === 1'b1) ? max_bin_count_9_V : max_bin_count_41_V);

assign select_ln422_2_fu_2772_p3 = ((icmp_ln895_65_fu_1936_p2[0:0] === 1'b1) ? max_bin_count_0_V : max_bin_count_32_V);

assign select_ln422_30_fu_4034_p3 = ((icmp_ln895_75_reg_5153[0:0] === 1'b1) ? select_ln404_20_fu_3586_p3 : select_ln404_84_fu_3810_p3);

assign select_ln422_31_fu_2934_p3 = ((icmp_ln895_75_fu_1996_p2[0:0] === 1'b1) ? select_ln404_21_fu_2332_p3 : select_ln404_85_fu_2588_p3);

assign select_ln422_32_fu_2942_p3 = ((icmp_ln895_75_fu_1996_p2[0:0] === 1'b1) ? max_bin_count_10_V : max_bin_count_42_V);

assign select_ln422_33_fu_4041_p3 = ((icmp_ln895_76_reg_5158[0:0] === 1'b1) ? select_ln404_22_fu_3593_p3 : select_ln404_86_fu_3817_p3);

assign select_ln422_34_fu_2951_p3 = ((icmp_ln895_76_fu_2002_p2[0:0] === 1'b1) ? select_ln404_23_fu_2340_p3 : select_ln404_87_fu_2596_p3);

assign select_ln422_35_fu_2959_p3 = ((icmp_ln895_76_fu_2002_p2[0:0] === 1'b1) ? max_bin_count_11_V : max_bin_count_43_V);

assign select_ln422_36_fu_4048_p3 = ((icmp_ln895_77_reg_5163[0:0] === 1'b1) ? select_ln404_24_fu_3600_p3 : select_ln404_88_fu_3824_p3);

assign select_ln422_37_fu_2968_p3 = ((icmp_ln895_77_fu_2008_p2[0:0] === 1'b1) ? select_ln404_25_fu_2348_p3 : select_ln404_89_fu_2604_p3);

assign select_ln422_38_fu_2976_p3 = ((icmp_ln895_77_fu_2008_p2[0:0] === 1'b1) ? max_bin_count_12_V : max_bin_count_44_V);

assign select_ln422_39_fu_4055_p3 = ((icmp_ln895_78_reg_5168[0:0] === 1'b1) ? select_ln404_26_fu_3607_p3 : select_ln404_90_fu_3831_p3);

assign select_ln422_3_fu_3971_p3 = ((icmp_ln895_66_reg_5073[0:0] === 1'b1) ? select_ln404_2_fu_3523_p3 : select_ln404_66_fu_3747_p3);

assign select_ln422_40_fu_2985_p3 = ((icmp_ln895_78_fu_2014_p2[0:0] === 1'b1) ? select_ln404_27_fu_2356_p3 : select_ln404_91_fu_2612_p3);

assign select_ln422_41_fu_2993_p3 = ((icmp_ln895_78_fu_2014_p2[0:0] === 1'b1) ? max_bin_count_13_V : max_bin_count_45_V);

assign select_ln422_42_fu_4062_p3 = ((icmp_ln895_79_reg_5173[0:0] === 1'b1) ? select_ln404_28_fu_3614_p3 : select_ln404_92_fu_3838_p3);

assign select_ln422_43_fu_3002_p3 = ((icmp_ln895_79_fu_2020_p2[0:0] === 1'b1) ? select_ln404_29_fu_2364_p3 : select_ln404_93_fu_2620_p3);

assign select_ln422_44_fu_3010_p3 = ((icmp_ln895_79_fu_2020_p2[0:0] === 1'b1) ? max_bin_count_14_V : max_bin_count_46_V);

assign select_ln422_45_fu_4069_p3 = ((icmp_ln895_80_reg_5178[0:0] === 1'b1) ? select_ln404_30_fu_3621_p3 : select_ln404_94_fu_3845_p3);

assign select_ln422_46_fu_3019_p3 = ((icmp_ln895_80_fu_2026_p2[0:0] === 1'b1) ? select_ln404_31_fu_2372_p3 : select_ln404_95_fu_2628_p3);

assign select_ln422_47_fu_3027_p3 = ((icmp_ln895_80_fu_2026_p2[0:0] === 1'b1) ? max_bin_count_15_V : max_bin_count_47_V);

assign select_ln422_48_fu_4076_p3 = ((icmp_ln895_81_reg_5183[0:0] === 1'b1) ? select_ln404_32_fu_3628_p3 : select_ln404_96_fu_3852_p3);

assign select_ln422_49_fu_3036_p3 = ((icmp_ln895_81_fu_2032_p2[0:0] === 1'b1) ? select_ln404_33_fu_2380_p3 : select_ln404_97_fu_2636_p3);

assign select_ln422_4_fu_2781_p3 = ((icmp_ln895_66_fu_1942_p2[0:0] === 1'b1) ? select_ln404_3_fu_2260_p3 : select_ln404_67_fu_2516_p3);

assign select_ln422_50_fu_3044_p3 = ((icmp_ln895_81_fu_2032_p2[0:0] === 1'b1) ? max_bin_count_16_V : max_bin_count_48_V);

assign select_ln422_51_fu_4083_p3 = ((icmp_ln895_82_reg_5193[0:0] === 1'b1) ? select_ln404_34_fu_3635_p3 : select_ln404_98_fu_3859_p3);

assign select_ln422_52_fu_3053_p3 = ((icmp_ln895_82_fu_2038_p2[0:0] === 1'b1) ? select_ln404_35_fu_2388_p3 : select_ln404_99_fu_2644_p3);

assign select_ln422_53_fu_3061_p3 = ((icmp_ln895_82_fu_2038_p2[0:0] === 1'b1) ? max_bin_count_17_V : max_bin_count_49_V);

assign select_ln422_54_fu_4090_p3 = ((icmp_ln895_83_reg_5203[0:0] === 1'b1) ? select_ln404_36_fu_3642_p3 : select_ln404_100_fu_3866_p3);

assign select_ln422_55_fu_3070_p3 = ((icmp_ln895_83_fu_2044_p2[0:0] === 1'b1) ? select_ln404_37_fu_2396_p3 : select_ln404_101_fu_2652_p3);

assign select_ln422_56_fu_3078_p3 = ((icmp_ln895_83_fu_2044_p2[0:0] === 1'b1) ? max_bin_count_18_V : max_bin_count_50_V);

assign select_ln422_57_fu_4097_p3 = ((icmp_ln895_84_reg_5213[0:0] === 1'b1) ? select_ln404_38_fu_3649_p3 : select_ln404_102_fu_3873_p3);

assign select_ln422_58_fu_3087_p3 = ((icmp_ln895_84_fu_2050_p2[0:0] === 1'b1) ? select_ln404_39_fu_2404_p3 : select_ln404_103_fu_2660_p3);

assign select_ln422_59_fu_3095_p3 = ((icmp_ln895_84_fu_2050_p2[0:0] === 1'b1) ? max_bin_count_19_V : max_bin_count_51_V);

assign select_ln422_5_fu_2789_p3 = ((icmp_ln895_66_fu_1942_p2[0:0] === 1'b1) ? max_bin_count_1_V : max_bin_count_33_V);

assign select_ln422_60_fu_4104_p3 = ((icmp_ln895_85_reg_5223[0:0] === 1'b1) ? select_ln404_40_fu_3656_p3 : select_ln404_104_fu_3880_p3);

assign select_ln422_61_fu_3104_p3 = ((icmp_ln895_85_fu_2056_p2[0:0] === 1'b1) ? select_ln404_41_fu_2412_p3 : select_ln404_105_fu_2668_p3);

assign select_ln422_62_fu_3112_p3 = ((icmp_ln895_85_fu_2056_p2[0:0] === 1'b1) ? max_bin_count_20_V : max_bin_count_52_V);

assign select_ln422_63_fu_4111_p3 = ((icmp_ln895_86_reg_5233[0:0] === 1'b1) ? select_ln404_42_fu_3663_p3 : select_ln404_106_fu_3887_p3);

assign select_ln422_64_fu_3121_p3 = ((icmp_ln895_86_fu_2062_p2[0:0] === 1'b1) ? select_ln404_43_fu_2420_p3 : select_ln404_107_fu_2676_p3);

assign select_ln422_65_fu_3129_p3 = ((icmp_ln895_86_fu_2062_p2[0:0] === 1'b1) ? max_bin_count_21_V : max_bin_count_53_V);

assign select_ln422_66_fu_4118_p3 = ((icmp_ln895_87_reg_5243[0:0] === 1'b1) ? select_ln404_44_fu_3670_p3 : select_ln404_108_fu_3894_p3);

assign select_ln422_67_fu_3138_p3 = ((icmp_ln895_87_fu_2068_p2[0:0] === 1'b1) ? select_ln404_45_fu_2428_p3 : select_ln404_109_fu_2684_p3);

assign select_ln422_68_fu_3146_p3 = ((icmp_ln895_87_fu_2068_p2[0:0] === 1'b1) ? max_bin_count_22_V : max_bin_count_54_V);

assign select_ln422_69_fu_4125_p3 = ((icmp_ln895_88_reg_5253[0:0] === 1'b1) ? select_ln404_46_fu_3677_p3 : select_ln404_110_fu_3901_p3);

assign select_ln422_6_fu_3978_p3 = ((icmp_ln895_67_reg_5083[0:0] === 1'b1) ? select_ln404_4_fu_3530_p3 : select_ln404_68_fu_3754_p3);

assign select_ln422_70_fu_3155_p3 = ((icmp_ln895_88_fu_2074_p2[0:0] === 1'b1) ? select_ln404_47_fu_2436_p3 : select_ln404_111_fu_2692_p3);

assign select_ln422_71_fu_3163_p3 = ((icmp_ln895_88_fu_2074_p2[0:0] === 1'b1) ? max_bin_count_23_V : max_bin_count_55_V);

assign select_ln422_72_fu_4132_p3 = ((icmp_ln895_89_reg_5263[0:0] === 1'b1) ? select_ln404_48_fu_3684_p3 : select_ln404_112_fu_3908_p3);

assign select_ln422_73_fu_3172_p3 = ((icmp_ln895_89_fu_2080_p2[0:0] === 1'b1) ? select_ln404_49_fu_2444_p3 : select_ln404_113_fu_2700_p3);

assign select_ln422_74_fu_3180_p3 = ((icmp_ln895_89_fu_2080_p2[0:0] === 1'b1) ? max_bin_count_24_V : max_bin_count_56_V);

assign select_ln422_75_fu_4139_p3 = ((icmp_ln895_90_reg_5268[0:0] === 1'b1) ? select_ln404_50_fu_3691_p3 : select_ln404_114_fu_3915_p3);

assign select_ln422_76_fu_3189_p3 = ((icmp_ln895_90_fu_2086_p2[0:0] === 1'b1) ? select_ln404_51_fu_2452_p3 : select_ln404_115_fu_2708_p3);

assign select_ln422_77_fu_3197_p3 = ((icmp_ln895_90_fu_2086_p2[0:0] === 1'b1) ? max_bin_count_25_V : max_bin_count_57_V);

assign select_ln422_78_fu_4146_p3 = ((icmp_ln895_91_reg_5273[0:0] === 1'b1) ? select_ln404_52_fu_3698_p3 : select_ln404_116_fu_3922_p3);

assign select_ln422_79_fu_3206_p3 = ((icmp_ln895_91_fu_2092_p2[0:0] === 1'b1) ? select_ln404_53_fu_2460_p3 : select_ln404_117_fu_2716_p3);

assign select_ln422_7_fu_2798_p3 = ((icmp_ln895_67_fu_1948_p2[0:0] === 1'b1) ? select_ln404_5_fu_2268_p3 : select_ln404_69_fu_2524_p3);

assign select_ln422_80_fu_3214_p3 = ((icmp_ln895_91_fu_2092_p2[0:0] === 1'b1) ? max_bin_count_26_V : max_bin_count_58_V);

assign select_ln422_81_fu_4153_p3 = ((icmp_ln895_92_reg_5278[0:0] === 1'b1) ? select_ln404_54_fu_3705_p3 : select_ln404_118_fu_3929_p3);

assign select_ln422_82_fu_3223_p3 = ((icmp_ln895_92_fu_2098_p2[0:0] === 1'b1) ? select_ln404_55_fu_2468_p3 : select_ln404_119_fu_2724_p3);

assign select_ln422_83_fu_3231_p3 = ((icmp_ln895_92_fu_2098_p2[0:0] === 1'b1) ? max_bin_count_27_V : max_bin_count_59_V);

assign select_ln422_84_fu_4160_p3 = ((icmp_ln895_93_reg_5283[0:0] === 1'b1) ? select_ln404_56_fu_3712_p3 : select_ln404_120_fu_3936_p3);

assign select_ln422_85_fu_3240_p3 = ((icmp_ln895_93_fu_2104_p2[0:0] === 1'b1) ? select_ln404_57_fu_2476_p3 : select_ln404_121_fu_2732_p3);

assign select_ln422_86_fu_3248_p3 = ((icmp_ln895_93_fu_2104_p2[0:0] === 1'b1) ? max_bin_count_28_V : max_bin_count_60_V);

assign select_ln422_87_fu_4167_p3 = ((icmp_ln895_94_reg_5288[0:0] === 1'b1) ? select_ln404_58_fu_3719_p3 : select_ln404_122_fu_3943_p3);

assign select_ln422_88_fu_3257_p3 = ((icmp_ln895_94_fu_2110_p2[0:0] === 1'b1) ? select_ln404_59_fu_2484_p3 : select_ln404_123_fu_2740_p3);

assign select_ln422_89_fu_3265_p3 = ((icmp_ln895_94_fu_2110_p2[0:0] === 1'b1) ? max_bin_count_29_V : max_bin_count_61_V);

assign select_ln422_8_fu_2806_p3 = ((icmp_ln895_67_fu_1948_p2[0:0] === 1'b1) ? max_bin_count_2_V : max_bin_count_34_V);

assign select_ln422_90_fu_4174_p3 = ((icmp_ln895_95_reg_5293[0:0] === 1'b1) ? select_ln404_60_fu_3726_p3 : select_ln404_124_fu_3950_p3);

assign select_ln422_91_fu_3274_p3 = ((icmp_ln895_95_fu_2116_p2[0:0] === 1'b1) ? select_ln404_61_fu_2492_p3 : select_ln404_125_fu_2748_p3);

assign select_ln422_92_fu_3282_p3 = ((icmp_ln895_95_fu_2116_p2[0:0] === 1'b1) ? max_bin_count_30_V : max_bin_count_62_V);

assign select_ln422_93_fu_4181_p3 = ((icmp_ln895_96_reg_5298[0:0] === 1'b1) ? select_ln404_62_fu_3733_p3 : select_ln404_126_fu_3957_p3);

assign select_ln422_94_fu_3291_p3 = ((icmp_ln895_96_fu_2122_p2[0:0] === 1'b1) ? select_ln404_63_fu_2500_p3 : select_ln404_127_fu_2756_p3);

assign select_ln422_95_fu_3299_p3 = ((icmp_ln895_96_fu_2122_p2[0:0] === 1'b1) ? max_bin_count_31_V : max_bin_count_63_V);

assign select_ln422_9_fu_3985_p3 = ((icmp_ln895_68_reg_5093[0:0] === 1'b1) ? select_ln404_6_fu_3537_p3 : select_ln404_70_fu_3761_p3);

assign select_ln422_fu_3964_p3 = ((icmp_ln895_65_reg_5063[0:0] === 1'b1) ? select_ln404_fu_3516_p3 : select_ln404_64_fu_3740_p3);

assign select_ln440_10_fu_4231_p3 = ((icmp_ln895_100_reg_5336[0:0] === 1'b1) ? select_ln422_10_reg_5098 : select_ln422_58_reg_5218);

assign select_ln440_11_fu_3335_p3 = ((icmp_ln895_100_fu_2140_p2[0:0] === 1'b1) ? select_ln422_11_fu_2823_p3 : select_ln422_59_fu_3095_p3);

assign select_ln440_12_fu_4236_p3 = ((icmp_ln895_101_reg_5347[0:0] === 1'b1) ? select_ln422_12_fu_3992_p3 : select_ln422_60_fu_4104_p3);

assign select_ln440_13_fu_4243_p3 = ((icmp_ln895_101_reg_5347[0:0] === 1'b1) ? select_ln422_13_reg_5108 : select_ln422_61_reg_5228);

assign select_ln440_14_fu_3344_p3 = ((icmp_ln895_101_fu_2144_p2[0:0] === 1'b1) ? select_ln422_14_fu_2840_p3 : select_ln422_62_fu_3112_p3);

assign select_ln440_15_fu_4248_p3 = ((icmp_ln895_102_reg_5358[0:0] === 1'b1) ? select_ln422_15_fu_3999_p3 : select_ln422_63_fu_4111_p3);

assign select_ln440_16_fu_4255_p3 = ((icmp_ln895_102_reg_5358[0:0] === 1'b1) ? select_ln422_16_reg_5118 : select_ln422_64_reg_5238);

assign select_ln440_17_fu_3353_p3 = ((icmp_ln895_102_fu_2148_p2[0:0] === 1'b1) ? select_ln422_17_fu_2857_p3 : select_ln422_65_fu_3129_p3);

assign select_ln440_18_fu_4260_p3 = ((icmp_ln895_103_reg_5369[0:0] === 1'b1) ? select_ln422_18_fu_4006_p3 : select_ln422_66_fu_4118_p3);

assign select_ln440_19_fu_4267_p3 = ((icmp_ln895_103_reg_5369[0:0] === 1'b1) ? select_ln422_19_reg_5128 : select_ln422_67_reg_5248);

assign select_ln440_1_fu_4195_p3 = ((icmp_ln895_97_reg_5303[0:0] === 1'b1) ? select_ln422_1_reg_5068 : select_ln422_49_reg_5188);

assign select_ln440_20_fu_3362_p3 = ((icmp_ln895_103_fu_2152_p2[0:0] === 1'b1) ? select_ln422_20_fu_2874_p3 : select_ln422_68_fu_3146_p3);

assign select_ln440_21_fu_4272_p3 = ((icmp_ln895_104_reg_5380[0:0] === 1'b1) ? select_ln422_21_fu_4013_p3 : select_ln422_69_fu_4125_p3);

assign select_ln440_22_fu_4279_p3 = ((icmp_ln895_104_reg_5380[0:0] === 1'b1) ? select_ln422_22_reg_5138 : select_ln422_70_reg_5258);

assign select_ln440_23_fu_3371_p3 = ((icmp_ln895_104_fu_2156_p2[0:0] === 1'b1) ? select_ln422_23_fu_2891_p3 : select_ln422_71_fu_3163_p3);

assign select_ln440_24_fu_4284_p3 = ((icmp_ln895_105_reg_5391[0:0] === 1'b1) ? select_ln422_24_fu_4020_p3 : select_ln422_72_fu_4132_p3);

assign select_ln440_25_fu_3380_p3 = ((icmp_ln895_105_fu_2160_p2[0:0] === 1'b1) ? select_ln422_25_fu_2900_p3 : select_ln422_73_fu_3172_p3);

assign select_ln440_26_fu_3388_p3 = ((icmp_ln895_105_fu_2160_p2[0:0] === 1'b1) ? select_ln422_26_fu_2908_p3 : select_ln422_74_fu_3180_p3);

assign select_ln440_27_fu_4291_p3 = ((icmp_ln895_106_reg_5406[0:0] === 1'b1) ? select_ln422_27_fu_4027_p3 : select_ln422_75_fu_4139_p3);

assign select_ln440_28_fu_3397_p3 = ((icmp_ln895_106_fu_2164_p2[0:0] === 1'b1) ? select_ln422_28_fu_2917_p3 : select_ln422_76_fu_3189_p3);

assign select_ln440_29_fu_3405_p3 = ((icmp_ln895_106_fu_2164_p2[0:0] === 1'b1) ? select_ln422_29_fu_2925_p3 : select_ln422_77_fu_3197_p3);

assign select_ln440_2_fu_3308_p3 = ((icmp_ln895_97_fu_2128_p2[0:0] === 1'b1) ? select_ln422_2_fu_2772_p3 : select_ln422_50_fu_3044_p3);

assign select_ln440_30_fu_4298_p3 = ((icmp_ln895_107_reg_5421[0:0] === 1'b1) ? select_ln422_30_fu_4034_p3 : select_ln422_78_fu_4146_p3);

assign select_ln440_31_fu_3414_p3 = ((icmp_ln895_107_fu_2168_p2[0:0] === 1'b1) ? select_ln422_31_fu_2934_p3 : select_ln422_79_fu_3206_p3);

assign select_ln440_32_fu_3422_p3 = ((icmp_ln895_107_fu_2168_p2[0:0] === 1'b1) ? select_ln422_32_fu_2942_p3 : select_ln422_80_fu_3214_p3);

assign select_ln440_33_fu_4305_p3 = ((icmp_ln895_108_reg_5436[0:0] === 1'b1) ? select_ln422_33_fu_4041_p3 : select_ln422_81_fu_4153_p3);

assign select_ln440_34_fu_3431_p3 = ((icmp_ln895_108_fu_2172_p2[0:0] === 1'b1) ? select_ln422_34_fu_2951_p3 : select_ln422_82_fu_3223_p3);

assign select_ln440_35_fu_3439_p3 = ((icmp_ln895_108_fu_2172_p2[0:0] === 1'b1) ? select_ln422_35_fu_2959_p3 : select_ln422_83_fu_3231_p3);

assign select_ln440_36_fu_4312_p3 = ((icmp_ln895_109_reg_5451[0:0] === 1'b1) ? select_ln422_36_fu_4048_p3 : select_ln422_84_fu_4160_p3);

assign select_ln440_37_fu_3448_p3 = ((icmp_ln895_109_fu_2176_p2[0:0] === 1'b1) ? select_ln422_37_fu_2968_p3 : select_ln422_85_fu_3240_p3);

assign select_ln440_38_fu_3456_p3 = ((icmp_ln895_109_fu_2176_p2[0:0] === 1'b1) ? select_ln422_38_fu_2976_p3 : select_ln422_86_fu_3248_p3);

assign select_ln440_39_fu_4319_p3 = ((icmp_ln895_110_reg_5466[0:0] === 1'b1) ? select_ln422_39_fu_4055_p3 : select_ln422_87_fu_4167_p3);

assign select_ln440_3_fu_4200_p3 = ((icmp_ln895_98_reg_5314[0:0] === 1'b1) ? select_ln422_3_fu_3971_p3 : select_ln422_51_fu_4083_p3);

assign select_ln440_40_fu_3465_p3 = ((icmp_ln895_110_fu_2180_p2[0:0] === 1'b1) ? select_ln422_40_fu_2985_p3 : select_ln422_88_fu_3257_p3);

assign select_ln440_41_fu_3473_p3 = ((icmp_ln895_110_fu_2180_p2[0:0] === 1'b1) ? select_ln422_41_fu_2993_p3 : select_ln422_89_fu_3265_p3);

assign select_ln440_42_fu_4326_p3 = ((icmp_ln895_111_reg_5481[0:0] === 1'b1) ? select_ln422_42_fu_4062_p3 : select_ln422_90_fu_4174_p3);

assign select_ln440_43_fu_3482_p3 = ((icmp_ln895_111_fu_2184_p2[0:0] === 1'b1) ? select_ln422_43_fu_3002_p3 : select_ln422_91_fu_3274_p3);

assign select_ln440_44_fu_3490_p3 = ((icmp_ln895_111_fu_2184_p2[0:0] === 1'b1) ? select_ln422_44_fu_3010_p3 : select_ln422_92_fu_3282_p3);

assign select_ln440_45_fu_4333_p3 = ((icmp_ln895_112_reg_5496[0:0] === 1'b1) ? select_ln422_45_fu_4069_p3 : select_ln422_93_fu_4181_p3);

assign select_ln440_46_fu_3499_p3 = ((icmp_ln895_112_fu_2188_p2[0:0] === 1'b1) ? select_ln422_46_fu_3019_p3 : select_ln422_94_fu_3291_p3);

assign select_ln440_47_fu_3507_p3 = ((icmp_ln895_112_fu_2188_p2[0:0] === 1'b1) ? select_ln422_47_fu_3027_p3 : select_ln422_95_fu_3299_p3);

assign select_ln440_4_fu_4207_p3 = ((icmp_ln895_98_reg_5314[0:0] === 1'b1) ? select_ln422_4_reg_5078 : select_ln422_52_reg_5198);

assign select_ln440_5_fu_3317_p3 = ((icmp_ln895_98_fu_2132_p2[0:0] === 1'b1) ? select_ln422_5_fu_2789_p3 : select_ln422_53_fu_3061_p3);

assign select_ln440_6_fu_4212_p3 = ((icmp_ln895_99_reg_5325[0:0] === 1'b1) ? select_ln422_6_fu_3978_p3 : select_ln422_54_fu_4090_p3);

assign select_ln440_7_fu_4219_p3 = ((icmp_ln895_99_reg_5325[0:0] === 1'b1) ? select_ln422_7_reg_5088 : select_ln422_55_reg_5208);

assign select_ln440_8_fu_3326_p3 = ((icmp_ln895_99_fu_2136_p2[0:0] === 1'b1) ? select_ln422_8_fu_2806_p3 : select_ln422_56_fu_3078_p3);

assign select_ln440_9_fu_4224_p3 = ((icmp_ln895_100_reg_5336[0:0] === 1'b1) ? select_ln422_9_fu_3985_p3 : select_ln422_57_fu_4097_p3);

assign select_ln440_fu_4188_p3 = ((icmp_ln895_97_reg_5303[0:0] === 1'b1) ? select_ln422_fu_3964_p3 : select_ln422_48_fu_4076_p3);

assign select_ln458_10_fu_4404_p3 = ((icmp_ln895_116_reg_5532[0:0] === 1'b1) ? select_ln440_10_fu_4231_p3 : select_ln440_34_reg_5441);

assign select_ln458_11_fu_4410_p3 = ((icmp_ln895_116_reg_5532[0:0] === 1'b1) ? select_ln440_11_reg_5342 : select_ln440_35_reg_5446);

assign select_ln458_12_fu_4416_p3 = ((icmp_ln895_117_reg_5539[0:0] === 1'b1) ? select_ln440_12_fu_4236_p3 : select_ln440_36_fu_4312_p3);

assign select_ln458_13_fu_4423_p3 = ((icmp_ln895_117_reg_5539[0:0] === 1'b1) ? select_ln440_13_fu_4243_p3 : select_ln440_37_reg_5456);

assign select_ln458_14_fu_4429_p3 = ((icmp_ln895_117_reg_5539[0:0] === 1'b1) ? select_ln440_14_reg_5353 : select_ln440_38_reg_5461);

assign select_ln458_15_fu_4435_p3 = ((icmp_ln895_118_reg_5546[0:0] === 1'b1) ? select_ln440_15_fu_4248_p3 : select_ln440_39_fu_4319_p3);

assign select_ln458_16_fu_4442_p3 = ((icmp_ln895_118_reg_5546[0:0] === 1'b1) ? select_ln440_16_fu_4255_p3 : select_ln440_40_reg_5471);

assign select_ln458_17_fu_4448_p3 = ((icmp_ln895_118_reg_5546[0:0] === 1'b1) ? select_ln440_17_reg_5364 : select_ln440_41_reg_5476);

assign select_ln458_18_fu_4454_p3 = ((icmp_ln895_119_reg_5553[0:0] === 1'b1) ? select_ln440_18_fu_4260_p3 : select_ln440_42_fu_4326_p3);

assign select_ln458_19_fu_4461_p3 = ((icmp_ln895_119_reg_5553[0:0] === 1'b1) ? select_ln440_19_fu_4267_p3 : select_ln440_43_reg_5486);

assign select_ln458_1_fu_4347_p3 = ((icmp_ln895_113_reg_5511[0:0] === 1'b1) ? select_ln440_1_fu_4195_p3 : select_ln440_25_reg_5396);

assign select_ln458_20_fu_4467_p3 = ((icmp_ln895_119_reg_5553[0:0] === 1'b1) ? select_ln440_20_reg_5375 : select_ln440_44_reg_5491);

assign select_ln458_21_fu_4473_p3 = ((icmp_ln895_120_reg_5560[0:0] === 1'b1) ? select_ln440_21_fu_4272_p3 : select_ln440_45_fu_4333_p3);

assign select_ln458_22_fu_4480_p3 = ((icmp_ln895_120_reg_5560[0:0] === 1'b1) ? select_ln440_22_fu_4279_p3 : select_ln440_46_reg_5501);

assign select_ln458_23_fu_4486_p3 = ((icmp_ln895_120_reg_5560[0:0] === 1'b1) ? select_ln440_23_reg_5386 : select_ln440_47_reg_5506);

assign select_ln458_2_fu_4353_p3 = ((icmp_ln895_113_reg_5511[0:0] === 1'b1) ? select_ln440_2_reg_5309 : select_ln440_26_reg_5401);

assign select_ln458_3_fu_4359_p3 = ((icmp_ln895_114_reg_5518[0:0] === 1'b1) ? select_ln440_3_fu_4200_p3 : select_ln440_27_fu_4291_p3);

assign select_ln458_4_fu_4366_p3 = ((icmp_ln895_114_reg_5518[0:0] === 1'b1) ? select_ln440_4_fu_4207_p3 : select_ln440_28_reg_5411);

assign select_ln458_5_fu_4372_p3 = ((icmp_ln895_114_reg_5518[0:0] === 1'b1) ? select_ln440_5_reg_5320 : select_ln440_29_reg_5416);

assign select_ln458_6_fu_4378_p3 = ((icmp_ln895_115_reg_5525[0:0] === 1'b1) ? select_ln440_6_fu_4212_p3 : select_ln440_30_fu_4298_p3);

assign select_ln458_7_fu_4385_p3 = ((icmp_ln895_115_reg_5525[0:0] === 1'b1) ? select_ln440_7_fu_4219_p3 : select_ln440_31_reg_5426);

assign select_ln458_8_fu_4391_p3 = ((icmp_ln895_115_reg_5525[0:0] === 1'b1) ? select_ln440_8_reg_5331 : select_ln440_32_reg_5431);

assign select_ln458_9_fu_4397_p3 = ((icmp_ln895_116_reg_5532[0:0] === 1'b1) ? select_ln440_9_fu_4224_p3 : select_ln440_33_fu_4305_p3);

assign select_ln458_fu_4340_p3 = ((icmp_ln895_113_reg_5511[0:0] === 1'b1) ? select_ln440_fu_4188_p3 : select_ln440_24_fu_4284_p3);

assign select_ln476_10_fu_4575_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln458_10_fu_4404_p3 : select_ln458_22_fu_4480_p3);

assign select_ln476_11_fu_4583_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln458_11_fu_4410_p3 : select_ln458_23_fu_4486_p3);

assign select_ln476_1_fu_4500_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln458_1_fu_4347_p3 : select_ln458_13_fu_4423_p3);

assign select_ln476_2_fu_4508_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln458_2_fu_4353_p3 : select_ln458_14_fu_4429_p3);

assign select_ln476_3_fu_4517_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln458_3_fu_4359_p3 : select_ln458_15_fu_4435_p3);

assign select_ln476_4_fu_4525_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln458_4_fu_4366_p3 : select_ln458_16_fu_4442_p3);

assign select_ln476_5_fu_4533_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln458_5_fu_4372_p3 : select_ln458_17_fu_4448_p3);

assign select_ln476_6_fu_4542_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln458_6_fu_4378_p3 : select_ln458_18_fu_4454_p3);

assign select_ln476_7_fu_4550_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln458_7_fu_4385_p3 : select_ln458_19_fu_4461_p3);

assign select_ln476_8_fu_4558_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln458_8_fu_4391_p3 : select_ln458_20_fu_4467_p3);

assign select_ln476_9_fu_4567_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln458_9_fu_4397_p3 : select_ln458_21_fu_4473_p3);

assign select_ln476_fu_4492_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln458_fu_4340_p3 : select_ln458_12_fu_4416_p3);

assign sext_ln703_fu_4694_p1 = $signed(add_ln703_fu_4688_p2);

assign shl_ln_fu_4708_p3 = {{tmp_V_fu_4658_p2}, {5'd0}};

assign t0_V_fu_4665_p3 = {{res_max_bin_theta_t_2_fu_4644_p3}, {2'd0}};

assign tmp_V_fu_4658_p2 = (res_max_bin_r_t_V_2_fu_4652_p3 + 7'd1);

assign zext_ln703_1_fu_4683_p1 = p_Val2_2_fu_4673_p2;

assign zext_ln703_2_fu_4698_p1 = $unsigned(sext_ln703_fu_4694_p1);

assign zext_ln703_fu_4679_p1 = p_Val2_2_fu_4673_p2;

assign zext_ln708_fu_4722_p1 = p_Val2_4_fu_4716_p2;

always @ (posedge ap_clk) begin
    hls_LT_theta_V_1_data_reg[0] <= 1'b0;
    hls_LT_theta_V_1_data_reg[13:9] <= 5'b00000;
    hls_LT_r_V_1_data_reg[3:0] <= 4'b0000;
    hls_LT_r_V_1_data_reg[21:12] <= 10'b0000000000;
    select_ln476_reg_5567[1:0] <= 2'b00;
    select_ln476_6_reg_5572[1:0] <= 2'b10;
    res_max_bin_theta_t_1_reg_5593[0] <= 1'b1;
end

endmodule //find_max_bin
