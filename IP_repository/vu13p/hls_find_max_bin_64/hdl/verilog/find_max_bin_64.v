// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
//
// ===========================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="find_max_bin_64,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu13p-flga2577-1-e,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.733000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=408,HLS_SYN_LUT=2631,HLS_VERSION=2019_2_1}" *)

module find_max_bin_64 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        slcvec_angle_polar_offset_mrad_V,
        roi_seed_r_V,
        max_bin_count_0_V,
        max_bin_count_1_V,
        max_bin_count_2_V,
        max_bin_count_3_V,
        max_bin_count_4_V,
        max_bin_count_5_V,
        max_bin_count_6_V,
        max_bin_count_7_V,
        max_bin_count_8_V,
        max_bin_count_9_V,
        max_bin_count_10_V,
        max_bin_count_11_V,
        max_bin_count_12_V,
        max_bin_count_13_V,
        max_bin_count_14_V,
        max_bin_count_15_V,
        max_bin_count_16_V,
        max_bin_count_17_V,
        max_bin_count_18_V,
        max_bin_count_19_V,
        max_bin_count_20_V,
        max_bin_count_21_V,
        max_bin_count_22_V,
        max_bin_count_23_V,
        max_bin_count_24_V,
        max_bin_count_25_V,
        max_bin_count_26_V,
        max_bin_count_27_V,
        max_bin_count_28_V,
        max_bin_count_29_V,
        max_bin_count_30_V,
        max_bin_count_31_V,
        max_bin_count_32_V,
        max_bin_count_33_V,
        max_bin_count_34_V,
        max_bin_count_35_V,
        max_bin_count_36_V,
        max_bin_count_37_V,
        max_bin_count_38_V,
        max_bin_count_39_V,
        max_bin_count_40_V,
        max_bin_count_41_V,
        max_bin_count_42_V,
        max_bin_count_43_V,
        max_bin_count_44_V,
        max_bin_count_45_V,
        max_bin_count_46_V,
        max_bin_count_47_V,
        max_bin_count_48_V,
        max_bin_count_49_V,
        max_bin_count_50_V,
        max_bin_count_51_V,
        max_bin_count_52_V,
        max_bin_count_53_V,
        max_bin_count_54_V,
        max_bin_count_55_V,
        max_bin_count_56_V,
        max_bin_count_57_V,
        max_bin_count_58_V,
        max_bin_count_59_V,
        max_bin_count_60_V,
        max_bin_count_61_V,
        max_bin_count_62_V,
        max_bin_count_63_V,
        max_bin_r_0_V,
        max_bin_r_1_V,
        max_bin_r_2_V,
        max_bin_r_3_V,
        max_bin_r_4_V,
        max_bin_r_5_V,
        max_bin_r_6_V,
        max_bin_r_7_V,
        max_bin_r_8_V,
        max_bin_r_9_V,
        max_bin_r_10_V,
        max_bin_r_11_V,
        max_bin_r_12_V,
        max_bin_r_13_V,
        max_bin_r_14_V,
        max_bin_r_15_V,
        max_bin_r_16_V,
        max_bin_r_17_V,
        max_bin_r_18_V,
        max_bin_r_19_V,
        max_bin_r_20_V,
        max_bin_r_21_V,
        max_bin_r_22_V,
        max_bin_r_23_V,
        max_bin_r_24_V,
        max_bin_r_25_V,
        max_bin_r_26_V,
        max_bin_r_27_V,
        max_bin_r_28_V,
        max_bin_r_29_V,
        max_bin_r_30_V,
        max_bin_r_31_V,
        max_bin_r_32_V,
        max_bin_r_33_V,
        max_bin_r_34_V,
        max_bin_r_35_V,
        max_bin_r_36_V,
        max_bin_r_37_V,
        max_bin_r_38_V,
        max_bin_r_39_V,
        max_bin_r_40_V,
        max_bin_r_41_V,
        max_bin_r_42_V,
        max_bin_r_43_V,
        max_bin_r_44_V,
        max_bin_r_45_V,
        max_bin_r_46_V,
        max_bin_r_47_V,
        max_bin_r_48_V,
        max_bin_r_49_V,
        max_bin_r_50_V,
        max_bin_r_51_V,
        max_bin_r_52_V,
        max_bin_r_53_V,
        max_bin_r_54_V,
        max_bin_r_55_V,
        max_bin_r_56_V,
        max_bin_r_57_V,
        max_bin_r_58_V,
        max_bin_r_59_V,
        max_bin_r_60_V,
        max_bin_r_61_V,
        max_bin_r_62_V,
        max_bin_r_63_V,
        hls_LT_theta_global_V,
        hls_LT_theta_global_V_ap_vld,
        hls_LT_r_global_V,
        hls_LT_r_global_V_ap_vld,
        hls_LT_theta_V,
        hls_LT_theta_V_ap_vld,
        hls_LT_r_V,
        hls_LT_r_V_ap_vld,
        res_max_bin_count_V,
        res_max_bin_count_V_ap_vld,
        res_max_bin_theta_V,
        res_max_bin_theta_V_ap_vld,
        res_max_bin_r_V,
        res_max_bin_r_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] slcvec_angle_polar_offset_mrad_V;
input  [21:0] roi_seed_r_V;
input  [3:0] max_bin_count_0_V;
input  [3:0] max_bin_count_1_V;
input  [3:0] max_bin_count_2_V;
input  [3:0] max_bin_count_3_V;
input  [3:0] max_bin_count_4_V;
input  [3:0] max_bin_count_5_V;
input  [3:0] max_bin_count_6_V;
input  [3:0] max_bin_count_7_V;
input  [3:0] max_bin_count_8_V;
input  [3:0] max_bin_count_9_V;
input  [3:0] max_bin_count_10_V;
input  [3:0] max_bin_count_11_V;
input  [3:0] max_bin_count_12_V;
input  [3:0] max_bin_count_13_V;
input  [3:0] max_bin_count_14_V;
input  [3:0] max_bin_count_15_V;
input  [3:0] max_bin_count_16_V;
input  [3:0] max_bin_count_17_V;
input  [3:0] max_bin_count_18_V;
input  [3:0] max_bin_count_19_V;
input  [3:0] max_bin_count_20_V;
input  [3:0] max_bin_count_21_V;
input  [3:0] max_bin_count_22_V;
input  [3:0] max_bin_count_23_V;
input  [3:0] max_bin_count_24_V;
input  [3:0] max_bin_count_25_V;
input  [3:0] max_bin_count_26_V;
input  [3:0] max_bin_count_27_V;
input  [3:0] max_bin_count_28_V;
input  [3:0] max_bin_count_29_V;
input  [3:0] max_bin_count_30_V;
input  [3:0] max_bin_count_31_V;
input  [3:0] max_bin_count_32_V;
input  [3:0] max_bin_count_33_V;
input  [3:0] max_bin_count_34_V;
input  [3:0] max_bin_count_35_V;
input  [3:0] max_bin_count_36_V;
input  [3:0] max_bin_count_37_V;
input  [3:0] max_bin_count_38_V;
input  [3:0] max_bin_count_39_V;
input  [3:0] max_bin_count_40_V;
input  [3:0] max_bin_count_41_V;
input  [3:0] max_bin_count_42_V;
input  [3:0] max_bin_count_43_V;
input  [3:0] max_bin_count_44_V;
input  [3:0] max_bin_count_45_V;
input  [3:0] max_bin_count_46_V;
input  [3:0] max_bin_count_47_V;
input  [3:0] max_bin_count_48_V;
input  [3:0] max_bin_count_49_V;
input  [3:0] max_bin_count_50_V;
input  [3:0] max_bin_count_51_V;
input  [3:0] max_bin_count_52_V;
input  [3:0] max_bin_count_53_V;
input  [3:0] max_bin_count_54_V;
input  [3:0] max_bin_count_55_V;
input  [3:0] max_bin_count_56_V;
input  [3:0] max_bin_count_57_V;
input  [3:0] max_bin_count_58_V;
input  [3:0] max_bin_count_59_V;
input  [3:0] max_bin_count_60_V;
input  [3:0] max_bin_count_61_V;
input  [3:0] max_bin_count_62_V;
input  [3:0] max_bin_count_63_V;
input  [5:0] max_bin_r_0_V;
input  [5:0] max_bin_r_1_V;
input  [5:0] max_bin_r_2_V;
input  [5:0] max_bin_r_3_V;
input  [5:0] max_bin_r_4_V;
input  [5:0] max_bin_r_5_V;
input  [5:0] max_bin_r_6_V;
input  [5:0] max_bin_r_7_V;
input  [5:0] max_bin_r_8_V;
input  [5:0] max_bin_r_9_V;
input  [5:0] max_bin_r_10_V;
input  [5:0] max_bin_r_11_V;
input  [5:0] max_bin_r_12_V;
input  [5:0] max_bin_r_13_V;
input  [5:0] max_bin_r_14_V;
input  [5:0] max_bin_r_15_V;
input  [5:0] max_bin_r_16_V;
input  [5:0] max_bin_r_17_V;
input  [5:0] max_bin_r_18_V;
input  [5:0] max_bin_r_19_V;
input  [5:0] max_bin_r_20_V;
input  [5:0] max_bin_r_21_V;
input  [5:0] max_bin_r_22_V;
input  [5:0] max_bin_r_23_V;
input  [5:0] max_bin_r_24_V;
input  [5:0] max_bin_r_25_V;
input  [5:0] max_bin_r_26_V;
input  [5:0] max_bin_r_27_V;
input  [5:0] max_bin_r_28_V;
input  [5:0] max_bin_r_29_V;
input  [5:0] max_bin_r_30_V;
input  [5:0] max_bin_r_31_V;
input  [5:0] max_bin_r_32_V;
input  [5:0] max_bin_r_33_V;
input  [5:0] max_bin_r_34_V;
input  [5:0] max_bin_r_35_V;
input  [5:0] max_bin_r_36_V;
input  [5:0] max_bin_r_37_V;
input  [5:0] max_bin_r_38_V;
input  [5:0] max_bin_r_39_V;
input  [5:0] max_bin_r_40_V;
input  [5:0] max_bin_r_41_V;
input  [5:0] max_bin_r_42_V;
input  [5:0] max_bin_r_43_V;
input  [5:0] max_bin_r_44_V;
input  [5:0] max_bin_r_45_V;
input  [5:0] max_bin_r_46_V;
input  [5:0] max_bin_r_47_V;
input  [5:0] max_bin_r_48_V;
input  [5:0] max_bin_r_49_V;
input  [5:0] max_bin_r_50_V;
input  [5:0] max_bin_r_51_V;
input  [5:0] max_bin_r_52_V;
input  [5:0] max_bin_r_53_V;
input  [5:0] max_bin_r_54_V;
input  [5:0] max_bin_r_55_V;
input  [5:0] max_bin_r_56_V;
input  [5:0] max_bin_r_57_V;
input  [5:0] max_bin_r_58_V;
input  [5:0] max_bin_r_59_V;
input  [5:0] max_bin_r_60_V;
input  [5:0] max_bin_r_61_V;
input  [5:0] max_bin_r_62_V;
input  [5:0] max_bin_r_63_V;
output  [13:0] hls_LT_theta_global_V;
output   hls_LT_theta_global_V_ap_vld;
output  [21:0] hls_LT_r_global_V;
output   hls_LT_r_global_V_ap_vld;
output  [13:0] hls_LT_theta_V;
output   hls_LT_theta_V_ap_vld;
output  [21:0] hls_LT_r_V;
output   hls_LT_r_V_ap_vld;
output  [3:0] res_max_bin_count_V;
output   res_max_bin_count_V_ap_vld;
output  [5:0] res_max_bin_theta_V;
output   res_max_bin_theta_V_ap_vld;
output  [5:0] res_max_bin_r_V;
output   res_max_bin_r_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    hls_LT_theta_global_V_1_ack_in;
reg    hls_LT_r_global_V_1_ack_in;
reg    hls_LT_theta_V_1_ack_in;
reg    hls_LT_r_V_1_ack_in;
reg    res_max_bin_count_V_1_ack_in;
reg    res_max_bin_theta_V_1_ack_in;
reg    res_max_bin_r_V_1_ack_in;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [13:0] hls_LT_theta_global_V_1_data_reg;
reg    hls_LT_theta_global_V_1_vld_reg;
reg    hls_LT_theta_global_V_1_vld_in;
reg   [21:0] hls_LT_r_global_V_1_data_reg;
reg    hls_LT_r_global_V_1_vld_reg;
reg    hls_LT_r_global_V_1_vld_in;
reg   [13:0] hls_LT_theta_V_1_data_reg;
reg    hls_LT_theta_V_1_vld_reg;
reg    hls_LT_theta_V_1_vld_in;
reg   [21:0] hls_LT_r_V_1_data_reg;
reg    hls_LT_r_V_1_vld_reg;
reg    hls_LT_r_V_1_vld_in;
reg   [3:0] res_max_bin_count_V_1_data_reg;
reg    res_max_bin_count_V_1_vld_reg;
reg    res_max_bin_count_V_1_vld_in;
reg   [5:0] res_max_bin_theta_V_1_data_reg;
reg    res_max_bin_theta_V_1_vld_reg;
reg    res_max_bin_theta_V_1_vld_in;
reg   [5:0] res_max_bin_r_V_1_data_reg;
reg    res_max_bin_r_V_1_vld_reg;
reg    res_max_bin_r_V_1_vld_in;
reg   [21:0] roi_seed_r_V_read_reg_4166;
reg   [21:0] roi_seed_r_V_read_reg_4166_pp0_iter1_reg;
reg   [13:0] slcvec_angle_polar_o_reg_4171;
reg   [13:0] slcvec_angle_polar_o_reg_4171_pp0_iter1_reg;
wire   [0:0] icmp_ln895_65_fu_1806_p2;
reg   [0:0] icmp_ln895_65_reg_4176;
wire   [5:0] select_ln425_1_fu_2634_p3;
reg   [5:0] select_ln425_1_reg_4181;
wire   [0:0] icmp_ln895_66_fu_1812_p2;
reg   [0:0] icmp_ln895_66_reg_4186;
wire   [5:0] select_ln425_4_fu_2651_p3;
reg   [5:0] select_ln425_4_reg_4191;
wire   [0:0] icmp_ln895_67_fu_1818_p2;
reg   [0:0] icmp_ln895_67_reg_4196;
wire   [5:0] select_ln425_7_fu_2668_p3;
reg   [5:0] select_ln425_7_reg_4201;
wire   [0:0] icmp_ln895_68_fu_1824_p2;
reg   [0:0] icmp_ln895_68_reg_4206;
wire   [5:0] select_ln425_10_fu_2685_p3;
reg   [5:0] select_ln425_10_reg_4211;
wire   [0:0] icmp_ln895_69_fu_1830_p2;
reg   [0:0] icmp_ln895_69_reg_4216;
wire   [5:0] select_ln425_13_fu_2702_p3;
reg   [5:0] select_ln425_13_reg_4221;
wire   [0:0] icmp_ln895_70_fu_1836_p2;
reg   [0:0] icmp_ln895_70_reg_4226;
wire   [5:0] select_ln425_16_fu_2719_p3;
reg   [5:0] select_ln425_16_reg_4231;
wire   [0:0] icmp_ln895_71_fu_1842_p2;
reg   [0:0] icmp_ln895_71_reg_4236;
wire   [5:0] select_ln425_19_fu_2736_p3;
reg   [5:0] select_ln425_19_reg_4241;
wire   [0:0] icmp_ln895_72_fu_1848_p2;
reg   [0:0] icmp_ln895_72_reg_4246;
wire   [5:0] select_ln425_22_fu_2753_p3;
reg   [5:0] select_ln425_22_reg_4251;
wire   [0:0] icmp_ln895_73_fu_1854_p2;
reg   [0:0] icmp_ln895_73_reg_4256;
wire   [0:0] icmp_ln895_74_fu_1860_p2;
reg   [0:0] icmp_ln895_74_reg_4261;
wire   [0:0] icmp_ln895_75_fu_1866_p2;
reg   [0:0] icmp_ln895_75_reg_4266;
wire   [0:0] icmp_ln895_76_fu_1872_p2;
reg   [0:0] icmp_ln895_76_reg_4271;
wire   [0:0] icmp_ln895_77_fu_1878_p2;
reg   [0:0] icmp_ln895_77_reg_4276;
wire   [0:0] icmp_ln895_78_fu_1884_p2;
reg   [0:0] icmp_ln895_78_reg_4281;
wire   [0:0] icmp_ln895_79_fu_1890_p2;
reg   [0:0] icmp_ln895_79_reg_4286;
wire   [0:0] icmp_ln895_80_fu_1896_p2;
reg   [0:0] icmp_ln895_80_reg_4291;
wire   [0:0] icmp_ln895_81_fu_1902_p2;
reg   [0:0] icmp_ln895_81_reg_4296;
wire   [5:0] select_ln425_49_fu_2906_p3;
reg   [5:0] select_ln425_49_reg_4301;
wire   [0:0] icmp_ln895_82_fu_1908_p2;
reg   [0:0] icmp_ln895_82_reg_4306;
wire   [5:0] select_ln425_52_fu_2923_p3;
reg   [5:0] select_ln425_52_reg_4311;
wire   [0:0] icmp_ln895_83_fu_1914_p2;
reg   [0:0] icmp_ln895_83_reg_4316;
wire   [5:0] select_ln425_55_fu_2940_p3;
reg   [5:0] select_ln425_55_reg_4321;
wire   [0:0] icmp_ln895_84_fu_1920_p2;
reg   [0:0] icmp_ln895_84_reg_4326;
wire   [5:0] select_ln425_58_fu_2957_p3;
reg   [5:0] select_ln425_58_reg_4331;
wire   [0:0] icmp_ln895_85_fu_1926_p2;
reg   [0:0] icmp_ln895_85_reg_4336;
wire   [5:0] select_ln425_61_fu_2974_p3;
reg   [5:0] select_ln425_61_reg_4341;
wire   [0:0] icmp_ln895_86_fu_1932_p2;
reg   [0:0] icmp_ln895_86_reg_4346;
wire   [5:0] select_ln425_64_fu_2991_p3;
reg   [5:0] select_ln425_64_reg_4351;
wire   [0:0] icmp_ln895_87_fu_1938_p2;
reg   [0:0] icmp_ln895_87_reg_4356;
wire   [5:0] select_ln425_67_fu_3008_p3;
reg   [5:0] select_ln425_67_reg_4361;
wire   [0:0] icmp_ln895_88_fu_1944_p2;
reg   [0:0] icmp_ln895_88_reg_4366;
wire   [5:0] select_ln425_70_fu_3025_p3;
reg   [5:0] select_ln425_70_reg_4371;
wire   [0:0] icmp_ln895_89_fu_1950_p2;
reg   [0:0] icmp_ln895_89_reg_4376;
wire   [0:0] icmp_ln895_90_fu_1956_p2;
reg   [0:0] icmp_ln895_90_reg_4381;
wire   [0:0] icmp_ln895_91_fu_1962_p2;
reg   [0:0] icmp_ln895_91_reg_4386;
wire   [0:0] icmp_ln895_92_fu_1968_p2;
reg   [0:0] icmp_ln895_92_reg_4391;
wire   [0:0] icmp_ln895_93_fu_1974_p2;
reg   [0:0] icmp_ln895_93_reg_4396;
wire   [0:0] icmp_ln895_94_fu_1980_p2;
reg   [0:0] icmp_ln895_94_reg_4401;
wire   [0:0] icmp_ln895_95_fu_1986_p2;
reg   [0:0] icmp_ln895_95_reg_4406;
wire   [0:0] icmp_ln895_96_fu_1992_p2;
reg   [0:0] icmp_ln895_96_reg_4411;
wire   [0:0] icmp_ln895_97_fu_1998_p2;
reg   [0:0] icmp_ln895_97_reg_4416;
wire   [0:0] icmp_ln895_98_fu_2002_p2;
reg   [0:0] icmp_ln895_98_reg_4422;
wire   [0:0] icmp_ln895_99_fu_2006_p2;
reg   [0:0] icmp_ln895_99_reg_4428;
wire   [0:0] icmp_ln895_100_fu_2010_p2;
reg   [0:0] icmp_ln895_100_reg_4434;
wire   [0:0] icmp_ln895_101_fu_2014_p2;
reg   [0:0] icmp_ln895_101_reg_4440;
wire   [0:0] icmp_ln895_102_fu_2018_p2;
reg   [0:0] icmp_ln895_102_reg_4446;
wire   [0:0] icmp_ln895_103_fu_2022_p2;
reg   [0:0] icmp_ln895_103_reg_4452;
wire   [0:0] icmp_ln895_104_fu_2026_p2;
reg   [0:0] icmp_ln895_104_reg_4458;
wire   [0:0] icmp_ln895_105_fu_2030_p2;
reg   [0:0] icmp_ln895_105_reg_4464;
wire   [5:0] select_ln443_25_fu_3250_p3;
reg   [5:0] select_ln443_25_reg_4469;
wire   [0:0] icmp_ln895_106_fu_2034_p2;
reg   [0:0] icmp_ln895_106_reg_4474;
wire   [5:0] select_ln443_28_fu_3267_p3;
reg   [5:0] select_ln443_28_reg_4479;
wire   [0:0] icmp_ln895_107_fu_2038_p2;
reg   [0:0] icmp_ln895_107_reg_4484;
wire   [5:0] select_ln443_31_fu_3284_p3;
reg   [5:0] select_ln443_31_reg_4489;
wire   [0:0] icmp_ln895_108_fu_2042_p2;
reg   [0:0] icmp_ln895_108_reg_4494;
wire   [5:0] select_ln443_34_fu_3301_p3;
reg   [5:0] select_ln443_34_reg_4499;
wire   [0:0] icmp_ln895_109_fu_2046_p2;
reg   [0:0] icmp_ln895_109_reg_4504;
wire   [5:0] select_ln443_37_fu_3318_p3;
reg   [5:0] select_ln443_37_reg_4509;
wire   [0:0] icmp_ln895_110_fu_2050_p2;
reg   [0:0] icmp_ln895_110_reg_4514;
wire   [5:0] select_ln443_40_fu_3335_p3;
reg   [5:0] select_ln443_40_reg_4519;
wire   [0:0] icmp_ln895_111_fu_2054_p2;
reg   [0:0] icmp_ln895_111_reg_4524;
wire   [5:0] select_ln443_43_fu_3352_p3;
reg   [5:0] select_ln443_43_reg_4529;
wire   [0:0] icmp_ln895_112_fu_2058_p2;
reg   [0:0] icmp_ln895_112_reg_4534;
wire   [5:0] select_ln443_46_fu_3369_p3;
reg   [5:0] select_ln443_46_reg_4539;
wire   [0:0] icmp_ln895_113_fu_2062_p2;
reg   [0:0] icmp_ln895_113_reg_4544;
wire   [3:0] select_ln461_2_fu_3386_p3;
reg   [3:0] select_ln461_2_reg_4550;
wire   [0:0] icmp_ln895_114_fu_2066_p2;
reg   [0:0] icmp_ln895_114_reg_4556;
wire   [3:0] select_ln461_5_fu_3394_p3;
reg   [3:0] select_ln461_5_reg_4562;
wire   [0:0] icmp_ln895_115_fu_2070_p2;
reg   [0:0] icmp_ln895_115_reg_4568;
wire   [3:0] select_ln461_8_fu_3402_p3;
reg   [3:0] select_ln461_8_reg_4574;
wire   [0:0] icmp_ln895_116_fu_2074_p2;
reg   [0:0] icmp_ln895_116_reg_4580;
wire   [3:0] select_ln461_11_fu_3410_p3;
reg   [3:0] select_ln461_11_reg_4586;
wire   [0:0] icmp_ln895_117_fu_2078_p2;
reg   [0:0] icmp_ln895_117_reg_4592;
wire   [3:0] select_ln461_14_fu_3418_p3;
reg   [3:0] select_ln461_14_reg_4598;
wire   [0:0] icmp_ln895_118_fu_2082_p2;
reg   [0:0] icmp_ln895_118_reg_4604;
wire   [3:0] select_ln461_17_fu_3426_p3;
reg   [3:0] select_ln461_17_reg_4610;
wire   [0:0] icmp_ln895_119_fu_2086_p2;
reg   [0:0] icmp_ln895_119_reg_4616;
wire   [3:0] select_ln461_20_fu_3434_p3;
reg   [3:0] select_ln461_20_reg_4622;
wire   [0:0] icmp_ln895_120_fu_2090_p2;
reg   [0:0] icmp_ln895_120_reg_4628;
wire   [3:0] select_ln461_23_fu_3442_p3;
reg   [3:0] select_ln461_23_reg_4634;
wire   [5:0] res_max_bin_theta_t_s_fu_4022_p3;
reg   [5:0] res_max_bin_theta_t_s_reg_4640;
wire   [5:0] res_max_bin_r_t_V_fu_4030_p3;
reg   [5:0] res_max_bin_r_t_V_reg_4645;
wire   [5:0] res_max_bin_theta_t_1_fu_4047_p3;
reg   [5:0] res_max_bin_theta_t_1_reg_4650;
wire   [5:0] res_max_bin_r_t_V_1_fu_4055_p3;
reg   [5:0] res_max_bin_r_t_V_1_reg_4655;
wire   [0:0] icmp_ln895_5_fu_2118_p2;
reg   [0:0] icmp_ln895_5_reg_4660;
wire   [3:0] res_max_bin_count_t_2_fu_4072_p3;
reg   [3:0] res_max_bin_count_t_2_reg_4666;
wire   [5:0] res_max_bin_theta_t_2_fu_4080_p3;
wire   [5:0] tmp_V_fu_4091_p2;
wire   [13:0] zext_ln703_1_fu_4116_p1;
wire   [13:0] add_ln703_1_fu_4135_p2;
wire   [21:0] zext_ln708_fu_4155_p1;
wire   [21:0] add_ln703_2_fu_4160_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [3:0] select_ln425_2_fu_2642_p3;
wire   [3:0] select_ln425_50_fu_2914_p3;
wire   [3:0] select_ln425_5_fu_2659_p3;
wire   [3:0] select_ln425_53_fu_2931_p3;
wire   [3:0] select_ln425_8_fu_2676_p3;
wire   [3:0] select_ln425_56_fu_2948_p3;
wire   [3:0] select_ln425_11_fu_2693_p3;
wire   [3:0] select_ln425_59_fu_2965_p3;
wire   [3:0] select_ln425_14_fu_2710_p3;
wire   [3:0] select_ln425_62_fu_2982_p3;
wire   [3:0] select_ln425_17_fu_2727_p3;
wire   [3:0] select_ln425_65_fu_2999_p3;
wire   [3:0] select_ln425_20_fu_2744_p3;
wire   [3:0] select_ln425_68_fu_3016_p3;
wire   [3:0] select_ln425_23_fu_2761_p3;
wire   [3:0] select_ln425_71_fu_3033_p3;
wire   [3:0] select_ln425_26_fu_2778_p3;
wire   [3:0] select_ln425_74_fu_3050_p3;
wire   [3:0] select_ln425_29_fu_2795_p3;
wire   [3:0] select_ln425_77_fu_3067_p3;
wire   [3:0] select_ln425_32_fu_2812_p3;
wire   [3:0] select_ln425_80_fu_3084_p3;
wire   [3:0] select_ln425_35_fu_2829_p3;
wire   [3:0] select_ln425_83_fu_3101_p3;
wire   [3:0] select_ln425_38_fu_2846_p3;
wire   [3:0] select_ln425_86_fu_3118_p3;
wire   [3:0] select_ln425_41_fu_2863_p3;
wire   [3:0] select_ln425_89_fu_3135_p3;
wire   [3:0] select_ln425_44_fu_2880_p3;
wire   [3:0] select_ln425_92_fu_3152_p3;
wire   [3:0] select_ln425_47_fu_2897_p3;
wire   [3:0] select_ln425_95_fu_3169_p3;
wire   [3:0] select_ln443_2_fu_3178_p3;
wire   [3:0] select_ln443_26_fu_3258_p3;
wire   [3:0] select_ln443_5_fu_3187_p3;
wire   [3:0] select_ln443_29_fu_3275_p3;
wire   [3:0] select_ln443_8_fu_3196_p3;
wire   [3:0] select_ln443_32_fu_3292_p3;
wire   [3:0] select_ln443_11_fu_3205_p3;
wire   [3:0] select_ln443_35_fu_3309_p3;
wire   [3:0] select_ln443_14_fu_3214_p3;
wire   [3:0] select_ln443_38_fu_3326_p3;
wire   [3:0] select_ln443_17_fu_3223_p3;
wire   [3:0] select_ln443_41_fu_3343_p3;
wire   [3:0] select_ln443_20_fu_3232_p3;
wire   [3:0] select_ln443_44_fu_3360_p3;
wire   [3:0] select_ln443_23_fu_3241_p3;
wire   [3:0] select_ln443_47_fu_3377_p3;
wire   [3:0] select_ln479_2_fu_3946_p3;
wire   [3:0] select_ln479_8_fu_3992_p3;
wire   [3:0] select_ln479_5_fu_3969_p3;
wire   [3:0] select_ln479_11_fu_4015_p3;
wire   [3:0] res_max_bin_count_t_s_fu_4038_p3;
wire   [3:0] res_max_bin_count_t_1_fu_4063_p3;
wire   [0:0] icmp_ln895_fu_1422_p2;
wire   [0:0] icmp_ln895_1_fu_1428_p2;
wire   [0:0] icmp_ln895_2_fu_1434_p2;
wire   [0:0] icmp_ln895_3_fu_1440_p2;
wire   [0:0] icmp_ln895_4_fu_1446_p2;
wire   [0:0] icmp_ln895_6_fu_1452_p2;
wire   [0:0] icmp_ln895_64_fu_1458_p2;
wire   [0:0] icmp_ln895_7_fu_1464_p2;
wire   [0:0] icmp_ln895_8_fu_1470_p2;
wire   [0:0] icmp_ln895_9_fu_1476_p2;
wire   [0:0] icmp_ln895_10_fu_1482_p2;
wire   [0:0] icmp_ln895_11_fu_1488_p2;
wire   [0:0] icmp_ln895_12_fu_1494_p2;
wire   [0:0] icmp_ln895_13_fu_1500_p2;
wire   [0:0] icmp_ln895_14_fu_1506_p2;
wire   [0:0] icmp_ln895_15_fu_1512_p2;
wire   [0:0] icmp_ln895_16_fu_1518_p2;
wire   [0:0] icmp_ln895_17_fu_1524_p2;
wire   [0:0] icmp_ln895_18_fu_1530_p2;
wire   [0:0] icmp_ln895_19_fu_1536_p2;
wire   [0:0] icmp_ln895_20_fu_1542_p2;
wire   [0:0] icmp_ln895_21_fu_1548_p2;
wire   [0:0] icmp_ln895_22_fu_1554_p2;
wire   [0:0] icmp_ln895_23_fu_1560_p2;
wire   [0:0] icmp_ln895_24_fu_1566_p2;
wire   [0:0] icmp_ln895_25_fu_1572_p2;
wire   [0:0] icmp_ln895_26_fu_1578_p2;
wire   [0:0] icmp_ln895_27_fu_1584_p2;
wire   [0:0] icmp_ln895_28_fu_1590_p2;
wire   [0:0] icmp_ln895_29_fu_1596_p2;
wire   [0:0] icmp_ln895_30_fu_1602_p2;
wire   [0:0] icmp_ln895_31_fu_1608_p2;
wire   [0:0] icmp_ln895_32_fu_1614_p2;
wire   [0:0] icmp_ln895_33_fu_1620_p2;
wire   [0:0] icmp_ln895_34_fu_1626_p2;
wire   [0:0] icmp_ln895_35_fu_1632_p2;
wire   [0:0] icmp_ln895_36_fu_1638_p2;
wire   [0:0] icmp_ln895_37_fu_1644_p2;
wire   [0:0] icmp_ln895_38_fu_1650_p2;
wire   [0:0] icmp_ln895_39_fu_1656_p2;
wire   [0:0] icmp_ln895_40_fu_1662_p2;
wire   [0:0] icmp_ln895_41_fu_1668_p2;
wire   [0:0] icmp_ln895_42_fu_1674_p2;
wire   [0:0] icmp_ln895_43_fu_1680_p2;
wire   [0:0] icmp_ln895_44_fu_1686_p2;
wire   [0:0] icmp_ln895_45_fu_1692_p2;
wire   [0:0] icmp_ln895_46_fu_1698_p2;
wire   [0:0] icmp_ln895_47_fu_1704_p2;
wire   [0:0] icmp_ln895_48_fu_1710_p2;
wire   [0:0] icmp_ln895_49_fu_1716_p2;
wire   [0:0] icmp_ln895_50_fu_1722_p2;
wire   [0:0] icmp_ln895_51_fu_1728_p2;
wire   [0:0] icmp_ln895_52_fu_1734_p2;
wire   [0:0] icmp_ln895_53_fu_1740_p2;
wire   [0:0] icmp_ln895_54_fu_1746_p2;
wire   [0:0] icmp_ln895_55_fu_1752_p2;
wire   [0:0] icmp_ln895_56_fu_1758_p2;
wire   [0:0] icmp_ln895_57_fu_1764_p2;
wire   [0:0] icmp_ln895_58_fu_1770_p2;
wire   [0:0] icmp_ln895_59_fu_1776_p2;
wire   [0:0] icmp_ln895_60_fu_1782_p2;
wire   [0:0] icmp_ln895_61_fu_1788_p2;
wire   [0:0] icmp_ln895_62_fu_1794_p2;
wire   [0:0] icmp_ln895_63_fu_1800_p2;
wire   [5:0] select_ln407_fu_2122_p3;
wire   [5:0] select_ln407_32_fu_2378_p3;
wire   [5:0] select_ln407_1_fu_2130_p3;
wire   [5:0] select_ln407_33_fu_2386_p3;
wire   [5:0] select_ln407_2_fu_2138_p3;
wire   [5:0] select_ln407_34_fu_2394_p3;
wire   [5:0] select_ln407_3_fu_2146_p3;
wire   [5:0] select_ln407_35_fu_2402_p3;
wire   [5:0] select_ln407_4_fu_2154_p3;
wire   [5:0] select_ln407_36_fu_2410_p3;
wire   [5:0] select_ln407_5_fu_2162_p3;
wire   [5:0] select_ln407_37_fu_2418_p3;
wire   [5:0] select_ln407_6_fu_2170_p3;
wire   [5:0] select_ln407_38_fu_2426_p3;
wire   [5:0] select_ln407_7_fu_2178_p3;
wire   [5:0] select_ln407_39_fu_2434_p3;
wire   [5:0] select_ln407_8_fu_2186_p3;
wire   [5:0] select_ln407_40_fu_2442_p3;
wire   [5:0] select_ln407_9_fu_2194_p3;
wire   [5:0] select_ln407_41_fu_2450_p3;
wire   [5:0] select_ln407_10_fu_2202_p3;
wire   [5:0] select_ln407_42_fu_2458_p3;
wire   [5:0] select_ln407_11_fu_2210_p3;
wire   [5:0] select_ln407_43_fu_2466_p3;
wire   [5:0] select_ln407_12_fu_2218_p3;
wire   [5:0] select_ln407_44_fu_2474_p3;
wire   [5:0] select_ln407_13_fu_2226_p3;
wire   [5:0] select_ln407_45_fu_2482_p3;
wire   [5:0] select_ln407_14_fu_2234_p3;
wire   [5:0] select_ln407_46_fu_2490_p3;
wire   [5:0] select_ln407_15_fu_2242_p3;
wire   [5:0] select_ln407_47_fu_2498_p3;
wire   [5:0] select_ln407_16_fu_2250_p3;
wire   [5:0] select_ln407_48_fu_2506_p3;
wire   [5:0] select_ln407_17_fu_2258_p3;
wire   [5:0] select_ln407_49_fu_2514_p3;
wire   [5:0] select_ln407_18_fu_2266_p3;
wire   [5:0] select_ln407_50_fu_2522_p3;
wire   [5:0] select_ln407_19_fu_2274_p3;
wire   [5:0] select_ln407_51_fu_2530_p3;
wire   [5:0] select_ln407_20_fu_2282_p3;
wire   [5:0] select_ln407_52_fu_2538_p3;
wire   [5:0] select_ln407_21_fu_2290_p3;
wire   [5:0] select_ln407_53_fu_2546_p3;
wire   [5:0] select_ln407_22_fu_2298_p3;
wire   [5:0] select_ln407_54_fu_2554_p3;
wire   [5:0] select_ln407_23_fu_2306_p3;
wire   [5:0] select_ln407_55_fu_2562_p3;
wire   [5:0] select_ln407_24_fu_2314_p3;
wire   [5:0] select_ln407_56_fu_2570_p3;
wire   [5:0] select_ln407_25_fu_2322_p3;
wire   [5:0] select_ln407_57_fu_2578_p3;
wire   [5:0] select_ln407_26_fu_2330_p3;
wire   [5:0] select_ln407_58_fu_2586_p3;
wire   [5:0] select_ln407_27_fu_2338_p3;
wire   [5:0] select_ln407_59_fu_2594_p3;
wire   [5:0] select_ln407_28_fu_2346_p3;
wire   [5:0] select_ln407_60_fu_2602_p3;
wire   [5:0] select_ln407_29_fu_2354_p3;
wire   [5:0] select_ln407_61_fu_2610_p3;
wire   [5:0] select_ln407_30_fu_2362_p3;
wire   [5:0] select_ln407_62_fu_2618_p3;
wire   [5:0] select_ln407_31_fu_2370_p3;
wire   [5:0] select_ln407_63_fu_2626_p3;
wire   [5:0] select_ln425_25_fu_2770_p3;
wire   [5:0] select_ln425_73_fu_3042_p3;
wire   [5:0] select_ln425_28_fu_2787_p3;
wire   [5:0] select_ln425_76_fu_3059_p3;
wire   [5:0] select_ln425_31_fu_2804_p3;
wire   [5:0] select_ln425_79_fu_3076_p3;
wire   [5:0] select_ln425_34_fu_2821_p3;
wire   [5:0] select_ln425_82_fu_3093_p3;
wire   [5:0] select_ln425_37_fu_2838_p3;
wire   [5:0] select_ln425_85_fu_3110_p3;
wire   [5:0] select_ln425_40_fu_2855_p3;
wire   [5:0] select_ln425_88_fu_3127_p3;
wire   [5:0] select_ln425_43_fu_2872_p3;
wire   [5:0] select_ln425_91_fu_3144_p3;
wire   [5:0] select_ln425_46_fu_2889_p3;
wire   [5:0] select_ln425_94_fu_3161_p3;
wire   [5:0] select_ln425_fu_3450_p3;
wire   [5:0] select_ln425_48_fu_3562_p3;
wire   [5:0] select_ln425_3_fu_3457_p3;
wire   [5:0] select_ln425_51_fu_3569_p3;
wire   [5:0] select_ln425_6_fu_3464_p3;
wire   [5:0] select_ln425_54_fu_3576_p3;
wire   [5:0] select_ln425_9_fu_3471_p3;
wire   [5:0] select_ln425_57_fu_3583_p3;
wire   [5:0] select_ln425_12_fu_3478_p3;
wire   [5:0] select_ln425_60_fu_3590_p3;
wire   [5:0] select_ln425_15_fu_3485_p3;
wire   [5:0] select_ln425_63_fu_3597_p3;
wire   [5:0] select_ln425_18_fu_3492_p3;
wire   [5:0] select_ln425_66_fu_3604_p3;
wire   [5:0] select_ln425_21_fu_3499_p3;
wire   [5:0] select_ln425_69_fu_3611_p3;
wire   [5:0] select_ln425_24_fu_3506_p3;
wire   [5:0] select_ln425_72_fu_3618_p3;
wire   [5:0] select_ln425_27_fu_3513_p3;
wire   [5:0] select_ln425_75_fu_3625_p3;
wire   [5:0] select_ln425_30_fu_3520_p3;
wire   [5:0] select_ln425_78_fu_3632_p3;
wire   [5:0] select_ln425_33_fu_3527_p3;
wire   [5:0] select_ln425_81_fu_3639_p3;
wire   [5:0] select_ln425_36_fu_3534_p3;
wire   [5:0] select_ln425_84_fu_3646_p3;
wire   [5:0] select_ln425_39_fu_3541_p3;
wire   [5:0] select_ln425_87_fu_3653_p3;
wire   [5:0] select_ln425_42_fu_3548_p3;
wire   [5:0] select_ln425_90_fu_3660_p3;
wire   [5:0] select_ln425_45_fu_3555_p3;
wire   [5:0] select_ln425_93_fu_3667_p3;
wire   [5:0] select_ln443_fu_3674_p3;
wire   [5:0] select_ln443_24_fu_3770_p3;
wire   [5:0] select_ln443_1_fu_3681_p3;
wire   [5:0] select_ln443_3_fu_3686_p3;
wire   [5:0] select_ln443_27_fu_3777_p3;
wire   [5:0] select_ln443_4_fu_3693_p3;
wire   [5:0] select_ln443_6_fu_3698_p3;
wire   [5:0] select_ln443_30_fu_3784_p3;
wire   [5:0] select_ln443_7_fu_3705_p3;
wire   [5:0] select_ln443_9_fu_3710_p3;
wire   [5:0] select_ln443_33_fu_3791_p3;
wire   [5:0] select_ln443_10_fu_3717_p3;
wire   [5:0] select_ln443_12_fu_3722_p3;
wire   [5:0] select_ln443_36_fu_3798_p3;
wire   [5:0] select_ln443_13_fu_3729_p3;
wire   [5:0] select_ln443_15_fu_3734_p3;
wire   [5:0] select_ln443_39_fu_3805_p3;
wire   [5:0] select_ln443_16_fu_3741_p3;
wire   [5:0] select_ln443_18_fu_3746_p3;
wire   [5:0] select_ln443_42_fu_3812_p3;
wire   [5:0] select_ln443_19_fu_3753_p3;
wire   [5:0] select_ln443_21_fu_3758_p3;
wire   [5:0] select_ln443_45_fu_3819_p3;
wire   [5:0] select_ln443_22_fu_3765_p3;
wire   [0:0] icmp_ln895_121_fu_2094_p2;
wire   [5:0] select_ln461_fu_3826_p3;
wire   [5:0] select_ln461_12_fu_3878_p3;
wire   [5:0] select_ln461_1_fu_3833_p3;
wire   [5:0] select_ln461_13_fu_3885_p3;
wire   [0:0] icmp_ln895_122_fu_2098_p2;
wire   [5:0] select_ln461_3_fu_3839_p3;
wire   [5:0] select_ln461_15_fu_3891_p3;
wire   [5:0] select_ln461_4_fu_3846_p3;
wire   [5:0] select_ln461_16_fu_3898_p3;
wire   [0:0] icmp_ln895_123_fu_2102_p2;
wire   [5:0] select_ln461_6_fu_3852_p3;
wire   [5:0] select_ln461_18_fu_3904_p3;
wire   [5:0] select_ln461_7_fu_3859_p3;
wire   [5:0] select_ln461_19_fu_3911_p3;
wire   [0:0] icmp_ln895_124_fu_2106_p2;
wire   [5:0] select_ln461_9_fu_3865_p3;
wire   [5:0] select_ln461_21_fu_3917_p3;
wire   [5:0] select_ln461_10_fu_3872_p3;
wire   [5:0] select_ln461_22_fu_3924_p3;
wire   [0:0] icmp_ln895_125_fu_2110_p2;
wire   [5:0] select_ln479_fu_3930_p3;
wire   [5:0] select_ln479_6_fu_3976_p3;
wire   [5:0] select_ln479_1_fu_3938_p3;
wire   [5:0] select_ln479_7_fu_3984_p3;
wire   [0:0] icmp_ln895_126_fu_2114_p2;
wire   [5:0] select_ln479_3_fu_3953_p3;
wire   [5:0] select_ln479_9_fu_3999_p3;
wire   [5:0] select_ln479_4_fu_3961_p3;
wire   [5:0] select_ln479_10_fu_4007_p3;
wire   [5:0] res_max_bin_r_t_V_2_fu_4086_p3;
wire   [7:0] t0_V_fu_4098_p3;
wire   [7:0] p_Val2_2_fu_4106_p2;
wire   [11:0] zext_ln703_fu_4112_p1;
wire   [11:0] add_ln703_fu_4121_p2;
wire  signed [12:0] sext_ln703_fu_4127_p1;
wire   [13:0] zext_ln703_2_fu_4131_p1;
wire   [11:0] shl_ln_fu_4141_p3;
wire   [11:0] p_Val2_4_fu_4149_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 hls_LT_theta_global_V_1_data_reg = 14'd0;
#0 hls_LT_theta_global_V_1_vld_reg = 1'b0;
#0 hls_LT_r_global_V_1_data_reg = 22'd0;
#0 hls_LT_r_global_V_1_vld_reg = 1'b0;
#0 hls_LT_theta_V_1_data_reg = 14'd0;
#0 hls_LT_theta_V_1_vld_reg = 1'b0;
#0 hls_LT_r_V_1_data_reg = 22'd0;
#0 hls_LT_r_V_1_vld_reg = 1'b0;
#0 res_max_bin_count_V_1_data_reg = 4'd0;
#0 res_max_bin_count_V_1_vld_reg = 1'b0;
#0 res_max_bin_theta_V_1_data_reg = 6'd0;
#0 res_max_bin_theta_V_1_vld_reg = 1'b0;
#0 res_max_bin_r_V_1_data_reg = 6'd0;
#0 res_max_bin_r_V_1_vld_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_count_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_in == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_data_reg[11 : 5] <= zext_ln708_fu_4155_p1[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_in == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_data_reg <= add_ln703_2_fu_4160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_in == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_data_reg[7 : 1] <= zext_ln703_1_fu_4116_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_in == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_data_reg <= add_ln703_1_fu_4135_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln895_100_reg_4434 <= icmp_ln895_100_fu_2010_p2;
        icmp_ln895_101_reg_4440 <= icmp_ln895_101_fu_2014_p2;
        icmp_ln895_102_reg_4446 <= icmp_ln895_102_fu_2018_p2;
        icmp_ln895_103_reg_4452 <= icmp_ln895_103_fu_2022_p2;
        icmp_ln895_104_reg_4458 <= icmp_ln895_104_fu_2026_p2;
        icmp_ln895_105_reg_4464 <= icmp_ln895_105_fu_2030_p2;
        icmp_ln895_106_reg_4474 <= icmp_ln895_106_fu_2034_p2;
        icmp_ln895_107_reg_4484 <= icmp_ln895_107_fu_2038_p2;
        icmp_ln895_108_reg_4494 <= icmp_ln895_108_fu_2042_p2;
        icmp_ln895_109_reg_4504 <= icmp_ln895_109_fu_2046_p2;
        icmp_ln895_110_reg_4514 <= icmp_ln895_110_fu_2050_p2;
        icmp_ln895_111_reg_4524 <= icmp_ln895_111_fu_2054_p2;
        icmp_ln895_112_reg_4534 <= icmp_ln895_112_fu_2058_p2;
        icmp_ln895_113_reg_4544 <= icmp_ln895_113_fu_2062_p2;
        icmp_ln895_114_reg_4556 <= icmp_ln895_114_fu_2066_p2;
        icmp_ln895_115_reg_4568 <= icmp_ln895_115_fu_2070_p2;
        icmp_ln895_116_reg_4580 <= icmp_ln895_116_fu_2074_p2;
        icmp_ln895_117_reg_4592 <= icmp_ln895_117_fu_2078_p2;
        icmp_ln895_118_reg_4604 <= icmp_ln895_118_fu_2082_p2;
        icmp_ln895_119_reg_4616 <= icmp_ln895_119_fu_2086_p2;
        icmp_ln895_120_reg_4628 <= icmp_ln895_120_fu_2090_p2;
        icmp_ln895_5_reg_4660 <= icmp_ln895_5_fu_2118_p2;
        icmp_ln895_65_reg_4176 <= icmp_ln895_65_fu_1806_p2;
        icmp_ln895_66_reg_4186 <= icmp_ln895_66_fu_1812_p2;
        icmp_ln895_67_reg_4196 <= icmp_ln895_67_fu_1818_p2;
        icmp_ln895_68_reg_4206 <= icmp_ln895_68_fu_1824_p2;
        icmp_ln895_69_reg_4216 <= icmp_ln895_69_fu_1830_p2;
        icmp_ln895_70_reg_4226 <= icmp_ln895_70_fu_1836_p2;
        icmp_ln895_71_reg_4236 <= icmp_ln895_71_fu_1842_p2;
        icmp_ln895_72_reg_4246 <= icmp_ln895_72_fu_1848_p2;
        icmp_ln895_73_reg_4256 <= icmp_ln895_73_fu_1854_p2;
        icmp_ln895_74_reg_4261 <= icmp_ln895_74_fu_1860_p2;
        icmp_ln895_75_reg_4266 <= icmp_ln895_75_fu_1866_p2;
        icmp_ln895_76_reg_4271 <= icmp_ln895_76_fu_1872_p2;
        icmp_ln895_77_reg_4276 <= icmp_ln895_77_fu_1878_p2;
        icmp_ln895_78_reg_4281 <= icmp_ln895_78_fu_1884_p2;
        icmp_ln895_79_reg_4286 <= icmp_ln895_79_fu_1890_p2;
        icmp_ln895_80_reg_4291 <= icmp_ln895_80_fu_1896_p2;
        icmp_ln895_81_reg_4296 <= icmp_ln895_81_fu_1902_p2;
        icmp_ln895_82_reg_4306 <= icmp_ln895_82_fu_1908_p2;
        icmp_ln895_83_reg_4316 <= icmp_ln895_83_fu_1914_p2;
        icmp_ln895_84_reg_4326 <= icmp_ln895_84_fu_1920_p2;
        icmp_ln895_85_reg_4336 <= icmp_ln895_85_fu_1926_p2;
        icmp_ln895_86_reg_4346 <= icmp_ln895_86_fu_1932_p2;
        icmp_ln895_87_reg_4356 <= icmp_ln895_87_fu_1938_p2;
        icmp_ln895_88_reg_4366 <= icmp_ln895_88_fu_1944_p2;
        icmp_ln895_89_reg_4376 <= icmp_ln895_89_fu_1950_p2;
        icmp_ln895_90_reg_4381 <= icmp_ln895_90_fu_1956_p2;
        icmp_ln895_91_reg_4386 <= icmp_ln895_91_fu_1962_p2;
        icmp_ln895_92_reg_4391 <= icmp_ln895_92_fu_1968_p2;
        icmp_ln895_93_reg_4396 <= icmp_ln895_93_fu_1974_p2;
        icmp_ln895_94_reg_4401 <= icmp_ln895_94_fu_1980_p2;
        icmp_ln895_95_reg_4406 <= icmp_ln895_95_fu_1986_p2;
        icmp_ln895_96_reg_4411 <= icmp_ln895_96_fu_1992_p2;
        icmp_ln895_97_reg_4416 <= icmp_ln895_97_fu_1998_p2;
        icmp_ln895_98_reg_4422 <= icmp_ln895_98_fu_2002_p2;
        icmp_ln895_99_reg_4428 <= icmp_ln895_99_fu_2006_p2;
        res_max_bin_count_t_2_reg_4666 <= res_max_bin_count_t_2_fu_4072_p3;
        res_max_bin_r_t_V_1_reg_4655 <= res_max_bin_r_t_V_1_fu_4055_p3;
        res_max_bin_r_t_V_reg_4645 <= res_max_bin_r_t_V_fu_4030_p3;
        res_max_bin_theta_t_1_reg_4650[5 : 1] <= res_max_bin_theta_t_1_fu_4047_p3[5 : 1];
        res_max_bin_theta_t_s_reg_4640[5 : 1] <= res_max_bin_theta_t_s_fu_4022_p3[5 : 1];
        roi_seed_r_V_read_reg_4166 <= roi_seed_r_V;
        roi_seed_r_V_read_reg_4166_pp0_iter1_reg <= roi_seed_r_V_read_reg_4166;
        select_ln425_10_reg_4211 <= select_ln425_10_fu_2685_p3;
        select_ln425_13_reg_4221 <= select_ln425_13_fu_2702_p3;
        select_ln425_16_reg_4231 <= select_ln425_16_fu_2719_p3;
        select_ln425_19_reg_4241 <= select_ln425_19_fu_2736_p3;
        select_ln425_1_reg_4181 <= select_ln425_1_fu_2634_p3;
        select_ln425_22_reg_4251 <= select_ln425_22_fu_2753_p3;
        select_ln425_49_reg_4301 <= select_ln425_49_fu_2906_p3;
        select_ln425_4_reg_4191 <= select_ln425_4_fu_2651_p3;
        select_ln425_52_reg_4311 <= select_ln425_52_fu_2923_p3;
        select_ln425_55_reg_4321 <= select_ln425_55_fu_2940_p3;
        select_ln425_58_reg_4331 <= select_ln425_58_fu_2957_p3;
        select_ln425_61_reg_4341 <= select_ln425_61_fu_2974_p3;
        select_ln425_64_reg_4351 <= select_ln425_64_fu_2991_p3;
        select_ln425_67_reg_4361 <= select_ln425_67_fu_3008_p3;
        select_ln425_70_reg_4371 <= select_ln425_70_fu_3025_p3;
        select_ln425_7_reg_4201 <= select_ln425_7_fu_2668_p3;
        select_ln443_25_reg_4469 <= select_ln443_25_fu_3250_p3;
        select_ln443_28_reg_4479 <= select_ln443_28_fu_3267_p3;
        select_ln443_31_reg_4489 <= select_ln443_31_fu_3284_p3;
        select_ln443_34_reg_4499 <= select_ln443_34_fu_3301_p3;
        select_ln443_37_reg_4509 <= select_ln443_37_fu_3318_p3;
        select_ln443_40_reg_4519 <= select_ln443_40_fu_3335_p3;
        select_ln443_43_reg_4529 <= select_ln443_43_fu_3352_p3;
        select_ln443_46_reg_4539 <= select_ln443_46_fu_3369_p3;
        select_ln461_11_reg_4586 <= select_ln461_11_fu_3410_p3;
        select_ln461_14_reg_4598 <= select_ln461_14_fu_3418_p3;
        select_ln461_17_reg_4610 <= select_ln461_17_fu_3426_p3;
        select_ln461_20_reg_4622 <= select_ln461_20_fu_3434_p3;
        select_ln461_23_reg_4634 <= select_ln461_23_fu_3442_p3;
        select_ln461_2_reg_4550 <= select_ln461_2_fu_3386_p3;
        select_ln461_5_reg_4562 <= select_ln461_5_fu_3394_p3;
        select_ln461_8_reg_4574 <= select_ln461_8_fu_3402_p3;
        slcvec_angle_polar_o_reg_4171 <= slcvec_angle_polar_offset_mrad_V;
        slcvec_angle_polar_o_reg_4171_pp0_iter1_reg <= slcvec_angle_polar_o_reg_4171;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_in == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_data_reg <= res_max_bin_count_t_2_reg_4666;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_in == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_data_reg <= tmp_V_fu_4091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_in == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_data_reg <= res_max_bin_theta_t_2_fu_4080_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_count_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_count_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_r_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_theta_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_4135_p2 = (zext_ln703_2_fu_4131_p1 + slcvec_angle_polar_o_reg_4171_pp0_iter1_reg);

assign add_ln703_2_fu_4160_p2 = (zext_ln708_fu_4155_p1 + roi_seed_r_V_read_reg_4166_pp0_iter1_reg);

assign add_ln703_fu_4121_p2 = ($signed(zext_ln703_fu_4112_p1) + $signed(12'd2189));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign hls_LT_r_V = hls_LT_r_V_1_data_reg;

assign hls_LT_r_V_ap_vld = hls_LT_r_V_1_vld_reg;

assign hls_LT_r_global_V = hls_LT_r_global_V_1_data_reg;

assign hls_LT_r_global_V_ap_vld = hls_LT_r_global_V_1_vld_reg;

assign hls_LT_theta_V = hls_LT_theta_V_1_data_reg;

assign hls_LT_theta_V_ap_vld = hls_LT_theta_V_1_vld_reg;

assign hls_LT_theta_global_V = hls_LT_theta_global_V_1_data_reg;

assign hls_LT_theta_global_V_ap_vld = hls_LT_theta_global_V_1_vld_reg;

assign icmp_ln895_100_fu_2010_p2 = ((select_ln425_11_fu_2693_p3 > select_ln425_59_fu_2965_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_101_fu_2014_p2 = ((select_ln425_14_fu_2710_p3 > select_ln425_62_fu_2982_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_102_fu_2018_p2 = ((select_ln425_17_fu_2727_p3 > select_ln425_65_fu_2999_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_103_fu_2022_p2 = ((select_ln425_20_fu_2744_p3 > select_ln425_68_fu_3016_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_104_fu_2026_p2 = ((select_ln425_23_fu_2761_p3 > select_ln425_71_fu_3033_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_105_fu_2030_p2 = ((select_ln425_26_fu_2778_p3 > select_ln425_74_fu_3050_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_106_fu_2034_p2 = ((select_ln425_29_fu_2795_p3 > select_ln425_77_fu_3067_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_107_fu_2038_p2 = ((select_ln425_32_fu_2812_p3 > select_ln425_80_fu_3084_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_108_fu_2042_p2 = ((select_ln425_35_fu_2829_p3 > select_ln425_83_fu_3101_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_109_fu_2046_p2 = ((select_ln425_38_fu_2846_p3 > select_ln425_86_fu_3118_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_10_fu_1482_p2 = ((max_bin_count_10_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_110_fu_2050_p2 = ((select_ln425_41_fu_2863_p3 > select_ln425_89_fu_3135_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_111_fu_2054_p2 = ((select_ln425_44_fu_2880_p3 > select_ln425_92_fu_3152_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_112_fu_2058_p2 = ((select_ln425_47_fu_2897_p3 > select_ln425_95_fu_3169_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_113_fu_2062_p2 = ((select_ln443_2_fu_3178_p3 > select_ln443_26_fu_3258_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_114_fu_2066_p2 = ((select_ln443_5_fu_3187_p3 > select_ln443_29_fu_3275_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_115_fu_2070_p2 = ((select_ln443_8_fu_3196_p3 > select_ln443_32_fu_3292_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_116_fu_2074_p2 = ((select_ln443_11_fu_3205_p3 > select_ln443_35_fu_3309_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_117_fu_2078_p2 = ((select_ln443_14_fu_3214_p3 > select_ln443_38_fu_3326_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_118_fu_2082_p2 = ((select_ln443_17_fu_3223_p3 > select_ln443_41_fu_3343_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_119_fu_2086_p2 = ((select_ln443_20_fu_3232_p3 > select_ln443_44_fu_3360_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_1488_p2 = ((max_bin_count_11_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_120_fu_2090_p2 = ((select_ln443_23_fu_3241_p3 > select_ln443_47_fu_3377_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_121_fu_2094_p2 = ((select_ln461_2_reg_4550 > select_ln461_14_reg_4598) ? 1'b1 : 1'b0);

assign icmp_ln895_122_fu_2098_p2 = ((select_ln461_5_reg_4562 > select_ln461_17_reg_4610) ? 1'b1 : 1'b0);

assign icmp_ln895_123_fu_2102_p2 = ((select_ln461_8_reg_4574 > select_ln461_20_reg_4622) ? 1'b1 : 1'b0);

assign icmp_ln895_124_fu_2106_p2 = ((select_ln461_11_reg_4586 > select_ln461_23_reg_4634) ? 1'b1 : 1'b0);

assign icmp_ln895_125_fu_2110_p2 = ((select_ln479_2_fu_3946_p3 > select_ln479_8_fu_3992_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_126_fu_2114_p2 = ((select_ln479_5_fu_3969_p3 > select_ln479_11_fu_4015_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_1494_p2 = ((max_bin_count_12_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_1500_p2 = ((max_bin_count_13_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_1506_p2 = ((max_bin_count_14_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_15_fu_1512_p2 = ((max_bin_count_15_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_16_fu_1518_p2 = ((max_bin_count_16_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_17_fu_1524_p2 = ((max_bin_count_17_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_18_fu_1530_p2 = ((max_bin_count_18_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_19_fu_1536_p2 = ((max_bin_count_19_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_1428_p2 = ((max_bin_count_1_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_20_fu_1542_p2 = ((max_bin_count_20_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_21_fu_1548_p2 = ((max_bin_count_21_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_22_fu_1554_p2 = ((max_bin_count_22_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_23_fu_1560_p2 = ((max_bin_count_23_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_24_fu_1566_p2 = ((max_bin_count_24_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_25_fu_1572_p2 = ((max_bin_count_25_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_26_fu_1578_p2 = ((max_bin_count_26_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_27_fu_1584_p2 = ((max_bin_count_27_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_28_fu_1590_p2 = ((max_bin_count_28_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_29_fu_1596_p2 = ((max_bin_count_29_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_1434_p2 = ((max_bin_count_2_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_30_fu_1602_p2 = ((max_bin_count_30_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_31_fu_1608_p2 = ((max_bin_count_31_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_32_fu_1614_p2 = ((max_bin_count_32_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_33_fu_1620_p2 = ((max_bin_count_33_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_34_fu_1626_p2 = ((max_bin_count_34_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_35_fu_1632_p2 = ((max_bin_count_35_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_36_fu_1638_p2 = ((max_bin_count_36_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_37_fu_1644_p2 = ((max_bin_count_37_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_38_fu_1650_p2 = ((max_bin_count_38_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_39_fu_1656_p2 = ((max_bin_count_39_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_1440_p2 = ((max_bin_count_3_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_40_fu_1662_p2 = ((max_bin_count_40_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_41_fu_1668_p2 = ((max_bin_count_41_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_42_fu_1674_p2 = ((max_bin_count_42_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_43_fu_1680_p2 = ((max_bin_count_43_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_44_fu_1686_p2 = ((max_bin_count_44_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_45_fu_1692_p2 = ((max_bin_count_45_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_46_fu_1698_p2 = ((max_bin_count_46_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_47_fu_1704_p2 = ((max_bin_count_47_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_48_fu_1710_p2 = ((max_bin_count_48_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_49_fu_1716_p2 = ((max_bin_count_49_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_1446_p2 = ((max_bin_count_4_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_50_fu_1722_p2 = ((max_bin_count_50_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_51_fu_1728_p2 = ((max_bin_count_51_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_52_fu_1734_p2 = ((max_bin_count_52_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_53_fu_1740_p2 = ((max_bin_count_53_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_54_fu_1746_p2 = ((max_bin_count_54_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_55_fu_1752_p2 = ((max_bin_count_55_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_56_fu_1758_p2 = ((max_bin_count_56_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_57_fu_1764_p2 = ((max_bin_count_57_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_58_fu_1770_p2 = ((max_bin_count_58_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_59_fu_1776_p2 = ((max_bin_count_59_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_2118_p2 = ((res_max_bin_count_t_s_fu_4038_p3 > res_max_bin_count_t_1_fu_4063_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_60_fu_1782_p2 = ((max_bin_count_60_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_61_fu_1788_p2 = ((max_bin_count_61_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_62_fu_1794_p2 = ((max_bin_count_62_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_63_fu_1800_p2 = ((max_bin_count_63_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_64_fu_1458_p2 = ((max_bin_count_6_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_65_fu_1806_p2 = ((max_bin_count_0_V > max_bin_count_32_V) ? 1'b1 : 1'b0);

assign icmp_ln895_66_fu_1812_p2 = ((max_bin_count_1_V > max_bin_count_33_V) ? 1'b1 : 1'b0);

assign icmp_ln895_67_fu_1818_p2 = ((max_bin_count_2_V > max_bin_count_34_V) ? 1'b1 : 1'b0);

assign icmp_ln895_68_fu_1824_p2 = ((max_bin_count_3_V > max_bin_count_35_V) ? 1'b1 : 1'b0);

assign icmp_ln895_69_fu_1830_p2 = ((max_bin_count_4_V > max_bin_count_36_V) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_1452_p2 = ((max_bin_count_5_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_70_fu_1836_p2 = ((max_bin_count_5_V > max_bin_count_37_V) ? 1'b1 : 1'b0);

assign icmp_ln895_71_fu_1842_p2 = ((max_bin_count_6_V > max_bin_count_38_V) ? 1'b1 : 1'b0);

assign icmp_ln895_72_fu_1848_p2 = ((max_bin_count_7_V > max_bin_count_39_V) ? 1'b1 : 1'b0);

assign icmp_ln895_73_fu_1854_p2 = ((max_bin_count_8_V > max_bin_count_40_V) ? 1'b1 : 1'b0);

assign icmp_ln895_74_fu_1860_p2 = ((max_bin_count_9_V > max_bin_count_41_V) ? 1'b1 : 1'b0);

assign icmp_ln895_75_fu_1866_p2 = ((max_bin_count_10_V > max_bin_count_42_V) ? 1'b1 : 1'b0);

assign icmp_ln895_76_fu_1872_p2 = ((max_bin_count_11_V > max_bin_count_43_V) ? 1'b1 : 1'b0);

assign icmp_ln895_77_fu_1878_p2 = ((max_bin_count_12_V > max_bin_count_44_V) ? 1'b1 : 1'b0);

assign icmp_ln895_78_fu_1884_p2 = ((max_bin_count_13_V > max_bin_count_45_V) ? 1'b1 : 1'b0);

assign icmp_ln895_79_fu_1890_p2 = ((max_bin_count_14_V > max_bin_count_46_V) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_1464_p2 = ((max_bin_count_7_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_80_fu_1896_p2 = ((max_bin_count_15_V > max_bin_count_47_V) ? 1'b1 : 1'b0);

assign icmp_ln895_81_fu_1902_p2 = ((max_bin_count_16_V > max_bin_count_48_V) ? 1'b1 : 1'b0);

assign icmp_ln895_82_fu_1908_p2 = ((max_bin_count_17_V > max_bin_count_49_V) ? 1'b1 : 1'b0);

assign icmp_ln895_83_fu_1914_p2 = ((max_bin_count_18_V > max_bin_count_50_V) ? 1'b1 : 1'b0);

assign icmp_ln895_84_fu_1920_p2 = ((max_bin_count_19_V > max_bin_count_51_V) ? 1'b1 : 1'b0);

assign icmp_ln895_85_fu_1926_p2 = ((max_bin_count_20_V > max_bin_count_52_V) ? 1'b1 : 1'b0);

assign icmp_ln895_86_fu_1932_p2 = ((max_bin_count_21_V > max_bin_count_53_V) ? 1'b1 : 1'b0);

assign icmp_ln895_87_fu_1938_p2 = ((max_bin_count_22_V > max_bin_count_54_V) ? 1'b1 : 1'b0);

assign icmp_ln895_88_fu_1944_p2 = ((max_bin_count_23_V > max_bin_count_55_V) ? 1'b1 : 1'b0);

assign icmp_ln895_89_fu_1950_p2 = ((max_bin_count_24_V > max_bin_count_56_V) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_1470_p2 = ((max_bin_count_8_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_90_fu_1956_p2 = ((max_bin_count_25_V > max_bin_count_57_V) ? 1'b1 : 1'b0);

assign icmp_ln895_91_fu_1962_p2 = ((max_bin_count_26_V > max_bin_count_58_V) ? 1'b1 : 1'b0);

assign icmp_ln895_92_fu_1968_p2 = ((max_bin_count_27_V > max_bin_count_59_V) ? 1'b1 : 1'b0);

assign icmp_ln895_93_fu_1974_p2 = ((max_bin_count_28_V > max_bin_count_60_V) ? 1'b1 : 1'b0);

assign icmp_ln895_94_fu_1980_p2 = ((max_bin_count_29_V > max_bin_count_61_V) ? 1'b1 : 1'b0);

assign icmp_ln895_95_fu_1986_p2 = ((max_bin_count_30_V > max_bin_count_62_V) ? 1'b1 : 1'b0);

assign icmp_ln895_96_fu_1992_p2 = ((max_bin_count_31_V > max_bin_count_63_V) ? 1'b1 : 1'b0);

assign icmp_ln895_97_fu_1998_p2 = ((select_ln425_2_fu_2642_p3 > select_ln425_50_fu_2914_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_98_fu_2002_p2 = ((select_ln425_5_fu_2659_p3 > select_ln425_53_fu_2931_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_99_fu_2006_p2 = ((select_ln425_8_fu_2676_p3 > select_ln425_56_fu_2948_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_1476_p2 = ((max_bin_count_9_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_1422_p2 = ((max_bin_count_0_V == 4'd0) ? 1'b1 : 1'b0);

assign p_Val2_2_fu_4106_p2 = (t0_V_fu_4098_p3 | 8'd2);

assign p_Val2_4_fu_4149_p2 = (shl_ln_fu_4141_p3 | 12'd32);

assign res_max_bin_count_V = res_max_bin_count_V_1_data_reg;

assign res_max_bin_count_V_ap_vld = res_max_bin_count_V_1_vld_reg;

assign res_max_bin_count_t_1_fu_4063_p3 = ((icmp_ln895_126_fu_2114_p2[0:0] === 1'b1) ? select_ln479_5_fu_3969_p3 : select_ln479_11_fu_4015_p3);

assign res_max_bin_count_t_2_fu_4072_p3 = ((icmp_ln895_5_fu_2118_p2[0:0] === 1'b1) ? res_max_bin_count_t_s_fu_4038_p3 : res_max_bin_count_t_1_fu_4063_p3);

assign res_max_bin_count_t_s_fu_4038_p3 = ((icmp_ln895_125_fu_2110_p2[0:0] === 1'b1) ? select_ln479_2_fu_3946_p3 : select_ln479_8_fu_3992_p3);

assign res_max_bin_r_V = res_max_bin_r_V_1_data_reg;

assign res_max_bin_r_V_ap_vld = res_max_bin_r_V_1_vld_reg;

assign res_max_bin_r_t_V_1_fu_4055_p3 = ((icmp_ln895_126_fu_2114_p2[0:0] === 1'b1) ? select_ln479_4_fu_3961_p3 : select_ln479_10_fu_4007_p3);

assign res_max_bin_r_t_V_2_fu_4086_p3 = ((icmp_ln895_5_reg_4660[0:0] === 1'b1) ? res_max_bin_r_t_V_reg_4645 : res_max_bin_r_t_V_1_reg_4655);

assign res_max_bin_r_t_V_fu_4030_p3 = ((icmp_ln895_125_fu_2110_p2[0:0] === 1'b1) ? select_ln479_1_fu_3938_p3 : select_ln479_7_fu_3984_p3);

assign res_max_bin_theta_V = res_max_bin_theta_V_1_data_reg;

assign res_max_bin_theta_V_ap_vld = res_max_bin_theta_V_1_vld_reg;

assign res_max_bin_theta_t_1_fu_4047_p3 = ((icmp_ln895_126_fu_2114_p2[0:0] === 1'b1) ? select_ln479_3_fu_3953_p3 : select_ln479_9_fu_3999_p3);

assign res_max_bin_theta_t_2_fu_4080_p3 = ((icmp_ln895_5_reg_4660[0:0] === 1'b1) ? res_max_bin_theta_t_s_reg_4640 : res_max_bin_theta_t_1_reg_4650);

assign res_max_bin_theta_t_s_fu_4022_p3 = ((icmp_ln895_125_fu_2110_p2[0:0] === 1'b1) ? select_ln479_fu_3930_p3 : select_ln479_6_fu_3976_p3);

assign select_ln407_10_fu_2202_p3 = ((icmp_ln895_10_fu_1482_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_10_V);

assign select_ln407_11_fu_2210_p3 = ((icmp_ln895_11_fu_1488_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_11_V);

assign select_ln407_12_fu_2218_p3 = ((icmp_ln895_12_fu_1494_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_12_V);

assign select_ln407_13_fu_2226_p3 = ((icmp_ln895_13_fu_1500_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_13_V);

assign select_ln407_14_fu_2234_p3 = ((icmp_ln895_14_fu_1506_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_14_V);

assign select_ln407_15_fu_2242_p3 = ((icmp_ln895_15_fu_1512_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_15_V);

assign select_ln407_16_fu_2250_p3 = ((icmp_ln895_16_fu_1518_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_16_V);

assign select_ln407_17_fu_2258_p3 = ((icmp_ln895_17_fu_1524_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_17_V);

assign select_ln407_18_fu_2266_p3 = ((icmp_ln895_18_fu_1530_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_18_V);

assign select_ln407_19_fu_2274_p3 = ((icmp_ln895_19_fu_1536_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_19_V);

assign select_ln407_1_fu_2130_p3 = ((icmp_ln895_1_fu_1428_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_1_V);

assign select_ln407_20_fu_2282_p3 = ((icmp_ln895_20_fu_1542_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_20_V);

assign select_ln407_21_fu_2290_p3 = ((icmp_ln895_21_fu_1548_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_21_V);

assign select_ln407_22_fu_2298_p3 = ((icmp_ln895_22_fu_1554_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_22_V);

assign select_ln407_23_fu_2306_p3 = ((icmp_ln895_23_fu_1560_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_23_V);

assign select_ln407_24_fu_2314_p3 = ((icmp_ln895_24_fu_1566_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_24_V);

assign select_ln407_25_fu_2322_p3 = ((icmp_ln895_25_fu_1572_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_25_V);

assign select_ln407_26_fu_2330_p3 = ((icmp_ln895_26_fu_1578_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_26_V);

assign select_ln407_27_fu_2338_p3 = ((icmp_ln895_27_fu_1584_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_27_V);

assign select_ln407_28_fu_2346_p3 = ((icmp_ln895_28_fu_1590_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_28_V);

assign select_ln407_29_fu_2354_p3 = ((icmp_ln895_29_fu_1596_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_29_V);

assign select_ln407_2_fu_2138_p3 = ((icmp_ln895_2_fu_1434_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_2_V);

assign select_ln407_30_fu_2362_p3 = ((icmp_ln895_30_fu_1602_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_30_V);

assign select_ln407_31_fu_2370_p3 = ((icmp_ln895_31_fu_1608_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_31_V);

assign select_ln407_32_fu_2378_p3 = ((icmp_ln895_32_fu_1614_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_32_V);

assign select_ln407_33_fu_2386_p3 = ((icmp_ln895_33_fu_1620_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_33_V);

assign select_ln407_34_fu_2394_p3 = ((icmp_ln895_34_fu_1626_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_34_V);

assign select_ln407_35_fu_2402_p3 = ((icmp_ln895_35_fu_1632_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_35_V);

assign select_ln407_36_fu_2410_p3 = ((icmp_ln895_36_fu_1638_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_36_V);

assign select_ln407_37_fu_2418_p3 = ((icmp_ln895_37_fu_1644_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_37_V);

assign select_ln407_38_fu_2426_p3 = ((icmp_ln895_38_fu_1650_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_38_V);

assign select_ln407_39_fu_2434_p3 = ((icmp_ln895_39_fu_1656_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_39_V);

assign select_ln407_3_fu_2146_p3 = ((icmp_ln895_3_fu_1440_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_3_V);

assign select_ln407_40_fu_2442_p3 = ((icmp_ln895_40_fu_1662_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_40_V);

assign select_ln407_41_fu_2450_p3 = ((icmp_ln895_41_fu_1668_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_41_V);

assign select_ln407_42_fu_2458_p3 = ((icmp_ln895_42_fu_1674_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_42_V);

assign select_ln407_43_fu_2466_p3 = ((icmp_ln895_43_fu_1680_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_43_V);

assign select_ln407_44_fu_2474_p3 = ((icmp_ln895_44_fu_1686_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_44_V);

assign select_ln407_45_fu_2482_p3 = ((icmp_ln895_45_fu_1692_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_45_V);

assign select_ln407_46_fu_2490_p3 = ((icmp_ln895_46_fu_1698_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_46_V);

assign select_ln407_47_fu_2498_p3 = ((icmp_ln895_47_fu_1704_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_47_V);

assign select_ln407_48_fu_2506_p3 = ((icmp_ln895_48_fu_1710_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_48_V);

assign select_ln407_49_fu_2514_p3 = ((icmp_ln895_49_fu_1716_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_49_V);

assign select_ln407_4_fu_2154_p3 = ((icmp_ln895_4_fu_1446_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_4_V);

assign select_ln407_50_fu_2522_p3 = ((icmp_ln895_50_fu_1722_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_50_V);

assign select_ln407_51_fu_2530_p3 = ((icmp_ln895_51_fu_1728_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_51_V);

assign select_ln407_52_fu_2538_p3 = ((icmp_ln895_52_fu_1734_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_52_V);

assign select_ln407_53_fu_2546_p3 = ((icmp_ln895_53_fu_1740_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_53_V);

assign select_ln407_54_fu_2554_p3 = ((icmp_ln895_54_fu_1746_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_54_V);

assign select_ln407_55_fu_2562_p3 = ((icmp_ln895_55_fu_1752_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_55_V);

assign select_ln407_56_fu_2570_p3 = ((icmp_ln895_56_fu_1758_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_56_V);

assign select_ln407_57_fu_2578_p3 = ((icmp_ln895_57_fu_1764_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_57_V);

assign select_ln407_58_fu_2586_p3 = ((icmp_ln895_58_fu_1770_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_58_V);

assign select_ln407_59_fu_2594_p3 = ((icmp_ln895_59_fu_1776_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_59_V);

assign select_ln407_5_fu_2162_p3 = ((icmp_ln895_6_fu_1452_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_5_V);

assign select_ln407_60_fu_2602_p3 = ((icmp_ln895_60_fu_1782_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_60_V);

assign select_ln407_61_fu_2610_p3 = ((icmp_ln895_61_fu_1788_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_61_V);

assign select_ln407_62_fu_2618_p3 = ((icmp_ln895_62_fu_1794_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_62_V);

assign select_ln407_63_fu_2626_p3 = ((icmp_ln895_63_fu_1800_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_63_V);

assign select_ln407_6_fu_2170_p3 = ((icmp_ln895_64_fu_1458_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_6_V);

assign select_ln407_7_fu_2178_p3 = ((icmp_ln895_7_fu_1464_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_7_V);

assign select_ln407_8_fu_2186_p3 = ((icmp_ln895_8_fu_1470_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_8_V);

assign select_ln407_9_fu_2194_p3 = ((icmp_ln895_9_fu_1476_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_9_V);

assign select_ln407_fu_2122_p3 = ((icmp_ln895_fu_1422_p2[0:0] === 1'b1) ? 6'd0 : max_bin_r_0_V);

assign select_ln425_10_fu_2685_p3 = ((icmp_ln895_68_fu_1824_p2[0:0] === 1'b1) ? select_ln407_3_fu_2146_p3 : select_ln407_35_fu_2402_p3);

assign select_ln425_11_fu_2693_p3 = ((icmp_ln895_68_fu_1824_p2[0:0] === 1'b1) ? max_bin_count_3_V : max_bin_count_35_V);

assign select_ln425_12_fu_3478_p3 = ((icmp_ln895_69_reg_4216[0:0] === 1'b1) ? 6'd4 : 6'd36);

assign select_ln425_13_fu_2702_p3 = ((icmp_ln895_69_fu_1830_p2[0:0] === 1'b1) ? select_ln407_4_fu_2154_p3 : select_ln407_36_fu_2410_p3);

assign select_ln425_14_fu_2710_p3 = ((icmp_ln895_69_fu_1830_p2[0:0] === 1'b1) ? max_bin_count_4_V : max_bin_count_36_V);

assign select_ln425_15_fu_3485_p3 = ((icmp_ln895_70_reg_4226[0:0] === 1'b1) ? 6'd5 : 6'd37);

assign select_ln425_16_fu_2719_p3 = ((icmp_ln895_70_fu_1836_p2[0:0] === 1'b1) ? select_ln407_5_fu_2162_p3 : select_ln407_37_fu_2418_p3);

assign select_ln425_17_fu_2727_p3 = ((icmp_ln895_70_fu_1836_p2[0:0] === 1'b1) ? max_bin_count_5_V : max_bin_count_37_V);

assign select_ln425_18_fu_3492_p3 = ((icmp_ln895_71_reg_4236[0:0] === 1'b1) ? 6'd6 : 6'd38);

assign select_ln425_19_fu_2736_p3 = ((icmp_ln895_71_fu_1842_p2[0:0] === 1'b1) ? select_ln407_6_fu_2170_p3 : select_ln407_38_fu_2426_p3);

assign select_ln425_1_fu_2634_p3 = ((icmp_ln895_65_fu_1806_p2[0:0] === 1'b1) ? select_ln407_fu_2122_p3 : select_ln407_32_fu_2378_p3);

assign select_ln425_20_fu_2744_p3 = ((icmp_ln895_71_fu_1842_p2[0:0] === 1'b1) ? max_bin_count_6_V : max_bin_count_38_V);

assign select_ln425_21_fu_3499_p3 = ((icmp_ln895_72_reg_4246[0:0] === 1'b1) ? 6'd7 : 6'd39);

assign select_ln425_22_fu_2753_p3 = ((icmp_ln895_72_fu_1848_p2[0:0] === 1'b1) ? select_ln407_7_fu_2178_p3 : select_ln407_39_fu_2434_p3);

assign select_ln425_23_fu_2761_p3 = ((icmp_ln895_72_fu_1848_p2[0:0] === 1'b1) ? max_bin_count_7_V : max_bin_count_39_V);

assign select_ln425_24_fu_3506_p3 = ((icmp_ln895_73_reg_4256[0:0] === 1'b1) ? 6'd8 : 6'd40);

assign select_ln425_25_fu_2770_p3 = ((icmp_ln895_73_fu_1854_p2[0:0] === 1'b1) ? select_ln407_8_fu_2186_p3 : select_ln407_40_fu_2442_p3);

assign select_ln425_26_fu_2778_p3 = ((icmp_ln895_73_fu_1854_p2[0:0] === 1'b1) ? max_bin_count_8_V : max_bin_count_40_V);

assign select_ln425_27_fu_3513_p3 = ((icmp_ln895_74_reg_4261[0:0] === 1'b1) ? 6'd9 : 6'd41);

assign select_ln425_28_fu_2787_p3 = ((icmp_ln895_74_fu_1860_p2[0:0] === 1'b1) ? select_ln407_9_fu_2194_p3 : select_ln407_41_fu_2450_p3);

assign select_ln425_29_fu_2795_p3 = ((icmp_ln895_74_fu_1860_p2[0:0] === 1'b1) ? max_bin_count_9_V : max_bin_count_41_V);

assign select_ln425_2_fu_2642_p3 = ((icmp_ln895_65_fu_1806_p2[0:0] === 1'b1) ? max_bin_count_0_V : max_bin_count_32_V);

assign select_ln425_30_fu_3520_p3 = ((icmp_ln895_75_reg_4266[0:0] === 1'b1) ? 6'd10 : 6'd42);

assign select_ln425_31_fu_2804_p3 = ((icmp_ln895_75_fu_1866_p2[0:0] === 1'b1) ? select_ln407_10_fu_2202_p3 : select_ln407_42_fu_2458_p3);

assign select_ln425_32_fu_2812_p3 = ((icmp_ln895_75_fu_1866_p2[0:0] === 1'b1) ? max_bin_count_10_V : max_bin_count_42_V);

assign select_ln425_33_fu_3527_p3 = ((icmp_ln895_76_reg_4271[0:0] === 1'b1) ? 6'd11 : 6'd43);

assign select_ln425_34_fu_2821_p3 = ((icmp_ln895_76_fu_1872_p2[0:0] === 1'b1) ? select_ln407_11_fu_2210_p3 : select_ln407_43_fu_2466_p3);

assign select_ln425_35_fu_2829_p3 = ((icmp_ln895_76_fu_1872_p2[0:0] === 1'b1) ? max_bin_count_11_V : max_bin_count_43_V);

assign select_ln425_36_fu_3534_p3 = ((icmp_ln895_77_reg_4276[0:0] === 1'b1) ? 6'd12 : 6'd44);

assign select_ln425_37_fu_2838_p3 = ((icmp_ln895_77_fu_1878_p2[0:0] === 1'b1) ? select_ln407_12_fu_2218_p3 : select_ln407_44_fu_2474_p3);

assign select_ln425_38_fu_2846_p3 = ((icmp_ln895_77_fu_1878_p2[0:0] === 1'b1) ? max_bin_count_12_V : max_bin_count_44_V);

assign select_ln425_39_fu_3541_p3 = ((icmp_ln895_78_reg_4281[0:0] === 1'b1) ? 6'd13 : 6'd45);

assign select_ln425_3_fu_3457_p3 = ((icmp_ln895_66_reg_4186[0:0] === 1'b1) ? 6'd1 : 6'd33);

assign select_ln425_40_fu_2855_p3 = ((icmp_ln895_78_fu_1884_p2[0:0] === 1'b1) ? select_ln407_13_fu_2226_p3 : select_ln407_45_fu_2482_p3);

assign select_ln425_41_fu_2863_p3 = ((icmp_ln895_78_fu_1884_p2[0:0] === 1'b1) ? max_bin_count_13_V : max_bin_count_45_V);

assign select_ln425_42_fu_3548_p3 = ((icmp_ln895_79_reg_4286[0:0] === 1'b1) ? 6'd14 : 6'd46);

assign select_ln425_43_fu_2872_p3 = ((icmp_ln895_79_fu_1890_p2[0:0] === 1'b1) ? select_ln407_14_fu_2234_p3 : select_ln407_46_fu_2490_p3);

assign select_ln425_44_fu_2880_p3 = ((icmp_ln895_79_fu_1890_p2[0:0] === 1'b1) ? max_bin_count_14_V : max_bin_count_46_V);

assign select_ln425_45_fu_3555_p3 = ((icmp_ln895_80_reg_4291[0:0] === 1'b1) ? 6'd15 : 6'd47);

assign select_ln425_46_fu_2889_p3 = ((icmp_ln895_80_fu_1896_p2[0:0] === 1'b1) ? select_ln407_15_fu_2242_p3 : select_ln407_47_fu_2498_p3);

assign select_ln425_47_fu_2897_p3 = ((icmp_ln895_80_fu_1896_p2[0:0] === 1'b1) ? max_bin_count_15_V : max_bin_count_47_V);

assign select_ln425_48_fu_3562_p3 = ((icmp_ln895_81_reg_4296[0:0] === 1'b1) ? 6'd16 : 6'd48);

assign select_ln425_49_fu_2906_p3 = ((icmp_ln895_81_fu_1902_p2[0:0] === 1'b1) ? select_ln407_16_fu_2250_p3 : select_ln407_48_fu_2506_p3);

assign select_ln425_4_fu_2651_p3 = ((icmp_ln895_66_fu_1812_p2[0:0] === 1'b1) ? select_ln407_1_fu_2130_p3 : select_ln407_33_fu_2386_p3);

assign select_ln425_50_fu_2914_p3 = ((icmp_ln895_81_fu_1902_p2[0:0] === 1'b1) ? max_bin_count_16_V : max_bin_count_48_V);

assign select_ln425_51_fu_3569_p3 = ((icmp_ln895_82_reg_4306[0:0] === 1'b1) ? 6'd17 : 6'd49);

assign select_ln425_52_fu_2923_p3 = ((icmp_ln895_82_fu_1908_p2[0:0] === 1'b1) ? select_ln407_17_fu_2258_p3 : select_ln407_49_fu_2514_p3);

assign select_ln425_53_fu_2931_p3 = ((icmp_ln895_82_fu_1908_p2[0:0] === 1'b1) ? max_bin_count_17_V : max_bin_count_49_V);

assign select_ln425_54_fu_3576_p3 = ((icmp_ln895_83_reg_4316[0:0] === 1'b1) ? 6'd18 : 6'd50);

assign select_ln425_55_fu_2940_p3 = ((icmp_ln895_83_fu_1914_p2[0:0] === 1'b1) ? select_ln407_18_fu_2266_p3 : select_ln407_50_fu_2522_p3);

assign select_ln425_56_fu_2948_p3 = ((icmp_ln895_83_fu_1914_p2[0:0] === 1'b1) ? max_bin_count_18_V : max_bin_count_50_V);

assign select_ln425_57_fu_3583_p3 = ((icmp_ln895_84_reg_4326[0:0] === 1'b1) ? 6'd19 : 6'd51);

assign select_ln425_58_fu_2957_p3 = ((icmp_ln895_84_fu_1920_p2[0:0] === 1'b1) ? select_ln407_19_fu_2274_p3 : select_ln407_51_fu_2530_p3);

assign select_ln425_59_fu_2965_p3 = ((icmp_ln895_84_fu_1920_p2[0:0] === 1'b1) ? max_bin_count_19_V : max_bin_count_51_V);

assign select_ln425_5_fu_2659_p3 = ((icmp_ln895_66_fu_1812_p2[0:0] === 1'b1) ? max_bin_count_1_V : max_bin_count_33_V);

assign select_ln425_60_fu_3590_p3 = ((icmp_ln895_85_reg_4336[0:0] === 1'b1) ? 6'd20 : 6'd52);

assign select_ln425_61_fu_2974_p3 = ((icmp_ln895_85_fu_1926_p2[0:0] === 1'b1) ? select_ln407_20_fu_2282_p3 : select_ln407_52_fu_2538_p3);

assign select_ln425_62_fu_2982_p3 = ((icmp_ln895_85_fu_1926_p2[0:0] === 1'b1) ? max_bin_count_20_V : max_bin_count_52_V);

assign select_ln425_63_fu_3597_p3 = ((icmp_ln895_86_reg_4346[0:0] === 1'b1) ? 6'd21 : 6'd53);

assign select_ln425_64_fu_2991_p3 = ((icmp_ln895_86_fu_1932_p2[0:0] === 1'b1) ? select_ln407_21_fu_2290_p3 : select_ln407_53_fu_2546_p3);

assign select_ln425_65_fu_2999_p3 = ((icmp_ln895_86_fu_1932_p2[0:0] === 1'b1) ? max_bin_count_21_V : max_bin_count_53_V);

assign select_ln425_66_fu_3604_p3 = ((icmp_ln895_87_reg_4356[0:0] === 1'b1) ? 6'd22 : 6'd54);

assign select_ln425_67_fu_3008_p3 = ((icmp_ln895_87_fu_1938_p2[0:0] === 1'b1) ? select_ln407_22_fu_2298_p3 : select_ln407_54_fu_2554_p3);

assign select_ln425_68_fu_3016_p3 = ((icmp_ln895_87_fu_1938_p2[0:0] === 1'b1) ? max_bin_count_22_V : max_bin_count_54_V);

assign select_ln425_69_fu_3611_p3 = ((icmp_ln895_88_reg_4366[0:0] === 1'b1) ? 6'd23 : 6'd55);

assign select_ln425_6_fu_3464_p3 = ((icmp_ln895_67_reg_4196[0:0] === 1'b1) ? 6'd2 : 6'd34);

assign select_ln425_70_fu_3025_p3 = ((icmp_ln895_88_fu_1944_p2[0:0] === 1'b1) ? select_ln407_23_fu_2306_p3 : select_ln407_55_fu_2562_p3);

assign select_ln425_71_fu_3033_p3 = ((icmp_ln895_88_fu_1944_p2[0:0] === 1'b1) ? max_bin_count_23_V : max_bin_count_55_V);

assign select_ln425_72_fu_3618_p3 = ((icmp_ln895_89_reg_4376[0:0] === 1'b1) ? 6'd24 : 6'd56);

assign select_ln425_73_fu_3042_p3 = ((icmp_ln895_89_fu_1950_p2[0:0] === 1'b1) ? select_ln407_24_fu_2314_p3 : select_ln407_56_fu_2570_p3);

assign select_ln425_74_fu_3050_p3 = ((icmp_ln895_89_fu_1950_p2[0:0] === 1'b1) ? max_bin_count_24_V : max_bin_count_56_V);

assign select_ln425_75_fu_3625_p3 = ((icmp_ln895_90_reg_4381[0:0] === 1'b1) ? 6'd25 : 6'd57);

assign select_ln425_76_fu_3059_p3 = ((icmp_ln895_90_fu_1956_p2[0:0] === 1'b1) ? select_ln407_25_fu_2322_p3 : select_ln407_57_fu_2578_p3);

assign select_ln425_77_fu_3067_p3 = ((icmp_ln895_90_fu_1956_p2[0:0] === 1'b1) ? max_bin_count_25_V : max_bin_count_57_V);

assign select_ln425_78_fu_3632_p3 = ((icmp_ln895_91_reg_4386[0:0] === 1'b1) ? 6'd26 : 6'd58);

assign select_ln425_79_fu_3076_p3 = ((icmp_ln895_91_fu_1962_p2[0:0] === 1'b1) ? select_ln407_26_fu_2330_p3 : select_ln407_58_fu_2586_p3);

assign select_ln425_7_fu_2668_p3 = ((icmp_ln895_67_fu_1818_p2[0:0] === 1'b1) ? select_ln407_2_fu_2138_p3 : select_ln407_34_fu_2394_p3);

assign select_ln425_80_fu_3084_p3 = ((icmp_ln895_91_fu_1962_p2[0:0] === 1'b1) ? max_bin_count_26_V : max_bin_count_58_V);

assign select_ln425_81_fu_3639_p3 = ((icmp_ln895_92_reg_4391[0:0] === 1'b1) ? 6'd27 : 6'd59);

assign select_ln425_82_fu_3093_p3 = ((icmp_ln895_92_fu_1968_p2[0:0] === 1'b1) ? select_ln407_27_fu_2338_p3 : select_ln407_59_fu_2594_p3);

assign select_ln425_83_fu_3101_p3 = ((icmp_ln895_92_fu_1968_p2[0:0] === 1'b1) ? max_bin_count_27_V : max_bin_count_59_V);

assign select_ln425_84_fu_3646_p3 = ((icmp_ln895_93_reg_4396[0:0] === 1'b1) ? 6'd28 : 6'd60);

assign select_ln425_85_fu_3110_p3 = ((icmp_ln895_93_fu_1974_p2[0:0] === 1'b1) ? select_ln407_28_fu_2346_p3 : select_ln407_60_fu_2602_p3);

assign select_ln425_86_fu_3118_p3 = ((icmp_ln895_93_fu_1974_p2[0:0] === 1'b1) ? max_bin_count_28_V : max_bin_count_60_V);

assign select_ln425_87_fu_3653_p3 = ((icmp_ln895_94_reg_4401[0:0] === 1'b1) ? 6'd29 : 6'd61);

assign select_ln425_88_fu_3127_p3 = ((icmp_ln895_94_fu_1980_p2[0:0] === 1'b1) ? select_ln407_29_fu_2354_p3 : select_ln407_61_fu_2610_p3);

assign select_ln425_89_fu_3135_p3 = ((icmp_ln895_94_fu_1980_p2[0:0] === 1'b1) ? max_bin_count_29_V : max_bin_count_61_V);

assign select_ln425_8_fu_2676_p3 = ((icmp_ln895_67_fu_1818_p2[0:0] === 1'b1) ? max_bin_count_2_V : max_bin_count_34_V);

assign select_ln425_90_fu_3660_p3 = ((icmp_ln895_95_reg_4406[0:0] === 1'b1) ? 6'd30 : 6'd62);

assign select_ln425_91_fu_3144_p3 = ((icmp_ln895_95_fu_1986_p2[0:0] === 1'b1) ? select_ln407_30_fu_2362_p3 : select_ln407_62_fu_2618_p3);

assign select_ln425_92_fu_3152_p3 = ((icmp_ln895_95_fu_1986_p2[0:0] === 1'b1) ? max_bin_count_30_V : max_bin_count_62_V);

assign select_ln425_93_fu_3667_p3 = ((icmp_ln895_96_reg_4411[0:0] === 1'b1) ? 6'd31 : 6'd63);

assign select_ln425_94_fu_3161_p3 = ((icmp_ln895_96_fu_1992_p2[0:0] === 1'b1) ? select_ln407_31_fu_2370_p3 : select_ln407_63_fu_2626_p3);

assign select_ln425_95_fu_3169_p3 = ((icmp_ln895_96_fu_1992_p2[0:0] === 1'b1) ? max_bin_count_31_V : max_bin_count_63_V);

assign select_ln425_9_fu_3471_p3 = ((icmp_ln895_68_reg_4206[0:0] === 1'b1) ? 6'd3 : 6'd35);

assign select_ln425_fu_3450_p3 = ((icmp_ln895_65_reg_4176[0:0] === 1'b1) ? 6'd0 : 6'd32);

assign select_ln443_10_fu_3717_p3 = ((icmp_ln895_100_reg_4434[0:0] === 1'b1) ? select_ln425_10_reg_4211 : select_ln425_58_reg_4331);

assign select_ln443_11_fu_3205_p3 = ((icmp_ln895_100_fu_2010_p2[0:0] === 1'b1) ? select_ln425_11_fu_2693_p3 : select_ln425_59_fu_2965_p3);

assign select_ln443_12_fu_3722_p3 = ((icmp_ln895_101_reg_4440[0:0] === 1'b1) ? select_ln425_12_fu_3478_p3 : select_ln425_60_fu_3590_p3);

assign select_ln443_13_fu_3729_p3 = ((icmp_ln895_101_reg_4440[0:0] === 1'b1) ? select_ln425_13_reg_4221 : select_ln425_61_reg_4341);

assign select_ln443_14_fu_3214_p3 = ((icmp_ln895_101_fu_2014_p2[0:0] === 1'b1) ? select_ln425_14_fu_2710_p3 : select_ln425_62_fu_2982_p3);

assign select_ln443_15_fu_3734_p3 = ((icmp_ln895_102_reg_4446[0:0] === 1'b1) ? select_ln425_15_fu_3485_p3 : select_ln425_63_fu_3597_p3);

assign select_ln443_16_fu_3741_p3 = ((icmp_ln895_102_reg_4446[0:0] === 1'b1) ? select_ln425_16_reg_4231 : select_ln425_64_reg_4351);

assign select_ln443_17_fu_3223_p3 = ((icmp_ln895_102_fu_2018_p2[0:0] === 1'b1) ? select_ln425_17_fu_2727_p3 : select_ln425_65_fu_2999_p3);

assign select_ln443_18_fu_3746_p3 = ((icmp_ln895_103_reg_4452[0:0] === 1'b1) ? select_ln425_18_fu_3492_p3 : select_ln425_66_fu_3604_p3);

assign select_ln443_19_fu_3753_p3 = ((icmp_ln895_103_reg_4452[0:0] === 1'b1) ? select_ln425_19_reg_4241 : select_ln425_67_reg_4361);

assign select_ln443_1_fu_3681_p3 = ((icmp_ln895_97_reg_4416[0:0] === 1'b1) ? select_ln425_1_reg_4181 : select_ln425_49_reg_4301);

assign select_ln443_20_fu_3232_p3 = ((icmp_ln895_103_fu_2022_p2[0:0] === 1'b1) ? select_ln425_20_fu_2744_p3 : select_ln425_68_fu_3016_p3);

assign select_ln443_21_fu_3758_p3 = ((icmp_ln895_104_reg_4458[0:0] === 1'b1) ? select_ln425_21_fu_3499_p3 : select_ln425_69_fu_3611_p3);

assign select_ln443_22_fu_3765_p3 = ((icmp_ln895_104_reg_4458[0:0] === 1'b1) ? select_ln425_22_reg_4251 : select_ln425_70_reg_4371);

assign select_ln443_23_fu_3241_p3 = ((icmp_ln895_104_fu_2026_p2[0:0] === 1'b1) ? select_ln425_23_fu_2761_p3 : select_ln425_71_fu_3033_p3);

assign select_ln443_24_fu_3770_p3 = ((icmp_ln895_105_reg_4464[0:0] === 1'b1) ? select_ln425_24_fu_3506_p3 : select_ln425_72_fu_3618_p3);

assign select_ln443_25_fu_3250_p3 = ((icmp_ln895_105_fu_2030_p2[0:0] === 1'b1) ? select_ln425_25_fu_2770_p3 : select_ln425_73_fu_3042_p3);

assign select_ln443_26_fu_3258_p3 = ((icmp_ln895_105_fu_2030_p2[0:0] === 1'b1) ? select_ln425_26_fu_2778_p3 : select_ln425_74_fu_3050_p3);

assign select_ln443_27_fu_3777_p3 = ((icmp_ln895_106_reg_4474[0:0] === 1'b1) ? select_ln425_27_fu_3513_p3 : select_ln425_75_fu_3625_p3);

assign select_ln443_28_fu_3267_p3 = ((icmp_ln895_106_fu_2034_p2[0:0] === 1'b1) ? select_ln425_28_fu_2787_p3 : select_ln425_76_fu_3059_p3);

assign select_ln443_29_fu_3275_p3 = ((icmp_ln895_106_fu_2034_p2[0:0] === 1'b1) ? select_ln425_29_fu_2795_p3 : select_ln425_77_fu_3067_p3);

assign select_ln443_2_fu_3178_p3 = ((icmp_ln895_97_fu_1998_p2[0:0] === 1'b1) ? select_ln425_2_fu_2642_p3 : select_ln425_50_fu_2914_p3);

assign select_ln443_30_fu_3784_p3 = ((icmp_ln895_107_reg_4484[0:0] === 1'b1) ? select_ln425_30_fu_3520_p3 : select_ln425_78_fu_3632_p3);

assign select_ln443_31_fu_3284_p3 = ((icmp_ln895_107_fu_2038_p2[0:0] === 1'b1) ? select_ln425_31_fu_2804_p3 : select_ln425_79_fu_3076_p3);

assign select_ln443_32_fu_3292_p3 = ((icmp_ln895_107_fu_2038_p2[0:0] === 1'b1) ? select_ln425_32_fu_2812_p3 : select_ln425_80_fu_3084_p3);

assign select_ln443_33_fu_3791_p3 = ((icmp_ln895_108_reg_4494[0:0] === 1'b1) ? select_ln425_33_fu_3527_p3 : select_ln425_81_fu_3639_p3);

assign select_ln443_34_fu_3301_p3 = ((icmp_ln895_108_fu_2042_p2[0:0] === 1'b1) ? select_ln425_34_fu_2821_p3 : select_ln425_82_fu_3093_p3);

assign select_ln443_35_fu_3309_p3 = ((icmp_ln895_108_fu_2042_p2[0:0] === 1'b1) ? select_ln425_35_fu_2829_p3 : select_ln425_83_fu_3101_p3);

assign select_ln443_36_fu_3798_p3 = ((icmp_ln895_109_reg_4504[0:0] === 1'b1) ? select_ln425_36_fu_3534_p3 : select_ln425_84_fu_3646_p3);

assign select_ln443_37_fu_3318_p3 = ((icmp_ln895_109_fu_2046_p2[0:0] === 1'b1) ? select_ln425_37_fu_2838_p3 : select_ln425_85_fu_3110_p3);

assign select_ln443_38_fu_3326_p3 = ((icmp_ln895_109_fu_2046_p2[0:0] === 1'b1) ? select_ln425_38_fu_2846_p3 : select_ln425_86_fu_3118_p3);

assign select_ln443_39_fu_3805_p3 = ((icmp_ln895_110_reg_4514[0:0] === 1'b1) ? select_ln425_39_fu_3541_p3 : select_ln425_87_fu_3653_p3);

assign select_ln443_3_fu_3686_p3 = ((icmp_ln895_98_reg_4422[0:0] === 1'b1) ? select_ln425_3_fu_3457_p3 : select_ln425_51_fu_3569_p3);

assign select_ln443_40_fu_3335_p3 = ((icmp_ln895_110_fu_2050_p2[0:0] === 1'b1) ? select_ln425_40_fu_2855_p3 : select_ln425_88_fu_3127_p3);

assign select_ln443_41_fu_3343_p3 = ((icmp_ln895_110_fu_2050_p2[0:0] === 1'b1) ? select_ln425_41_fu_2863_p3 : select_ln425_89_fu_3135_p3);

assign select_ln443_42_fu_3812_p3 = ((icmp_ln895_111_reg_4524[0:0] === 1'b1) ? select_ln425_42_fu_3548_p3 : select_ln425_90_fu_3660_p3);

assign select_ln443_43_fu_3352_p3 = ((icmp_ln895_111_fu_2054_p2[0:0] === 1'b1) ? select_ln425_43_fu_2872_p3 : select_ln425_91_fu_3144_p3);

assign select_ln443_44_fu_3360_p3 = ((icmp_ln895_111_fu_2054_p2[0:0] === 1'b1) ? select_ln425_44_fu_2880_p3 : select_ln425_92_fu_3152_p3);

assign select_ln443_45_fu_3819_p3 = ((icmp_ln895_112_reg_4534[0:0] === 1'b1) ? select_ln425_45_fu_3555_p3 : select_ln425_93_fu_3667_p3);

assign select_ln443_46_fu_3369_p3 = ((icmp_ln895_112_fu_2058_p2[0:0] === 1'b1) ? select_ln425_46_fu_2889_p3 : select_ln425_94_fu_3161_p3);

assign select_ln443_47_fu_3377_p3 = ((icmp_ln895_112_fu_2058_p2[0:0] === 1'b1) ? select_ln425_47_fu_2897_p3 : select_ln425_95_fu_3169_p3);

assign select_ln443_4_fu_3693_p3 = ((icmp_ln895_98_reg_4422[0:0] === 1'b1) ? select_ln425_4_reg_4191 : select_ln425_52_reg_4311);

assign select_ln443_5_fu_3187_p3 = ((icmp_ln895_98_fu_2002_p2[0:0] === 1'b1) ? select_ln425_5_fu_2659_p3 : select_ln425_53_fu_2931_p3);

assign select_ln443_6_fu_3698_p3 = ((icmp_ln895_99_reg_4428[0:0] === 1'b1) ? select_ln425_6_fu_3464_p3 : select_ln425_54_fu_3576_p3);

assign select_ln443_7_fu_3705_p3 = ((icmp_ln895_99_reg_4428[0:0] === 1'b1) ? select_ln425_7_reg_4201 : select_ln425_55_reg_4321);

assign select_ln443_8_fu_3196_p3 = ((icmp_ln895_99_fu_2006_p2[0:0] === 1'b1) ? select_ln425_8_fu_2676_p3 : select_ln425_56_fu_2948_p3);

assign select_ln443_9_fu_3710_p3 = ((icmp_ln895_100_reg_4434[0:0] === 1'b1) ? select_ln425_9_fu_3471_p3 : select_ln425_57_fu_3583_p3);

assign select_ln443_fu_3674_p3 = ((icmp_ln895_97_reg_4416[0:0] === 1'b1) ? select_ln425_fu_3450_p3 : select_ln425_48_fu_3562_p3);

assign select_ln461_10_fu_3872_p3 = ((icmp_ln895_116_reg_4580[0:0] === 1'b1) ? select_ln443_10_fu_3717_p3 : select_ln443_34_reg_4499);

assign select_ln461_11_fu_3410_p3 = ((icmp_ln895_116_fu_2074_p2[0:0] === 1'b1) ? select_ln443_11_fu_3205_p3 : select_ln443_35_fu_3309_p3);

assign select_ln461_12_fu_3878_p3 = ((icmp_ln895_117_reg_4592[0:0] === 1'b1) ? select_ln443_12_fu_3722_p3 : select_ln443_36_fu_3798_p3);

assign select_ln461_13_fu_3885_p3 = ((icmp_ln895_117_reg_4592[0:0] === 1'b1) ? select_ln443_13_fu_3729_p3 : select_ln443_37_reg_4509);

assign select_ln461_14_fu_3418_p3 = ((icmp_ln895_117_fu_2078_p2[0:0] === 1'b1) ? select_ln443_14_fu_3214_p3 : select_ln443_38_fu_3326_p3);

assign select_ln461_15_fu_3891_p3 = ((icmp_ln895_118_reg_4604[0:0] === 1'b1) ? select_ln443_15_fu_3734_p3 : select_ln443_39_fu_3805_p3);

assign select_ln461_16_fu_3898_p3 = ((icmp_ln895_118_reg_4604[0:0] === 1'b1) ? select_ln443_16_fu_3741_p3 : select_ln443_40_reg_4519);

assign select_ln461_17_fu_3426_p3 = ((icmp_ln895_118_fu_2082_p2[0:0] === 1'b1) ? select_ln443_17_fu_3223_p3 : select_ln443_41_fu_3343_p3);

assign select_ln461_18_fu_3904_p3 = ((icmp_ln895_119_reg_4616[0:0] === 1'b1) ? select_ln443_18_fu_3746_p3 : select_ln443_42_fu_3812_p3);

assign select_ln461_19_fu_3911_p3 = ((icmp_ln895_119_reg_4616[0:0] === 1'b1) ? select_ln443_19_fu_3753_p3 : select_ln443_43_reg_4529);

assign select_ln461_1_fu_3833_p3 = ((icmp_ln895_113_reg_4544[0:0] === 1'b1) ? select_ln443_1_fu_3681_p3 : select_ln443_25_reg_4469);

assign select_ln461_20_fu_3434_p3 = ((icmp_ln895_119_fu_2086_p2[0:0] === 1'b1) ? select_ln443_20_fu_3232_p3 : select_ln443_44_fu_3360_p3);

assign select_ln461_21_fu_3917_p3 = ((icmp_ln895_120_reg_4628[0:0] === 1'b1) ? select_ln443_21_fu_3758_p3 : select_ln443_45_fu_3819_p3);

assign select_ln461_22_fu_3924_p3 = ((icmp_ln895_120_reg_4628[0:0] === 1'b1) ? select_ln443_22_fu_3765_p3 : select_ln443_46_reg_4539);

assign select_ln461_23_fu_3442_p3 = ((icmp_ln895_120_fu_2090_p2[0:0] === 1'b1) ? select_ln443_23_fu_3241_p3 : select_ln443_47_fu_3377_p3);

assign select_ln461_2_fu_3386_p3 = ((icmp_ln895_113_fu_2062_p2[0:0] === 1'b1) ? select_ln443_2_fu_3178_p3 : select_ln443_26_fu_3258_p3);

assign select_ln461_3_fu_3839_p3 = ((icmp_ln895_114_reg_4556[0:0] === 1'b1) ? select_ln443_3_fu_3686_p3 : select_ln443_27_fu_3777_p3);

assign select_ln461_4_fu_3846_p3 = ((icmp_ln895_114_reg_4556[0:0] === 1'b1) ? select_ln443_4_fu_3693_p3 : select_ln443_28_reg_4479);

assign select_ln461_5_fu_3394_p3 = ((icmp_ln895_114_fu_2066_p2[0:0] === 1'b1) ? select_ln443_5_fu_3187_p3 : select_ln443_29_fu_3275_p3);

assign select_ln461_6_fu_3852_p3 = ((icmp_ln895_115_reg_4568[0:0] === 1'b1) ? select_ln443_6_fu_3698_p3 : select_ln443_30_fu_3784_p3);

assign select_ln461_7_fu_3859_p3 = ((icmp_ln895_115_reg_4568[0:0] === 1'b1) ? select_ln443_7_fu_3705_p3 : select_ln443_31_reg_4489);

assign select_ln461_8_fu_3402_p3 = ((icmp_ln895_115_fu_2070_p2[0:0] === 1'b1) ? select_ln443_8_fu_3196_p3 : select_ln443_32_fu_3292_p3);

assign select_ln461_9_fu_3865_p3 = ((icmp_ln895_116_reg_4580[0:0] === 1'b1) ? select_ln443_9_fu_3710_p3 : select_ln443_33_fu_3791_p3);

assign select_ln461_fu_3826_p3 = ((icmp_ln895_113_reg_4544[0:0] === 1'b1) ? select_ln443_fu_3674_p3 : select_ln443_24_fu_3770_p3);

assign select_ln479_10_fu_4007_p3 = ((icmp_ln895_124_fu_2106_p2[0:0] === 1'b1) ? select_ln461_10_fu_3872_p3 : select_ln461_22_fu_3924_p3);

assign select_ln479_11_fu_4015_p3 = ((icmp_ln895_124_fu_2106_p2[0:0] === 1'b1) ? select_ln461_11_reg_4586 : select_ln461_23_reg_4634);

assign select_ln479_1_fu_3938_p3 = ((icmp_ln895_121_fu_2094_p2[0:0] === 1'b1) ? select_ln461_1_fu_3833_p3 : select_ln461_13_fu_3885_p3);

assign select_ln479_2_fu_3946_p3 = ((icmp_ln895_121_fu_2094_p2[0:0] === 1'b1) ? select_ln461_2_reg_4550 : select_ln461_14_reg_4598);

assign select_ln479_3_fu_3953_p3 = ((icmp_ln895_122_fu_2098_p2[0:0] === 1'b1) ? select_ln461_3_fu_3839_p3 : select_ln461_15_fu_3891_p3);

assign select_ln479_4_fu_3961_p3 = ((icmp_ln895_122_fu_2098_p2[0:0] === 1'b1) ? select_ln461_4_fu_3846_p3 : select_ln461_16_fu_3898_p3);

assign select_ln479_5_fu_3969_p3 = ((icmp_ln895_122_fu_2098_p2[0:0] === 1'b1) ? select_ln461_5_reg_4562 : select_ln461_17_reg_4610);

assign select_ln479_6_fu_3976_p3 = ((icmp_ln895_123_fu_2102_p2[0:0] === 1'b1) ? select_ln461_6_fu_3852_p3 : select_ln461_18_fu_3904_p3);

assign select_ln479_7_fu_3984_p3 = ((icmp_ln895_123_fu_2102_p2[0:0] === 1'b1) ? select_ln461_7_fu_3859_p3 : select_ln461_19_fu_3911_p3);

assign select_ln479_8_fu_3992_p3 = ((icmp_ln895_123_fu_2102_p2[0:0] === 1'b1) ? select_ln461_8_reg_4574 : select_ln461_20_reg_4622);

assign select_ln479_9_fu_3999_p3 = ((icmp_ln895_124_fu_2106_p2[0:0] === 1'b1) ? select_ln461_9_fu_3865_p3 : select_ln461_21_fu_3917_p3);

assign select_ln479_fu_3930_p3 = ((icmp_ln895_121_fu_2094_p2[0:0] === 1'b1) ? select_ln461_fu_3826_p3 : select_ln461_12_fu_3878_p3);

assign sext_ln703_fu_4127_p1 = $signed(add_ln703_fu_4121_p2);

assign shl_ln_fu_4141_p3 = {{tmp_V_fu_4091_p2}, {6'd0}};

assign t0_V_fu_4098_p3 = {{res_max_bin_theta_t_2_fu_4080_p3}, {2'd0}};

assign tmp_V_fu_4091_p2 = (res_max_bin_r_t_V_2_fu_4086_p3 + 6'd1);

assign zext_ln703_1_fu_4116_p1 = p_Val2_2_fu_4106_p2;

assign zext_ln703_2_fu_4131_p1 = $unsigned(sext_ln703_fu_4127_p1);

assign zext_ln703_fu_4112_p1 = p_Val2_2_fu_4106_p2;

assign zext_ln708_fu_4155_p1 = p_Val2_4_fu_4149_p2;

always @ (posedge ap_clk) begin
    hls_LT_theta_V_1_data_reg[0] <= 1'b0;
    hls_LT_theta_V_1_data_reg[13:8] <= 6'b000000;
    hls_LT_r_V_1_data_reg[4:0] <= 5'b00000;
    hls_LT_r_V_1_data_reg[21:12] <= 10'b0000000000;
    res_max_bin_theta_t_s_reg_4640[0] <= 1'b0;
    res_max_bin_theta_t_1_reg_4650[0] <= 1'b1;
end

endmodule //find_max_bin_64
