-- This file was auto-generated by YML2HDL tool.
-- https://gitlab.com/tcpaiva/yml2hdl

library ieee;

use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.math_real.all;

package common_ieee is

  procedure assign(
    variable y : out std_logic_vector;
    constant x : in std_logic_vector);
  function convert(x: std_logic_vector; t: std_logic_vector) return std_logic_vector;

  function len(x: std_logic) return natural;
  function len(x: std_logic_vector) return natural;
  function len(x: unsigned) return natural;
  function len(x: signed) return natural;
  function len(x: natural) return natural;

  function structify(x: std_logic_vector; t: signed) return signed;
  function structify(x: std_logic_vector; t: unsigned) return unsigned;
  function structify(x: std_logic_vector; t: std_logic_vector) return std_logic_vector;
  function structify(x: std_logic_vector; t: integer) return integer;
  function structify(x: std_logic_vector; t: std_logic) return std_logic;
  function convert(x: std_logic_vector; t: signed) return signed;
  function convert(x: std_logic_vector; t: unsigned) return unsigned;
  function convert(x: std_logic_vector; t: integer) return integer;
  function convert(x: std_logic_vector; t: std_logic) return std_logic;

  function vectorify(x: signed; t: std_logic_vector) return std_logic_vector;
  function vectorify(x: unsigned; t: std_logic_vector) return std_logic_vector;
  function vectorify(x: std_logic_vector; t: std_logic_vector) return std_logic_vector;
  function vectorify(x: integer; t: std_logic_vector) return std_logic_vector;
  function vectorify(x: std_logic; t: std_logic_vector) return std_logic_vector;
  function convert(x: signed; t: std_logic_vector) return std_logic_vector;
  function convert(x: unsigned; t: std_logic_vector) return std_logic_vector;
  function convert(x: integer; t: std_logic_vector) return std_logic_vector;
  function convert(x: std_logic; t: std_logic_vector) return std_logic_vector;

  function nullify(y: std_logic) return std_logic;
  function nullify(y: std_logic_vector) return std_logic_vector;
  function nullify(y: unsigned) return unsigned;
  function nullify(y: signed) return signed;
  function nullify(y: integer) return integer;

end package common_ieee;

------------------------------------------------------------

package body common_ieee is

  procedure assign(
    variable y : out std_logic_vector;
    constant x : in std_logic_vector) is
    variable tmp : std_logic_vector(y'range);
  begin
    for j in 0 to y'length-1 loop
      y(y'low + j) := x(x'low + j);
    end loop;
  end procedure assign;
  function convert(x: std_logic_vector; t: std_logic_vector) return std_logic_vector is
    variable y : std_logic_vector(t'range);
  begin
    assign(y, x);
    return y;
  end function convert;
  function len(x: std_logic) return natural is
  begin
    return 1;
  end function len;
  function len(x: std_logic_vector) return natural is
  begin
    return x'length;
  end function len;
  function len(x: unsigned) return natural is
  begin
    return x'length;
  end function len;
  function len(x: signed) return natural is
  begin
    return x'length;
  end function len;
  function len(x: natural) return natural is
  begin
    return 32;
  end function len;

  function structify(x: std_logic_vector; t: signed) return signed is
    variable y: signed(t'range);
  begin
    y := signed(x);
    return y;
  end function structify;
  function structify(x: std_logic_vector; t: unsigned) return unsigned is
    variable y: unsigned(t'range);
  begin
    y := unsigned(x);
    return y;
  end function structify;
  function structify(x: std_logic_vector; t: std_logic_vector) return std_logic_vector is
    variable y : std_logic_vector(t'range);
  begin
    assign(y, x);
    return y;
  end function structify;
  function structify(x: std_logic_vector; t: integer) return integer is
    variable y: integer;
  begin
    y := to_integer(unsigned(x));
    return y;
  end function structify;
  function structify(x: std_logic_vector; t: std_logic) return std_logic is
    variable y: std_logic;
  begin
    y := x(x'low);
    return y;
  end function structify;
  function convert(x: std_logic_vector; t: signed) return signed is
    variable y: signed(t'range);
  begin
    y := signed(x);
    return y;
  end function convert;
  function convert(x: std_logic_vector; t: unsigned) return unsigned is
    variable y: unsigned(t'range);
  begin
    y := unsigned(x);
    return y;
  end function convert;
  function convert(x: std_logic_vector; t: integer) return integer is
    variable y: integer;
  begin
    y := to_integer(unsigned(x));
    return y;
  end function convert;
  function convert(x: std_logic_vector; t: std_logic) return std_logic is
    variable y: std_logic;
  begin
    y := x(x'low);
    return y;
  end function convert;

  function vectorify(x: signed; t: std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(x);
  end function vectorify;
  function vectorify(x: unsigned; t: std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(x);
  end function vectorify;
  function vectorify(x: std_logic_vector; t: std_logic_vector) return std_logic_vector is
    variable y : std_logic_vector(t'range);
  begin
    assign(y, x);
    return y;
  end function vectorify;
  function vectorify(x: integer; t: std_logic_vector) return std_logic_vector is
    variable y : std_logic_vector(t'range);
  begin
    assign(y, std_logic_vector(to_unsigned(x, 32)));
    return y;
  end function vectorify;
  function vectorify(x: std_logic; t: std_logic_vector) return std_logic_vector is
    variable y: std_logic_vector(t'range);
  begin
    y(y'low) := x;
    return y;
  end function vectorify;
  function convert(x: signed; t: std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(x);
  end function convert;
  function convert(x: unsigned; t: std_logic_vector) return std_logic_vector is
  begin
    return std_logic_vector(x);
  end function convert;
  function convert(x: integer; t: std_logic_vector) return std_logic_vector is
    variable y : std_logic_vector(t'range);
  begin
    assign(y, std_logic_vector(to_unsigned(x, 32)));
    return y;
  end function convert;
  function convert(x: std_logic; t: std_logic_vector) return std_logic_vector is
    variable y: std_logic_vector(t'range);
  begin
    y(y'low) := x;
    return y;
  end function convert;

  function nullify(y: std_logic) return std_logic is
  begin
      return '0';
  end function nullify;
  function nullify(y: std_logic_vector) return std_logic_vector is
  begin
      return (y'range => '0');
  end function nullify;
  function nullify(y: unsigned) return unsigned is
  begin
    return to_unsigned(0, y'length);
  end function nullify;
  function nullify(y: signed) return signed is
  begin
    return to_signed(0, y'length);
  end function nullify;
  function nullify(y: integer) return integer is
  begin
    return 0;
  end function nullify;

end package body common_ieee;
