--This file was auto-generated.
--Modifications might be lost.
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_misc.all;
use ieee.numeric_std.all;
use work.AXIRegWidthPkg.all;
use work.AXIRegPkg.all;
use work.types.all;

use work.HPS_Ctrl.all;
use work.HPS_Ctrl_DEF.all;


entity HPS_map is
  generic (
    READ_TIMEOUT     : integer := 2048;
    ALLOCATED_MEMORY_RANGE : integer := 131072
    );
  port (
    clk_axi          : in  std_logic;
    reset_axi_n      : in  std_logic;
    slave_readMOSI   : in  AXIReadMOSI;
    slave_readMISO   : out AXIReadMISO  := DefaultAXIReadMISO;
    slave_writeMOSI  : in  AXIWriteMOSI;
    slave_writeMISO  : out AXIWriteMISO := DefaultAXIWriteMISO;
    
    Mon              : in  HPS_Mon_t;
    
    
    Ctrl             : out HPS_Ctrl_t
        
    );
end entity HPS_map;
architecture behavioral of HPS_map is
  signal localAddress       : std_logic_vector(AXI_ADDR_WIDTH-1 downto 0);
  signal localRdData        : slv_32_t;
  signal localRdData_latch  : slv_32_t;
  signal localWrData        : slv_32_t;
  signal localWrEn          : std_logic;
  signal localRdReq         : std_logic;
  signal localRdAck         : std_logic;
  signal regRdAck           : std_logic;

  
  
  signal reg_data :  slv32_array_t(integer range 0 to 20514);
  constant Default_reg_data : slv32_array_t(integer range 0 to 20514) := (others => x"00000000");
begin  -- architecture behavioral

  -------------------------------------------------------------------------------
  -- AXI 
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------
  assert ((4*20514) <= ALLOCATED_MEMORY_RANGE)
    report "HPS: Regmap addressing range " & integer'image(4*20514) & " is outside of AXI mapped range " & integer'image(ALLOCATED_MEMORY_RANGE)
  severity ERROR;
  assert ((4*20514) > ALLOCATED_MEMORY_RANGE)
    report "HPS: Regmap addressing range " & integer'image(4*20514) & " is inside of AXI mapped range " & integer'image(ALLOCATED_MEMORY_RANGE)
  severity NOTE;

  AXIRegBridge : entity work.axiLiteRegBlocking
    generic map (
      READ_TIMEOUT => READ_TIMEOUT
      )
    port map (
      clk_axi     => clk_axi,
      reset_axi_n => reset_axi_n,
      readMOSI    => slave_readMOSI,
      readMISO    => slave_readMISO,
      writeMOSI   => slave_writeMOSI,
      writeMISO   => slave_writeMISO,
      address     => localAddress,
      rd_data     => localRdData_latch,
      wr_data     => localWrData,
      write_en    => localWrEn,
      read_req    => localRdReq,
      read_ack    => localRdAck);

  -------------------------------------------------------------------------------
  -- Record read decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  latch_reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      localRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      localRdAck <= '0';
      
      if regRdAck = '1' then
        localRdData_latch <= localRdData;
        localRdAck <= '1';
      
      end if;
    end if;
  end process latch_reads;

  
  reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      regRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      regRdAck  <= '0';
      localRdData <= x"00000000";
      if localRdReq = '1' then
        regRdAck  <= '1';
        case to_integer(unsigned(localAddress(14 downto 0))) is
          
        when 1 => --0x1
          localRdData( 3 downto  0)  <=  reg_data( 1)( 3 downto  0);                               --
          localRdData( 4)            <=  reg_data( 1)( 4);                                         --
          localRdData( 5)            <=  reg_data( 1)( 5);                                         --
          localRdData( 6)            <=  reg_data( 1)( 6);                                         --
        when 2 => --0x2
          localRdData( 0)            <=  Mon.SUPER.STATUS.ENABLED;                                 --
          localRdData( 1)            <=  Mon.SUPER.STATUS.READY;                                   --
          localRdData(11 downto  4)  <=  Mon.SUPER.STATUS.ERROR;                                   --
        when 4096 => --0x1000
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(0).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4096)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(0).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4096)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4096)( 8 downto  6);                             --sel memory
        when 4098 => --0x1002
          localRdData( 9 downto  0)  <=  reg_data(4098)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4098)(25 downto 16);                             --rd_Address
        when 4099 => --0x1003
          localRdData(31 downto  0)  <=  reg_data(4099)(31 downto  0);                             --Write Data 0
        when 4100 => --0x1004
          localRdData( 5 downto  0)  <=  reg_data(4100)( 5 downto  0);                             --Write Data 1
        when 4101 => --0x1005
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(0).rd_data.rd_data_1;                   --Read Data 1
        when 4102 => --0x1006
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(0).rd_data.rd_data_0;                   --Read Data 0
        when 4112 => --0x1010
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(1).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4112)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(1).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4112)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4112)( 8 downto  6);                             --sel memory
        when 4114 => --0x1012
          localRdData( 9 downto  0)  <=  reg_data(4114)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4114)(25 downto 16);                             --rd_Address
        when 4115 => --0x1013
          localRdData(31 downto  0)  <=  reg_data(4115)(31 downto  0);                             --Write Data 0
        when 4116 => --0x1014
          localRdData( 5 downto  0)  <=  reg_data(4116)( 5 downto  0);                             --Write Data 1
        when 4117 => --0x1015
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(1).rd_data.rd_data_1;                   --Read Data 1
        when 4118 => --0x1016
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(1).rd_data.rd_data_0;                   --Read Data 0
        when 4128 => --0x1020
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(2).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4128)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(2).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4128)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4128)( 8 downto  6);                             --sel memory
        when 4130 => --0x1022
          localRdData( 9 downto  0)  <=  reg_data(4130)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4130)(25 downto 16);                             --rd_Address
        when 4131 => --0x1023
          localRdData(31 downto  0)  <=  reg_data(4131)(31 downto  0);                             --Write Data 0
        when 4132 => --0x1024
          localRdData( 5 downto  0)  <=  reg_data(4132)( 5 downto  0);                             --Write Data 1
        when 4133 => --0x1025
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(2).rd_data.rd_data_1;                   --Read Data 1
        when 4134 => --0x1026
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(2).rd_data.rd_data_0;                   --Read Data 0
        when 4144 => --0x1030
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(3).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4144)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(3).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4144)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4144)( 8 downto  6);                             --sel memory
        when 4146 => --0x1032
          localRdData( 9 downto  0)  <=  reg_data(4146)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4146)(25 downto 16);                             --rd_Address
        when 4147 => --0x1033
          localRdData(31 downto  0)  <=  reg_data(4147)(31 downto  0);                             --Write Data 0
        when 4148 => --0x1034
          localRdData( 5 downto  0)  <=  reg_data(4148)( 5 downto  0);                             --Write Data 1
        when 4149 => --0x1035
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(3).rd_data.rd_data_1;                   --Read Data 1
        when 4150 => --0x1036
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(3).rd_data.rd_data_0;                   --Read Data 0
        when 4160 => --0x1040
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(4).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4160)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(4).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4160)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4160)( 8 downto  6);                             --sel memory
        when 4162 => --0x1042
          localRdData( 9 downto  0)  <=  reg_data(4162)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4162)(25 downto 16);                             --rd_Address
        when 4163 => --0x1043
          localRdData(31 downto  0)  <=  reg_data(4163)(31 downto  0);                             --Write Data 0
        when 4164 => --0x1044
          localRdData( 5 downto  0)  <=  reg_data(4164)( 5 downto  0);                             --Write Data 1
        when 4165 => --0x1045
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(4).rd_data.rd_data_1;                   --Read Data 1
        when 4166 => --0x1046
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(4).rd_data.rd_data_0;                   --Read Data 0
        when 4176 => --0x1050
          localRdData( 0)            <=  Mon.MDT_TC.MDT_TC(5).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(4176)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_TC.MDT_TC(5).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(4176)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(4176)( 8 downto  6);                             --sel memory
        when 4178 => --0x1052
          localRdData( 9 downto  0)  <=  reg_data(4178)( 9 downto  0);                             --wr_Address
          localRdData(25 downto 16)  <=  reg_data(4178)(25 downto 16);                             --rd_Address
        when 4179 => --0x1053
          localRdData(31 downto  0)  <=  reg_data(4179)(31 downto  0);                             --Write Data 0
        when 4180 => --0x1054
          localRdData( 5 downto  0)  <=  reg_data(4180)( 5 downto  0);                             --Write Data 1
        when 4181 => --0x1055
          localRdData( 5 downto  0)  <=  Mon.MDT_TC.MDT_TC(5).rd_data.rd_data_1;                   --Read Data 1
        when 4182 => --0x1056
          localRdData(31 downto  0)  <=  Mon.MDT_TC.MDT_TC(5).rd_data.rd_data_0;                   --Read Data 0
        when 8192 => --0x2000
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(0).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8192)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(0).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8192)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8192)( 8 downto  6);                             --sel memory
        when 8194 => --0x2002
          localRdData( 3 downto  0)  <=  reg_data(8194)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8194)(19 downto 16);                             --rd_Address
        when 8195 => --0x2003
          localRdData(16 downto  0)  <=  reg_data(8195)(16 downto  0);                             --Write Data 0
        when 8196 => --0x2004
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(0).rd_data.rd_data_0;                   --Read Data 0
        when 8208 => --0x2010
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(1).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8208)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(1).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8208)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8208)( 8 downto  6);                             --sel memory
        when 8210 => --0x2012
          localRdData( 3 downto  0)  <=  reg_data(8210)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8210)(19 downto 16);                             --rd_Address
        when 8211 => --0x2013
          localRdData(16 downto  0)  <=  reg_data(8211)(16 downto  0);                             --Write Data 0
        when 8212 => --0x2014
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(1).rd_data.rd_data_0;                   --Read Data 0
        when 8224 => --0x2020
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(2).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8224)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(2).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8224)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8224)( 8 downto  6);                             --sel memory
        when 8226 => --0x2022
          localRdData( 3 downto  0)  <=  reg_data(8226)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8226)(19 downto 16);                             --rd_Address
        when 8227 => --0x2023
          localRdData(16 downto  0)  <=  reg_data(8227)(16 downto  0);                             --Write Data 0
        when 8228 => --0x2024
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(2).rd_data.rd_data_0;                   --Read Data 0
        when 8240 => --0x2030
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(3).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8240)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(3).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8240)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8240)( 8 downto  6);                             --sel memory
        when 8242 => --0x2032
          localRdData( 3 downto  0)  <=  reg_data(8242)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8242)(19 downto 16);                             --rd_Address
        when 8243 => --0x2033
          localRdData(16 downto  0)  <=  reg_data(8243)(16 downto  0);                             --Write Data 0
        when 8244 => --0x2034
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(3).rd_data.rd_data_0;                   --Read Data 0
        when 8256 => --0x2040
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(4).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8256)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(4).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8256)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8256)( 8 downto  6);                             --sel memory
        when 8258 => --0x2042
          localRdData( 3 downto  0)  <=  reg_data(8258)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8258)(19 downto 16);                             --rd_Address
        when 8259 => --0x2043
          localRdData(16 downto  0)  <=  reg_data(8259)(16 downto  0);                             --Write Data 0
        when 8260 => --0x2044
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(4).rd_data.rd_data_0;                   --Read Data 0
        when 8272 => --0x2050
          localRdData( 0)            <=  Mon.MDT_T0.MDT_T0(5).SIGNALS.rd_rdy;                      --Read ready
          localRdData( 4)            <=  reg_data(8272)( 4);                                       --flush memory to Zync
          localRdData( 5)            <=  Mon.MDT_T0.MDT_T0(5).SIGNALS.freeze_ena;                  --freeze memory
          localRdData( 5)            <=  reg_data(8272)( 5);                                       --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(8272)( 8 downto  6);                             --sel memory
        when 8274 => --0x2052
          localRdData( 3 downto  0)  <=  reg_data(8274)( 3 downto  0);                             --wr_Address
          localRdData(19 downto 16)  <=  reg_data(8274)(19 downto 16);                             --rd_Address
        when 8275 => --0x2053
          localRdData(16 downto  0)  <=  reg_data(8275)(16 downto  0);                             --Write Data 0
        when 8276 => --0x2054
          localRdData(16 downto  0)  <=  Mon.MDT_T0.MDT_T0(5).rd_data.rd_data_0;                   --Read Data 0
        when 12289 => --0x3001
          localRdData( 4)            <=  reg_data(12289)( 4);                                      --
          localRdData( 5)            <=  reg_data(12289)( 5);                                      --
          localRdData( 6)            <=  reg_data(12289)( 6);                                      --
        when 12304 => --0x3010
          localRdData( 0)            <=  Mon.HEG.HEG(0).SUPER.STATUS.ENABLED;                      --
          localRdData( 1)            <=  Mon.HEG.HEG(0).SUPER.STATUS.READY;                        --
          localRdData( 2)            <=  Mon.HEG.HEG(0).SUPER.STATUS.ERROR;                        --
        when 12321 => --0x3021
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(0).SUPER.COUNTERS.SLC_PROC;                   --
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(0).SUPER.COUNTERS.HIT_PROC;                   --
        when 12322 => --0x3022
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(0).SUPER.COUNTERS.HIT_OK;                     --
        when 12324 => --0x3024
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(0).SUPER.COUNTERS.ERROR;                      --
        when 12336 => --0x3030
          localRdData( 0)            <=  Mon.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_rdy;                --Read ready
          localRdData( 4)            <=  reg_data(12336)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.freeze_ena;            --freeze memory
          localRdData( 5)            <=  reg_data(12336)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12336)( 8 downto  6);                            --sel memory
        when 12338 => --0x3032
          localRdData( 9 downto  0)  <=  reg_data(12338)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12338)(25 downto 16);                            --rd_Address
        when 12339 => --0x3033
          localRdData(31 downto  0)  <=  reg_data(12339)(31 downto  0);                            --Write Data 0
        when 12340 => --0x3034
          localRdData( 5 downto  0)  <=  reg_data(12340)( 5 downto  0);                            --Write Data 1
        when 12341 => --0x3035
          localRdData( 5 downto  0)  <=  Mon.HEG.HEG(0).CTRL.ROI_TC.rd_data.rd_data_1;             --Read Data 1
        when 12342 => --0x3036
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(0).CTRL.ROI_TC.rd_data.rd_data_0;             --Read Data 0
        when 12353 => --0x3041
          localRdData( 4)            <=  reg_data(12353)( 4);                                      --
          localRdData( 5)            <=  reg_data(12353)( 5);                                      --
          localRdData( 6)            <=  reg_data(12353)( 6);                                      --
        when 12355 => --0x3043
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12355)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12355)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12355)( 8 downto  6);                            --sel memory
        when 12357 => --0x3045
          localRdData( 9 downto  0)  <=  reg_data(12357)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12357)(25 downto 16);                            --rd_Address
        when 12358 => --0x3046
          localRdData( 8 downto  0)  <=  reg_data(12358)( 8 downto  0);                            --Write Data 0
        when 12360 => --0x3048
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(0).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12369 => --0x3051
          localRdData( 4)            <=  reg_data(12369)( 4);                                      --
          localRdData( 5)            <=  reg_data(12369)( 5);                                      --
          localRdData( 6)            <=  reg_data(12369)( 6);                                      --
        when 12371 => --0x3053
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12371)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12371)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12371)( 8 downto  6);                            --sel memory
        when 12373 => --0x3055
          localRdData( 9 downto  0)  <=  reg_data(12373)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12373)(25 downto 16);                            --rd_Address
        when 12374 => --0x3056
          localRdData( 8 downto  0)  <=  reg_data(12374)( 8 downto  0);                            --Write Data 0
        when 12376 => --0x3058
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(1).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12385 => --0x3061
          localRdData( 4)            <=  reg_data(12385)( 4);                                      --
          localRdData( 5)            <=  reg_data(12385)( 5);                                      --
          localRdData( 6)            <=  reg_data(12385)( 6);                                      --
        when 12387 => --0x3063
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12387)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12387)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12387)( 8 downto  6);                            --sel memory
        when 12389 => --0x3065
          localRdData( 9 downto  0)  <=  reg_data(12389)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12389)(25 downto 16);                            --rd_Address
        when 12390 => --0x3066
          localRdData( 8 downto  0)  <=  reg_data(12390)( 8 downto  0);                            --Write Data 0
        when 12392 => --0x3068
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(2).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12401 => --0x3071
          localRdData( 4)            <=  reg_data(12401)( 4);                                      --
          localRdData( 5)            <=  reg_data(12401)( 5);                                      --
          localRdData( 6)            <=  reg_data(12401)( 6);                                      --
        when 12403 => --0x3073
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12403)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12403)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12403)( 8 downto  6);                            --sel memory
        when 12405 => --0x3075
          localRdData( 9 downto  0)  <=  reg_data(12405)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12405)(25 downto 16);                            --rd_Address
        when 12406 => --0x3076
          localRdData( 8 downto  0)  <=  reg_data(12406)( 8 downto  0);                            --Write Data 0
        when 12408 => --0x3078
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(3).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12417 => --0x3081
          localRdData( 4)            <=  reg_data(12417)( 4);                                      --
          localRdData( 5)            <=  reg_data(12417)( 5);                                      --
          localRdData( 6)            <=  reg_data(12417)( 6);                                      --
        when 12419 => --0x3083
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12419)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12419)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12419)( 8 downto  6);                            --sel memory
        when 12421 => --0x3085
          localRdData( 9 downto  0)  <=  reg_data(12421)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12421)(25 downto 16);                            --rd_Address
        when 12422 => --0x3086
          localRdData( 8 downto  0)  <=  reg_data(12422)( 8 downto  0);                            --Write Data 0
        when 12424 => --0x3088
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(4).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12433 => --0x3091
          localRdData( 4)            <=  reg_data(12433)( 4);                                      --
          localRdData( 5)            <=  reg_data(12433)( 5);                                      --
          localRdData( 6)            <=  reg_data(12433)( 6);                                      --
        when 12435 => --0x3093
          localRdData( 0)            <=  Mon.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12435)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12435)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12435)( 8 downto  6);                            --sel memory
        when 12437 => --0x3095
          localRdData( 9 downto  0)  <=  reg_data(12437)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12437)(25 downto 16);                            --rd_Address
        when 12438 => --0x3096
          localRdData( 8 downto  0)  <=  reg_data(12438)( 8 downto  0);                            --Write Data 0
        when 12440 => --0x3098
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(0).HP.HP(5).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12545 => --0x3101
          localRdData( 4)            <=  reg_data(12545)( 4);                                      --
          localRdData( 5)            <=  reg_data(12545)( 5);                                      --
          localRdData( 6)            <=  reg_data(12545)( 6);                                      --
        when 12560 => --0x3110
          localRdData( 0)            <=  Mon.HEG.HEG(1).SUPER.STATUS.ENABLED;                      --
          localRdData( 1)            <=  Mon.HEG.HEG(1).SUPER.STATUS.READY;                        --
          localRdData( 2)            <=  Mon.HEG.HEG(1).SUPER.STATUS.ERROR;                        --
        when 12577 => --0x3121
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(1).SUPER.COUNTERS.SLC_PROC;                   --
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(1).SUPER.COUNTERS.HIT_PROC;                   --
        when 12578 => --0x3122
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(1).SUPER.COUNTERS.HIT_OK;                     --
        when 12580 => --0x3124
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(1).SUPER.COUNTERS.ERROR;                      --
        when 12592 => --0x3130
          localRdData( 0)            <=  Mon.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_rdy;                --Read ready
          localRdData( 4)            <=  reg_data(12592)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.freeze_ena;            --freeze memory
          localRdData( 5)            <=  reg_data(12592)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12592)( 8 downto  6);                            --sel memory
        when 12594 => --0x3132
          localRdData( 9 downto  0)  <=  reg_data(12594)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12594)(25 downto 16);                            --rd_Address
        when 12595 => --0x3133
          localRdData(31 downto  0)  <=  reg_data(12595)(31 downto  0);                            --Write Data 0
        when 12596 => --0x3134
          localRdData( 5 downto  0)  <=  reg_data(12596)( 5 downto  0);                            --Write Data 1
        when 12597 => --0x3135
          localRdData( 5 downto  0)  <=  Mon.HEG.HEG(1).CTRL.ROI_TC.rd_data.rd_data_1;             --Read Data 1
        when 12598 => --0x3136
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(1).CTRL.ROI_TC.rd_data.rd_data_0;             --Read Data 0
        when 12609 => --0x3141
          localRdData( 4)            <=  reg_data(12609)( 4);                                      --
          localRdData( 5)            <=  reg_data(12609)( 5);                                      --
          localRdData( 6)            <=  reg_data(12609)( 6);                                      --
        when 12611 => --0x3143
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12611)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12611)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12611)( 8 downto  6);                            --sel memory
        when 12613 => --0x3145
          localRdData( 9 downto  0)  <=  reg_data(12613)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12613)(25 downto 16);                            --rd_Address
        when 12614 => --0x3146
          localRdData( 8 downto  0)  <=  reg_data(12614)( 8 downto  0);                            --Write Data 0
        when 12616 => --0x3148
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(0).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12625 => --0x3151
          localRdData( 4)            <=  reg_data(12625)( 4);                                      --
          localRdData( 5)            <=  reg_data(12625)( 5);                                      --
          localRdData( 6)            <=  reg_data(12625)( 6);                                      --
        when 12627 => --0x3153
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12627)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12627)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12627)( 8 downto  6);                            --sel memory
        when 12629 => --0x3155
          localRdData( 9 downto  0)  <=  reg_data(12629)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12629)(25 downto 16);                            --rd_Address
        when 12630 => --0x3156
          localRdData( 8 downto  0)  <=  reg_data(12630)( 8 downto  0);                            --Write Data 0
        when 12632 => --0x3158
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(1).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12641 => --0x3161
          localRdData( 4)            <=  reg_data(12641)( 4);                                      --
          localRdData( 5)            <=  reg_data(12641)( 5);                                      --
          localRdData( 6)            <=  reg_data(12641)( 6);                                      --
        when 12643 => --0x3163
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12643)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12643)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12643)( 8 downto  6);                            --sel memory
        when 12645 => --0x3165
          localRdData( 9 downto  0)  <=  reg_data(12645)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12645)(25 downto 16);                            --rd_Address
        when 12646 => --0x3166
          localRdData( 8 downto  0)  <=  reg_data(12646)( 8 downto  0);                            --Write Data 0
        when 12648 => --0x3168
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(2).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12657 => --0x3171
          localRdData( 4)            <=  reg_data(12657)( 4);                                      --
          localRdData( 5)            <=  reg_data(12657)( 5);                                      --
          localRdData( 6)            <=  reg_data(12657)( 6);                                      --
        when 12659 => --0x3173
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12659)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12659)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12659)( 8 downto  6);                            --sel memory
        when 12661 => --0x3175
          localRdData( 9 downto  0)  <=  reg_data(12661)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12661)(25 downto 16);                            --rd_Address
        when 12662 => --0x3176
          localRdData( 8 downto  0)  <=  reg_data(12662)( 8 downto  0);                            --Write Data 0
        when 12664 => --0x3178
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(3).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12673 => --0x3181
          localRdData( 4)            <=  reg_data(12673)( 4);                                      --
          localRdData( 5)            <=  reg_data(12673)( 5);                                      --
          localRdData( 6)            <=  reg_data(12673)( 6);                                      --
        when 12675 => --0x3183
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12675)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12675)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12675)( 8 downto  6);                            --sel memory
        when 12677 => --0x3185
          localRdData( 9 downto  0)  <=  reg_data(12677)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12677)(25 downto 16);                            --rd_Address
        when 12678 => --0x3186
          localRdData( 8 downto  0)  <=  reg_data(12678)( 8 downto  0);                            --Write Data 0
        when 12680 => --0x3188
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(4).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12689 => --0x3191
          localRdData( 4)            <=  reg_data(12689)( 4);                                      --
          localRdData( 5)            <=  reg_data(12689)( 5);                                      --
          localRdData( 6)            <=  reg_data(12689)( 6);                                      --
        when 12691 => --0x3193
          localRdData( 0)            <=  Mon.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12691)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12691)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12691)( 8 downto  6);                            --sel memory
        when 12693 => --0x3195
          localRdData( 9 downto  0)  <=  reg_data(12693)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12693)(25 downto 16);                            --rd_Address
        when 12694 => --0x3196
          localRdData( 8 downto  0)  <=  reg_data(12694)( 8 downto  0);                            --Write Data 0
        when 12696 => --0x3198
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(1).HP.HP(5).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12801 => --0x3201
          localRdData( 4)            <=  reg_data(12801)( 4);                                      --
          localRdData( 5)            <=  reg_data(12801)( 5);                                      --
          localRdData( 6)            <=  reg_data(12801)( 6);                                      --
        when 12816 => --0x3210
          localRdData( 0)            <=  Mon.HEG.HEG(2).SUPER.STATUS.ENABLED;                      --
          localRdData( 1)            <=  Mon.HEG.HEG(2).SUPER.STATUS.READY;                        --
          localRdData( 2)            <=  Mon.HEG.HEG(2).SUPER.STATUS.ERROR;                        --
        when 12833 => --0x3221
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(2).SUPER.COUNTERS.SLC_PROC;                   --
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(2).SUPER.COUNTERS.HIT_PROC;                   --
        when 12834 => --0x3222
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(2).SUPER.COUNTERS.HIT_OK;                     --
        when 12836 => --0x3224
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(2).SUPER.COUNTERS.ERROR;                      --
        when 12848 => --0x3230
          localRdData( 0)            <=  Mon.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_rdy;                --Read ready
          localRdData( 4)            <=  reg_data(12848)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.freeze_ena;            --freeze memory
          localRdData( 5)            <=  reg_data(12848)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12848)( 8 downto  6);                            --sel memory
        when 12850 => --0x3232
          localRdData( 9 downto  0)  <=  reg_data(12850)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12850)(25 downto 16);                            --rd_Address
        when 12851 => --0x3233
          localRdData(31 downto  0)  <=  reg_data(12851)(31 downto  0);                            --Write Data 0
        when 12852 => --0x3234
          localRdData( 5 downto  0)  <=  reg_data(12852)( 5 downto  0);                            --Write Data 1
        when 12853 => --0x3235
          localRdData( 5 downto  0)  <=  Mon.HEG.HEG(2).CTRL.ROI_TC.rd_data.rd_data_1;             --Read Data 1
        when 12854 => --0x3236
          localRdData(31 downto  0)  <=  Mon.HEG.HEG(2).CTRL.ROI_TC.rd_data.rd_data_0;             --Read Data 0
        when 12865 => --0x3241
          localRdData( 4)            <=  reg_data(12865)( 4);                                      --
          localRdData( 5)            <=  reg_data(12865)( 5);                                      --
          localRdData( 6)            <=  reg_data(12865)( 6);                                      --
        when 12867 => --0x3243
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12867)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12867)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12867)( 8 downto  6);                            --sel memory
        when 12869 => --0x3245
          localRdData( 9 downto  0)  <=  reg_data(12869)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12869)(25 downto 16);                            --rd_Address
        when 12870 => --0x3246
          localRdData( 8 downto  0)  <=  reg_data(12870)( 8 downto  0);                            --Write Data 0
        when 12872 => --0x3248
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(0).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12881 => --0x3251
          localRdData( 4)            <=  reg_data(12881)( 4);                                      --
          localRdData( 5)            <=  reg_data(12881)( 5);                                      --
          localRdData( 6)            <=  reg_data(12881)( 6);                                      --
        when 12883 => --0x3253
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12883)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12883)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12883)( 8 downto  6);                            --sel memory
        when 12885 => --0x3255
          localRdData( 9 downto  0)  <=  reg_data(12885)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12885)(25 downto 16);                            --rd_Address
        when 12886 => --0x3256
          localRdData( 8 downto  0)  <=  reg_data(12886)( 8 downto  0);                            --Write Data 0
        when 12888 => --0x3258
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(1).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12897 => --0x3261
          localRdData( 4)            <=  reg_data(12897)( 4);                                      --
          localRdData( 5)            <=  reg_data(12897)( 5);                                      --
          localRdData( 6)            <=  reg_data(12897)( 6);                                      --
        when 12899 => --0x3263
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12899)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12899)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12899)( 8 downto  6);                            --sel memory
        when 12901 => --0x3265
          localRdData( 9 downto  0)  <=  reg_data(12901)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12901)(25 downto 16);                            --rd_Address
        when 12902 => --0x3266
          localRdData( 8 downto  0)  <=  reg_data(12902)( 8 downto  0);                            --Write Data 0
        when 12904 => --0x3268
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(2).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12913 => --0x3271
          localRdData( 4)            <=  reg_data(12913)( 4);                                      --
          localRdData( 5)            <=  reg_data(12913)( 5);                                      --
          localRdData( 6)            <=  reg_data(12913)( 6);                                      --
        when 12915 => --0x3273
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12915)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12915)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12915)( 8 downto  6);                            --sel memory
        when 12917 => --0x3275
          localRdData( 9 downto  0)  <=  reg_data(12917)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12917)(25 downto 16);                            --rd_Address
        when 12918 => --0x3276
          localRdData( 8 downto  0)  <=  reg_data(12918)( 8 downto  0);                            --Write Data 0
        when 12920 => --0x3278
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(3).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12929 => --0x3281
          localRdData( 4)            <=  reg_data(12929)( 4);                                      --
          localRdData( 5)            <=  reg_data(12929)( 5);                                      --
          localRdData( 6)            <=  reg_data(12929)( 6);                                      --
        when 12931 => --0x3283
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12931)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12931)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12931)( 8 downto  6);                            --sel memory
        when 12933 => --0x3285
          localRdData( 9 downto  0)  <=  reg_data(12933)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12933)(25 downto 16);                            --rd_Address
        when 12934 => --0x3286
          localRdData( 8 downto  0)  <=  reg_data(12934)( 8 downto  0);                            --Write Data 0
        when 12936 => --0x3288
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(4).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 12945 => --0x3291
          localRdData( 4)            <=  reg_data(12945)( 4);                                      --
          localRdData( 5)            <=  reg_data(12945)( 5);                                      --
          localRdData( 6)            <=  reg_data(12945)( 6);                                      --
        when 12947 => --0x3293
          localRdData( 0)            <=  Mon.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_rdy;          --Read ready
          localRdData( 4)            <=  reg_data(12947)( 4);                                      --flush memory to Zync
          localRdData( 5)            <=  Mon.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.freeze_ena;      --freeze memory
          localRdData( 5)            <=  reg_data(12947)( 5);                                      --freeze memory
          localRdData( 8 downto  6)  <=  reg_data(12947)( 8 downto  6);                            --sel memory
        when 12949 => --0x3295
          localRdData( 9 downto  0)  <=  reg_data(12949)( 9 downto  0);                            --wr_Address
          localRdData(25 downto 16)  <=  reg_data(12949)(25 downto 16);                            --rd_Address
        when 12950 => --0x3296
          localRdData( 8 downto  0)  <=  reg_data(12950)( 8 downto  0);                            --Write Data 0
        when 12952 => --0x3298
          localRdData( 8 downto  0)  <=  Mon.HEG.HEG(2).HP.HP(5).MDT_DT2R.rd_data.rd_data_0;       --Read Data 0
        when 16385 => --0x4001
          localRdData( 0)            <=  Mon.LSF.LSF(0).STATUS;                                    --
        when 16386 => --0x4002
          localRdData(13 downto  4)  <=  reg_data(16386)(13 downto  4);                            --add some description
        when 16387 => --0x4003
          localRdData( 0)            <=  reg_data(16387)( 0);                                      --
        when 16388 => --0x4004
          localRdData(23 downto 16)  <=  reg_data(16388)(23 downto 16);                            --
        when 16390 => --0x4006
          localRdData(31 downto  0)  <=  Mon.LSF.LSF(0).sb_lsf_mdt_hits_rdata_31_0;                --
        when 16391 => --0x4007
          localRdData( 8 downto  0)  <=  Mon.LSF.LSF(0).sb_lsf_mdt_hits_rdata_40_32;               --
        when 16401 => --0x4011
          localRdData( 0)            <=  Mon.LSF.LSF(1).STATUS;                                    --
        when 16402 => --0x4012
          localRdData(13 downto  4)  <=  reg_data(16402)(13 downto  4);                            --add some description
        when 16403 => --0x4013
          localRdData( 0)            <=  reg_data(16403)( 0);                                      --
        when 16404 => --0x4014
          localRdData(23 downto 16)  <=  reg_data(16404)(23 downto 16);                            --
        when 16406 => --0x4016
          localRdData(31 downto  0)  <=  Mon.LSF.LSF(1).sb_lsf_mdt_hits_rdata_31_0;                --
        when 16407 => --0x4017
          localRdData( 8 downto  0)  <=  Mon.LSF.LSF(1).sb_lsf_mdt_hits_rdata_40_32;               --
        when 16417 => --0x4021
          localRdData( 0)            <=  Mon.LSF.LSF(2).STATUS;                                    --
        when 16418 => --0x4022
          localRdData(13 downto  4)  <=  reg_data(16418)(13 downto  4);                            --add some description
        when 16419 => --0x4023
          localRdData( 0)            <=  reg_data(16419)( 0);                                      --
        when 16420 => --0x4024
          localRdData(23 downto 16)  <=  reg_data(16420)(23 downto 16);                            --
        when 16422 => --0x4026
          localRdData(31 downto  0)  <=  Mon.LSF.LSF(2).sb_lsf_mdt_hits_rdata_31_0;                --
        when 16423 => --0x4027
          localRdData( 8 downto  0)  <=  Mon.LSF.LSF(2).sb_lsf_mdt_hits_rdata_40_32;               --
        when 20482 => --0x5002
          localRdData( 0)            <=  Mon.CSF.CSF(0).STATUS.ENABLED;                            --
          localRdData( 1)            <=  Mon.CSF.CSF(0).STATUS.READY;                              --
          localRdData( 2)            <=  Mon.CSF.CSF(0).STATUS.ERROR;                              --
        when 20498 => --0x5012
          localRdData( 0)            <=  Mon.CSF.CSF(1).STATUS.ENABLED;                            --
          localRdData( 1)            <=  Mon.CSF.CSF(1).STATUS.READY;                              --
          localRdData( 2)            <=  Mon.CSF.CSF(1).STATUS.ERROR;                              --
        when 20514 => --0x5022
          localRdData( 0)            <=  Mon.CSF.CSF(2).STATUS.ENABLED;                            --
          localRdData( 1)            <=  Mon.CSF.CSF(2).STATUS.READY;                              --
          localRdData( 2)            <=  Mon.CSF.CSF(2).STATUS.ERROR;                              --


          when others =>
            regRdAck <= '0';
            localRdData <= x"00000000";
        end case;
      end if;
    end if;
  end process reads;


  -------------------------------------------------------------------------------
  -- Record write decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  -- Register mapping to ctrl structures
  Ctrl.SUPER.CONFIGS.THREADS                            <=  reg_data( 1)( 3 downto  0);        
  Ctrl.SUPER.CONFIGS.INPUT_EN                           <=  reg_data( 1)( 4);                  
  Ctrl.SUPER.CONFIGS.OUTPUT_EN                          <=  reg_data( 1)( 5);                  
  Ctrl.SUPER.CONFIGS.FLUSH_MEM_RESET                    <=  reg_data( 1)( 6);                  
  Ctrl.MDT_TC.MDT_TC(0).SIGNALS.flush_req               <=  reg_data(4096)( 4);                
  Ctrl.MDT_TC.MDT_TC(0).SIGNALS.freeze_req              <=  reg_data(4096)( 5);                
  Ctrl.MDT_TC.MDT_TC(0).SIGNALS.mem_sel                 <=  reg_data(4096)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(0).wr_addr                         <=  reg_data(4098)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(0).rd_addr                         <=  reg_data(4098)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(0).wr_data.wr_data_0               <=  reg_data(4099)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(0).wr_data.wr_data_1               <=  reg_data(4100)( 5 downto  0);      
  Ctrl.MDT_TC.MDT_TC(1).SIGNALS.flush_req               <=  reg_data(4112)( 4);                
  Ctrl.MDT_TC.MDT_TC(1).SIGNALS.freeze_req              <=  reg_data(4112)( 5);                
  Ctrl.MDT_TC.MDT_TC(1).SIGNALS.mem_sel                 <=  reg_data(4112)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(1).wr_addr                         <=  reg_data(4114)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(1).rd_addr                         <=  reg_data(4114)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(1).wr_data.wr_data_0               <=  reg_data(4115)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(1).wr_data.wr_data_1               <=  reg_data(4116)( 5 downto  0);      
  Ctrl.MDT_TC.MDT_TC(2).SIGNALS.flush_req               <=  reg_data(4128)( 4);                
  Ctrl.MDT_TC.MDT_TC(2).SIGNALS.freeze_req              <=  reg_data(4128)( 5);                
  Ctrl.MDT_TC.MDT_TC(2).SIGNALS.mem_sel                 <=  reg_data(4128)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(2).wr_addr                         <=  reg_data(4130)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(2).rd_addr                         <=  reg_data(4130)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(2).wr_data.wr_data_0               <=  reg_data(4131)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(2).wr_data.wr_data_1               <=  reg_data(4132)( 5 downto  0);      
  Ctrl.MDT_TC.MDT_TC(3).SIGNALS.flush_req               <=  reg_data(4144)( 4);                
  Ctrl.MDT_TC.MDT_TC(3).SIGNALS.freeze_req              <=  reg_data(4144)( 5);                
  Ctrl.MDT_TC.MDT_TC(3).SIGNALS.mem_sel                 <=  reg_data(4144)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(3).wr_addr                         <=  reg_data(4146)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(3).rd_addr                         <=  reg_data(4146)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(3).wr_data.wr_data_0               <=  reg_data(4147)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(3).wr_data.wr_data_1               <=  reg_data(4148)( 5 downto  0);      
  Ctrl.MDT_TC.MDT_TC(4).SIGNALS.flush_req               <=  reg_data(4160)( 4);                
  Ctrl.MDT_TC.MDT_TC(4).SIGNALS.freeze_req              <=  reg_data(4160)( 5);                
  Ctrl.MDT_TC.MDT_TC(4).SIGNALS.mem_sel                 <=  reg_data(4160)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(4).wr_addr                         <=  reg_data(4162)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(4).rd_addr                         <=  reg_data(4162)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(4).wr_data.wr_data_0               <=  reg_data(4163)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(4).wr_data.wr_data_1               <=  reg_data(4164)( 5 downto  0);      
  Ctrl.MDT_TC.MDT_TC(5).SIGNALS.flush_req               <=  reg_data(4176)( 4);                
  Ctrl.MDT_TC.MDT_TC(5).SIGNALS.freeze_req              <=  reg_data(4176)( 5);                
  Ctrl.MDT_TC.MDT_TC(5).SIGNALS.mem_sel                 <=  reg_data(4176)( 8 downto  6);      
  Ctrl.MDT_TC.MDT_TC(5).wr_addr                         <=  reg_data(4178)( 9 downto  0);      
  Ctrl.MDT_TC.MDT_TC(5).rd_addr                         <=  reg_data(4178)(25 downto 16);      
  Ctrl.MDT_TC.MDT_TC(5).wr_data.wr_data_0               <=  reg_data(4179)(31 downto  0);      
  Ctrl.MDT_TC.MDT_TC(5).wr_data.wr_data_1               <=  reg_data(4180)( 5 downto  0);      
  Ctrl.MDT_T0.MDT_T0(0).SIGNALS.flush_req               <=  reg_data(8192)( 4);                
  Ctrl.MDT_T0.MDT_T0(0).SIGNALS.freeze_req              <=  reg_data(8192)( 5);                
  Ctrl.MDT_T0.MDT_T0(0).SIGNALS.mem_sel                 <=  reg_data(8192)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(0).wr_addr                         <=  reg_data(8194)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(0).rd_addr                         <=  reg_data(8194)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(0).wr_data.wr_data_0               <=  reg_data(8195)(16 downto  0);      
  Ctrl.MDT_T0.MDT_T0(1).SIGNALS.flush_req               <=  reg_data(8208)( 4);                
  Ctrl.MDT_T0.MDT_T0(1).SIGNALS.freeze_req              <=  reg_data(8208)( 5);                
  Ctrl.MDT_T0.MDT_T0(1).SIGNALS.mem_sel                 <=  reg_data(8208)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(1).wr_addr                         <=  reg_data(8210)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(1).rd_addr                         <=  reg_data(8210)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(1).wr_data.wr_data_0               <=  reg_data(8211)(16 downto  0);      
  Ctrl.MDT_T0.MDT_T0(2).SIGNALS.flush_req               <=  reg_data(8224)( 4);                
  Ctrl.MDT_T0.MDT_T0(2).SIGNALS.freeze_req              <=  reg_data(8224)( 5);                
  Ctrl.MDT_T0.MDT_T0(2).SIGNALS.mem_sel                 <=  reg_data(8224)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(2).wr_addr                         <=  reg_data(8226)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(2).rd_addr                         <=  reg_data(8226)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(2).wr_data.wr_data_0               <=  reg_data(8227)(16 downto  0);      
  Ctrl.MDT_T0.MDT_T0(3).SIGNALS.flush_req               <=  reg_data(8240)( 4);                
  Ctrl.MDT_T0.MDT_T0(3).SIGNALS.freeze_req              <=  reg_data(8240)( 5);                
  Ctrl.MDT_T0.MDT_T0(3).SIGNALS.mem_sel                 <=  reg_data(8240)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(3).wr_addr                         <=  reg_data(8242)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(3).rd_addr                         <=  reg_data(8242)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(3).wr_data.wr_data_0               <=  reg_data(8243)(16 downto  0);      
  Ctrl.MDT_T0.MDT_T0(4).SIGNALS.flush_req               <=  reg_data(8256)( 4);                
  Ctrl.MDT_T0.MDT_T0(4).SIGNALS.freeze_req              <=  reg_data(8256)( 5);                
  Ctrl.MDT_T0.MDT_T0(4).SIGNALS.mem_sel                 <=  reg_data(8256)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(4).wr_addr                         <=  reg_data(8258)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(4).rd_addr                         <=  reg_data(8258)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(4).wr_data.wr_data_0               <=  reg_data(8259)(16 downto  0);      
  Ctrl.MDT_T0.MDT_T0(5).SIGNALS.flush_req               <=  reg_data(8272)( 4);                
  Ctrl.MDT_T0.MDT_T0(5).SIGNALS.freeze_req              <=  reg_data(8272)( 5);                
  Ctrl.MDT_T0.MDT_T0(5).SIGNALS.mem_sel                 <=  reg_data(8272)( 8 downto  6);      
  Ctrl.MDT_T0.MDT_T0(5).wr_addr                         <=  reg_data(8274)( 3 downto  0);      
  Ctrl.MDT_T0.MDT_T0(5).rd_addr                         <=  reg_data(8274)(19 downto 16);      
  Ctrl.MDT_T0.MDT_T0(5).wr_data.wr_data_0               <=  reg_data(8275)(16 downto  0);      
  Ctrl.HEG.HEG(0).SUPER.CONFIGS.INPUT_EN                <=  reg_data(12289)( 4);               
  Ctrl.HEG.HEG(0).SUPER.CONFIGS.OUTPUT_EN               <=  reg_data(12289)( 5);               
  Ctrl.HEG.HEG(0).SUPER.CONFIGS.FLUSH_MEM_RESET         <=  reg_data(12289)( 6);               
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.flush_req         <=  reg_data(12336)( 4);               
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.freeze_req        <=  reg_data(12336)( 5);               
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.mem_sel           <=  reg_data(12336)( 8 downto  6);     
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.wr_addr                   <=  reg_data(12338)( 9 downto  0);     
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.rd_addr                   <=  reg_data(12338)(25 downto 16);     
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.wr_data.wr_data_0         <=  reg_data(12339)(31 downto  0);     
  Ctrl.HEG.HEG(0).CTRL.ROI_TC.wr_data.wr_data_1         <=  reg_data(12340)( 5 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(0).CONFIGS.INPUT_EN             <=  reg_data(12353)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(0).CONFIGS.OUTPUT_EN            <=  reg_data(12353)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(0).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12353)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12355)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12355)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12355)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.wr_addr             <=  reg_data(12357)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.rd_addr             <=  reg_data(12357)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12358)( 8 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(1).CONFIGS.INPUT_EN             <=  reg_data(12369)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(1).CONFIGS.OUTPUT_EN            <=  reg_data(12369)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(1).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12369)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12371)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12371)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12371)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.wr_addr             <=  reg_data(12373)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.rd_addr             <=  reg_data(12373)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12374)( 8 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(2).CONFIGS.INPUT_EN             <=  reg_data(12385)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(2).CONFIGS.OUTPUT_EN            <=  reg_data(12385)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(2).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12385)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12387)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12387)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12387)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.wr_addr             <=  reg_data(12389)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.rd_addr             <=  reg_data(12389)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12390)( 8 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(3).CONFIGS.INPUT_EN             <=  reg_data(12401)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(3).CONFIGS.OUTPUT_EN            <=  reg_data(12401)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(3).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12401)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12403)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12403)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12403)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.wr_addr             <=  reg_data(12405)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.rd_addr             <=  reg_data(12405)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12406)( 8 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(4).CONFIGS.INPUT_EN             <=  reg_data(12417)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(4).CONFIGS.OUTPUT_EN            <=  reg_data(12417)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(4).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12417)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12419)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12419)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12419)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.wr_addr             <=  reg_data(12421)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.rd_addr             <=  reg_data(12421)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12422)( 8 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(5).CONFIGS.INPUT_EN             <=  reg_data(12433)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(5).CONFIGS.OUTPUT_EN            <=  reg_data(12433)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(5).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12433)( 6);               
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12435)( 4);               
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12435)( 5);               
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12435)( 8 downto  6);     
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.wr_addr             <=  reg_data(12437)( 9 downto  0);     
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.rd_addr             <=  reg_data(12437)(25 downto 16);     
  Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12438)( 8 downto  0);     
  Ctrl.HEG.HEG(1).SUPER.CONFIGS.INPUT_EN                <=  reg_data(12545)( 4);               
  Ctrl.HEG.HEG(1).SUPER.CONFIGS.OUTPUT_EN               <=  reg_data(12545)( 5);               
  Ctrl.HEG.HEG(1).SUPER.CONFIGS.FLUSH_MEM_RESET         <=  reg_data(12545)( 6);               
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.flush_req         <=  reg_data(12592)( 4);               
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.freeze_req        <=  reg_data(12592)( 5);               
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.mem_sel           <=  reg_data(12592)( 8 downto  6);     
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.wr_addr                   <=  reg_data(12594)( 9 downto  0);     
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.rd_addr                   <=  reg_data(12594)(25 downto 16);     
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.wr_data.wr_data_0         <=  reg_data(12595)(31 downto  0);     
  Ctrl.HEG.HEG(1).CTRL.ROI_TC.wr_data.wr_data_1         <=  reg_data(12596)( 5 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(0).CONFIGS.INPUT_EN             <=  reg_data(12609)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(0).CONFIGS.OUTPUT_EN            <=  reg_data(12609)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(0).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12609)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12611)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12611)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12611)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.wr_addr             <=  reg_data(12613)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.rd_addr             <=  reg_data(12613)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12614)( 8 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(1).CONFIGS.INPUT_EN             <=  reg_data(12625)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(1).CONFIGS.OUTPUT_EN            <=  reg_data(12625)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(1).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12625)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12627)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12627)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12627)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.wr_addr             <=  reg_data(12629)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.rd_addr             <=  reg_data(12629)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12630)( 8 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(2).CONFIGS.INPUT_EN             <=  reg_data(12641)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(2).CONFIGS.OUTPUT_EN            <=  reg_data(12641)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(2).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12641)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12643)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12643)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12643)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.wr_addr             <=  reg_data(12645)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.rd_addr             <=  reg_data(12645)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12646)( 8 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(3).CONFIGS.INPUT_EN             <=  reg_data(12657)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(3).CONFIGS.OUTPUT_EN            <=  reg_data(12657)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(3).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12657)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12659)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12659)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12659)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.wr_addr             <=  reg_data(12661)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.rd_addr             <=  reg_data(12661)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12662)( 8 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(4).CONFIGS.INPUT_EN             <=  reg_data(12673)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(4).CONFIGS.OUTPUT_EN            <=  reg_data(12673)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(4).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12673)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12675)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12675)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12675)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.wr_addr             <=  reg_data(12677)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.rd_addr             <=  reg_data(12677)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12678)( 8 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(5).CONFIGS.INPUT_EN             <=  reg_data(12689)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(5).CONFIGS.OUTPUT_EN            <=  reg_data(12689)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(5).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12689)( 6);               
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12691)( 4);               
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12691)( 5);               
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12691)( 8 downto  6);     
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.wr_addr             <=  reg_data(12693)( 9 downto  0);     
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.rd_addr             <=  reg_data(12693)(25 downto 16);     
  Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12694)( 8 downto  0);     
  Ctrl.HEG.HEG(2).SUPER.CONFIGS.INPUT_EN                <=  reg_data(12801)( 4);               
  Ctrl.HEG.HEG(2).SUPER.CONFIGS.OUTPUT_EN               <=  reg_data(12801)( 5);               
  Ctrl.HEG.HEG(2).SUPER.CONFIGS.FLUSH_MEM_RESET         <=  reg_data(12801)( 6);               
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.flush_req         <=  reg_data(12848)( 4);               
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.freeze_req        <=  reg_data(12848)( 5);               
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.mem_sel           <=  reg_data(12848)( 8 downto  6);     
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.wr_addr                   <=  reg_data(12850)( 9 downto  0);     
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.rd_addr                   <=  reg_data(12850)(25 downto 16);     
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.wr_data.wr_data_0         <=  reg_data(12851)(31 downto  0);     
  Ctrl.HEG.HEG(2).CTRL.ROI_TC.wr_data.wr_data_1         <=  reg_data(12852)( 5 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(0).CONFIGS.INPUT_EN             <=  reg_data(12865)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(0).CONFIGS.OUTPUT_EN            <=  reg_data(12865)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(0).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12865)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12867)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12867)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12867)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.wr_addr             <=  reg_data(12869)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.rd_addr             <=  reg_data(12869)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12870)( 8 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(1).CONFIGS.INPUT_EN             <=  reg_data(12881)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(1).CONFIGS.OUTPUT_EN            <=  reg_data(12881)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(1).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12881)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12883)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12883)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12883)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.wr_addr             <=  reg_data(12885)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.rd_addr             <=  reg_data(12885)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12886)( 8 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(2).CONFIGS.INPUT_EN             <=  reg_data(12897)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(2).CONFIGS.OUTPUT_EN            <=  reg_data(12897)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(2).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12897)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12899)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12899)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12899)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.wr_addr             <=  reg_data(12901)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.rd_addr             <=  reg_data(12901)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12902)( 8 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(3).CONFIGS.INPUT_EN             <=  reg_data(12913)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(3).CONFIGS.OUTPUT_EN            <=  reg_data(12913)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(3).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12913)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12915)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12915)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12915)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.wr_addr             <=  reg_data(12917)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.rd_addr             <=  reg_data(12917)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12918)( 8 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(4).CONFIGS.INPUT_EN             <=  reg_data(12929)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(4).CONFIGS.OUTPUT_EN            <=  reg_data(12929)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(4).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12929)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12931)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12931)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12931)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.wr_addr             <=  reg_data(12933)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.rd_addr             <=  reg_data(12933)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12934)( 8 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(5).CONFIGS.INPUT_EN             <=  reg_data(12945)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(5).CONFIGS.OUTPUT_EN            <=  reg_data(12945)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(5).CONFIGS.FLUSH_MEM_RESET      <=  reg_data(12945)( 6);               
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.flush_req   <=  reg_data(12947)( 4);               
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req  <=  reg_data(12947)( 5);               
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel     <=  reg_data(12947)( 8 downto  6);     
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.wr_addr             <=  reg_data(12949)( 9 downto  0);     
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.rd_addr             <=  reg_data(12949)(25 downto 16);     
  Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.wr_data.wr_data_0   <=  reg_data(12950)( 8 downto  0);     
  Ctrl.LSF.LSF(0).HBA_MAX_CLOCKS                        <=  reg_data(16386)(13 downto  4);     
  Ctrl.LSF.LSF(0).sb_lsf_mdt_hits_freeze                <=  reg_data(16387)( 0);               
  Ctrl.LSF.LSF(0).sb_lsf_mdt_hits_raddr                 <=  reg_data(16388)(23 downto 16);     
  Ctrl.LSF.LSF(1).HBA_MAX_CLOCKS                        <=  reg_data(16402)(13 downto  4);     
  Ctrl.LSF.LSF(1).sb_lsf_mdt_hits_freeze                <=  reg_data(16403)( 0);               
  Ctrl.LSF.LSF(1).sb_lsf_mdt_hits_raddr                 <=  reg_data(16404)(23 downto 16);     
  Ctrl.LSF.LSF(2).HBA_MAX_CLOCKS                        <=  reg_data(16418)(13 downto  4);     
  Ctrl.LSF.LSF(2).sb_lsf_mdt_hits_freeze                <=  reg_data(16419)( 0);               
  Ctrl.LSF.LSF(2).sb_lsf_mdt_hits_raddr                 <=  reg_data(16420)(23 downto 16);     


  reg_writes: process (clk_axi, reset_axi_n) is
  begin  -- process reg_writes
    if reset_axi_n = '0' then                 -- asynchronous reset (active low)
      reg_data( 0)( 0)  <= DEFAULT_HPS_CTRL_t.SUPER.ACTIONS.RESET;
      reg_data( 0)( 1)  <= DEFAULT_HPS_CTRL_t.SUPER.ACTIONS.ENABLE;
      reg_data( 0)( 2)  <= DEFAULT_HPS_CTRL_t.SUPER.ACTIONS.DISABLE;
      reg_data( 0)( 3)  <= DEFAULT_HPS_CTRL_t.SUPER.ACTIONS.FREEZE;
      reg_data( 1)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.SUPER.CONFIGS.THREADS;
      reg_data( 1)( 4)  <= DEFAULT_HPS_CTRL_t.SUPER.CONFIGS.INPUT_EN;
      reg_data( 1)( 5)  <= DEFAULT_HPS_CTRL_t.SUPER.CONFIGS.OUTPUT_EN;
      reg_data( 1)( 6)  <= DEFAULT_HPS_CTRL_t.SUPER.CONFIGS.FLUSH_MEM_RESET;
      reg_data(4096)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.wr_req;
      reg_data(4096)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.wr_ack;
      reg_data(4096)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.rd_req;
      reg_data(4096)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.rd_ack;
      reg_data(4096)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.flush_req;
      reg_data(4096)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.freeze_req;
      reg_data(4096)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).SIGNALS.mem_sel;
      reg_data(4098)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).wr_addr;
      reg_data(4098)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).rd_addr;
      reg_data(4099)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).wr_data.wr_data_0;
      reg_data(4100)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(0).wr_data.wr_data_1;
      reg_data(4112)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.wr_req;
      reg_data(4112)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.wr_ack;
      reg_data(4112)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.rd_req;
      reg_data(4112)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.rd_ack;
      reg_data(4112)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.flush_req;
      reg_data(4112)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.freeze_req;
      reg_data(4112)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).SIGNALS.mem_sel;
      reg_data(4114)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).wr_addr;
      reg_data(4114)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).rd_addr;
      reg_data(4115)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).wr_data.wr_data_0;
      reg_data(4116)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(1).wr_data.wr_data_1;
      reg_data(4128)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.wr_req;
      reg_data(4128)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.wr_ack;
      reg_data(4128)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.rd_req;
      reg_data(4128)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.rd_ack;
      reg_data(4128)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.flush_req;
      reg_data(4128)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.freeze_req;
      reg_data(4128)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).SIGNALS.mem_sel;
      reg_data(4130)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).wr_addr;
      reg_data(4130)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).rd_addr;
      reg_data(4131)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).wr_data.wr_data_0;
      reg_data(4132)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(2).wr_data.wr_data_1;
      reg_data(4144)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.wr_req;
      reg_data(4144)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.wr_ack;
      reg_data(4144)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.rd_req;
      reg_data(4144)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.rd_ack;
      reg_data(4144)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.flush_req;
      reg_data(4144)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.freeze_req;
      reg_data(4144)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).SIGNALS.mem_sel;
      reg_data(4146)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).wr_addr;
      reg_data(4146)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).rd_addr;
      reg_data(4147)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).wr_data.wr_data_0;
      reg_data(4148)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(3).wr_data.wr_data_1;
      reg_data(4160)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.wr_req;
      reg_data(4160)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.wr_ack;
      reg_data(4160)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.rd_req;
      reg_data(4160)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.rd_ack;
      reg_data(4160)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.flush_req;
      reg_data(4160)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.freeze_req;
      reg_data(4160)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).SIGNALS.mem_sel;
      reg_data(4162)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).wr_addr;
      reg_data(4162)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).rd_addr;
      reg_data(4163)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).wr_data.wr_data_0;
      reg_data(4164)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(4).wr_data.wr_data_1;
      reg_data(4176)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.wr_req;
      reg_data(4176)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.wr_ack;
      reg_data(4176)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.rd_req;
      reg_data(4176)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.rd_ack;
      reg_data(4176)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.flush_req;
      reg_data(4176)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.freeze_req;
      reg_data(4176)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).SIGNALS.mem_sel;
      reg_data(4178)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).wr_addr;
      reg_data(4178)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).rd_addr;
      reg_data(4179)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).wr_data.wr_data_0;
      reg_data(4180)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_TC.MDT_TC(5).wr_data.wr_data_1;
      reg_data(8192)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.wr_req;
      reg_data(8192)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.wr_ack;
      reg_data(8192)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.rd_req;
      reg_data(8192)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.rd_ack;
      reg_data(8192)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.flush_req;
      reg_data(8192)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.freeze_req;
      reg_data(8192)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).SIGNALS.mem_sel;
      reg_data(8194)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).wr_addr;
      reg_data(8194)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).rd_addr;
      reg_data(8195)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(0).wr_data.wr_data_0;
      reg_data(8208)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.wr_req;
      reg_data(8208)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.wr_ack;
      reg_data(8208)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.rd_req;
      reg_data(8208)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.rd_ack;
      reg_data(8208)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.flush_req;
      reg_data(8208)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.freeze_req;
      reg_data(8208)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).SIGNALS.mem_sel;
      reg_data(8210)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).wr_addr;
      reg_data(8210)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).rd_addr;
      reg_data(8211)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(1).wr_data.wr_data_0;
      reg_data(8224)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.wr_req;
      reg_data(8224)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.wr_ack;
      reg_data(8224)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.rd_req;
      reg_data(8224)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.rd_ack;
      reg_data(8224)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.flush_req;
      reg_data(8224)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.freeze_req;
      reg_data(8224)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).SIGNALS.mem_sel;
      reg_data(8226)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).wr_addr;
      reg_data(8226)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).rd_addr;
      reg_data(8227)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(2).wr_data.wr_data_0;
      reg_data(8240)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.wr_req;
      reg_data(8240)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.wr_ack;
      reg_data(8240)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.rd_req;
      reg_data(8240)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.rd_ack;
      reg_data(8240)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.flush_req;
      reg_data(8240)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.freeze_req;
      reg_data(8240)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).SIGNALS.mem_sel;
      reg_data(8242)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).wr_addr;
      reg_data(8242)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).rd_addr;
      reg_data(8243)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(3).wr_data.wr_data_0;
      reg_data(8256)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.wr_req;
      reg_data(8256)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.wr_ack;
      reg_data(8256)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.rd_req;
      reg_data(8256)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.rd_ack;
      reg_data(8256)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.flush_req;
      reg_data(8256)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.freeze_req;
      reg_data(8256)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).SIGNALS.mem_sel;
      reg_data(8258)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).wr_addr;
      reg_data(8258)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).rd_addr;
      reg_data(8259)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(4).wr_data.wr_data_0;
      reg_data(8272)( 0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.wr_req;
      reg_data(8272)( 1)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.wr_ack;
      reg_data(8272)( 2)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.rd_req;
      reg_data(8272)( 3)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.rd_ack;
      reg_data(8272)( 4)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.flush_req;
      reg_data(8272)( 5)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.freeze_req;
      reg_data(8272)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).SIGNALS.mem_sel;
      reg_data(8274)( 3 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).wr_addr;
      reg_data(8274)(19 downto 16)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).rd_addr;
      reg_data(8275)(16 downto  0)  <= DEFAULT_HPS_CTRL_t.MDT_T0.MDT_T0(5).wr_data.wr_data_0;
      reg_data(12288)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.ACTIONS.RESET;
      reg_data(12288)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.ACTIONS.ENABLE;
      reg_data(12288)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.ACTIONS.DISABLE;
      reg_data(12288)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.ACTIONS.FREEZE;
      reg_data(12289)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.CONFIGS.INPUT_EN;
      reg_data(12289)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.CONFIGS.OUTPUT_EN;
      reg_data(12289)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).SUPER.CONFIGS.FLUSH_MEM_RESET;
      reg_data(12336)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_req;
      reg_data(12336)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_ack;
      reg_data(12336)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_req;
      reg_data(12336)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_ack;
      reg_data(12336)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.flush_req;
      reg_data(12336)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.freeze_req;
      reg_data(12336)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.mem_sel;
      reg_data(12338)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.wr_addr;
      reg_data(12338)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.rd_addr;
      reg_data(12339)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.wr_data.wr_data_0;
      reg_data(12340)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).CTRL.ROI_TC.wr_data.wr_data_1;
      reg_data(12352)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).ACTIONS.RESET;
      reg_data(12352)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).ACTIONS.ENABLE;
      reg_data(12352)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).ACTIONS.DISABLE;
      reg_data(12352)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).ACTIONS.FREEZE;
      reg_data(12353)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).CONFIGS.INPUT_EN;
      reg_data(12353)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).CONFIGS.OUTPUT_EN;
      reg_data(12353)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12355)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12355)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12355)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12355)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12355)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12355)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12355)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12357)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.wr_addr;
      reg_data(12357)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.rd_addr;
      reg_data(12358)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(0).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12368)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).ACTIONS.RESET;
      reg_data(12368)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).ACTIONS.ENABLE;
      reg_data(12368)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).ACTIONS.DISABLE;
      reg_data(12368)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).ACTIONS.FREEZE;
      reg_data(12369)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).CONFIGS.INPUT_EN;
      reg_data(12369)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).CONFIGS.OUTPUT_EN;
      reg_data(12369)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12371)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12371)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12371)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12371)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12371)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12371)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12371)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12373)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.wr_addr;
      reg_data(12373)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.rd_addr;
      reg_data(12374)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(1).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12384)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).ACTIONS.RESET;
      reg_data(12384)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).ACTIONS.ENABLE;
      reg_data(12384)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).ACTIONS.DISABLE;
      reg_data(12384)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).ACTIONS.FREEZE;
      reg_data(12385)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).CONFIGS.INPUT_EN;
      reg_data(12385)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).CONFIGS.OUTPUT_EN;
      reg_data(12385)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12387)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12387)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12387)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12387)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12387)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12387)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12387)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12389)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.wr_addr;
      reg_data(12389)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.rd_addr;
      reg_data(12390)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(2).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12400)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).ACTIONS.RESET;
      reg_data(12400)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).ACTIONS.ENABLE;
      reg_data(12400)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).ACTIONS.DISABLE;
      reg_data(12400)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).ACTIONS.FREEZE;
      reg_data(12401)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).CONFIGS.INPUT_EN;
      reg_data(12401)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).CONFIGS.OUTPUT_EN;
      reg_data(12401)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12403)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12403)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12403)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12403)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12403)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12403)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12403)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12405)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.wr_addr;
      reg_data(12405)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.rd_addr;
      reg_data(12406)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(3).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12416)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).ACTIONS.RESET;
      reg_data(12416)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).ACTIONS.ENABLE;
      reg_data(12416)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).ACTIONS.DISABLE;
      reg_data(12416)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).ACTIONS.FREEZE;
      reg_data(12417)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).CONFIGS.INPUT_EN;
      reg_data(12417)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).CONFIGS.OUTPUT_EN;
      reg_data(12417)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12419)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12419)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12419)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12419)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12419)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12419)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12419)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12421)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.wr_addr;
      reg_data(12421)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.rd_addr;
      reg_data(12422)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(4).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12432)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).ACTIONS.RESET;
      reg_data(12432)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).ACTIONS.ENABLE;
      reg_data(12432)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).ACTIONS.DISABLE;
      reg_data(12432)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).ACTIONS.FREEZE;
      reg_data(12433)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).CONFIGS.INPUT_EN;
      reg_data(12433)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).CONFIGS.OUTPUT_EN;
      reg_data(12433)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12435)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12435)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12435)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12435)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12435)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12435)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12435)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12437)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.wr_addr;
      reg_data(12437)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.rd_addr;
      reg_data(12438)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(0).HP.HP(5).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12544)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.ACTIONS.RESET;
      reg_data(12544)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.ACTIONS.ENABLE;
      reg_data(12544)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.ACTIONS.DISABLE;
      reg_data(12544)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.ACTIONS.FREEZE;
      reg_data(12545)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.CONFIGS.INPUT_EN;
      reg_data(12545)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.CONFIGS.OUTPUT_EN;
      reg_data(12545)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).SUPER.CONFIGS.FLUSH_MEM_RESET;
      reg_data(12592)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_req;
      reg_data(12592)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_ack;
      reg_data(12592)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_req;
      reg_data(12592)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_ack;
      reg_data(12592)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.flush_req;
      reg_data(12592)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.freeze_req;
      reg_data(12592)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.mem_sel;
      reg_data(12594)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.wr_addr;
      reg_data(12594)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.rd_addr;
      reg_data(12595)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.wr_data.wr_data_0;
      reg_data(12596)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).CTRL.ROI_TC.wr_data.wr_data_1;
      reg_data(12608)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).ACTIONS.RESET;
      reg_data(12608)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).ACTIONS.ENABLE;
      reg_data(12608)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).ACTIONS.DISABLE;
      reg_data(12608)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).ACTIONS.FREEZE;
      reg_data(12609)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).CONFIGS.INPUT_EN;
      reg_data(12609)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).CONFIGS.OUTPUT_EN;
      reg_data(12609)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12611)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12611)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12611)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12611)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12611)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12611)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12611)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12613)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.wr_addr;
      reg_data(12613)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.rd_addr;
      reg_data(12614)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(0).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12624)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).ACTIONS.RESET;
      reg_data(12624)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).ACTIONS.ENABLE;
      reg_data(12624)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).ACTIONS.DISABLE;
      reg_data(12624)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).ACTIONS.FREEZE;
      reg_data(12625)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).CONFIGS.INPUT_EN;
      reg_data(12625)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).CONFIGS.OUTPUT_EN;
      reg_data(12625)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12627)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12627)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12627)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12627)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12627)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12627)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12627)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12629)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.wr_addr;
      reg_data(12629)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.rd_addr;
      reg_data(12630)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(1).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12640)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).ACTIONS.RESET;
      reg_data(12640)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).ACTIONS.ENABLE;
      reg_data(12640)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).ACTIONS.DISABLE;
      reg_data(12640)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).ACTIONS.FREEZE;
      reg_data(12641)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).CONFIGS.INPUT_EN;
      reg_data(12641)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).CONFIGS.OUTPUT_EN;
      reg_data(12641)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12643)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12643)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12643)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12643)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12643)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12643)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12643)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12645)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.wr_addr;
      reg_data(12645)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.rd_addr;
      reg_data(12646)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(2).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12656)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).ACTIONS.RESET;
      reg_data(12656)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).ACTIONS.ENABLE;
      reg_data(12656)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).ACTIONS.DISABLE;
      reg_data(12656)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).ACTIONS.FREEZE;
      reg_data(12657)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).CONFIGS.INPUT_EN;
      reg_data(12657)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).CONFIGS.OUTPUT_EN;
      reg_data(12657)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12659)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12659)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12659)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12659)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12659)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12659)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12659)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12661)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.wr_addr;
      reg_data(12661)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.rd_addr;
      reg_data(12662)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(3).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12672)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).ACTIONS.RESET;
      reg_data(12672)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).ACTIONS.ENABLE;
      reg_data(12672)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).ACTIONS.DISABLE;
      reg_data(12672)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).ACTIONS.FREEZE;
      reg_data(12673)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).CONFIGS.INPUT_EN;
      reg_data(12673)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).CONFIGS.OUTPUT_EN;
      reg_data(12673)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12675)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12675)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12675)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12675)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12675)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12675)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12675)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12677)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.wr_addr;
      reg_data(12677)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.rd_addr;
      reg_data(12678)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(4).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12688)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).ACTIONS.RESET;
      reg_data(12688)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).ACTIONS.ENABLE;
      reg_data(12688)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).ACTIONS.DISABLE;
      reg_data(12688)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).ACTIONS.FREEZE;
      reg_data(12689)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).CONFIGS.INPUT_EN;
      reg_data(12689)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).CONFIGS.OUTPUT_EN;
      reg_data(12689)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12691)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12691)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12691)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12691)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12691)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12691)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12691)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12693)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.wr_addr;
      reg_data(12693)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.rd_addr;
      reg_data(12694)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(1).HP.HP(5).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12800)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.ACTIONS.RESET;
      reg_data(12800)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.ACTIONS.ENABLE;
      reg_data(12800)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.ACTIONS.DISABLE;
      reg_data(12800)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.ACTIONS.FREEZE;
      reg_data(12801)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.CONFIGS.INPUT_EN;
      reg_data(12801)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.CONFIGS.OUTPUT_EN;
      reg_data(12801)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).SUPER.CONFIGS.FLUSH_MEM_RESET;
      reg_data(12848)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_req;
      reg_data(12848)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_ack;
      reg_data(12848)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_req;
      reg_data(12848)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_ack;
      reg_data(12848)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.flush_req;
      reg_data(12848)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.freeze_req;
      reg_data(12848)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.mem_sel;
      reg_data(12850)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.wr_addr;
      reg_data(12850)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.rd_addr;
      reg_data(12851)(31 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.wr_data.wr_data_0;
      reg_data(12852)( 5 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).CTRL.ROI_TC.wr_data.wr_data_1;
      reg_data(12864)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).ACTIONS.RESET;
      reg_data(12864)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).ACTIONS.ENABLE;
      reg_data(12864)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).ACTIONS.DISABLE;
      reg_data(12864)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).ACTIONS.FREEZE;
      reg_data(12865)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).CONFIGS.INPUT_EN;
      reg_data(12865)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).CONFIGS.OUTPUT_EN;
      reg_data(12865)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12867)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12867)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12867)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12867)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12867)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12867)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12867)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12869)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.wr_addr;
      reg_data(12869)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.rd_addr;
      reg_data(12870)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(0).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12880)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).ACTIONS.RESET;
      reg_data(12880)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).ACTIONS.ENABLE;
      reg_data(12880)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).ACTIONS.DISABLE;
      reg_data(12880)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).ACTIONS.FREEZE;
      reg_data(12881)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).CONFIGS.INPUT_EN;
      reg_data(12881)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).CONFIGS.OUTPUT_EN;
      reg_data(12881)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12883)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12883)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12883)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12883)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12883)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12883)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12883)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12885)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.wr_addr;
      reg_data(12885)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.rd_addr;
      reg_data(12886)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(1).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12896)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).ACTIONS.RESET;
      reg_data(12896)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).ACTIONS.ENABLE;
      reg_data(12896)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).ACTIONS.DISABLE;
      reg_data(12896)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).ACTIONS.FREEZE;
      reg_data(12897)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).CONFIGS.INPUT_EN;
      reg_data(12897)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).CONFIGS.OUTPUT_EN;
      reg_data(12897)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12899)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12899)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12899)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12899)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12899)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12899)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12899)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12901)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.wr_addr;
      reg_data(12901)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.rd_addr;
      reg_data(12902)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(2).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12912)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).ACTIONS.RESET;
      reg_data(12912)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).ACTIONS.ENABLE;
      reg_data(12912)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).ACTIONS.DISABLE;
      reg_data(12912)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).ACTIONS.FREEZE;
      reg_data(12913)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).CONFIGS.INPUT_EN;
      reg_data(12913)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).CONFIGS.OUTPUT_EN;
      reg_data(12913)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12915)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12915)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12915)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12915)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12915)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12915)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12915)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12917)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.wr_addr;
      reg_data(12917)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.rd_addr;
      reg_data(12918)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(3).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12928)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).ACTIONS.RESET;
      reg_data(12928)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).ACTIONS.ENABLE;
      reg_data(12928)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).ACTIONS.DISABLE;
      reg_data(12928)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).ACTIONS.FREEZE;
      reg_data(12929)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).CONFIGS.INPUT_EN;
      reg_data(12929)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).CONFIGS.OUTPUT_EN;
      reg_data(12929)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12931)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12931)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12931)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12931)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12931)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12931)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12931)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12933)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.wr_addr;
      reg_data(12933)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.rd_addr;
      reg_data(12934)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(4).MDT_DT2R.wr_data.wr_data_0;
      reg_data(12944)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).ACTIONS.RESET;
      reg_data(12944)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).ACTIONS.ENABLE;
      reg_data(12944)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).ACTIONS.DISABLE;
      reg_data(12944)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).ACTIONS.FREEZE;
      reg_data(12945)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).CONFIGS.INPUT_EN;
      reg_data(12945)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).CONFIGS.OUTPUT_EN;
      reg_data(12945)( 6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).CONFIGS.FLUSH_MEM_RESET;
      reg_data(12947)( 0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_req;
      reg_data(12947)( 1)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack;
      reg_data(12947)( 2)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_req;
      reg_data(12947)( 3)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack;
      reg_data(12947)( 4)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.flush_req;
      reg_data(12947)( 5)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.freeze_req;
      reg_data(12947)( 8 downto  6)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.mem_sel;
      reg_data(12949)( 9 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.wr_addr;
      reg_data(12949)(25 downto 16)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.rd_addr;
      reg_data(12950)( 8 downto  0)  <= DEFAULT_HPS_CTRL_t.HEG.HEG(2).HP.HP(5).MDT_DT2R.wr_data.wr_data_0;
      reg_data(16384)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(0).RESET;
      reg_data(16386)(13 downto  4)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(0).HBA_MAX_CLOCKS;
      reg_data(16387)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(0).sb_lsf_mdt_hits_freeze;
      reg_data(16388)(23 downto 16)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(0).sb_lsf_mdt_hits_raddr;
      reg_data(16389)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(0).sb_lsf_mdt_hits_re;
      reg_data(16400)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(1).RESET;
      reg_data(16402)(13 downto  4)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(1).HBA_MAX_CLOCKS;
      reg_data(16403)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(1).sb_lsf_mdt_hits_freeze;
      reg_data(16404)(23 downto 16)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(1).sb_lsf_mdt_hits_raddr;
      reg_data(16405)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(1).sb_lsf_mdt_hits_re;
      reg_data(16416)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(2).RESET;
      reg_data(16418)(13 downto  4)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(2).HBA_MAX_CLOCKS;
      reg_data(16419)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(2).sb_lsf_mdt_hits_freeze;
      reg_data(16420)(23 downto 16)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(2).sb_lsf_mdt_hits_raddr;
      reg_data(16421)( 0)  <= DEFAULT_HPS_CTRL_t.LSF.LSF(2).sb_lsf_mdt_hits_re;
      reg_data(20480)( 0)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(0).ACTIONS.RESET;
      reg_data(20480)( 1)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(0).ACTIONS.ENABLE;
      reg_data(20480)( 2)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(0).ACTIONS.DISABLE;
      reg_data(20480)( 3)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(0).ACTIONS.FREEZE;
      reg_data(20496)( 0)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(1).ACTIONS.RESET;
      reg_data(20496)( 1)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(1).ACTIONS.ENABLE;
      reg_data(20496)( 2)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(1).ACTIONS.DISABLE;
      reg_data(20496)( 3)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(1).ACTIONS.FREEZE;
      reg_data(20512)( 0)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(2).ACTIONS.RESET;
      reg_data(20512)( 1)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(2).ACTIONS.ENABLE;
      reg_data(20512)( 2)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(2).ACTIONS.DISABLE;
      reg_data(20512)( 3)  <= DEFAULT_HPS_CTRL_t.CSF.CSF(2).ACTIONS.FREEZE;

    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      Ctrl.SUPER.ACTIONS.RESET <= '0';
      Ctrl.SUPER.ACTIONS.ENABLE <= '0';
      Ctrl.SUPER.ACTIONS.DISABLE <= '0';
      Ctrl.SUPER.ACTIONS.FREEZE <= '0';
      Ctrl.MDT_TC.MDT_TC(0).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(0).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(0).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(0).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(1).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(1).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(1).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(1).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(2).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(2).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(2).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(2).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(3).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(3).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(3).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(3).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(4).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(4).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(4).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(4).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(5).SIGNALS.wr_req <= '0';
      Ctrl.MDT_TC.MDT_TC(5).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_TC.MDT_TC(5).SIGNALS.rd_req <= '0';
      Ctrl.MDT_TC.MDT_TC(5).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(0).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(0).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(0).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(0).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(1).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(1).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(1).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(1).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(2).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(2).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(2).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(2).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(3).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(3).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(3).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(3).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(4).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(4).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(4).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(4).SIGNALS.rd_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(5).SIGNALS.wr_req <= '0';
      Ctrl.MDT_T0.MDT_T0(5).SIGNALS.wr_ack <= '0';
      Ctrl.MDT_T0.MDT_T0(5).SIGNALS.rd_req <= '0';
      Ctrl.MDT_T0.MDT_T0(5).SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).SUPER.ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).SUPER.ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).SUPER.ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).SUPER.ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).SUPER.ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).SUPER.ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).SUPER.ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).SUPER.ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).SUPER.ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).SUPER.ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).SUPER.ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).SUPER.ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.RESET <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.ENABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.DISABLE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.FREEZE <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_req <= '0';
      Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack <= '0';
      Ctrl.LSF.LSF(0).RESET <= '0';
      Ctrl.LSF.LSF(0).sb_lsf_mdt_hits_re <= '0';
      Ctrl.LSF.LSF(1).RESET <= '0';
      Ctrl.LSF.LSF(1).sb_lsf_mdt_hits_re <= '0';
      Ctrl.LSF.LSF(2).RESET <= '0';
      Ctrl.LSF.LSF(2).sb_lsf_mdt_hits_re <= '0';
      Ctrl.CSF.CSF(0).ACTIONS.RESET <= '0';
      Ctrl.CSF.CSF(0).ACTIONS.ENABLE <= '0';
      Ctrl.CSF.CSF(0).ACTIONS.DISABLE <= '0';
      Ctrl.CSF.CSF(0).ACTIONS.FREEZE <= '0';
      Ctrl.CSF.CSF(1).ACTIONS.RESET <= '0';
      Ctrl.CSF.CSF(1).ACTIONS.ENABLE <= '0';
      Ctrl.CSF.CSF(1).ACTIONS.DISABLE <= '0';
      Ctrl.CSF.CSF(1).ACTIONS.FREEZE <= '0';
      Ctrl.CSF.CSF(2).ACTIONS.RESET <= '0';
      Ctrl.CSF.CSF(2).ACTIONS.ENABLE <= '0';
      Ctrl.CSF.CSF(2).ACTIONS.DISABLE <= '0';
      Ctrl.CSF.CSF(2).ACTIONS.FREEZE <= '0';
      

      
      if localWrEn = '1' then
        case to_integer(unsigned(localAddress(14 downto 0))) is
        when 0 => --0x0
          Ctrl.SUPER.ACTIONS.RESET                          <=  localWrData( 0);               
          Ctrl.SUPER.ACTIONS.ENABLE                         <=  localWrData( 1);               
          Ctrl.SUPER.ACTIONS.DISABLE                        <=  localWrData( 2);               
          Ctrl.SUPER.ACTIONS.FREEZE                         <=  localWrData( 3);               
        when 1 => --0x1
          reg_data( 1)( 3 downto  0)                        <=  localWrData( 3 downto  0);      --
          reg_data( 1)( 4)                                  <=  localWrData( 4);                --
          reg_data( 1)( 5)                                  <=  localWrData( 5);                --
          reg_data( 1)( 6)                                  <=  localWrData( 6);                --
        when 4096 => --0x1000
          Ctrl.MDT_TC.MDT_TC(0).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(0).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(0).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(0).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4096)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(4096)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4096)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4098 => --0x1002
          reg_data(4098)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4098)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4099 => --0x1003
          reg_data(4099)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4100 => --0x1004
          reg_data(4100)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 4112 => --0x1010
          Ctrl.MDT_TC.MDT_TC(1).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(1).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(1).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(1).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4112)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(4112)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4112)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4114 => --0x1012
          reg_data(4114)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4114)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4115 => --0x1013
          reg_data(4115)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4116 => --0x1014
          reg_data(4116)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 4128 => --0x1020
          Ctrl.MDT_TC.MDT_TC(2).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(2).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(2).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(2).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4128)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(4128)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4128)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4130 => --0x1022
          reg_data(4130)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4130)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4131 => --0x1023
          reg_data(4131)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4132 => --0x1024
          reg_data(4132)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 4144 => --0x1030
          Ctrl.MDT_TC.MDT_TC(3).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(3).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(3).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(3).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4144)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(4144)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4144)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4146 => --0x1032
          reg_data(4146)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4146)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4147 => --0x1033
          reg_data(4147)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4148 => --0x1034
          reg_data(4148)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 4160 => --0x1040
          Ctrl.MDT_TC.MDT_TC(4).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(4).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(4).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(4).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4160)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(4160)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4160)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4162 => --0x1042
          reg_data(4162)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4162)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4163 => --0x1043
          reg_data(4163)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4164 => --0x1044
          reg_data(4164)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 4176 => --0x1050
          reg_data(4176)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          Ctrl.MDT_TC.MDT_TC(5).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_TC.MDT_TC(5).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_TC.MDT_TC(5).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_TC.MDT_TC(5).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(4176)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(4176)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 4178 => --0x1052
          reg_data(4178)( 9 downto  0)                      <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(4178)(25 downto 16)                      <=  localWrData(25 downto 16);      --rd_Address
        when 4179 => --0x1053
          reg_data(4179)(31 downto  0)                      <=  localWrData(31 downto  0);      --Write Data 0
        when 4180 => --0x1054
          reg_data(4180)( 5 downto  0)                      <=  localWrData( 5 downto  0);      --Write Data 1
        when 8192 => --0x2000
          Ctrl.MDT_T0.MDT_T0(0).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(0).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(0).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(0).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8192)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(8192)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8192)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8194 => --0x2002
          reg_data(8194)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8194)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8195 => --0x2003
          reg_data(8195)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 8208 => --0x2010
          Ctrl.MDT_T0.MDT_T0(1).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(1).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(1).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(1).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8208)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(8208)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8208)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8210 => --0x2012
          reg_data(8210)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8210)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8211 => --0x2013
          reg_data(8211)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 8224 => --0x2020
          Ctrl.MDT_T0.MDT_T0(2).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(2).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(2).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(2).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8224)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(8224)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8224)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8226 => --0x2022
          reg_data(8226)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8226)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8227 => --0x2023
          reg_data(8227)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 8240 => --0x2030
          Ctrl.MDT_T0.MDT_T0(3).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(3).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(3).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(3).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8240)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(8240)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8240)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8242 => --0x2032
          reg_data(8242)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8242)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8243 => --0x2033
          reg_data(8243)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 8256 => --0x2040
          Ctrl.MDT_T0.MDT_T0(4).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(4).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(4).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(4).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8256)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          reg_data(8256)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8256)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8258 => --0x2042
          reg_data(8258)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8258)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8259 => --0x2043
          reg_data(8259)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 8272 => --0x2050
          reg_data(8272)( 4)                                <=  localWrData( 4);                --flush memory to Zync
          Ctrl.MDT_T0.MDT_T0(5).SIGNALS.wr_req              <=  localWrData( 0);               
          Ctrl.MDT_T0.MDT_T0(5).SIGNALS.wr_ack              <=  localWrData( 1);               
          Ctrl.MDT_T0.MDT_T0(5).SIGNALS.rd_req              <=  localWrData( 2);               
          Ctrl.MDT_T0.MDT_T0(5).SIGNALS.rd_ack              <=  localWrData( 3);               
          reg_data(8272)( 5)                                <=  localWrData( 5);                --freeze memory
          reg_data(8272)( 8 downto  6)                      <=  localWrData( 8 downto  6);      --sel memory
        when 8274 => --0x2052
          reg_data(8274)( 3 downto  0)                      <=  localWrData( 3 downto  0);      --wr_Address
          reg_data(8274)(19 downto 16)                      <=  localWrData(19 downto 16);      --rd_Address
        when 8275 => --0x2053
          reg_data(8275)(16 downto  0)                      <=  localWrData(16 downto  0);      --Write Data 0
        when 12288 => --0x3000
          Ctrl.HEG.HEG(0).SUPER.ACTIONS.RESET               <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).SUPER.ACTIONS.ENABLE              <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).SUPER.ACTIONS.DISABLE             <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).SUPER.ACTIONS.FREEZE              <=  localWrData( 3);               
        when 12289 => --0x3001
          reg_data(12289)( 4)                               <=  localWrData( 4);                --
          reg_data(12289)( 5)                               <=  localWrData( 5);                --
          reg_data(12289)( 6)                               <=  localWrData( 6);                --
        when 12336 => --0x3030
          Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_req        <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.wr_ack        <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_req        <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).CTRL.ROI_TC.SIGNALS.rd_ack        <=  localWrData( 3);               
          reg_data(12336)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12336)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12336)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12338 => --0x3032
          reg_data(12338)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12338)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12339 => --0x3033
          reg_data(12339)(31 downto  0)                     <=  localWrData(31 downto  0);      --Write Data 0
        when 12340 => --0x3034
          reg_data(12340)( 5 downto  0)                     <=  localWrData( 5 downto  0);      --Write Data 1
        when 12352 => --0x3040
          Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(0).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12353 => --0x3041
          reg_data(12353)( 4)                               <=  localWrData( 4);                --
          reg_data(12353)( 5)                               <=  localWrData( 5);                --
          reg_data(12353)( 6)                               <=  localWrData( 6);                --
        when 12355 => --0x3043
          Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12355)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12355)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12355)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12357 => --0x3045
          reg_data(12357)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12357)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12358 => --0x3046
          reg_data(12358)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12368 => --0x3050
          Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(1).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12369 => --0x3051
          reg_data(12369)( 4)                               <=  localWrData( 4);                --
          reg_data(12369)( 5)                               <=  localWrData( 5);                --
          reg_data(12369)( 6)                               <=  localWrData( 6);                --
        when 12371 => --0x3053
          Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12371)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12371)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12371)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12373 => --0x3055
          reg_data(12373)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12373)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12374 => --0x3056
          reg_data(12374)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12384 => --0x3060
          Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(2).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12385 => --0x3061
          reg_data(12385)( 4)                               <=  localWrData( 4);                --
          reg_data(12385)( 5)                               <=  localWrData( 5);                --
          reg_data(12385)( 6)                               <=  localWrData( 6);                --
        when 12387 => --0x3063
          Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12387)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12387)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12387)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12389 => --0x3065
          reg_data(12389)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12389)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12390 => --0x3066
          reg_data(12390)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12400 => --0x3070
          Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(3).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12401 => --0x3071
          reg_data(12401)( 4)                               <=  localWrData( 4);                --
          reg_data(12401)( 5)                               <=  localWrData( 5);                --
          reg_data(12401)( 6)                               <=  localWrData( 6);                --
        when 12403 => --0x3073
          Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12403)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12403)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12403)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12405 => --0x3075
          reg_data(12405)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12405)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12406 => --0x3076
          reg_data(12406)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12416 => --0x3080
          Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(4).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12417 => --0x3081
          reg_data(12417)( 4)                               <=  localWrData( 4);                --
          reg_data(12417)( 5)                               <=  localWrData( 5);                --
          reg_data(12417)( 6)                               <=  localWrData( 6);                --
        when 12419 => --0x3083
          Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12419)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12419)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12419)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12421 => --0x3085
          reg_data(12421)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12421)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12422 => --0x3086
          reg_data(12422)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12432 => --0x3090
          Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(5).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12433 => --0x3091
          reg_data(12433)( 4)                               <=  localWrData( 4);                --
          reg_data(12433)( 5)                               <=  localWrData( 5);                --
          reg_data(12433)( 6)                               <=  localWrData( 6);                --
        when 12435 => --0x3093
          reg_data(12435)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(0).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12435)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12435)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12437 => --0x3095
          reg_data(12437)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12437)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12438 => --0x3096
          reg_data(12438)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12544 => --0x3100
          Ctrl.HEG.HEG(1).SUPER.ACTIONS.RESET               <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).SUPER.ACTIONS.ENABLE              <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).SUPER.ACTIONS.DISABLE             <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).SUPER.ACTIONS.FREEZE              <=  localWrData( 3);               
        when 12545 => --0x3101
          reg_data(12545)( 4)                               <=  localWrData( 4);                --
          reg_data(12545)( 5)                               <=  localWrData( 5);                --
          reg_data(12545)( 6)                               <=  localWrData( 6);                --
        when 12592 => --0x3130
          Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_req        <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.wr_ack        <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_req        <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).CTRL.ROI_TC.SIGNALS.rd_ack        <=  localWrData( 3);               
          reg_data(12592)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12592)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12592)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12594 => --0x3132
          reg_data(12594)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12594)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12595 => --0x3133
          reg_data(12595)(31 downto  0)                     <=  localWrData(31 downto  0);      --Write Data 0
        when 12596 => --0x3134
          reg_data(12596)( 5 downto  0)                     <=  localWrData( 5 downto  0);      --Write Data 1
        when 12608 => --0x3140
          Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(0).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12609 => --0x3141
          reg_data(12609)( 4)                               <=  localWrData( 4);                --
          reg_data(12609)( 5)                               <=  localWrData( 5);                --
          reg_data(12609)( 6)                               <=  localWrData( 6);                --
        when 12611 => --0x3143
          Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12611)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12611)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12611)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12613 => --0x3145
          reg_data(12613)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12613)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12614 => --0x3146
          reg_data(12614)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12624 => --0x3150
          Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(1).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12625 => --0x3151
          reg_data(12625)( 4)                               <=  localWrData( 4);                --
          reg_data(12625)( 5)                               <=  localWrData( 5);                --
          reg_data(12625)( 6)                               <=  localWrData( 6);                --
        when 12627 => --0x3153
          Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12627)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12627)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12627)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12629 => --0x3155
          reg_data(12629)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12629)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12630 => --0x3156
          reg_data(12630)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12640 => --0x3160
          Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(2).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12641 => --0x3161
          reg_data(12641)( 4)                               <=  localWrData( 4);                --
          reg_data(12641)( 5)                               <=  localWrData( 5);                --
          reg_data(12641)( 6)                               <=  localWrData( 6);                --
        when 12643 => --0x3163
          Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12643)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12643)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12643)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12645 => --0x3165
          reg_data(12645)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12645)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12646 => --0x3166
          reg_data(12646)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12656 => --0x3170
          Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(3).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12657 => --0x3171
          reg_data(12657)( 4)                               <=  localWrData( 4);                --
          reg_data(12657)( 5)                               <=  localWrData( 5);                --
          reg_data(12657)( 6)                               <=  localWrData( 6);                --
        when 12659 => --0x3173
          Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12659)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12659)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12659)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12661 => --0x3175
          reg_data(12661)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12661)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12662 => --0x3176
          reg_data(12662)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12672 => --0x3180
          Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(4).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12673 => --0x3181
          reg_data(12673)( 4)                               <=  localWrData( 4);                --
          reg_data(12673)( 5)                               <=  localWrData( 5);                --
          reg_data(12673)( 6)                               <=  localWrData( 6);                --
        when 12675 => --0x3183
          Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12675)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12675)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12675)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12677 => --0x3185
          reg_data(12677)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12677)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12678 => --0x3186
          reg_data(12678)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12688 => --0x3190
          Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(5).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12689 => --0x3191
          reg_data(12689)( 4)                               <=  localWrData( 4);                --
          reg_data(12689)( 5)                               <=  localWrData( 5);                --
          reg_data(12689)( 6)                               <=  localWrData( 6);                --
        when 12691 => --0x3193
          reg_data(12691)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(1).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12691)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12691)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12693 => --0x3195
          reg_data(12693)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12693)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12694 => --0x3196
          reg_data(12694)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12800 => --0x3200
          Ctrl.HEG.HEG(2).SUPER.ACTIONS.RESET               <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).SUPER.ACTIONS.ENABLE              <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).SUPER.ACTIONS.DISABLE             <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).SUPER.ACTIONS.FREEZE              <=  localWrData( 3);               
        when 12801 => --0x3201
          reg_data(12801)( 4)                               <=  localWrData( 4);                --
          reg_data(12801)( 5)                               <=  localWrData( 5);                --
          reg_data(12801)( 6)                               <=  localWrData( 6);                --
        when 12848 => --0x3230
          Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_req        <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.wr_ack        <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_req        <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).CTRL.ROI_TC.SIGNALS.rd_ack        <=  localWrData( 3);               
          reg_data(12848)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12848)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12848)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12850 => --0x3232
          reg_data(12850)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12850)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12851 => --0x3233
          reg_data(12851)(31 downto  0)                     <=  localWrData(31 downto  0);      --Write Data 0
        when 12852 => --0x3234
          reg_data(12852)( 5 downto  0)                     <=  localWrData( 5 downto  0);      --Write Data 1
        when 12864 => --0x3240
          Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(0).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12865 => --0x3241
          reg_data(12865)( 4)                               <=  localWrData( 4);                --
          reg_data(12865)( 5)                               <=  localWrData( 5);                --
          reg_data(12865)( 6)                               <=  localWrData( 6);                --
        when 12867 => --0x3243
          Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(0).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12867)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12867)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12867)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12869 => --0x3245
          reg_data(12869)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12869)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12870 => --0x3246
          reg_data(12870)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12880 => --0x3250
          Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(1).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12881 => --0x3251
          reg_data(12881)( 4)                               <=  localWrData( 4);                --
          reg_data(12881)( 5)                               <=  localWrData( 5);                --
          reg_data(12881)( 6)                               <=  localWrData( 6);                --
        when 12883 => --0x3253
          Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(1).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12883)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12883)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12883)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12885 => --0x3255
          reg_data(12885)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12885)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12886 => --0x3256
          reg_data(12886)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12896 => --0x3260
          Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(2).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12897 => --0x3261
          reg_data(12897)( 4)                               <=  localWrData( 4);                --
          reg_data(12897)( 5)                               <=  localWrData( 5);                --
          reg_data(12897)( 6)                               <=  localWrData( 6);                --
        when 12899 => --0x3263
          Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(2).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12899)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12899)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12899)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12901 => --0x3265
          reg_data(12901)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12901)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12902 => --0x3266
          reg_data(12902)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12912 => --0x3270
          Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(3).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12913 => --0x3271
          reg_data(12913)( 4)                               <=  localWrData( 4);                --
          reg_data(12913)( 5)                               <=  localWrData( 5);                --
          reg_data(12913)( 6)                               <=  localWrData( 6);                --
        when 12915 => --0x3273
          Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(3).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12915)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12915)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12915)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12917 => --0x3275
          reg_data(12917)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12917)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12918 => --0x3276
          reg_data(12918)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12928 => --0x3280
          Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(4).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12929 => --0x3281
          reg_data(12929)( 4)                               <=  localWrData( 4);                --
          reg_data(12929)( 5)                               <=  localWrData( 5);                --
          reg_data(12929)( 6)                               <=  localWrData( 6);                --
        when 12931 => --0x3283
          Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(4).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12931)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          reg_data(12931)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12931)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12933 => --0x3285
          reg_data(12933)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12933)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12934 => --0x3286
          reg_data(12934)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 12944 => --0x3290
          Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.RESET            <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.ENABLE           <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.DISABLE          <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(5).ACTIONS.FREEZE           <=  localWrData( 3);               
        when 12945 => --0x3291
          reg_data(12945)( 4)                               <=  localWrData( 4);                --
          reg_data(12945)( 5)                               <=  localWrData( 5);                --
          reg_data(12945)( 6)                               <=  localWrData( 6);                --
        when 12947 => --0x3293
          reg_data(12947)( 4)                               <=  localWrData( 4);                --flush memory to Zync
          Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_req  <=  localWrData( 0);               
          Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.wr_ack  <=  localWrData( 1);               
          Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_req  <=  localWrData( 2);               
          Ctrl.HEG.HEG(2).HP.HP(5).MDT_DT2R.SIGNALS.rd_ack  <=  localWrData( 3);               
          reg_data(12947)( 5)                               <=  localWrData( 5);                --freeze memory
          reg_data(12947)( 8 downto  6)                     <=  localWrData( 8 downto  6);      --sel memory
        when 12949 => --0x3295
          reg_data(12949)( 9 downto  0)                     <=  localWrData( 9 downto  0);      --wr_Address
          reg_data(12949)(25 downto 16)                     <=  localWrData(25 downto 16);      --rd_Address
        when 12950 => --0x3296
          reg_data(12950)( 8 downto  0)                     <=  localWrData( 8 downto  0);      --Write Data 0
        when 16384 => --0x4000
          Ctrl.LSF.LSF(0).RESET                             <=  localWrData( 0);               
        when 16386 => --0x4002
          reg_data(16386)(13 downto  4)                     <=  localWrData(13 downto  4);      --add some description
        when 16387 => --0x4003
          reg_data(16387)( 0)                               <=  localWrData( 0);                --
        when 16388 => --0x4004
          reg_data(16388)(23 downto 16)                     <=  localWrData(23 downto 16);      --
        when 16389 => --0x4005
          Ctrl.LSF.LSF(0).sb_lsf_mdt_hits_re                <=  localWrData( 0);               
        when 16400 => --0x4010
          Ctrl.LSF.LSF(1).RESET                             <=  localWrData( 0);               
        when 16402 => --0x4012
          reg_data(16402)(13 downto  4)                     <=  localWrData(13 downto  4);      --add some description
        when 16403 => --0x4013
          reg_data(16403)( 0)                               <=  localWrData( 0);                --
        when 16404 => --0x4014
          reg_data(16404)(23 downto 16)                     <=  localWrData(23 downto 16);      --
        when 16405 => --0x4015
          Ctrl.LSF.LSF(1).sb_lsf_mdt_hits_re                <=  localWrData( 0);               
        when 16416 => --0x4020
          Ctrl.LSF.LSF(2).RESET                             <=  localWrData( 0);               
        when 16418 => --0x4022
          reg_data(16418)(13 downto  4)                     <=  localWrData(13 downto  4);      --add some description
        when 16419 => --0x4023
          reg_data(16419)( 0)                               <=  localWrData( 0);                --
        when 16420 => --0x4024
          reg_data(16420)(23 downto 16)                     <=  localWrData(23 downto 16);      --
        when 16421 => --0x4025
          Ctrl.LSF.LSF(2).sb_lsf_mdt_hits_re                <=  localWrData( 0);               
        when 20480 => --0x5000
          Ctrl.CSF.CSF(0).ACTIONS.RESET                     <=  localWrData( 0);               
          Ctrl.CSF.CSF(0).ACTIONS.ENABLE                    <=  localWrData( 1);               
          Ctrl.CSF.CSF(0).ACTIONS.DISABLE                   <=  localWrData( 2);               
          Ctrl.CSF.CSF(0).ACTIONS.FREEZE                    <=  localWrData( 3);               
        when 20496 => --0x5010
          Ctrl.CSF.CSF(1).ACTIONS.RESET                     <=  localWrData( 0);               
          Ctrl.CSF.CSF(1).ACTIONS.ENABLE                    <=  localWrData( 1);               
          Ctrl.CSF.CSF(1).ACTIONS.DISABLE                   <=  localWrData( 2);               
          Ctrl.CSF.CSF(1).ACTIONS.FREEZE                    <=  localWrData( 3);               
        when 20512 => --0x5020
          Ctrl.CSF.CSF(2).ACTIONS.RESET                     <=  localWrData( 0);               
          Ctrl.CSF.CSF(2).ACTIONS.ENABLE                    <=  localWrData( 1);               
          Ctrl.CSF.CSF(2).ACTIONS.DISABLE                   <=  localWrData( 2);               
          Ctrl.CSF.CSF(2).ACTIONS.FREEZE                    <=  localWrData( 3);               

          when others => null;
        end case;
      end if;
    end if;
  end process reg_writes;







  
end architecture behavioral;