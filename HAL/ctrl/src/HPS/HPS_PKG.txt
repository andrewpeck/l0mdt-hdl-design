This file was auto-generated by YML2HDL tool.
https://gitlab.com/tcpaiva/yml2hdl
2022-03-16 16:47:24

R   HPS_SUPER_ACTIONS_CTRL_t:
E      RESET: logic
E      ENABLE: logic
E      DISABLE: logic
E      FREEZE: logic

R   HPS_SUPER_CONFIGS_CTRL_t:
E      THREADS: logic['4 - 1', 0]
E      INPUT_EN: logic
E      OUTPUT_EN: logic
E      FLUSH_MEM_RESET: logic

R   HPS_SUPER_STATUS_MON_t:
E      ENABLED: logic
E      READY: logic
E      ERROR: logic['8 - 1', 0]

R   HPS_SUPER_MON_t:
E      STATUS: HPS_SUPER_STATUS_MON_t
R         HPS_SUPER_STATUS_MON_t:
E            ENABLED: logic
E            READY: logic
E            ERROR: logic['8 - 1', 0]

R   HPS_SUPER_CTRL_t:
E      ACTIONS: HPS_SUPER_ACTIONS_CTRL_t
R         HPS_SUPER_ACTIONS_CTRL_t:
E            RESET: logic
E            ENABLE: logic
E            DISABLE: logic
E            FREEZE: logic
E      CONFIGS: HPS_SUPER_CONFIGS_CTRL_t
R         HPS_SUPER_CONFIGS_CTRL_t:
E            THREADS: logic['4 - 1', 0]
E            INPUT_EN: logic
E            OUTPUT_EN: logic
E            FLUSH_MEM_RESET: logic

R   HPS_MDT_TC_MDT_TC_SIGNALS_MON_t:
E      rd_rdy: logic
E      freeze_ena: logic

R   HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t:
E      wr_req: logic
E      wr_ack: logic
E      rd_req: logic
E      rd_ack: logic
E      flush_req: logic
E      freeze_req: logic
E      mem_sel: logic['3 - 1', 0]

R   HPS_MDT_TC_MDT_TC_wr_data_CTRL_t:
E      wr_data_0: logic['32 - 1', 0]
E      wr_data_1: logic['6 - 1', 0]

R   HPS_MDT_TC_MDT_TC_rd_data_MON_t:
E      rd_data_1: logic['6 - 1', 0]
E      rd_data_0: logic['32 - 1', 0]

R   HPS_MDT_TC_MDT_TC_MON_t:
E      SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_MON_t
R         HPS_MDT_TC_MDT_TC_SIGNALS_MON_t:
E            rd_rdy: logic
E            freeze_ena: logic
E      rd_data: HPS_MDT_TC_MDT_TC_rd_data_MON_t
R         HPS_MDT_TC_MDT_TC_rd_data_MON_t:
E            rd_data_1: logic['6 - 1', 0]
E            rd_data_0: logic['32 - 1', 0]

A   HPS_MDT_TC_MDT_TC_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_MON_t
R      HPS_MDT_TC_MDT_TC_MON_t:
E         SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_MON_t
R            HPS_MDT_TC_MDT_TC_SIGNALS_MON_t:
E               rd_rdy: logic
E               freeze_ena: logic
E         rd_data: HPS_MDT_TC_MDT_TC_rd_data_MON_t
R            HPS_MDT_TC_MDT_TC_rd_data_MON_t:
E               rd_data_1: logic['6 - 1', 0]
E               rd_data_0: logic['32 - 1', 0]

R   HPS_MDT_TC_MDT_TC_CTRL_t:
E      SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t
R         HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t:
E            wr_req: logic
E            wr_ack: logic
E            rd_req: logic
E            rd_ack: logic
E            flush_req: logic
E            freeze_req: logic
E            mem_sel: logic['3 - 1', 0]
E      wr_addr: logic['10 - 1', 0]
E      rd_addr: logic['10 - 1', 0]
E      wr_data: HPS_MDT_TC_MDT_TC_wr_data_CTRL_t
R         HPS_MDT_TC_MDT_TC_wr_data_CTRL_t:
E            wr_data_0: logic['32 - 1', 0]
E            wr_data_1: logic['6 - 1', 0]

A   HPS_MDT_TC_MDT_TC_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_CTRL_t
R      HPS_MDT_TC_MDT_TC_CTRL_t:
E         SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t
R            HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t:
E               wr_req: logic
E               wr_ack: logic
E               rd_req: logic
E               rd_ack: logic
E               flush_req: logic
E               freeze_req: logic
E               mem_sel: logic['3 - 1', 0]
E         wr_addr: logic['10 - 1', 0]
E         rd_addr: logic['10 - 1', 0]
E         wr_data: HPS_MDT_TC_MDT_TC_wr_data_CTRL_t
R            HPS_MDT_TC_MDT_TC_wr_data_CTRL_t:
E               wr_data_0: logic['32 - 1', 0]
E               wr_data_1: logic['6 - 1', 0]

R   HPS_MDT_TC_MON_t:
E      MDT_TC: HPS_MDT_TC_MDT_TC_MON_t_ARRAY
A         HPS_MDT_TC_MDT_TC_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_MON_t
R            HPS_MDT_TC_MDT_TC_MON_t:
E               SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_MON_t
R                  HPS_MDT_TC_MDT_TC_SIGNALS_MON_t:
E                     rd_rdy: logic
E                     freeze_ena: logic
E               rd_data: HPS_MDT_TC_MDT_TC_rd_data_MON_t
R                  HPS_MDT_TC_MDT_TC_rd_data_MON_t:
E                     rd_data_1: logic['6 - 1', 0]
E                     rd_data_0: logic['32 - 1', 0]

R   HPS_MDT_TC_CTRL_t:
E      MDT_TC: HPS_MDT_TC_MDT_TC_CTRL_t_ARRAY
A         HPS_MDT_TC_MDT_TC_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_CTRL_t
R            HPS_MDT_TC_MDT_TC_CTRL_t:
E               SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t
R                  HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t:
E                     wr_req: logic
E                     wr_ack: logic
E                     rd_req: logic
E                     rd_ack: logic
E                     flush_req: logic
E                     freeze_req: logic
E                     mem_sel: logic['3 - 1', 0]
E               wr_addr: logic['10 - 1', 0]
E               rd_addr: logic['10 - 1', 0]
E               wr_data: HPS_MDT_TC_MDT_TC_wr_data_CTRL_t
R                  HPS_MDT_TC_MDT_TC_wr_data_CTRL_t:
E                     wr_data_0: logic['32 - 1', 0]
E                     wr_data_1: logic['6 - 1', 0]

R   HPS_MDT_T0_MDT_T0_SIGNALS_MON_t:
E      rd_rdy: logic
E      freeze_ena: logic

R   HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t:
E      wr_req: logic
E      wr_ack: logic
E      rd_req: logic
E      rd_ack: logic
E      flush_req: logic
E      freeze_req: logic
E      mem_sel: logic['3 - 1', 0]

R   HPS_MDT_T0_MDT_T0_wr_data_CTRL_t:
E      wr_data_0: logic['17 - 1', 0]

R   HPS_MDT_T0_MDT_T0_rd_data_MON_t:
E      rd_data_0: logic['17 - 1', 0]

R   HPS_MDT_T0_MDT_T0_MON_t:
E      SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_MON_t
R         HPS_MDT_T0_MDT_T0_SIGNALS_MON_t:
E            rd_rdy: logic
E            freeze_ena: logic
E      rd_data: HPS_MDT_T0_MDT_T0_rd_data_MON_t
R         HPS_MDT_T0_MDT_T0_rd_data_MON_t:
E            rd_data_0: logic['17 - 1', 0]

A   HPS_MDT_T0_MDT_T0_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_MON_t
R      HPS_MDT_T0_MDT_T0_MON_t:
E         SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_MON_t
R            HPS_MDT_T0_MDT_T0_SIGNALS_MON_t:
E               rd_rdy: logic
E               freeze_ena: logic
E         rd_data: HPS_MDT_T0_MDT_T0_rd_data_MON_t
R            HPS_MDT_T0_MDT_T0_rd_data_MON_t:
E               rd_data_0: logic['17 - 1', 0]

R   HPS_MDT_T0_MDT_T0_CTRL_t:
E      SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t
R         HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t:
E            wr_req: logic
E            wr_ack: logic
E            rd_req: logic
E            rd_ack: logic
E            flush_req: logic
E            freeze_req: logic
E            mem_sel: logic['3 - 1', 0]
E      wr_addr: logic['4 - 1', 0]
E      rd_addr: logic['4 - 1', 0]
E      wr_data: HPS_MDT_T0_MDT_T0_wr_data_CTRL_t
R         HPS_MDT_T0_MDT_T0_wr_data_CTRL_t:
E            wr_data_0: logic['17 - 1', 0]

A   HPS_MDT_T0_MDT_T0_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_CTRL_t
R      HPS_MDT_T0_MDT_T0_CTRL_t:
E         SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t
R            HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t:
E               wr_req: logic
E               wr_ack: logic
E               rd_req: logic
E               rd_ack: logic
E               flush_req: logic
E               freeze_req: logic
E               mem_sel: logic['3 - 1', 0]
E         wr_addr: logic['4 - 1', 0]
E         rd_addr: logic['4 - 1', 0]
E         wr_data: HPS_MDT_T0_MDT_T0_wr_data_CTRL_t
R            HPS_MDT_T0_MDT_T0_wr_data_CTRL_t:
E               wr_data_0: logic['17 - 1', 0]

R   HPS_MDT_T0_MON_t:
E      MDT_T0: HPS_MDT_T0_MDT_T0_MON_t_ARRAY
A         HPS_MDT_T0_MDT_T0_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_MON_t
R            HPS_MDT_T0_MDT_T0_MON_t:
E               SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_MON_t
R                  HPS_MDT_T0_MDT_T0_SIGNALS_MON_t:
E                     rd_rdy: logic
E                     freeze_ena: logic
E               rd_data: HPS_MDT_T0_MDT_T0_rd_data_MON_t
R                  HPS_MDT_T0_MDT_T0_rd_data_MON_t:
E                     rd_data_0: logic['17 - 1', 0]

R   HPS_MDT_T0_CTRL_t:
E      MDT_T0: HPS_MDT_T0_MDT_T0_CTRL_t_ARRAY
A         HPS_MDT_T0_MDT_T0_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_CTRL_t
R            HPS_MDT_T0_MDT_T0_CTRL_t:
E               SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t
R                  HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t:
E                     wr_req: logic
E                     wr_ack: logic
E                     rd_req: logic
E                     rd_ack: logic
E                     flush_req: logic
E                     freeze_req: logic
E                     mem_sel: logic['3 - 1', 0]
E               wr_addr: logic['4 - 1', 0]
E               rd_addr: logic['4 - 1', 0]
E               wr_data: HPS_MDT_T0_MDT_T0_wr_data_CTRL_t
R                  HPS_MDT_T0_MDT_T0_wr_data_CTRL_t:
E                     wr_data_0: logic['17 - 1', 0]

R   HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E      RESET: logic
E      ENABLE: logic
E      DISABLE: logic
E      FREEZE: logic

R   HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E      INPUT_EN: logic
E      OUTPUT_EN: logic
E      FLUSH_MEM_RESET: logic

R   HPS_HEG_HEG_SUPER_STATUS_MON_t:
E      ENABLED: logic
E      READY: logic
E      ERROR: logic

R   HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E      SLC_PROC: logic['32 - 1', 0]
E      HIT_PROC: logic['32 - 1', 0]
E      HIT_OK: logic['32 - 1', 0]
E      ERROR: logic['32 - 1', 0]

R   HPS_HEG_HEG_SUPER_MON_t:
E      STATUS: HPS_HEG_HEG_SUPER_STATUS_MON_t
R         HPS_HEG_HEG_SUPER_STATUS_MON_t:
E            ENABLED: logic
E            READY: logic
E            ERROR: logic
E      COUNTERS: HPS_HEG_HEG_SUPER_COUNTERS_MON_t
R         HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E            SLC_PROC: logic['32 - 1', 0]
E            HIT_PROC: logic['32 - 1', 0]
E            HIT_OK: logic['32 - 1', 0]
E            ERROR: logic['32 - 1', 0]

R   HPS_HEG_HEG_SUPER_CTRL_t:
E      ACTIONS: HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t
R         HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E            RESET: logic
E            ENABLE: logic
E            DISABLE: logic
E            FREEZE: logic
E      CONFIGS: HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t
R         HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E            INPUT_EN: logic
E            OUTPUT_EN: logic
E            FLUSH_MEM_RESET: logic

R   HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E      rd_rdy: logic
E      freeze_ena: logic

R   HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E      wr_req: logic
E      wr_ack: logic
E      rd_req: logic
E      rd_ack: logic
E      flush_req: logic
E      freeze_req: logic
E      mem_sel: logic['3 - 1', 0]

R   HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E      wr_data_0: logic['32 - 1', 0]
E      wr_data_1: logic['6 - 1', 0]

R   HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E      rd_data_1: logic['6 - 1', 0]
E      rd_data_0: logic['32 - 1', 0]

R   HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E      SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R         HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E            rd_rdy: logic
E            freeze_ena: logic
E      rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R         HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E            rd_data_1: logic['6 - 1', 0]
E            rd_data_0: logic['32 - 1', 0]

R   HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E      SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R         HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E            wr_req: logic
E            wr_ack: logic
E            rd_req: logic
E            rd_ack: logic
E            flush_req: logic
E            freeze_req: logic
E            mem_sel: logic['3 - 1', 0]
E      wr_addr: logic['10 - 1', 0]
E      rd_addr: logic['10 - 1', 0]
E      wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R         HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E            wr_data_0: logic['32 - 1', 0]
E            wr_data_1: logic['6 - 1', 0]

R   HPS_HEG_HEG_CTRL_MON_t:
E      ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_MON_t
R         HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E            SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R               HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E                  rd_rdy: logic
E                  freeze_ena: logic
E            rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R               HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E                  rd_data_1: logic['6 - 1', 0]
E                  rd_data_0: logic['32 - 1', 0]

R   HPS_HEG_HEG_CTRL_CTRL_t:
E      ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t
R         HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E            SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R               HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E                  wr_req: logic
E                  wr_ack: logic
E                  rd_req: logic
E                  rd_ack: logic
E                  flush_req: logic
E                  freeze_req: logic
E                  mem_sel: logic['3 - 1', 0]
E            wr_addr: logic['10 - 1', 0]
E            rd_addr: logic['10 - 1', 0]
E            wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R               HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E                  wr_data_0: logic['32 - 1', 0]
E                  wr_data_1: logic['6 - 1', 0]

R   HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E      RESET: logic
E      ENABLE: logic
E      DISABLE: logic
E      FREEZE: logic

R   HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E      INPUT_EN: logic
E      OUTPUT_EN: logic
E      FLUSH_MEM_RESET: logic

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E      rd_rdy: logic
E      freeze_ena: logic

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E      wr_req: logic
E      wr_ack: logic
E      rd_req: logic
E      rd_ack: logic
E      flush_req: logic
E      freeze_req: logic
E      mem_sel: logic['3 - 1', 0]

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E      wr_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E      rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E      SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E            rd_rdy: logic
E            freeze_ena: logic
E      rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E            rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E      SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E            wr_req: logic
E            wr_ack: logic
E            rd_req: logic
E            rd_ack: logic
E            flush_req: logic
E            freeze_req: logic
E            mem_sel: logic['3 - 1', 0]
E      wr_addr: logic['10 - 1', 0]
E      rd_addr: logic['10 - 1', 0]
E      wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E            wr_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_HP_MON_t:
E      MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E            SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R               HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                  rd_rdy: logic
E                  freeze_ena: logic
E            rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R               HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                  rd_data_0: logic['9 - 1', 0]

A   HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R      HPS_HEG_HEG_HP_HP_MON_t:
E         MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R            HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E               SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                     rd_rdy: logic
E                     freeze_ena: logic
E               rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                     rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_HP_CTRL_t:
E      ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R         HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E            RESET: logic
E            ENABLE: logic
E            DISABLE: logic
E            FREEZE: logic
E      CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R         HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E            INPUT_EN: logic
E            OUTPUT_EN: logic
E            FLUSH_MEM_RESET: logic
E      MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R         HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E            SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R               HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                  wr_req: logic
E                  wr_ack: logic
E                  rd_req: logic
E                  rd_ack: logic
E                  flush_req: logic
E                  freeze_req: logic
E                  mem_sel: logic['3 - 1', 0]
E            wr_addr: logic['10 - 1', 0]
E            rd_addr: logic['10 - 1', 0]
E            wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R               HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                  wr_data_0: logic['9 - 1', 0]

A   HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R      HPS_HEG_HEG_HP_HP_CTRL_t:
E         ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R            HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E               RESET: logic
E               ENABLE: logic
E               DISABLE: logic
E               FREEZE: logic
E         CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R            HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E               INPUT_EN: logic
E               OUTPUT_EN: logic
E               FLUSH_MEM_RESET: logic
E         MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R            HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E               SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                     wr_req: logic
E                     wr_ack: logic
E                     rd_req: logic
E                     rd_ack: logic
E                     flush_req: logic
E                     freeze_req: logic
E                     mem_sel: logic['3 - 1', 0]
E               wr_addr: logic['10 - 1', 0]
E               rd_addr: logic['10 - 1', 0]
E               wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                     wr_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_MON_t:
E      HP: HPS_HEG_HEG_HP_HP_MON_t_ARRAY
A         HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R            HPS_HEG_HEG_HP_HP_MON_t:
E               MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E                     SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                           rd_rdy: logic
E                           freeze_ena: logic
E                     rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                           rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_HP_CTRL_t:
E      HP: HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY
A         HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R            HPS_HEG_HEG_HP_HP_CTRL_t:
E               ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R                  HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E                     RESET: logic
E                     ENABLE: logic
E                     DISABLE: logic
E                     FREEZE: logic
E               CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R                  HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E                     INPUT_EN: logic
E                     OUTPUT_EN: logic
E                     FLUSH_MEM_RESET: logic
E               MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R                  HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E                     SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                           wr_req: logic
E                           wr_ack: logic
E                           rd_req: logic
E                           rd_ack: logic
E                           flush_req: logic
E                           freeze_req: logic
E                           mem_sel: logic['3 - 1', 0]
E                     wr_addr: logic['10 - 1', 0]
E                     rd_addr: logic['10 - 1', 0]
E                     wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                           wr_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_MON_t:
E      SUPER: HPS_HEG_HEG_SUPER_MON_t
R         HPS_HEG_HEG_SUPER_MON_t:
E            STATUS: HPS_HEG_HEG_SUPER_STATUS_MON_t
R               HPS_HEG_HEG_SUPER_STATUS_MON_t:
E                  ENABLED: logic
E                  READY: logic
E                  ERROR: logic
E            COUNTERS: HPS_HEG_HEG_SUPER_COUNTERS_MON_t
R               HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E                  SLC_PROC: logic['32 - 1', 0]
E                  HIT_PROC: logic['32 - 1', 0]
E                  HIT_OK: logic['32 - 1', 0]
E                  ERROR: logic['32 - 1', 0]
E      CTRL: HPS_HEG_HEG_CTRL_MON_t
R         HPS_HEG_HEG_CTRL_MON_t:
E            ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_MON_t
R               HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E                  SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R                     HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E                        rd_rdy: logic
E                        freeze_ena: logic
E                  rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R                     HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E                        rd_data_1: logic['6 - 1', 0]
E                        rd_data_0: logic['32 - 1', 0]
E      HP: HPS_HEG_HEG_HP_MON_t
R         HPS_HEG_HEG_HP_MON_t:
E            HP: HPS_HEG_HEG_HP_HP_MON_t_ARRAY
A               HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R                  HPS_HEG_HEG_HP_HP_MON_t:
E                     MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E                           SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                              HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                                 rd_rdy: logic
E                                 freeze_ena: logic
E                           rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                              HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                                 rd_data_0: logic['9 - 1', 0]

A   HPS_HEG_HEG_MON_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_MON_t
R      HPS_HEG_HEG_MON_t:
E         SUPER: HPS_HEG_HEG_SUPER_MON_t
R            HPS_HEG_HEG_SUPER_MON_t:
E               STATUS: HPS_HEG_HEG_SUPER_STATUS_MON_t
R                  HPS_HEG_HEG_SUPER_STATUS_MON_t:
E                     ENABLED: logic
E                     READY: logic
E                     ERROR: logic
E               COUNTERS: HPS_HEG_HEG_SUPER_COUNTERS_MON_t
R                  HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E                     SLC_PROC: logic['32 - 1', 0]
E                     HIT_PROC: logic['32 - 1', 0]
E                     HIT_OK: logic['32 - 1', 0]
E                     ERROR: logic['32 - 1', 0]
E         CTRL: HPS_HEG_HEG_CTRL_MON_t
R            HPS_HEG_HEG_CTRL_MON_t:
E               ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_MON_t
R                  HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E                     SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E                           rd_rdy: logic
E                           freeze_ena: logic
E                     rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E                           rd_data_1: logic['6 - 1', 0]
E                           rd_data_0: logic['32 - 1', 0]
E         HP: HPS_HEG_HEG_HP_MON_t
R            HPS_HEG_HEG_HP_MON_t:
E               HP: HPS_HEG_HEG_HP_HP_MON_t_ARRAY
A                  HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R                     HPS_HEG_HEG_HP_HP_MON_t:
E                        MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R                           HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E                              SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                                    rd_rdy: logic
E                                    freeze_ena: logic
E                              rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                                    rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_HEG_CTRL_t:
E      SUPER: HPS_HEG_HEG_SUPER_CTRL_t
R         HPS_HEG_HEG_SUPER_CTRL_t:
E            ACTIONS: HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t
R               HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E                  RESET: logic
E                  ENABLE: logic
E                  DISABLE: logic
E                  FREEZE: logic
E            CONFIGS: HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t
R               HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E                  INPUT_EN: logic
E                  OUTPUT_EN: logic
E                  FLUSH_MEM_RESET: logic
E      CTRL: HPS_HEG_HEG_CTRL_CTRL_t
R         HPS_HEG_HEG_CTRL_CTRL_t:
E            ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t
R               HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E                  SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R                     HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E                        wr_req: logic
E                        wr_ack: logic
E                        rd_req: logic
E                        rd_ack: logic
E                        flush_req: logic
E                        freeze_req: logic
E                        mem_sel: logic['3 - 1', 0]
E                  wr_addr: logic['10 - 1', 0]
E                  rd_addr: logic['10 - 1', 0]
E                  wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R                     HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E                        wr_data_0: logic['32 - 1', 0]
E                        wr_data_1: logic['6 - 1', 0]
E      HP: HPS_HEG_HEG_HP_CTRL_t
R         HPS_HEG_HEG_HP_CTRL_t:
E            HP: HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY
A               HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R                  HPS_HEG_HEG_HP_HP_CTRL_t:
E                     ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R                        HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E                           RESET: logic
E                           ENABLE: logic
E                           DISABLE: logic
E                           FREEZE: logic
E                     CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R                        HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E                           INPUT_EN: logic
E                           OUTPUT_EN: logic
E                           FLUSH_MEM_RESET: logic
E                     MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R                        HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E                           SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                              HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                                 wr_req: logic
E                                 wr_ack: logic
E                                 rd_req: logic
E                                 rd_ack: logic
E                                 flush_req: logic
E                                 freeze_req: logic
E                                 mem_sel: logic['3 - 1', 0]
E                           wr_addr: logic['10 - 1', 0]
E                           rd_addr: logic['10 - 1', 0]
E                           wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                              HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                                 wr_data_0: logic['9 - 1', 0]

A   HPS_HEG_HEG_CTRL_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_CTRL_t
R      HPS_HEG_HEG_CTRL_t:
E         SUPER: HPS_HEG_HEG_SUPER_CTRL_t
R            HPS_HEG_HEG_SUPER_CTRL_t:
E               ACTIONS: HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t
R                  HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E                     RESET: logic
E                     ENABLE: logic
E                     DISABLE: logic
E                     FREEZE: logic
E               CONFIGS: HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t
R                  HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E                     INPUT_EN: logic
E                     OUTPUT_EN: logic
E                     FLUSH_MEM_RESET: logic
E         CTRL: HPS_HEG_HEG_CTRL_CTRL_t
R            HPS_HEG_HEG_CTRL_CTRL_t:
E               ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t
R                  HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E                     SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E                           wr_req: logic
E                           wr_ack: logic
E                           rd_req: logic
E                           rd_ack: logic
E                           flush_req: logic
E                           freeze_req: logic
E                           mem_sel: logic['3 - 1', 0]
E                     wr_addr: logic['10 - 1', 0]
E                     rd_addr: logic['10 - 1', 0]
E                     wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E                           wr_data_0: logic['32 - 1', 0]
E                           wr_data_1: logic['6 - 1', 0]
E         HP: HPS_HEG_HEG_HP_CTRL_t
R            HPS_HEG_HEG_HP_CTRL_t:
E               HP: HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY
A                  HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R                     HPS_HEG_HEG_HP_HP_CTRL_t:
E                        ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R                           HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E                              RESET: logic
E                              ENABLE: logic
E                              DISABLE: logic
E                              FREEZE: logic
E                        CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R                           HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E                              INPUT_EN: logic
E                              OUTPUT_EN: logic
E                              FLUSH_MEM_RESET: logic
E                        MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R                           HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E                              SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                                    wr_req: logic
E                                    wr_ack: logic
E                                    rd_req: logic
E                                    rd_ack: logic
E                                    flush_req: logic
E                                    freeze_req: logic
E                                    mem_sel: logic['3 - 1', 0]
E                              wr_addr: logic['10 - 1', 0]
E                              rd_addr: logic['10 - 1', 0]
E                              wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                                    wr_data_0: logic['9 - 1', 0]

R   HPS_HEG_MON_t:
E      HEG: HPS_HEG_HEG_MON_t_ARRAY
A         HPS_HEG_HEG_MON_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_MON_t
R            HPS_HEG_HEG_MON_t:
E               SUPER: HPS_HEG_HEG_SUPER_MON_t
R                  HPS_HEG_HEG_SUPER_MON_t:
E                     STATUS: HPS_HEG_HEG_SUPER_STATUS_MON_t
R                        HPS_HEG_HEG_SUPER_STATUS_MON_t:
E                           ENABLED: logic
E                           READY: logic
E                           ERROR: logic
E                     COUNTERS: HPS_HEG_HEG_SUPER_COUNTERS_MON_t
R                        HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E                           SLC_PROC: logic['32 - 1', 0]
E                           HIT_PROC: logic['32 - 1', 0]
E                           HIT_OK: logic['32 - 1', 0]
E                           ERROR: logic['32 - 1', 0]
E               CTRL: HPS_HEG_HEG_CTRL_MON_t
R                  HPS_HEG_HEG_CTRL_MON_t:
E                     ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_MON_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E                           SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E                                 rd_rdy: logic
E                                 freeze_ena: logic
E                           rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E                                 rd_data_1: logic['6 - 1', 0]
E                                 rd_data_0: logic['32 - 1', 0]
E               HP: HPS_HEG_HEG_HP_MON_t
R                  HPS_HEG_HEG_HP_MON_t:
E                     HP: HPS_HEG_HEG_HP_HP_MON_t_ARRAY
A                        HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R                           HPS_HEG_HEG_HP_HP_MON_t:
E                              MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E                                    SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                                          rd_rdy: logic
E                                          freeze_ena: logic
E                                    rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                                          rd_data_0: logic['9 - 1', 0]

R   HPS_HEG_CTRL_t:
E      HEG: HPS_HEG_HEG_CTRL_t_ARRAY
A         HPS_HEG_HEG_CTRL_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_CTRL_t
R            HPS_HEG_HEG_CTRL_t:
E               SUPER: HPS_HEG_HEG_SUPER_CTRL_t
R                  HPS_HEG_HEG_SUPER_CTRL_t:
E                     ACTIONS: HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t
R                        HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E                           RESET: logic
E                           ENABLE: logic
E                           DISABLE: logic
E                           FREEZE: logic
E                     CONFIGS: HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t
R                        HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E                           INPUT_EN: logic
E                           OUTPUT_EN: logic
E                           FLUSH_MEM_RESET: logic
E               CTRL: HPS_HEG_HEG_CTRL_CTRL_t
R                  HPS_HEG_HEG_CTRL_CTRL_t:
E                     ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t
R                        HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E                           SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E                                 wr_req: logic
E                                 wr_ack: logic
E                                 rd_req: logic
E                                 rd_ack: logic
E                                 flush_req: logic
E                                 freeze_req: logic
E                                 mem_sel: logic['3 - 1', 0]
E                           wr_addr: logic['10 - 1', 0]
E                           rd_addr: logic['10 - 1', 0]
E                           wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E                                 wr_data_0: logic['32 - 1', 0]
E                                 wr_data_1: logic['6 - 1', 0]
E               HP: HPS_HEG_HEG_HP_CTRL_t
R                  HPS_HEG_HEG_HP_CTRL_t:
E                     HP: HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY
A                        HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R                           HPS_HEG_HEG_HP_HP_CTRL_t:
E                              ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E                                    RESET: logic
E                                    ENABLE: logic
E                                    DISABLE: logic
E                                    FREEZE: logic
E                              CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E                                    INPUT_EN: logic
E                                    OUTPUT_EN: logic
E                                    FLUSH_MEM_RESET: logic
E                              MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E                                    SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                                          wr_req: logic
E                                          wr_ack: logic
E                                          rd_req: logic
E                                          rd_ack: logic
E                                          flush_req: logic
E                                          freeze_req: logic
E                                          mem_sel: logic['3 - 1', 0]
E                                    wr_addr: logic['10 - 1', 0]
E                                    rd_addr: logic['10 - 1', 0]
E                                    wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                                          wr_data_0: logic['9 - 1', 0]

R   HPS_LSF_LSF_MON_t:
E      STATUS: logic
E      sb_lsf_mdt_hits_rdata_31_0: logic['32 - 1', 0]
E      sb_lsf_mdt_hits_rdata_40_32: logic['9 - 1', 0]

A   HPS_LSF_LSF_MON_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_MON_t
R      HPS_LSF_LSF_MON_t:
E         STATUS: logic
E         sb_lsf_mdt_hits_rdata_31_0: logic['32 - 1', 0]
E         sb_lsf_mdt_hits_rdata_40_32: logic['9 - 1', 0]

R   HPS_LSF_LSF_CTRL_t:
E      RESET: logic
E      HBA_MAX_CLOCKS: logic['10 - 1', 0]
E      sb_lsf_mdt_hits_freeze: logic
E      sb_lsf_mdt_hits_raddr: logic['8 - 1', 0]
E      sb_lsf_mdt_hits_re: logic

A   HPS_LSF_LSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_CTRL_t
R      HPS_LSF_LSF_CTRL_t:
E         RESET: logic
E         HBA_MAX_CLOCKS: logic['10 - 1', 0]
E         sb_lsf_mdt_hits_freeze: logic
E         sb_lsf_mdt_hits_raddr: logic['8 - 1', 0]
E         sb_lsf_mdt_hits_re: logic

R   HPS_LSF_MON_t:
E      LSF: HPS_LSF_LSF_MON_t_ARRAY
A         HPS_LSF_LSF_MON_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_MON_t
R            HPS_LSF_LSF_MON_t:
E               STATUS: logic
E               sb_lsf_mdt_hits_rdata_31_0: logic['32 - 1', 0]
E               sb_lsf_mdt_hits_rdata_40_32: logic['9 - 1', 0]

R   HPS_LSF_CTRL_t:
E      LSF: HPS_LSF_LSF_CTRL_t_ARRAY
A         HPS_LSF_LSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_CTRL_t
R            HPS_LSF_LSF_CTRL_t:
E               RESET: logic
E               HBA_MAX_CLOCKS: logic['10 - 1', 0]
E               sb_lsf_mdt_hits_freeze: logic
E               sb_lsf_mdt_hits_raddr: logic['8 - 1', 0]
E               sb_lsf_mdt_hits_re: logic

R   HPS_CSF_CSF_ACTIONS_CTRL_t:
E      RESET: logic
E      ENABLE: logic
E      DISABLE: logic
E      FREEZE: logic

R   HPS_CSF_CSF_STATUS_MON_t:
E      ENABLED: logic
E      READY: logic
E      ERROR: logic

R   HPS_CSF_CSF_MON_t:
E      STATUS: HPS_CSF_CSF_STATUS_MON_t
R         HPS_CSF_CSF_STATUS_MON_t:
E            ENABLED: logic
E            READY: logic
E            ERROR: logic

A   HPS_CSF_CSF_MON_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_MON_t
R      HPS_CSF_CSF_MON_t:
E         STATUS: HPS_CSF_CSF_STATUS_MON_t
R            HPS_CSF_CSF_STATUS_MON_t:
E               ENABLED: logic
E               READY: logic
E               ERROR: logic

R   HPS_CSF_CSF_CTRL_t:
E      ACTIONS: HPS_CSF_CSF_ACTIONS_CTRL_t
R         HPS_CSF_CSF_ACTIONS_CTRL_t:
E            RESET: logic
E            ENABLE: logic
E            DISABLE: logic
E            FREEZE: logic

A   HPS_CSF_CSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_CTRL_t
R      HPS_CSF_CSF_CTRL_t:
E         ACTIONS: HPS_CSF_CSF_ACTIONS_CTRL_t
R            HPS_CSF_CSF_ACTIONS_CTRL_t:
E               RESET: logic
E               ENABLE: logic
E               DISABLE: logic
E               FREEZE: logic

R   HPS_CSF_MON_t:
E      CSF: HPS_CSF_CSF_MON_t_ARRAY
A         HPS_CSF_CSF_MON_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_MON_t
R            HPS_CSF_CSF_MON_t:
E               STATUS: HPS_CSF_CSF_STATUS_MON_t
R                  HPS_CSF_CSF_STATUS_MON_t:
E                     ENABLED: logic
E                     READY: logic
E                     ERROR: logic

R   HPS_CSF_CTRL_t:
E      CSF: HPS_CSF_CSF_CTRL_t_ARRAY
A         HPS_CSF_CSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_CTRL_t
R            HPS_CSF_CSF_CTRL_t:
E               ACTIONS: HPS_CSF_CSF_ACTIONS_CTRL_t
R                  HPS_CSF_CSF_ACTIONS_CTRL_t:
E                     RESET: logic
E                     ENABLE: logic
E                     DISABLE: logic
E                     FREEZE: logic

R   HPS_MON_t:
E      SUPER: HPS_SUPER_MON_t
R         HPS_SUPER_MON_t:
E            STATUS: HPS_SUPER_STATUS_MON_t
R               HPS_SUPER_STATUS_MON_t:
E                  ENABLED: logic
E                  READY: logic
E                  ERROR: logic['8 - 1', 0]
E      MDT_TC: HPS_MDT_TC_MON_t
R         HPS_MDT_TC_MON_t:
E            MDT_TC: HPS_MDT_TC_MDT_TC_MON_t_ARRAY
A               HPS_MDT_TC_MDT_TC_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_MON_t
R                  HPS_MDT_TC_MDT_TC_MON_t:
E                     SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_MON_t
R                        HPS_MDT_TC_MDT_TC_SIGNALS_MON_t:
E                           rd_rdy: logic
E                           freeze_ena: logic
E                     rd_data: HPS_MDT_TC_MDT_TC_rd_data_MON_t
R                        HPS_MDT_TC_MDT_TC_rd_data_MON_t:
E                           rd_data_1: logic['6 - 1', 0]
E                           rd_data_0: logic['32 - 1', 0]
E      MDT_T0: HPS_MDT_T0_MON_t
R         HPS_MDT_T0_MON_t:
E            MDT_T0: HPS_MDT_T0_MDT_T0_MON_t_ARRAY
A               HPS_MDT_T0_MDT_T0_MON_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_MON_t
R                  HPS_MDT_T0_MDT_T0_MON_t:
E                     SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_MON_t
R                        HPS_MDT_T0_MDT_T0_SIGNALS_MON_t:
E                           rd_rdy: logic
E                           freeze_ena: logic
E                     rd_data: HPS_MDT_T0_MDT_T0_rd_data_MON_t
R                        HPS_MDT_T0_MDT_T0_rd_data_MON_t:
E                           rd_data_0: logic['17 - 1', 0]
E      HEG: HPS_HEG_MON_t
R         HPS_HEG_MON_t:
E            HEG: HPS_HEG_HEG_MON_t_ARRAY
A               HPS_HEG_HEG_MON_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_MON_t
R                  HPS_HEG_HEG_MON_t:
E                     SUPER: HPS_HEG_HEG_SUPER_MON_t
R                        HPS_HEG_HEG_SUPER_MON_t:
E                           STATUS: HPS_HEG_HEG_SUPER_STATUS_MON_t
R                              HPS_HEG_HEG_SUPER_STATUS_MON_t:
E                                 ENABLED: logic
E                                 READY: logic
E                                 ERROR: logic
E                           COUNTERS: HPS_HEG_HEG_SUPER_COUNTERS_MON_t
R                              HPS_HEG_HEG_SUPER_COUNTERS_MON_t:
E                                 SLC_PROC: logic['32 - 1', 0]
E                                 HIT_PROC: logic['32 - 1', 0]
E                                 HIT_OK: logic['32 - 1', 0]
E                                 ERROR: logic['32 - 1', 0]
E                     CTRL: HPS_HEG_HEG_CTRL_MON_t
R                        HPS_HEG_HEG_CTRL_MON_t:
E                           ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_MON_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_MON_t:
E                                 SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t
R                                    HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_MON_t:
E                                       rd_rdy: logic
E                                       freeze_ena: logic
E                                 rd_data: HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t
R                                    HPS_HEG_HEG_CTRL_ROI_TC_rd_data_MON_t:
E                                       rd_data_1: logic['6 - 1', 0]
E                                       rd_data_0: logic['32 - 1', 0]
E                     HP: HPS_HEG_HEG_HP_MON_t
R                        HPS_HEG_HEG_HP_MON_t:
E                           HP: HPS_HEG_HEG_HP_HP_MON_t_ARRAY
A                              HPS_HEG_HEG_HP_HP_MON_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_MON_t
R                                 HPS_HEG_HEG_HP_HP_MON_t:
E                                    MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_MON_t:
E                                          SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t
R                                             HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t:
E                                                rd_rdy: logic
E                                                freeze_ena: logic
E                                          rd_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t
R                                             HPS_HEG_HEG_HP_HP_MDT_DT2R_rd_data_MON_t:
E                                                rd_data_0: logic['9 - 1', 0]
E      LSF: HPS_LSF_MON_t
R         HPS_LSF_MON_t:
E            LSF: HPS_LSF_LSF_MON_t_ARRAY
A               HPS_LSF_LSF_MON_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_MON_t
R                  HPS_LSF_LSF_MON_t:
E                     STATUS: logic
E                     sb_lsf_mdt_hits_rdata_31_0: logic['32 - 1', 0]
E                     sb_lsf_mdt_hits_rdata_40_32: logic['9 - 1', 0]
E      CSF: HPS_CSF_MON_t
R         HPS_CSF_MON_t:
E            CSF: HPS_CSF_CSF_MON_t_ARRAY
A               HPS_CSF_CSF_MON_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_MON_t
R                  HPS_CSF_CSF_MON_t:
E                     STATUS: HPS_CSF_CSF_STATUS_MON_t
R                        HPS_CSF_CSF_STATUS_MON_t:
E                           ENABLED: logic
E                           READY: logic
E                           ERROR: logic

R   HPS_CTRL_t:
E      SUPER: HPS_SUPER_CTRL_t
R         HPS_SUPER_CTRL_t:
E            ACTIONS: HPS_SUPER_ACTIONS_CTRL_t
R               HPS_SUPER_ACTIONS_CTRL_t:
E                  RESET: logic
E                  ENABLE: logic
E                  DISABLE: logic
E                  FREEZE: logic
E            CONFIGS: HPS_SUPER_CONFIGS_CTRL_t
R               HPS_SUPER_CONFIGS_CTRL_t:
E                  THREADS: logic['4 - 1', 0]
E                  INPUT_EN: logic
E                  OUTPUT_EN: logic
E                  FLUSH_MEM_RESET: logic
E      MDT_TC: HPS_MDT_TC_CTRL_t
R         HPS_MDT_TC_CTRL_t:
E            MDT_TC: HPS_MDT_TC_MDT_TC_CTRL_t_ARRAY
A               HPS_MDT_TC_MDT_TC_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_TC_MDT_TC_CTRL_t
R                  HPS_MDT_TC_MDT_TC_CTRL_t:
E                     SIGNALS: HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t
R                        HPS_MDT_TC_MDT_TC_SIGNALS_CTRL_t:
E                           wr_req: logic
E                           wr_ack: logic
E                           rd_req: logic
E                           rd_ack: logic
E                           flush_req: logic
E                           freeze_req: logic
E                           mem_sel: logic['3 - 1', 0]
E                     wr_addr: logic['10 - 1', 0]
E                     rd_addr: logic['10 - 1', 0]
E                     wr_data: HPS_MDT_TC_MDT_TC_wr_data_CTRL_t
R                        HPS_MDT_TC_MDT_TC_wr_data_CTRL_t:
E                           wr_data_0: logic['32 - 1', 0]
E                           wr_data_1: logic['6 - 1', 0]
E      MDT_T0: HPS_MDT_T0_CTRL_t
R         HPS_MDT_T0_CTRL_t:
E            MDT_T0: HPS_MDT_T0_MDT_T0_CTRL_t_ARRAY
A               HPS_MDT_T0_MDT_T0_CTRL_t_ARRAY: array['6 -1', 0] HPS_MDT_T0_MDT_T0_CTRL_t
R                  HPS_MDT_T0_MDT_T0_CTRL_t:
E                     SIGNALS: HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t
R                        HPS_MDT_T0_MDT_T0_SIGNALS_CTRL_t:
E                           wr_req: logic
E                           wr_ack: logic
E                           rd_req: logic
E                           rd_ack: logic
E                           flush_req: logic
E                           freeze_req: logic
E                           mem_sel: logic['3 - 1', 0]
E                     wr_addr: logic['4 - 1', 0]
E                     rd_addr: logic['4 - 1', 0]
E                     wr_data: HPS_MDT_T0_MDT_T0_wr_data_CTRL_t
R                        HPS_MDT_T0_MDT_T0_wr_data_CTRL_t:
E                           wr_data_0: logic['17 - 1', 0]
E      HEG: HPS_HEG_CTRL_t
R         HPS_HEG_CTRL_t:
E            HEG: HPS_HEG_HEG_CTRL_t_ARRAY
A               HPS_HEG_HEG_CTRL_t_ARRAY: array['3 -1', 0] HPS_HEG_HEG_CTRL_t
R                  HPS_HEG_HEG_CTRL_t:
E                     SUPER: HPS_HEG_HEG_SUPER_CTRL_t
R                        HPS_HEG_HEG_SUPER_CTRL_t:
E                           ACTIONS: HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t
R                              HPS_HEG_HEG_SUPER_ACTIONS_CTRL_t:
E                                 RESET: logic
E                                 ENABLE: logic
E                                 DISABLE: logic
E                                 FREEZE: logic
E                           CONFIGS: HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t
R                              HPS_HEG_HEG_SUPER_CONFIGS_CTRL_t:
E                                 INPUT_EN: logic
E                                 OUTPUT_EN: logic
E                                 FLUSH_MEM_RESET: logic
E                     CTRL: HPS_HEG_HEG_CTRL_CTRL_t
R                        HPS_HEG_HEG_CTRL_CTRL_t:
E                           ROI_TC: HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t
R                              HPS_HEG_HEG_CTRL_ROI_TC_CTRL_t:
E                                 SIGNALS: HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t
R                                    HPS_HEG_HEG_CTRL_ROI_TC_SIGNALS_CTRL_t:
E                                       wr_req: logic
E                                       wr_ack: logic
E                                       rd_req: logic
E                                       rd_ack: logic
E                                       flush_req: logic
E                                       freeze_req: logic
E                                       mem_sel: logic['3 - 1', 0]
E                                 wr_addr: logic['10 - 1', 0]
E                                 rd_addr: logic['10 - 1', 0]
E                                 wr_data: HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t
R                                    HPS_HEG_HEG_CTRL_ROI_TC_wr_data_CTRL_t:
E                                       wr_data_0: logic['32 - 1', 0]
E                                       wr_data_1: logic['6 - 1', 0]
E                     HP: HPS_HEG_HEG_HP_CTRL_t
R                        HPS_HEG_HEG_HP_CTRL_t:
E                           HP: HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY
A                              HPS_HEG_HEG_HP_HP_CTRL_t_ARRAY: array['6 -1', 0] HPS_HEG_HEG_HP_HP_CTRL_t
R                                 HPS_HEG_HEG_HP_HP_CTRL_t:
E                                    ACTIONS: HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t
R                                       HPS_HEG_HEG_HP_HP_ACTIONS_CTRL_t:
E                                          RESET: logic
E                                          ENABLE: logic
E                                          DISABLE: logic
E                                          FREEZE: logic
E                                    CONFIGS: HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t
R                                       HPS_HEG_HEG_HP_HP_CONFIGS_CTRL_t:
E                                          INPUT_EN: logic
E                                          OUTPUT_EN: logic
E                                          FLUSH_MEM_RESET: logic
E                                    MDT_DT2R: HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t
R                                       HPS_HEG_HEG_HP_HP_MDT_DT2R_CTRL_t:
E                                          SIGNALS: HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t
R                                             HPS_HEG_HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t:
E                                                wr_req: logic
E                                                wr_ack: logic
E                                                rd_req: logic
E                                                rd_ack: logic
E                                                flush_req: logic
E                                                freeze_req: logic
E                                                mem_sel: logic['3 - 1', 0]
E                                          wr_addr: logic['10 - 1', 0]
E                                          rd_addr: logic['10 - 1', 0]
E                                          wr_data: HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t
R                                             HPS_HEG_HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t:
E                                                wr_data_0: logic['9 - 1', 0]
E      LSF: HPS_LSF_CTRL_t
R         HPS_LSF_CTRL_t:
E            LSF: HPS_LSF_LSF_CTRL_t_ARRAY
A               HPS_LSF_LSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_LSF_LSF_CTRL_t
R                  HPS_LSF_LSF_CTRL_t:
E                     RESET: logic
E                     HBA_MAX_CLOCKS: logic['10 - 1', 0]
E                     sb_lsf_mdt_hits_freeze: logic
E                     sb_lsf_mdt_hits_raddr: logic['8 - 1', 0]
E                     sb_lsf_mdt_hits_re: logic
E      CSF: HPS_CSF_CTRL_t
R         HPS_CSF_CTRL_t:
E            CSF: HPS_CSF_CSF_CTRL_t_ARRAY
A               HPS_CSF_CSF_CTRL_t_ARRAY: array['3 -1', 0] HPS_CSF_CSF_CTRL_t
R                  HPS_CSF_CSF_CTRL_t:
E                     ACTIONS: HPS_CSF_CSF_ACTIONS_CTRL_t
R                        HPS_CSF_CSF_ACTIONS_CTRL_t:
E                           RESET: logic
E                           ENABLE: logic
E                           DISABLE: logic
E                           FREEZE: logic
