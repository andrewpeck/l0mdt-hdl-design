This file was auto-generated by YML2HDL tool.
https://gitlab.com/tcpaiva/yml2hdl
2022-03-23 15:04:43

R   HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E      READY: logic
E      FEC_ERR_CNT: logic['16 - 1', 0]

A   HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R      HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E         READY: logic
E         FEC_ERR_CNT: logic['16 - 1', 0]

R   HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E      RESET: logic

A   HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R      HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E         RESET: logic

R   HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E      UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A         HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R            HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E               READY: logic
E               FEC_ERR_CNT: logic['16 - 1', 0]

R   HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E      UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A         HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R            HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E               RESET: logic

R   HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E      READY: logic

R   HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E      RESET: logic

R   HAL_CSM_CSM_LPGBT_MON_t:
E      UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_MON_t
R         HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E            UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A               HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R                  HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E                     READY: logic
E                     FEC_ERR_CNT: logic['16 - 1', 0]
E      DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t
R         HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E            READY: logic

R   HAL_CSM_CSM_LPGBT_CTRL_t:
E      UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t
R         HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E            UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A               HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R                  HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E                     RESET: logic
E      DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t
R         HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E            RESET: logic

R   HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E      RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E      TX_READY: logic
E      RX_DATA: logic['32 - 1', 0]
E      RX_CHIP_ADR: logic['7 - 1', 0]
E      RX_UP_PARITY_OK: logic
E      RX_DOWN_PARITY_OK: logic
E      RX_ERR: logic
E      RX_VALID: logic
E      RX_REG_ADR: logic['16 - 1', 0]
E      RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E      TX_START_WRITE: logic
E      TX_START_READ: logic
E      TX_GBTX_ADDR: logic['8 - 1', 0]
E      TX_REGISTER_ADDR: logic['16 - 1', 0]
E      TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E      TX_DATA_TO_GBTX: logic['8 - 1', 0]
E      TX_WR: logic

R   HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E      RX_LEN: logic['8 - 1', 0]
E      RX_ADDRESS: logic['8 - 1', 0]
E      RX_CONTROL: logic['8 - 1', 0]
E      RX_TRANSID: logic['8 - 1', 0]
E      RX_ERR: logic['8 - 1', 0]
E      RX_RECEIVED: logic
E      RX_CHANNEL: logic['8 - 1', 0]
E      RX_DATA: logic['32 - 1', 0]

A   HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R      HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E         RX_LEN: logic['8 - 1', 0]
E         RX_ADDRESS: logic['8 - 1', 0]
E         RX_CONTROL: logic['8 - 1', 0]
E         RX_TRANSID: logic['8 - 1', 0]
E         RX_ERR: logic['8 - 1', 0]
E         RX_RECEIVED: logic
E         RX_CHANNEL: logic['8 - 1', 0]
E         RX_DATA: logic['32 - 1', 0]

R   HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E      RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A         HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R            HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E               RX_LEN: logic['8 - 1', 0]
E               RX_ADDRESS: logic['8 - 1', 0]
E               RX_CONTROL: logic['8 - 1', 0]
E               RX_TRANSID: logic['8 - 1', 0]
E               RX_ERR: logic['8 - 1', 0]
E               RX_RECEIVED: logic
E               RX_CHANNEL: logic['8 - 1', 0]
E               RX_DATA: logic['32 - 1', 0]

R   HAL_CSM_CSM_SC_MASTER_MON_t:
E      IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R         HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E            RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E            TX_READY: logic
E            RX_DATA: logic['32 - 1', 0]
E            RX_CHIP_ADR: logic['7 - 1', 0]
E            RX_UP_PARITY_OK: logic
E            RX_DOWN_PARITY_OK: logic
E            RX_ERR: logic
E            RX_VALID: logic
E            RX_REG_ADR: logic['16 - 1', 0]
E            RX_LENGTH: logic['16 - 1', 0]
E      SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R         HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E            RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A               HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                  HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                     RX_LEN: logic['8 - 1', 0]
E                     RX_ADDRESS: logic['8 - 1', 0]
E                     RX_CONTROL: logic['8 - 1', 0]
E                     RX_TRANSID: logic['8 - 1', 0]
E                     RX_ERR: logic['8 - 1', 0]
E                     RX_RECEIVED: logic
E                     RX_CHANNEL: logic['8 - 1', 0]
E                     RX_DATA: logic['32 - 1', 0]

R   HAL_CSM_CSM_SC_MASTER_CTRL_t:
E      TX_RESET: logic
E      RX_RESET: logic
E      IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R         HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E            TX_START_WRITE: logic
E            TX_START_READ: logic
E            TX_GBTX_ADDR: logic['8 - 1', 0]
E            TX_REGISTER_ADDR: logic['16 - 1', 0]
E            TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E            TX_DATA_TO_GBTX: logic['8 - 1', 0]
E            TX_WR: logic
E      TX_CMD: logic['8 - 1', 0]
E      TX_ADDRESS: logic['8 - 1', 0]
E      TX_TRANSID: logic['8 - 1', 0]
E      TX_CHANNEL: logic['8 - 1', 0]
E      TX_DATA: logic['32 - 1', 0]
E      SCA_ENABLE: logic['3 - 1', 0]
E      START_RESET: logic
E      START_CONNECT: logic
E      START_COMMAND: logic
E      INJ_CRC_ERR: logic

R   HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E      RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E      TX_READY: logic
E      RX_DATA: logic['32 - 1', 0]
E      RX_CHIP_ADR: logic['7 - 1', 0]
E      RX_UP_PARITY_OK: logic
E      RX_DOWN_PARITY_OK: logic
E      RX_ERR: logic
E      RX_VALID: logic
E      RX_REG_ADR: logic['16 - 1', 0]
E      RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E      TX_START_WRITE: logic
E      TX_START_READ: logic
E      TX_GBTX_ADDR: logic['8 - 1', 0]
E      TX_REGISTER_ADDR: logic['16 - 1', 0]
E      TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E      TX_DATA_TO_GBTX: logic['8 - 1', 0]
E      TX_WR: logic

R   HAL_CSM_CSM_SC_SLAVE_MON_t:
E      IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R         HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E            RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E            TX_READY: logic
E            RX_DATA: logic['32 - 1', 0]
E            RX_CHIP_ADR: logic['7 - 1', 0]
E            RX_UP_PARITY_OK: logic
E            RX_DOWN_PARITY_OK: logic
E            RX_ERR: logic
E            RX_VALID: logic
E            RX_REG_ADR: logic['16 - 1', 0]
E            RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E      TX_RESET: logic
E      RX_RESET: logic
E      IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R         HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E            TX_START_WRITE: logic
E            TX_START_READ: logic
E            TX_GBTX_ADDR: logic['8 - 1', 0]
E            TX_REGISTER_ADDR: logic['16 - 1', 0]
E            TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E            TX_DATA_TO_GBTX: logic['8 - 1', 0]
E            TX_WR: logic

R   HAL_CSM_CSM_SC_MON_t:
E      MASTER: HAL_CSM_CSM_SC_MASTER_MON_t
R         HAL_CSM_CSM_SC_MASTER_MON_t:
E            IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R               HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E                  RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                  TX_READY: logic
E                  RX_DATA: logic['32 - 1', 0]
E                  RX_CHIP_ADR: logic['7 - 1', 0]
E                  RX_UP_PARITY_OK: logic
E                  RX_DOWN_PARITY_OK: logic
E                  RX_ERR: logic
E                  RX_VALID: logic
E                  RX_REG_ADR: logic['16 - 1', 0]
E                  RX_LENGTH: logic['16 - 1', 0]
E            SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R               HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E                  RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A                     HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                        HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                           RX_LEN: logic['8 - 1', 0]
E                           RX_ADDRESS: logic['8 - 1', 0]
E                           RX_CONTROL: logic['8 - 1', 0]
E                           RX_TRANSID: logic['8 - 1', 0]
E                           RX_ERR: logic['8 - 1', 0]
E                           RX_RECEIVED: logic
E                           RX_CHANNEL: logic['8 - 1', 0]
E                           RX_DATA: logic['32 - 1', 0]
E      SLAVE: HAL_CSM_CSM_SC_SLAVE_MON_t
R         HAL_CSM_CSM_SC_SLAVE_MON_t:
E            IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R               HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E                  RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                  TX_READY: logic
E                  RX_DATA: logic['32 - 1', 0]
E                  RX_CHIP_ADR: logic['7 - 1', 0]
E                  RX_UP_PARITY_OK: logic
E                  RX_DOWN_PARITY_OK: logic
E                  RX_ERR: logic
E                  RX_VALID: logic
E                  RX_REG_ADR: logic['16 - 1', 0]
E                  RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CSM_SC_CTRL_t:
E      MASTER: HAL_CSM_CSM_SC_MASTER_CTRL_t
R         HAL_CSM_CSM_SC_MASTER_CTRL_t:
E            TX_RESET: logic
E            RX_RESET: logic
E            IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R               HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E                  TX_START_WRITE: logic
E                  TX_START_READ: logic
E                  TX_GBTX_ADDR: logic['8 - 1', 0]
E                  TX_REGISTER_ADDR: logic['16 - 1', 0]
E                  TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                  TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                  TX_WR: logic
E            TX_CMD: logic['8 - 1', 0]
E            TX_ADDRESS: logic['8 - 1', 0]
E            TX_TRANSID: logic['8 - 1', 0]
E            TX_CHANNEL: logic['8 - 1', 0]
E            TX_DATA: logic['32 - 1', 0]
E            SCA_ENABLE: logic['3 - 1', 0]
E            START_RESET: logic
E            START_CONNECT: logic
E            START_COMMAND: logic
E            INJ_CRC_ERR: logic
E      SLAVE: HAL_CSM_CSM_SC_SLAVE_CTRL_t
R         HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E            TX_RESET: logic
E            RX_RESET: logic
E            IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R               HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E                  TX_START_WRITE: logic
E                  TX_START_READ: logic
E                  TX_GBTX_ADDR: logic['8 - 1', 0]
E                  TX_REGISTER_ADDR: logic['16 - 1', 0]
E                  TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                  TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                  TX_WR: logic

R   HAL_CSM_CSM_MON_t:
E      LPGBT: HAL_CSM_CSM_LPGBT_MON_t
R         HAL_CSM_CSM_LPGBT_MON_t:
E            UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_MON_t
R               HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E                  UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A                     HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R                        HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E                           READY: logic
E                           FEC_ERR_CNT: logic['16 - 1', 0]
E            DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t
R               HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E                  READY: logic
E      SC: HAL_CSM_CSM_SC_MON_t
R         HAL_CSM_CSM_SC_MON_t:
E            MASTER: HAL_CSM_CSM_SC_MASTER_MON_t
R               HAL_CSM_CSM_SC_MASTER_MON_t:
E                  IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R                     HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E                        RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                        TX_READY: logic
E                        RX_DATA: logic['32 - 1', 0]
E                        RX_CHIP_ADR: logic['7 - 1', 0]
E                        RX_UP_PARITY_OK: logic
E                        RX_DOWN_PARITY_OK: logic
E                        RX_ERR: logic
E                        RX_VALID: logic
E                        RX_REG_ADR: logic['16 - 1', 0]
E                        RX_LENGTH: logic['16 - 1', 0]
E                  SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R                     HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E                        RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A                           HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                              HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                                 RX_LEN: logic['8 - 1', 0]
E                                 RX_ADDRESS: logic['8 - 1', 0]
E                                 RX_CONTROL: logic['8 - 1', 0]
E                                 RX_TRANSID: logic['8 - 1', 0]
E                                 RX_ERR: logic['8 - 1', 0]
E                                 RX_RECEIVED: logic
E                                 RX_CHANNEL: logic['8 - 1', 0]
E                                 RX_DATA: logic['32 - 1', 0]
E            SLAVE: HAL_CSM_CSM_SC_SLAVE_MON_t
R               HAL_CSM_CSM_SC_SLAVE_MON_t:
E                  IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R                     HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E                        RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                        TX_READY: logic
E                        RX_DATA: logic['32 - 1', 0]
E                        RX_CHIP_ADR: logic['7 - 1', 0]
E                        RX_UP_PARITY_OK: logic
E                        RX_DOWN_PARITY_OK: logic
E                        RX_ERR: logic
E                        RX_VALID: logic
E                        RX_REG_ADR: logic['16 - 1', 0]
E                        RX_LENGTH: logic['16 - 1', 0]

A   HAL_CSM_CSM_MON_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_MON_t
R      HAL_CSM_CSM_MON_t:
E         LPGBT: HAL_CSM_CSM_LPGBT_MON_t
R            HAL_CSM_CSM_LPGBT_MON_t:
E               UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_MON_t
R                  HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E                     UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A                        HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R                           HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E                              READY: logic
E                              FEC_ERR_CNT: logic['16 - 1', 0]
E               DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t
R                  HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E                     READY: logic
E         SC: HAL_CSM_CSM_SC_MON_t
R            HAL_CSM_CSM_SC_MON_t:
E               MASTER: HAL_CSM_CSM_SC_MASTER_MON_t
R                  HAL_CSM_CSM_SC_MASTER_MON_t:
E                     IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R                        HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E                           RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                           TX_READY: logic
E                           RX_DATA: logic['32 - 1', 0]
E                           RX_CHIP_ADR: logic['7 - 1', 0]
E                           RX_UP_PARITY_OK: logic
E                           RX_DOWN_PARITY_OK: logic
E                           RX_ERR: logic
E                           RX_VALID: logic
E                           RX_REG_ADR: logic['16 - 1', 0]
E                           RX_LENGTH: logic['16 - 1', 0]
E                     SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R                        HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E                           RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A                              HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                                 HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                                    RX_LEN: logic['8 - 1', 0]
E                                    RX_ADDRESS: logic['8 - 1', 0]
E                                    RX_CONTROL: logic['8 - 1', 0]
E                                    RX_TRANSID: logic['8 - 1', 0]
E                                    RX_ERR: logic['8 - 1', 0]
E                                    RX_RECEIVED: logic
E                                    RX_CHANNEL: logic['8 - 1', 0]
E                                    RX_DATA: logic['32 - 1', 0]
E               SLAVE: HAL_CSM_CSM_SC_SLAVE_MON_t
R                  HAL_CSM_CSM_SC_SLAVE_MON_t:
E                     IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R                        HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E                           RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                           TX_READY: logic
E                           RX_DATA: logic['32 - 1', 0]
E                           RX_CHIP_ADR: logic['7 - 1', 0]
E                           RX_UP_PARITY_OK: logic
E                           RX_DOWN_PARITY_OK: logic
E                           RX_ERR: logic
E                           RX_VALID: logic
E                           RX_REG_ADR: logic['16 - 1', 0]
E                           RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CSM_CTRL_t:
E      LPGBT: HAL_CSM_CSM_LPGBT_CTRL_t
R         HAL_CSM_CSM_LPGBT_CTRL_t:
E            UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t
R               HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E                  UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A                     HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R                        HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E                           RESET: logic
E            DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t
R               HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E                  RESET: logic
E      SC: HAL_CSM_CSM_SC_CTRL_t
R         HAL_CSM_CSM_SC_CTRL_t:
E            MASTER: HAL_CSM_CSM_SC_MASTER_CTRL_t
R               HAL_CSM_CSM_SC_MASTER_CTRL_t:
E                  TX_RESET: logic
E                  RX_RESET: logic
E                  IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R                     HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E                        TX_START_WRITE: logic
E                        TX_START_READ: logic
E                        TX_GBTX_ADDR: logic['8 - 1', 0]
E                        TX_REGISTER_ADDR: logic['16 - 1', 0]
E                        TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                        TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                        TX_WR: logic
E                  TX_CMD: logic['8 - 1', 0]
E                  TX_ADDRESS: logic['8 - 1', 0]
E                  TX_TRANSID: logic['8 - 1', 0]
E                  TX_CHANNEL: logic['8 - 1', 0]
E                  TX_DATA: logic['32 - 1', 0]
E                  SCA_ENABLE: logic['3 - 1', 0]
E                  START_RESET: logic
E                  START_CONNECT: logic
E                  START_COMMAND: logic
E                  INJ_CRC_ERR: logic
E            SLAVE: HAL_CSM_CSM_SC_SLAVE_CTRL_t
R               HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E                  TX_RESET: logic
E                  RX_RESET: logic
E                  IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R                     HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E                        TX_START_WRITE: logic
E                        TX_START_READ: logic
E                        TX_GBTX_ADDR: logic['8 - 1', 0]
E                        TX_REGISTER_ADDR: logic['16 - 1', 0]
E                        TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                        TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                        TX_WR: logic

A   HAL_CSM_CSM_CTRL_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_CTRL_t
R      HAL_CSM_CSM_CTRL_t:
E         LPGBT: HAL_CSM_CSM_LPGBT_CTRL_t
R            HAL_CSM_CSM_LPGBT_CTRL_t:
E               UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t
R                  HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E                     UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A                        HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R                           HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E                              RESET: logic
E               DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t
R                  HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E                     RESET: logic
E         SC: HAL_CSM_CSM_SC_CTRL_t
R            HAL_CSM_CSM_SC_CTRL_t:
E               MASTER: HAL_CSM_CSM_SC_MASTER_CTRL_t
R                  HAL_CSM_CSM_SC_MASTER_CTRL_t:
E                     TX_RESET: logic
E                     RX_RESET: logic
E                     IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R                        HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E                           TX_START_WRITE: logic
E                           TX_START_READ: logic
E                           TX_GBTX_ADDR: logic['8 - 1', 0]
E                           TX_REGISTER_ADDR: logic['16 - 1', 0]
E                           TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                           TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                           TX_WR: logic
E                     TX_CMD: logic['8 - 1', 0]
E                     TX_ADDRESS: logic['8 - 1', 0]
E                     TX_TRANSID: logic['8 - 1', 0]
E                     TX_CHANNEL: logic['8 - 1', 0]
E                     TX_DATA: logic['32 - 1', 0]
E                     SCA_ENABLE: logic['3 - 1', 0]
E                     START_RESET: logic
E                     START_CONNECT: logic
E                     START_COMMAND: logic
E                     INJ_CRC_ERR: logic
E               SLAVE: HAL_CSM_CSM_SC_SLAVE_CTRL_t
R                  HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E                     TX_RESET: logic
E                     RX_RESET: logic
E                     IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R                        HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E                           TX_START_WRITE: logic
E                           TX_START_READ: logic
E                           TX_GBTX_ADDR: logic['8 - 1', 0]
E                           TX_REGISTER_ADDR: logic['16 - 1', 0]
E                           TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                           TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                           TX_WR: logic

R   HAL_CSM_MON_t:
E      CSM: HAL_CSM_CSM_MON_t_ARRAY
A         HAL_CSM_CSM_MON_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_MON_t
R            HAL_CSM_CSM_MON_t:
E               LPGBT: HAL_CSM_CSM_LPGBT_MON_t
R                  HAL_CSM_CSM_LPGBT_MON_t:
E                     UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_MON_t
R                        HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E                           UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A                              HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R                                 HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E                                    READY: logic
E                                    FEC_ERR_CNT: logic['16 - 1', 0]
E                     DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t
R                        HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E                           READY: logic
E               SC: HAL_CSM_CSM_SC_MON_t
R                  HAL_CSM_CSM_SC_MON_t:
E                     MASTER: HAL_CSM_CSM_SC_MASTER_MON_t
R                        HAL_CSM_CSM_SC_MASTER_MON_t:
E                           IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R                              HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E                                 RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                                 TX_READY: logic
E                                 RX_DATA: logic['32 - 1', 0]
E                                 RX_CHIP_ADR: logic['7 - 1', 0]
E                                 RX_UP_PARITY_OK: logic
E                                 RX_DOWN_PARITY_OK: logic
E                                 RX_ERR: logic
E                                 RX_VALID: logic
E                                 RX_REG_ADR: logic['16 - 1', 0]
E                                 RX_LENGTH: logic['16 - 1', 0]
E                           SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R                              HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E                                 RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A                                    HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                                       HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                                          RX_LEN: logic['8 - 1', 0]
E                                          RX_ADDRESS: logic['8 - 1', 0]
E                                          RX_CONTROL: logic['8 - 1', 0]
E                                          RX_TRANSID: logic['8 - 1', 0]
E                                          RX_ERR: logic['8 - 1', 0]
E                                          RX_RECEIVED: logic
E                                          RX_CHANNEL: logic['8 - 1', 0]
E                                          RX_DATA: logic['32 - 1', 0]
E                     SLAVE: HAL_CSM_CSM_SC_SLAVE_MON_t
R                        HAL_CSM_CSM_SC_SLAVE_MON_t:
E                           IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R                              HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E                                 RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                                 TX_READY: logic
E                                 RX_DATA: logic['32 - 1', 0]
E                                 RX_CHIP_ADR: logic['7 - 1', 0]
E                                 RX_UP_PARITY_OK: logic
E                                 RX_DOWN_PARITY_OK: logic
E                                 RX_ERR: logic
E                                 RX_VALID: logic
E                                 RX_REG_ADR: logic['16 - 1', 0]
E                                 RX_LENGTH: logic['16 - 1', 0]

R   HAL_CSM_CTRL_t:
E      CSM: HAL_CSM_CSM_CTRL_t_ARRAY
A         HAL_CSM_CSM_CTRL_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_CTRL_t
R            HAL_CSM_CSM_CTRL_t:
E               LPGBT: HAL_CSM_CSM_LPGBT_CTRL_t
R                  HAL_CSM_CSM_LPGBT_CTRL_t:
E                     UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t
R                        HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E                           UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A                              HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R                                 HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E                                    RESET: logic
E                     DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t
R                        HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E                           RESET: logic
E               SC: HAL_CSM_CSM_SC_CTRL_t
R                  HAL_CSM_CSM_SC_CTRL_t:
E                     MASTER: HAL_CSM_CSM_SC_MASTER_CTRL_t
R                        HAL_CSM_CSM_SC_MASTER_CTRL_t:
E                           TX_RESET: logic
E                           RX_RESET: logic
E                           IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R                              HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E                                 TX_START_WRITE: logic
E                                 TX_START_READ: logic
E                                 TX_GBTX_ADDR: logic['8 - 1', 0]
E                                 TX_REGISTER_ADDR: logic['16 - 1', 0]
E                                 TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                                 TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                                 TX_WR: logic
E                           TX_CMD: logic['8 - 1', 0]
E                           TX_ADDRESS: logic['8 - 1', 0]
E                           TX_TRANSID: logic['8 - 1', 0]
E                           TX_CHANNEL: logic['8 - 1', 0]
E                           TX_DATA: logic['32 - 1', 0]
E                           SCA_ENABLE: logic['3 - 1', 0]
E                           START_RESET: logic
E                           START_CONNECT: logic
E                           START_COMMAND: logic
E                           INJ_CRC_ERR: logic
E                     SLAVE: HAL_CSM_CSM_SC_SLAVE_CTRL_t
R                        HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E                           TX_RESET: logic
E                           RX_RESET: logic
E                           IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R                              HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E                                 TX_START_WRITE: logic
E                                 TX_START_READ: logic
E                                 TX_GBTX_ADDR: logic['8 - 1', 0]
E                                 TX_REGISTER_ADDR: logic['16 - 1', 0]
E                                 TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                                 TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                                 TX_WR: logic

R   HAL_MON_t:
E      CSM: HAL_CSM_MON_t
R         HAL_CSM_MON_t:
E            CSM: HAL_CSM_CSM_MON_t_ARRAY
A               HAL_CSM_CSM_MON_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_MON_t
R                  HAL_CSM_CSM_MON_t:
E                     LPGBT: HAL_CSM_CSM_LPGBT_MON_t
R                        HAL_CSM_CSM_LPGBT_MON_t:
E                           UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_MON_t
R                              HAL_CSM_CSM_LPGBT_UPLINK_MON_t:
E                                 UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY
A                                    HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t
R                                       HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t:
E                                          READY: logic
E                                          FEC_ERR_CNT: logic['16 - 1', 0]
E                           DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t
R                              HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t:
E                                 READY: logic
E                     SC: HAL_CSM_CSM_SC_MON_t
R                        HAL_CSM_CSM_SC_MON_t:
E                           MASTER: HAL_CSM_CSM_SC_MASTER_MON_t
R                              HAL_CSM_CSM_SC_MASTER_MON_t:
E                                 IC: HAL_CSM_CSM_SC_MASTER_IC_MON_t
R                                    HAL_CSM_CSM_SC_MASTER_IC_MON_t:
E                                       RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                                       TX_READY: logic
E                                       RX_DATA: logic['32 - 1', 0]
E                                       RX_CHIP_ADR: logic['7 - 1', 0]
E                                       RX_UP_PARITY_OK: logic
E                                       RX_DOWN_PARITY_OK: logic
E                                       RX_ERR: logic
E                                       RX_VALID: logic
E                                       RX_REG_ADR: logic['16 - 1', 0]
E                                       RX_LENGTH: logic['16 - 1', 0]
E                                 SCA_RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t
R                                    HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t:
E                                       RX: HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY
A                                          HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY: array['3 -1', 0] HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t
R                                             HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t:
E                                                RX_LEN: logic['8 - 1', 0]
E                                                RX_ADDRESS: logic['8 - 1', 0]
E                                                RX_CONTROL: logic['8 - 1', 0]
E                                                RX_TRANSID: logic['8 - 1', 0]
E                                                RX_ERR: logic['8 - 1', 0]
E                                                RX_RECEIVED: logic
E                                                RX_CHANNEL: logic['8 - 1', 0]
E                                                RX_DATA: logic['32 - 1', 0]
E                           SLAVE: HAL_CSM_CSM_SC_SLAVE_MON_t
R                              HAL_CSM_CSM_SC_SLAVE_MON_t:
E                                 IC: HAL_CSM_CSM_SC_SLAVE_IC_MON_t
R                                    HAL_CSM_CSM_SC_SLAVE_IC_MON_t:
E                                       RX_DATA_FROM_GBTX: logic['8 - 1', 0]
E                                       TX_READY: logic
E                                       RX_DATA: logic['32 - 1', 0]
E                                       RX_CHIP_ADR: logic['7 - 1', 0]
E                                       RX_UP_PARITY_OK: logic
E                                       RX_DOWN_PARITY_OK: logic
E                                       RX_ERR: logic
E                                       RX_VALID: logic
E                                       RX_REG_ADR: logic['16 - 1', 0]
E                                       RX_LENGTH: logic['16 - 1', 0]

R   HAL_CTRL_t:
E      RESET_DOWNLINKS: logic
E      RESET_UPLINKS: logic
E      RESET_COUNTERS: logic
E      CSM: HAL_CSM_CTRL_t
R         HAL_CSM_CTRL_t:
E            CSM: HAL_CSM_CSM_CTRL_t_ARRAY
A               HAL_CSM_CSM_CTRL_t_ARRAY: array['36 -1', 0] HAL_CSM_CSM_CTRL_t
R                  HAL_CSM_CSM_CTRL_t:
E                     LPGBT: HAL_CSM_CSM_LPGBT_CTRL_t
R                        HAL_CSM_CSM_LPGBT_CTRL_t:
E                           UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t
R                              HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t:
E                                 UPLINK: HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY
A                                    HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY: array['2 -1', 0] HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t
R                                       HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t:
E                                          RESET: logic
E                           DOWNLINK: HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t
R                              HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t:
E                                 RESET: logic
E                     SC: HAL_CSM_CSM_SC_CTRL_t
R                        HAL_CSM_CSM_SC_CTRL_t:
E                           MASTER: HAL_CSM_CSM_SC_MASTER_CTRL_t
R                              HAL_CSM_CSM_SC_MASTER_CTRL_t:
E                                 TX_RESET: logic
E                                 RX_RESET: logic
E                                 IC: HAL_CSM_CSM_SC_MASTER_IC_CTRL_t
R                                    HAL_CSM_CSM_SC_MASTER_IC_CTRL_t:
E                                       TX_START_WRITE: logic
E                                       TX_START_READ: logic
E                                       TX_GBTX_ADDR: logic['8 - 1', 0]
E                                       TX_REGISTER_ADDR: logic['16 - 1', 0]
E                                       TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                                       TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                                       TX_WR: logic
E                                 TX_CMD: logic['8 - 1', 0]
E                                 TX_ADDRESS: logic['8 - 1', 0]
E                                 TX_TRANSID: logic['8 - 1', 0]
E                                 TX_CHANNEL: logic['8 - 1', 0]
E                                 TX_DATA: logic['32 - 1', 0]
E                                 SCA_ENABLE: logic['3 - 1', 0]
E                                 START_RESET: logic
E                                 START_CONNECT: logic
E                                 START_COMMAND: logic
E                                 INJ_CRC_ERR: logic
E                           SLAVE: HAL_CSM_CSM_SC_SLAVE_CTRL_t
R                              HAL_CSM_CSM_SC_SLAVE_CTRL_t:
E                                 TX_RESET: logic
E                                 RX_RESET: logic
E                                 IC: HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t
R                                    HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t:
E                                       TX_START_WRITE: logic
E                                       TX_START_READ: logic
E                                       TX_GBTX_ADDR: logic['8 - 1', 0]
E                                       TX_REGISTER_ADDR: logic['16 - 1', 0]
E                                       TX_NUM_BYTES_TO_READ: logic['16 - 1', 0]
E                                       TX_DATA_TO_GBTX: logic['8 - 1', 0]
E                                       TX_WR: logic
