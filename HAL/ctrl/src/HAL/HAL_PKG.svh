// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl
// 2022-03-15 23:42:23

`ifndef HAL_CTRL_SVH
`define HAL_CTRL_SVH


`include <common_ieee_pkg.svh>

package HAL_CTRL;

   typedef struct HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t {
      logic READY;
      logic FEC_ERR_CNT[16:0];
   };

   typedef HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY[2:0];

   typedef struct HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t {
      logic RESET;
   };

   typedef HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY[2:0];

   typedef struct HAL_CSM_CSM_LPGBT_UPLINK_MON_t {
      HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_MON_t_ARRAY UPLINK;
   };

   typedef struct HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t {
      HAL_CSM_CSM_LPGBT_UPLINK_UPLINK_CTRL_t_ARRAY UPLINK;
   };

   typedef struct HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t {
      logic READY;
   };

   typedef struct HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t {
      logic RESET;
   };

   typedef struct HAL_CSM_CSM_LPGBT_MON_t {
      HAL_CSM_CSM_LPGBT_UPLINK_MON_t UPLINK;
      HAL_CSM_CSM_LPGBT_DOWNLINK_MON_t DOWNLINK;
   };

   typedef struct HAL_CSM_CSM_LPGBT_CTRL_t {
      HAL_CSM_CSM_LPGBT_UPLINK_CTRL_t UPLINK;
      HAL_CSM_CSM_LPGBT_DOWNLINK_CTRL_t DOWNLINK;
   };

   typedef struct HAL_CSM_CSM_SC_MASTER_IC_MON_t {
      logic RX_DATA_FROM_GBTX[8:0];
      logic TX_READY;
      logic RX_DATA[32:0];
      logic RX_CHIP_ADR[7:0];
      logic RX_UP_PARITY_OK;
      logic RX_DOWN_PARITY_OK;
      logic RX_ERR;
      logic RX_VALID;
      logic RX_REG_ADR[16:0];
      logic RX_LENGTH[16:0];
   };

   typedef struct HAL_CSM_CSM_SC_MASTER_IC_CTRL_t {
      logic TX_START_WRITE;
      logic TX_START_READ;
      logic TX_GBTX_ADDR[8:0];
      logic TX_REGISTER_ADDR[16:0];
      logic TX_NUM_BYTES_TO_READ[16:0];
      logic TX_DATA_TO_GBTX[8:0];
      logic TX_WR;
   };

   typedef struct HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t {
      logic RX_LEN[8:0];
      logic RX_ADDRESS[8:0];
      logic RX_CONTROL[8:0];
      logic RX_TRANSID[8:0];
      logic RX_ERR[8:0];
      logic RX_RECEIVED;
      logic RX_CHANNEL[8:0];
      logic RX_DATA[32:0];
   };

   typedef HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY[3:0];

   typedef struct HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t {
      HAL_CSM_CSM_SC_MASTER_SCA_RX_RX_MON_t_ARRAY RX;
   };

   typedef struct HAL_CSM_CSM_SC_MASTER_MON_t {
      HAL_CSM_CSM_SC_MASTER_IC_MON_t IC;
      HAL_CSM_CSM_SC_MASTER_SCA_RX_MON_t SCA_RX;
   };

   typedef struct HAL_CSM_CSM_SC_MASTER_CTRL_t {
      logic TX_RESET;
      logic RX_RESET;
      HAL_CSM_CSM_SC_MASTER_IC_CTRL_t IC;
      logic TX_CMD[8:0];
      logic TX_ADDRESS[8:0];
      logic TX_TRANSID[8:0];
      logic TX_CHANNEL[8:0];
      logic TX_DATA[32:0];
      logic SCA_ENABLE[3:0];
      logic START_RESET;
      logic START_CONNECT;
      logic START_COMMAND;
      logic INJ_CRC_ERR;
   };

   typedef struct HAL_CSM_CSM_SC_SLAVE_IC_MON_t {
      logic RX_DATA_FROM_GBTX[8:0];
      logic TX_READY;
      logic RX_DATA[32:0];
      logic RX_CHIP_ADR[7:0];
      logic RX_UP_PARITY_OK;
      logic RX_DOWN_PARITY_OK;
      logic RX_ERR;
      logic RX_VALID;
      logic RX_REG_ADR[16:0];
      logic RX_LENGTH[16:0];
   };

   typedef struct HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t {
      logic TX_START_WRITE;
      logic TX_START_READ;
      logic TX_GBTX_ADDR[8:0];
      logic TX_REGISTER_ADDR[16:0];
      logic TX_NUM_BYTES_TO_READ[16:0];
      logic TX_DATA_TO_GBTX[8:0];
      logic TX_WR;
   };

   typedef struct HAL_CSM_CSM_SC_SLAVE_MON_t {
      HAL_CSM_CSM_SC_SLAVE_IC_MON_t IC;
   };

   typedef struct HAL_CSM_CSM_SC_SLAVE_CTRL_t {
      logic TX_RESET;
      logic RX_RESET;
      HAL_CSM_CSM_SC_SLAVE_IC_CTRL_t IC;
   };

   typedef struct HAL_CSM_CSM_SC_MON_t {
      HAL_CSM_CSM_SC_MASTER_MON_t MASTER;
      HAL_CSM_CSM_SC_SLAVE_MON_t SLAVE;
   };

   typedef struct HAL_CSM_CSM_SC_CTRL_t {
      HAL_CSM_CSM_SC_MASTER_CTRL_t MASTER;
      HAL_CSM_CSM_SC_SLAVE_CTRL_t SLAVE;
   };

   typedef struct HAL_CSM_CSM_MON_t {
      HAL_CSM_CSM_LPGBT_MON_t LPGBT;
      HAL_CSM_CSM_SC_MON_t SC;
   };

   typedef HAL_CSM_CSM_MON_t HAL_CSM_CSM_MON_t_ARRAY[36:0];

   typedef struct HAL_CSM_CSM_CTRL_t {
      HAL_CSM_CSM_LPGBT_CTRL_t LPGBT;
      HAL_CSM_CSM_SC_CTRL_t SC;
   };

   typedef HAL_CSM_CSM_CTRL_t HAL_CSM_CSM_CTRL_t_ARRAY[36:0];

   typedef struct HAL_CSM_MON_t {
      HAL_CSM_CSM_MON_t_ARRAY CSM;
   };

   typedef struct HAL_CSM_CTRL_t {
      HAL_CSM_CSM_CTRL_t_ARRAY CSM;
   };

   typedef struct HAL_MON_t {
      HAL_CSM_MON_t CSM;
   };

   typedef struct HAL_CTRL_t {
      logic RESET_DOWNLINKS;
      logic RESET_UPLINKS;
      logic RESET_COUNTERS;
      HAL_CSM_CTRL_t CSM;
   };

endpackage : HAL_CTRL

`endif // HAL_CTRL_SVH
