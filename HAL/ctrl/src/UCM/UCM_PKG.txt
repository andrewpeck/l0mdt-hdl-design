This file was auto-generated by YML2HDL tool.
https://gitlab.com/tcpaiva/yml2hdl

R   UCM_SUPER_ACTIONS_CTRL_t
E      RESET (logic)
E      ENABLE (logic)
E      DISABLE (logic)
E      FREEZE (logic)

R   UCM_SUPER_CONFIGS_CTRL_t
E      THREADS (logic 4)
E      INPUT_EN (logic)
E      OUTPUT_EN (logic)

R   UCM_SUPER_STATUS_MON_t
E      ENABLED (logic)
E      READY (logic)
E      ERROR (logic 8)

R   UCM_SUPER_SECTOR_PHI_MON_t
E      rd_data (logic 10)

R   UCM_SUPER_SECTOR_PHI_CTRL_t
E      wr_req (logic)
E      rd_req (logic)
E      wr_data (logic 10)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t
E      rd_rdy (logic)
E      freeze_ena (logic)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t
E      wr_req (logic)
E      wr_ack (logic)
E      rd_req (logic)
E      rd_ack (logic)
E      flush_req (logic)
E      freeze_req (logic)
E      mem_sel (logic 3)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t
E      wr_data_0 (logic 16)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t
E      rd_data_0 (logic 16)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t
E      SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t)
E         rd_rdy (logic)
E         freeze_ena (logic)
E      rd_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t)
E         rd_data_0 (logic 16)

A   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t)
E      SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t)
E         rd_rdy (logic)
E         freeze_ena (logic)
E      rd_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t)
E         rd_data_0 (logic 16)

R   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t
E      SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t)
E         wr_req (logic)
E         wr_ack (logic)
E         rd_req (logic)
E         rd_ack (logic)
E         flush_req (logic)
E         freeze_req (logic)
E         mem_sel (logic 3)
E      wr_addr (logic 8)
E      rd_addr (logic 8)
E      wr_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t)
E         wr_data_0 (logic 16)

A   UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t)
E      SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t)
E         wr_req (logic)
E         wr_ack (logic)
E         rd_req (logic)
E         rd_ack (logic)
E         flush_req (logic)
E         freeze_req (logic)
E         mem_sel (logic 3)
E      wr_addr (logic 8)
E      rd_addr (logic 8)
E      wr_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t)
E         wr_data_0 (logic 16)

R   UCM_SUPER_CDE_CHAMB_Z0_MON_t
A      CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY)
A         UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t)
E            SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t)
E               rd_rdy (logic)
E               freeze_ena (logic)
E            rd_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t)
E               rd_data_0 (logic 16)

R   UCM_SUPER_CDE_CHAMB_Z0_CTRL_t
A      CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY)
A         UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t)
E            SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t)
E               wr_req (logic)
E               wr_ack (logic)
E               rd_req (logic)
E               rd_ack (logic)
E               flush_req (logic)
E               freeze_req (logic)
E               mem_sel (logic 3)
E            wr_addr (logic 8)
E            rd_addr (logic 8)
E            wr_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t)
E               wr_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t
E      rd_rdy (logic)
E      freeze_ena (logic)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t
E      wr_req (logic)
E      wr_ack (logic)
E      rd_req (logic)
E      rd_ack (logic)
E      flush_req (logic)
E      freeze_req (logic)
E      mem_sel (logic 3)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t
E      wr_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t
E      rd_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t
E      SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t)
E         rd_rdy (logic)
E         freeze_ena (logic)
E      rd_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t)
E         rd_data_0 (logic 16)

A   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t)
E      SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t)
E         rd_rdy (logic)
E         freeze_ena (logic)
E      rd_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t)
E         rd_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t
E      SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t)
E         wr_req (logic)
E         wr_ack (logic)
E         rd_req (logic)
E         rd_ack (logic)
E         flush_req (logic)
E         freeze_req (logic)
E         mem_sel (logic 3)
E      wr_addr (logic 8)
E      rd_addr (logic 8)
E      wr_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t)
E         wr_data_0 (logic 16)

A   UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t)
E      SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t)
E         wr_req (logic)
E         wr_ack (logic)
E         rd_req (logic)
E         rd_ack (logic)
E         flush_req (logic)
E         freeze_req (logic)
E         mem_sel (logic 3)
E      wr_addr (logic 8)
E      rd_addr (logic 8)
E      wr_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t)
E         wr_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_MON_t
A      CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY)
A         UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t)
E            SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t)
E               rd_rdy (logic)
E               freeze_ena (logic)
E            rd_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t)
E               rd_data_0 (logic 16)

R   UCM_SUPER_CVP_CHAMB_Z0_CTRL_t
A      CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY)
A         UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t)
E            SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t)
E               wr_req (logic)
E               wr_ack (logic)
E               rd_req (logic)
E               rd_ack (logic)
E               flush_req (logic)
E               freeze_req (logic)
E               mem_sel (logic 3)
E            wr_addr (logic 8)
E            rd_addr (logic 8)
E            wr_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t)
E               wr_data_0 (logic 16)

R   UCM_SUPER_MON_t
E      STATUS (UCM_SUPER_STATUS_MON_t)
E         ENABLED (logic)
E         READY (logic)
E         ERROR (logic 8)
E      SECTOR_PHI (UCM_SUPER_SECTOR_PHI_MON_t)
E         rd_data (logic 10)
E      CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_MON_t)
A         CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY)
A            UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t)
E               SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t)
E                  rd_rdy (logic)
E                  freeze_ena (logic)
E               rd_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t)
E                  rd_data_0 (logic 16)
E      CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_MON_t)
A         CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY)
A            UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t)
E               SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t)
E                  rd_rdy (logic)
E                  freeze_ena (logic)
E               rd_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t)
E                  rd_data_0 (logic 16)

R   UCM_SUPER_CTRL_t
E      ACTIONS (UCM_SUPER_ACTIONS_CTRL_t)
E         RESET (logic)
E         ENABLE (logic)
E         DISABLE (logic)
E         FREEZE (logic)
E      CONFIGS (UCM_SUPER_CONFIGS_CTRL_t)
E         THREADS (logic 4)
E         INPUT_EN (logic)
E         OUTPUT_EN (logic)
E      SECTOR_PHI (UCM_SUPER_SECTOR_PHI_CTRL_t)
E         wr_req (logic)
E         rd_req (logic)
E         wr_data (logic 10)
E      CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CTRL_t)
A         CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY)
A            UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t)
E               SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t)
E                  wr_req (logic)
E                  wr_ack (logic)
E                  rd_req (logic)
E                  rd_ack (logic)
E                  flush_req (logic)
E                  freeze_req (logic)
E                  mem_sel (logic 3)
E               wr_addr (logic 8)
E               rd_addr (logic 8)
E               wr_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t)
E                  wr_data_0 (logic 16)
E      CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CTRL_t)
A         CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY)
A            UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t)
E               SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t)
E                  wr_req (logic)
E                  wr_ack (logic)
E                  rd_req (logic)
E                  rd_ack (logic)
E                  flush_req (logic)
E                  freeze_req (logic)
E                  mem_sel (logic 3)
E               wr_addr (logic 8)
E               rd_addr (logic 8)
E               wr_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t)
E                  wr_data_0 (logic 16)

R   UCM_R_PHI_COMP_RPC_MEM_INTERFACE_MON_t
E      rd_rdy (logic)
E      rd_data (logic 12)

R   UCM_R_PHI_COMP_RPC_MEM_INTERFACE_CTRL_t
E      wr_req (logic)
E      rd_req (logic)
E      wr_addr (logic 5)
E      rd_addr (logic 5)
E      wr_data (logic 12)

R   UCM_R_PHI_COMP_RPC_MON_t
E      MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_MON_t)
E         rd_rdy (logic)
E         rd_data (logic 12)

R   UCM_R_PHI_COMP_RPC_CTRL_t
E      sel_thread (logic 4)
E      sel_station (logic 4)
E      sel_layer (logic 4)
E      ext_ctrl (logic)
E      MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_CTRL_t)
E         wr_req (logic)
E         rd_req (logic)
E         wr_addr (logic 5)
E         rd_addr (logic 5)
E         wr_data (logic 12)

R   UCM_R_PHI_COMP_MDT_MEM_INTERFACE_MON_t
E      rd_rdy (logic)
E      rd_data (logic 14)

R   UCM_R_PHI_COMP_MDT_MEM_INTERFACE_CTRL_t
E      wr_req (logic)
E      rd_req (logic)
E      wr_addr (logic 5)
E      rd_addr (logic 5)
E      wr_data (logic 14)

R   UCM_R_PHI_COMP_MDT_MON_t
E      MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_MON_t)
E         rd_rdy (logic)
E         rd_data (logic 14)

R   UCM_R_PHI_COMP_MDT_CTRL_t
E      sel_thread (logic 4)
E      sel_station (logic 4)
E      sel_layer (logic 4)
E      ext_ctrl (logic)
E      MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_CTRL_t)
E         wr_req (logic)
E         rd_req (logic)
E         wr_addr (logic 5)
E         rd_addr (logic 5)
E         wr_data (logic 14)

R   UCM_R_PHI_COMP_MON_t
E      RPC (UCM_R_PHI_COMP_RPC_MON_t)
E         MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_MON_t)
E            rd_rdy (logic)
E            rd_data (logic 12)
E      MDT (UCM_R_PHI_COMP_MDT_MON_t)
E         MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_MON_t)
E            rd_rdy (logic)
E            rd_data (logic 14)

R   UCM_R_PHI_COMP_CTRL_t
E      RPC (UCM_R_PHI_COMP_RPC_CTRL_t)
E         sel_thread (logic 4)
E         sel_station (logic 4)
E         sel_layer (logic 4)
E         ext_ctrl (logic)
E         MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_CTRL_t)
E            wr_req (logic)
E            rd_req (logic)
E            wr_addr (logic 5)
E            rd_addr (logic 5)
E            wr_data (logic 12)
E      MDT (UCM_R_PHI_COMP_MDT_CTRL_t)
E         sel_thread (logic 4)
E         sel_station (logic 4)
E         sel_layer (logic 4)
E         ext_ctrl (logic)
E         MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_CTRL_t)
E            wr_req (logic)
E            rd_req (logic)
E            wr_addr (logic 5)
E            rd_addr (logic 5)
E            wr_data (logic 14)

R   UCM_MON_t
E      SUPER (UCM_SUPER_MON_t)
E         STATUS (UCM_SUPER_STATUS_MON_t)
E            ENABLED (logic)
E            READY (logic)
E            ERROR (logic 8)
E         SECTOR_PHI (UCM_SUPER_SECTOR_PHI_MON_t)
E            rd_data (logic 10)
E         CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_MON_t)
A            CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY)
A               UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_MON_t)
E                  SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_MON_t)
E                     rd_rdy (logic)
E                     freeze_ena (logic)
E                  rd_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_rd_data_MON_t)
E                     rd_data_0 (logic 16)
E         CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_MON_t)
A            CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY)
A               UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_MON_t)
E                  SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_MON_t)
E                     rd_rdy (logic)
E                     freeze_ena (logic)
E                  rd_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_rd_data_MON_t)
E                     rd_data_0 (logic 16)
E      R_PHI_COMP (UCM_R_PHI_COMP_MON_t)
E         RPC (UCM_R_PHI_COMP_RPC_MON_t)
E            MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_MON_t)
E               rd_rdy (logic)
E               rd_data (logic 12)
E         MDT (UCM_R_PHI_COMP_MDT_MON_t)
E            MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_MON_t)
E               rd_rdy (logic)
E               rd_data (logic 14)

R   UCM_CTRL_t
E      SUPER (UCM_SUPER_CTRL_t)
E         ACTIONS (UCM_SUPER_ACTIONS_CTRL_t)
E            RESET (logic)
E            ENABLE (logic)
E            DISABLE (logic)
E            FREEZE (logic)
E         CONFIGS (UCM_SUPER_CONFIGS_CTRL_t)
E            THREADS (logic 4)
E            INPUT_EN (logic)
E            OUTPUT_EN (logic)
E         SECTOR_PHI (UCM_SUPER_SECTOR_PHI_CTRL_t)
E            wr_req (logic)
E            rd_req (logic)
E            wr_data (logic 10)
E         CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CTRL_t)
A            CDE_CHAMB_Z0 (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY)
A               UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_CTRL_t)
E                  SIGNALS (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_SIGNALS_CTRL_t)
E                     wr_req (logic)
E                     wr_ack (logic)
E                     rd_req (logic)
E                     rd_ack (logic)
E                     flush_req (logic)
E                     freeze_req (logic)
E                     mem_sel (logic 3)
E                  wr_addr (logic 8)
E                  rd_addr (logic 8)
E                  wr_data (UCM_SUPER_CDE_CHAMB_Z0_CDE_CHAMB_Z0_wr_data_CTRL_t)
E                     wr_data_0 (logic 16)
E         CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CTRL_t)
A            CVP_CHAMB_Z0 (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY)
A               UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t_ARRAY (4 UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_CTRL_t)
E                  SIGNALS (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_SIGNALS_CTRL_t)
E                     wr_req (logic)
E                     wr_ack (logic)
E                     rd_req (logic)
E                     rd_ack (logic)
E                     flush_req (logic)
E                     freeze_req (logic)
E                     mem_sel (logic 3)
E                  wr_addr (logic 8)
E                  rd_addr (logic 8)
E                  wr_data (UCM_SUPER_CVP_CHAMB_Z0_CVP_CHAMB_Z0_wr_data_CTRL_t)
E                     wr_data_0 (logic 16)
E      R_PHI_COMP (UCM_R_PHI_COMP_CTRL_t)
E         RPC (UCM_R_PHI_COMP_RPC_CTRL_t)
E            sel_thread (logic 4)
E            sel_station (logic 4)
E            sel_layer (logic 4)
E            ext_ctrl (logic)
E            MEM_INTERFACE (UCM_R_PHI_COMP_RPC_MEM_INTERFACE_CTRL_t)
E               wr_req (logic)
E               rd_req (logic)
E               wr_addr (logic 5)
E               rd_addr (logic 5)
E               wr_data (logic 12)
E         MDT (UCM_R_PHI_COMP_MDT_CTRL_t)
E            sel_thread (logic 4)
E            sel_station (logic 4)
E            sel_layer (logic 4)
E            ext_ctrl (logic)
E            MEM_INTERFACE (UCM_R_PHI_COMP_MDT_MEM_INTERFACE_CTRL_t)
E               wr_req (logic)
E               rd_req (logic)
E               wr_addr (logic 5)
E               rd_addr (logic 5)
E               wr_data (logic 14)
