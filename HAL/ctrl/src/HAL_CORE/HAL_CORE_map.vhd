--This file was auto-generated.
--Modifications might be lost.
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_misc.all;
use ieee.numeric_std.all;
use work.AXIRegWidthPkg.all;
use work.AXIRegPkg.all;
use work.types.all;

use work.HAL_CORE_Ctrl.all;
use work.HAL_CORE_Ctrl_DEF.all;
entity HAL_CORE_map is
  port (
    clk_axi          : in  std_logic;
    reset_axi_n      : in  std_logic;
    slave_readMOSI   : in  AXIReadMOSI;
    slave_readMISO   : out AXIReadMISO  := DefaultAXIReadMISO;
    slave_writeMOSI  : in  AXIWriteMOSI;
    slave_writeMISO  : out AXIWriteMISO := DefaultAXIWriteMISO;
    
    Mon              : in  HAL_CORE_Mon_t;
    Ctrl             : out HAL_CORE_Ctrl_t
        
    );
end entity HAL_CORE_map;
architecture behavioral of HAL_CORE_map is
  signal localAddress       : std_logic_vector(AXI_ADDR_WIDTH-1 downto 0);
  signal localRdData        : slv_32_t;
  signal localRdData_latch  : slv_32_t;
  signal localWrData        : slv_32_t;
  signal localWrEn          : std_logic;
  signal localRdReq         : std_logic;
  signal localRdAck         : std_logic;
  signal regRdAck           : std_logic;

  
  
  signal reg_data :  slv32_array_t(integer range 0 to 471);
  constant Default_reg_data : slv32_array_t(integer range 0 to 471) := (others => x"00000000");
begin  -- architecture behavioral

  -------------------------------------------------------------------------------
  -- AXI 
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------
  AXIRegBridge : entity work.axiLiteRegBlocking
    port map (
      clk_axi     => clk_axi,
      reset_axi_n => reset_axi_n,
      readMOSI    => slave_readMOSI,
      readMISO    => slave_readMISO,
      writeMOSI   => slave_writeMOSI,
      writeMISO   => slave_writeMISO,
      address     => localAddress,
      rd_data     => localRdData_latch,
      wr_data     => localWrData,
      write_en    => localWrEn,
      read_req    => localRdReq,
      read_ack    => localRdAck);

  -------------------------------------------------------------------------------
  -- Record read decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  latch_reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      localRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      localRdAck <= '0';
      
      if regRdAck = '1' then
        localRdData_latch <= localRdData;
        localRdAck <= '1';
      
      end if;
    end if;
  end process latch_reads;

  
  reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      regRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      regRdAck  <= '0';
      localRdData <= x"00000000";
      if localRdReq = '1' then
        regRdAck  <= '1';
        case to_integer(unsigned(localAddress(8 downto 0))) is
          
        when 1 => --0x1
          localRdData( 0)            <=  Mon.CLOCKING.MMCM_LOCKED;                            --
          localRdData( 1)            <=  reg_data( 1)( 1);                                    --
        when 16 => --0x10
          localRdData( 0)            <=  Mon.MGT.MGT(0).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(0).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(0).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(0).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(0).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(0).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(0).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(0).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_rx_error_out;       --
        when 18 => --0x12
          localRdData( 9 downto  0)  <=  reg_data(18)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(18)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(0).DRP.rd_rdy;                           --DRP Enable
        when 19 => --0x13
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(0).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(19)(31 downto 16);                          --DRP Write Data
        when 20 => --0x14
          localRdData( 0)            <=  reg_data(20)( 0);                                    --
          localRdData( 1)            <=  reg_data(20)( 1);                                    --
          localRdData( 2)            <=  reg_data(20)( 2);                                    --
          localRdData( 3)            <=  reg_data(20)( 3);                                    --
        when 21 => --0x15
          localRdData( 0)            <=  reg_data(21)( 0);                                    --
          localRdData( 1)            <=  reg_data(21)( 1);                                    --
          localRdData( 2)            <=  reg_data(21)( 2);                                    --
          localRdData( 3)            <=  reg_data(21)( 3);                                    --
        when 22 => --0x16
          localRdData( 0)            <=  Mon.MGT.MGT(1).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(1).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(1).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(1).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(1).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(1).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(1).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(1).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_rx_error_out;       --
        when 24 => --0x18
          localRdData( 9 downto  0)  <=  reg_data(24)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(24)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(1).DRP.rd_rdy;                           --DRP Enable
        when 25 => --0x19
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(1).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(25)(31 downto 16);                          --DRP Write Data
        when 26 => --0x1a
          localRdData( 0)            <=  reg_data(26)( 0);                                    --
          localRdData( 1)            <=  reg_data(26)( 1);                                    --
          localRdData( 2)            <=  reg_data(26)( 2);                                    --
          localRdData( 3)            <=  reg_data(26)( 3);                                    --
        when 27 => --0x1b
          localRdData( 0)            <=  reg_data(27)( 0);                                    --
          localRdData( 1)            <=  reg_data(27)( 1);                                    --
          localRdData( 2)            <=  reg_data(27)( 2);                                    --
          localRdData( 3)            <=  reg_data(27)( 3);                                    --
        when 28 => --0x1c
          localRdData( 0)            <=  Mon.MGT.MGT(2).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(2).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(2).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(2).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(2).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(2).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(2).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(2).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_rx_error_out;       --
        when 30 => --0x1e
          localRdData( 9 downto  0)  <=  reg_data(30)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(30)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(2).DRP.rd_rdy;                           --DRP Enable
        when 31 => --0x1f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(2).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(31)(31 downto 16);                          --DRP Write Data
        when 32 => --0x20
          localRdData( 0)            <=  reg_data(32)( 0);                                    --
          localRdData( 1)            <=  reg_data(32)( 1);                                    --
          localRdData( 2)            <=  reg_data(32)( 2);                                    --
          localRdData( 3)            <=  reg_data(32)( 3);                                    --
        when 33 => --0x21
          localRdData( 0)            <=  reg_data(33)( 0);                                    --
          localRdData( 1)            <=  reg_data(33)( 1);                                    --
          localRdData( 2)            <=  reg_data(33)( 2);                                    --
          localRdData( 3)            <=  reg_data(33)( 3);                                    --
        when 34 => --0x22
          localRdData( 0)            <=  Mon.MGT.MGT(3).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(3).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(3).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(3).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(3).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(3).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(3).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(3).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_rx_error_out;       --
        when 36 => --0x24
          localRdData( 9 downto  0)  <=  reg_data(36)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(36)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(3).DRP.rd_rdy;                           --DRP Enable
        when 37 => --0x25
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(3).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(37)(31 downto 16);                          --DRP Write Data
        when 38 => --0x26
          localRdData( 0)            <=  reg_data(38)( 0);                                    --
          localRdData( 1)            <=  reg_data(38)( 1);                                    --
          localRdData( 2)            <=  reg_data(38)( 2);                                    --
          localRdData( 3)            <=  reg_data(38)( 3);                                    --
        when 39 => --0x27
          localRdData( 0)            <=  reg_data(39)( 0);                                    --
          localRdData( 1)            <=  reg_data(39)( 1);                                    --
          localRdData( 2)            <=  reg_data(39)( 2);                                    --
          localRdData( 3)            <=  reg_data(39)( 3);                                    --
        when 40 => --0x28
          localRdData( 0)            <=  Mon.MGT.MGT(4).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(4).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(4).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(4).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(4).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(4).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(4).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(4).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_rx_error_out;       --
        when 42 => --0x2a
          localRdData( 9 downto  0)  <=  reg_data(42)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(42)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(4).DRP.rd_rdy;                           --DRP Enable
        when 43 => --0x2b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(4).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(43)(31 downto 16);                          --DRP Write Data
        when 44 => --0x2c
          localRdData( 0)            <=  reg_data(44)( 0);                                    --
          localRdData( 1)            <=  reg_data(44)( 1);                                    --
          localRdData( 2)            <=  reg_data(44)( 2);                                    --
          localRdData( 3)            <=  reg_data(44)( 3);                                    --
        when 45 => --0x2d
          localRdData( 0)            <=  reg_data(45)( 0);                                    --
          localRdData( 1)            <=  reg_data(45)( 1);                                    --
          localRdData( 2)            <=  reg_data(45)( 2);                                    --
          localRdData( 3)            <=  reg_data(45)( 3);                                    --
        when 46 => --0x2e
          localRdData( 0)            <=  Mon.MGT.MGT(5).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(5).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(5).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(5).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(5).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(5).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(5).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(5).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_rx_error_out;       --
        when 48 => --0x30
          localRdData( 9 downto  0)  <=  reg_data(48)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(48)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(5).DRP.rd_rdy;                           --DRP Enable
        when 49 => --0x31
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(5).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(49)(31 downto 16);                          --DRP Write Data
        when 50 => --0x32
          localRdData( 0)            <=  reg_data(50)( 0);                                    --
          localRdData( 1)            <=  reg_data(50)( 1);                                    --
          localRdData( 2)            <=  reg_data(50)( 2);                                    --
          localRdData( 3)            <=  reg_data(50)( 3);                                    --
        when 51 => --0x33
          localRdData( 0)            <=  reg_data(51)( 0);                                    --
          localRdData( 1)            <=  reg_data(51)( 1);                                    --
          localRdData( 2)            <=  reg_data(51)( 2);                                    --
          localRdData( 3)            <=  reg_data(51)( 3);                                    --
        when 52 => --0x34
          localRdData( 0)            <=  Mon.MGT.MGT(6).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(6).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(6).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(6).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(6).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(6).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(6).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(6).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_rx_error_out;       --
        when 54 => --0x36
          localRdData( 9 downto  0)  <=  reg_data(54)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(54)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(6).DRP.rd_rdy;                           --DRP Enable
        when 55 => --0x37
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(6).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(55)(31 downto 16);                          --DRP Write Data
        when 56 => --0x38
          localRdData( 0)            <=  reg_data(56)( 0);                                    --
          localRdData( 1)            <=  reg_data(56)( 1);                                    --
          localRdData( 2)            <=  reg_data(56)( 2);                                    --
          localRdData( 3)            <=  reg_data(56)( 3);                                    --
        when 57 => --0x39
          localRdData( 0)            <=  reg_data(57)( 0);                                    --
          localRdData( 1)            <=  reg_data(57)( 1);                                    --
          localRdData( 2)            <=  reg_data(57)( 2);                                    --
          localRdData( 3)            <=  reg_data(57)( 3);                                    --
        when 58 => --0x3a
          localRdData( 0)            <=  Mon.MGT.MGT(7).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(7).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(7).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(7).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(7).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(7).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(7).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(7).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_rx_error_out;       --
        when 60 => --0x3c
          localRdData( 9 downto  0)  <=  reg_data(60)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(60)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(7).DRP.rd_rdy;                           --DRP Enable
        when 61 => --0x3d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(7).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(61)(31 downto 16);                          --DRP Write Data
        when 62 => --0x3e
          localRdData( 0)            <=  reg_data(62)( 0);                                    --
          localRdData( 1)            <=  reg_data(62)( 1);                                    --
          localRdData( 2)            <=  reg_data(62)( 2);                                    --
          localRdData( 3)            <=  reg_data(62)( 3);                                    --
        when 63 => --0x3f
          localRdData( 0)            <=  reg_data(63)( 0);                                    --
          localRdData( 1)            <=  reg_data(63)( 1);                                    --
          localRdData( 2)            <=  reg_data(63)( 2);                                    --
          localRdData( 3)            <=  reg_data(63)( 3);                                    --
        when 64 => --0x40
          localRdData( 0)            <=  Mon.MGT.MGT(8).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(8).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(8).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(8).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(8).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(8).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(8).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(8).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_rx_error_out;       --
        when 66 => --0x42
          localRdData( 9 downto  0)  <=  reg_data(66)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(66)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(8).DRP.rd_rdy;                           --DRP Enable
        when 67 => --0x43
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(8).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(67)(31 downto 16);                          --DRP Write Data
        when 68 => --0x44
          localRdData( 0)            <=  reg_data(68)( 0);                                    --
          localRdData( 1)            <=  reg_data(68)( 1);                                    --
          localRdData( 2)            <=  reg_data(68)( 2);                                    --
          localRdData( 3)            <=  reg_data(68)( 3);                                    --
        when 69 => --0x45
          localRdData( 0)            <=  reg_data(69)( 0);                                    --
          localRdData( 1)            <=  reg_data(69)( 1);                                    --
          localRdData( 2)            <=  reg_data(69)( 2);                                    --
          localRdData( 3)            <=  reg_data(69)( 3);                                    --
        when 70 => --0x46
          localRdData( 0)            <=  Mon.MGT.MGT(9).STATUS.rxcdr_stable;                  --
          localRdData( 1)            <=  Mon.MGT.MGT(9).STATUS.powergood;                     --
          localRdData( 2)            <=  Mon.MGT.MGT(9).STATUS.txready;                       --
          localRdData( 3)            <=  Mon.MGT.MGT(9).STATUS.rxready;                       --
          localRdData( 4)            <=  Mon.MGT.MGT(9).STATUS.rx_pma_reset_done;             --
          localRdData( 5)            <=  Mon.MGT.MGT(9).STATUS.tx_pma_reset_done;             --
          localRdData( 6)            <=  Mon.MGT.MGT(9).STATUS.tx_reset_done;                 --
          localRdData( 7)            <=  Mon.MGT.MGT(9).STATUS.rx_reset_done;                 --
          localRdData( 8)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_tx_done_out;        --
          localRdData( 9)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_tx_error_out;       --
          localRdData(10)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_rx_done_out;        --
          localRdData(11)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_rx_error_out;       --
        when 72 => --0x48
          localRdData( 9 downto  0)  <=  reg_data(72)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(72)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(9).DRP.rd_rdy;                           --DRP Enable
        when 73 => --0x49
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(9).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(73)(31 downto 16);                          --DRP Write Data
        when 74 => --0x4a
          localRdData( 0)            <=  reg_data(74)( 0);                                    --
          localRdData( 1)            <=  reg_data(74)( 1);                                    --
          localRdData( 2)            <=  reg_data(74)( 2);                                    --
          localRdData( 3)            <=  reg_data(74)( 3);                                    --
        when 75 => --0x4b
          localRdData( 0)            <=  reg_data(75)( 0);                                    --
          localRdData( 1)            <=  reg_data(75)( 1);                                    --
          localRdData( 2)            <=  reg_data(75)( 2);                                    --
          localRdData( 3)            <=  reg_data(75)( 3);                                    --
        when 76 => --0x4c
          localRdData( 0)            <=  Mon.MGT.MGT(10).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(10).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(10).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(10).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(10).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(10).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(10).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(10).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_rx_error_out;      --
        when 78 => --0x4e
          localRdData( 9 downto  0)  <=  reg_data(78)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(78)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(10).DRP.rd_rdy;                          --DRP Enable
        when 79 => --0x4f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(10).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(79)(31 downto 16);                          --DRP Write Data
        when 80 => --0x50
          localRdData( 0)            <=  reg_data(80)( 0);                                    --
          localRdData( 1)            <=  reg_data(80)( 1);                                    --
          localRdData( 2)            <=  reg_data(80)( 2);                                    --
          localRdData( 3)            <=  reg_data(80)( 3);                                    --
        when 81 => --0x51
          localRdData( 0)            <=  reg_data(81)( 0);                                    --
          localRdData( 1)            <=  reg_data(81)( 1);                                    --
          localRdData( 2)            <=  reg_data(81)( 2);                                    --
          localRdData( 3)            <=  reg_data(81)( 3);                                    --
        when 82 => --0x52
          localRdData( 0)            <=  Mon.MGT.MGT(11).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(11).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(11).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(11).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(11).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(11).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(11).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(11).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_rx_error_out;      --
        when 84 => --0x54
          localRdData( 9 downto  0)  <=  reg_data(84)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(84)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(11).DRP.rd_rdy;                          --DRP Enable
        when 85 => --0x55
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(11).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(85)(31 downto 16);                          --DRP Write Data
        when 86 => --0x56
          localRdData( 0)            <=  reg_data(86)( 0);                                    --
          localRdData( 1)            <=  reg_data(86)( 1);                                    --
          localRdData( 2)            <=  reg_data(86)( 2);                                    --
          localRdData( 3)            <=  reg_data(86)( 3);                                    --
        when 87 => --0x57
          localRdData( 0)            <=  reg_data(87)( 0);                                    --
          localRdData( 1)            <=  reg_data(87)( 1);                                    --
          localRdData( 2)            <=  reg_data(87)( 2);                                    --
          localRdData( 3)            <=  reg_data(87)( 3);                                    --
        when 88 => --0x58
          localRdData( 0)            <=  Mon.MGT.MGT(12).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(12).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(12).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(12).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(12).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(12).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(12).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(12).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_rx_error_out;      --
        when 90 => --0x5a
          localRdData( 9 downto  0)  <=  reg_data(90)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(90)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(12).DRP.rd_rdy;                          --DRP Enable
        when 91 => --0x5b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(12).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(91)(31 downto 16);                          --DRP Write Data
        when 92 => --0x5c
          localRdData( 0)            <=  reg_data(92)( 0);                                    --
          localRdData( 1)            <=  reg_data(92)( 1);                                    --
          localRdData( 2)            <=  reg_data(92)( 2);                                    --
          localRdData( 3)            <=  reg_data(92)( 3);                                    --
        when 93 => --0x5d
          localRdData( 0)            <=  reg_data(93)( 0);                                    --
          localRdData( 1)            <=  reg_data(93)( 1);                                    --
          localRdData( 2)            <=  reg_data(93)( 2);                                    --
          localRdData( 3)            <=  reg_data(93)( 3);                                    --
        when 94 => --0x5e
          localRdData( 0)            <=  Mon.MGT.MGT(13).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(13).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(13).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(13).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(13).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(13).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(13).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(13).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_rx_error_out;      --
        when 96 => --0x60
          localRdData( 9 downto  0)  <=  reg_data(96)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(96)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(13).DRP.rd_rdy;                          --DRP Enable
        when 97 => --0x61
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(13).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(97)(31 downto 16);                          --DRP Write Data
        when 98 => --0x62
          localRdData( 0)            <=  reg_data(98)( 0);                                    --
          localRdData( 1)            <=  reg_data(98)( 1);                                    --
          localRdData( 2)            <=  reg_data(98)( 2);                                    --
          localRdData( 3)            <=  reg_data(98)( 3);                                    --
        when 99 => --0x63
          localRdData( 0)            <=  reg_data(99)( 0);                                    --
          localRdData( 1)            <=  reg_data(99)( 1);                                    --
          localRdData( 2)            <=  reg_data(99)( 2);                                    --
          localRdData( 3)            <=  reg_data(99)( 3);                                    --
        when 100 => --0x64
          localRdData( 0)            <=  Mon.MGT.MGT(14).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(14).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(14).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(14).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(14).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(14).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(14).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(14).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_rx_error_out;      --
        when 102 => --0x66
          localRdData( 9 downto  0)  <=  reg_data(102)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(102)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(14).DRP.rd_rdy;                          --DRP Enable
        when 103 => --0x67
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(14).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(103)(31 downto 16);                         --DRP Write Data
        when 104 => --0x68
          localRdData( 0)            <=  reg_data(104)( 0);                                   --
          localRdData( 1)            <=  reg_data(104)( 1);                                   --
          localRdData( 2)            <=  reg_data(104)( 2);                                   --
          localRdData( 3)            <=  reg_data(104)( 3);                                   --
        when 105 => --0x69
          localRdData( 0)            <=  reg_data(105)( 0);                                   --
          localRdData( 1)            <=  reg_data(105)( 1);                                   --
          localRdData( 2)            <=  reg_data(105)( 2);                                   --
          localRdData( 3)            <=  reg_data(105)( 3);                                   --
        when 106 => --0x6a
          localRdData( 0)            <=  Mon.MGT.MGT(15).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(15).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(15).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(15).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(15).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(15).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(15).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(15).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_rx_error_out;      --
        when 108 => --0x6c
          localRdData( 9 downto  0)  <=  reg_data(108)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(108)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(15).DRP.rd_rdy;                          --DRP Enable
        when 109 => --0x6d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(15).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(109)(31 downto 16);                         --DRP Write Data
        when 110 => --0x6e
          localRdData( 0)            <=  reg_data(110)( 0);                                   --
          localRdData( 1)            <=  reg_data(110)( 1);                                   --
          localRdData( 2)            <=  reg_data(110)( 2);                                   --
          localRdData( 3)            <=  reg_data(110)( 3);                                   --
        when 111 => --0x6f
          localRdData( 0)            <=  reg_data(111)( 0);                                   --
          localRdData( 1)            <=  reg_data(111)( 1);                                   --
          localRdData( 2)            <=  reg_data(111)( 2);                                   --
          localRdData( 3)            <=  reg_data(111)( 3);                                   --
        when 112 => --0x70
          localRdData( 0)            <=  Mon.MGT.MGT(16).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(16).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(16).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(16).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(16).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(16).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(16).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(16).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_rx_error_out;      --
        when 114 => --0x72
          localRdData( 9 downto  0)  <=  reg_data(114)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(114)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(16).DRP.rd_rdy;                          --DRP Enable
        when 115 => --0x73
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(16).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(115)(31 downto 16);                         --DRP Write Data
        when 116 => --0x74
          localRdData( 0)            <=  reg_data(116)( 0);                                   --
          localRdData( 1)            <=  reg_data(116)( 1);                                   --
          localRdData( 2)            <=  reg_data(116)( 2);                                   --
          localRdData( 3)            <=  reg_data(116)( 3);                                   --
        when 117 => --0x75
          localRdData( 0)            <=  reg_data(117)( 0);                                   --
          localRdData( 1)            <=  reg_data(117)( 1);                                   --
          localRdData( 2)            <=  reg_data(117)( 2);                                   --
          localRdData( 3)            <=  reg_data(117)( 3);                                   --
        when 118 => --0x76
          localRdData( 0)            <=  Mon.MGT.MGT(17).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(17).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(17).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(17).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(17).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(17).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(17).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(17).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_rx_error_out;      --
        when 120 => --0x78
          localRdData( 9 downto  0)  <=  reg_data(120)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(120)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(17).DRP.rd_rdy;                          --DRP Enable
        when 121 => --0x79
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(17).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(121)(31 downto 16);                         --DRP Write Data
        when 122 => --0x7a
          localRdData( 0)            <=  reg_data(122)( 0);                                   --
          localRdData( 1)            <=  reg_data(122)( 1);                                   --
          localRdData( 2)            <=  reg_data(122)( 2);                                   --
          localRdData( 3)            <=  reg_data(122)( 3);                                   --
        when 123 => --0x7b
          localRdData( 0)            <=  reg_data(123)( 0);                                   --
          localRdData( 1)            <=  reg_data(123)( 1);                                   --
          localRdData( 2)            <=  reg_data(123)( 2);                                   --
          localRdData( 3)            <=  reg_data(123)( 3);                                   --
        when 124 => --0x7c
          localRdData( 0)            <=  Mon.MGT.MGT(18).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(18).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(18).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(18).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(18).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(18).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(18).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(18).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_rx_error_out;      --
        when 126 => --0x7e
          localRdData( 9 downto  0)  <=  reg_data(126)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(126)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(18).DRP.rd_rdy;                          --DRP Enable
        when 127 => --0x7f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(18).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(127)(31 downto 16);                         --DRP Write Data
        when 128 => --0x80
          localRdData( 0)            <=  reg_data(128)( 0);                                   --
          localRdData( 1)            <=  reg_data(128)( 1);                                   --
          localRdData( 2)            <=  reg_data(128)( 2);                                   --
          localRdData( 3)            <=  reg_data(128)( 3);                                   --
        when 129 => --0x81
          localRdData( 0)            <=  reg_data(129)( 0);                                   --
          localRdData( 1)            <=  reg_data(129)( 1);                                   --
          localRdData( 2)            <=  reg_data(129)( 2);                                   --
          localRdData( 3)            <=  reg_data(129)( 3);                                   --
        when 130 => --0x82
          localRdData( 0)            <=  Mon.MGT.MGT(19).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(19).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(19).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(19).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(19).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(19).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(19).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(19).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_rx_error_out;      --
        when 132 => --0x84
          localRdData( 9 downto  0)  <=  reg_data(132)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(132)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(19).DRP.rd_rdy;                          --DRP Enable
        when 133 => --0x85
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(19).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(133)(31 downto 16);                         --DRP Write Data
        when 134 => --0x86
          localRdData( 0)            <=  reg_data(134)( 0);                                   --
          localRdData( 1)            <=  reg_data(134)( 1);                                   --
          localRdData( 2)            <=  reg_data(134)( 2);                                   --
          localRdData( 3)            <=  reg_data(134)( 3);                                   --
        when 135 => --0x87
          localRdData( 0)            <=  reg_data(135)( 0);                                   --
          localRdData( 1)            <=  reg_data(135)( 1);                                   --
          localRdData( 2)            <=  reg_data(135)( 2);                                   --
          localRdData( 3)            <=  reg_data(135)( 3);                                   --
        when 136 => --0x88
          localRdData( 0)            <=  Mon.MGT.MGT(20).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(20).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(20).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(20).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(20).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(20).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(20).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(20).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_rx_error_out;      --
        when 138 => --0x8a
          localRdData( 9 downto  0)  <=  reg_data(138)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(138)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(20).DRP.rd_rdy;                          --DRP Enable
        when 139 => --0x8b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(20).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(139)(31 downto 16);                         --DRP Write Data
        when 140 => --0x8c
          localRdData( 0)            <=  reg_data(140)( 0);                                   --
          localRdData( 1)            <=  reg_data(140)( 1);                                   --
          localRdData( 2)            <=  reg_data(140)( 2);                                   --
          localRdData( 3)            <=  reg_data(140)( 3);                                   --
        when 141 => --0x8d
          localRdData( 0)            <=  reg_data(141)( 0);                                   --
          localRdData( 1)            <=  reg_data(141)( 1);                                   --
          localRdData( 2)            <=  reg_data(141)( 2);                                   --
          localRdData( 3)            <=  reg_data(141)( 3);                                   --
        when 142 => --0x8e
          localRdData( 0)            <=  Mon.MGT.MGT(21).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(21).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(21).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(21).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(21).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(21).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(21).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(21).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_rx_error_out;      --
        when 144 => --0x90
          localRdData( 9 downto  0)  <=  reg_data(144)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(144)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(21).DRP.rd_rdy;                          --DRP Enable
        when 145 => --0x91
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(21).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(145)(31 downto 16);                         --DRP Write Data
        when 146 => --0x92
          localRdData( 0)            <=  reg_data(146)( 0);                                   --
          localRdData( 1)            <=  reg_data(146)( 1);                                   --
          localRdData( 2)            <=  reg_data(146)( 2);                                   --
          localRdData( 3)            <=  reg_data(146)( 3);                                   --
        when 147 => --0x93
          localRdData( 0)            <=  reg_data(147)( 0);                                   --
          localRdData( 1)            <=  reg_data(147)( 1);                                   --
          localRdData( 2)            <=  reg_data(147)( 2);                                   --
          localRdData( 3)            <=  reg_data(147)( 3);                                   --
        when 148 => --0x94
          localRdData( 0)            <=  Mon.MGT.MGT(22).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(22).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(22).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(22).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(22).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(22).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(22).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(22).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_rx_error_out;      --
        when 150 => --0x96
          localRdData( 9 downto  0)  <=  reg_data(150)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(150)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(22).DRP.rd_rdy;                          --DRP Enable
        when 151 => --0x97
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(22).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(151)(31 downto 16);                         --DRP Write Data
        when 152 => --0x98
          localRdData( 0)            <=  reg_data(152)( 0);                                   --
          localRdData( 1)            <=  reg_data(152)( 1);                                   --
          localRdData( 2)            <=  reg_data(152)( 2);                                   --
          localRdData( 3)            <=  reg_data(152)( 3);                                   --
        when 153 => --0x99
          localRdData( 0)            <=  reg_data(153)( 0);                                   --
          localRdData( 1)            <=  reg_data(153)( 1);                                   --
          localRdData( 2)            <=  reg_data(153)( 2);                                   --
          localRdData( 3)            <=  reg_data(153)( 3);                                   --
        when 154 => --0x9a
          localRdData( 0)            <=  Mon.MGT.MGT(23).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(23).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(23).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(23).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(23).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(23).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(23).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(23).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_rx_error_out;      --
        when 156 => --0x9c
          localRdData( 9 downto  0)  <=  reg_data(156)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(156)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(23).DRP.rd_rdy;                          --DRP Enable
        when 157 => --0x9d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(23).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(157)(31 downto 16);                         --DRP Write Data
        when 158 => --0x9e
          localRdData( 0)            <=  reg_data(158)( 0);                                   --
          localRdData( 1)            <=  reg_data(158)( 1);                                   --
          localRdData( 2)            <=  reg_data(158)( 2);                                   --
          localRdData( 3)            <=  reg_data(158)( 3);                                   --
        when 159 => --0x9f
          localRdData( 0)            <=  reg_data(159)( 0);                                   --
          localRdData( 1)            <=  reg_data(159)( 1);                                   --
          localRdData( 2)            <=  reg_data(159)( 2);                                   --
          localRdData( 3)            <=  reg_data(159)( 3);                                   --
        when 160 => --0xa0
          localRdData( 0)            <=  Mon.MGT.MGT(24).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(24).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(24).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(24).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(24).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(24).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(24).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(24).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_rx_error_out;      --
        when 162 => --0xa2
          localRdData( 9 downto  0)  <=  reg_data(162)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(162)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(24).DRP.rd_rdy;                          --DRP Enable
        when 163 => --0xa3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(24).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(163)(31 downto 16);                         --DRP Write Data
        when 164 => --0xa4
          localRdData( 0)            <=  reg_data(164)( 0);                                   --
          localRdData( 1)            <=  reg_data(164)( 1);                                   --
          localRdData( 2)            <=  reg_data(164)( 2);                                   --
          localRdData( 3)            <=  reg_data(164)( 3);                                   --
        when 165 => --0xa5
          localRdData( 0)            <=  reg_data(165)( 0);                                   --
          localRdData( 1)            <=  reg_data(165)( 1);                                   --
          localRdData( 2)            <=  reg_data(165)( 2);                                   --
          localRdData( 3)            <=  reg_data(165)( 3);                                   --
        when 166 => --0xa6
          localRdData( 0)            <=  Mon.MGT.MGT(25).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(25).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(25).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(25).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(25).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(25).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(25).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(25).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_rx_error_out;      --
        when 168 => --0xa8
          localRdData( 9 downto  0)  <=  reg_data(168)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(168)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(25).DRP.rd_rdy;                          --DRP Enable
        when 169 => --0xa9
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(25).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(169)(31 downto 16);                         --DRP Write Data
        when 170 => --0xaa
          localRdData( 0)            <=  reg_data(170)( 0);                                   --
          localRdData( 1)            <=  reg_data(170)( 1);                                   --
          localRdData( 2)            <=  reg_data(170)( 2);                                   --
          localRdData( 3)            <=  reg_data(170)( 3);                                   --
        when 171 => --0xab
          localRdData( 0)            <=  reg_data(171)( 0);                                   --
          localRdData( 1)            <=  reg_data(171)( 1);                                   --
          localRdData( 2)            <=  reg_data(171)( 2);                                   --
          localRdData( 3)            <=  reg_data(171)( 3);                                   --
        when 172 => --0xac
          localRdData( 0)            <=  Mon.MGT.MGT(26).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(26).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(26).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(26).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(26).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(26).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(26).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(26).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_rx_error_out;      --
        when 174 => --0xae
          localRdData( 9 downto  0)  <=  reg_data(174)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(174)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(26).DRP.rd_rdy;                          --DRP Enable
        when 175 => --0xaf
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(26).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(175)(31 downto 16);                         --DRP Write Data
        when 176 => --0xb0
          localRdData( 0)            <=  reg_data(176)( 0);                                   --
          localRdData( 1)            <=  reg_data(176)( 1);                                   --
          localRdData( 2)            <=  reg_data(176)( 2);                                   --
          localRdData( 3)            <=  reg_data(176)( 3);                                   --
        when 177 => --0xb1
          localRdData( 0)            <=  reg_data(177)( 0);                                   --
          localRdData( 1)            <=  reg_data(177)( 1);                                   --
          localRdData( 2)            <=  reg_data(177)( 2);                                   --
          localRdData( 3)            <=  reg_data(177)( 3);                                   --
        when 178 => --0xb2
          localRdData( 0)            <=  Mon.MGT.MGT(27).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(27).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(27).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(27).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(27).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(27).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(27).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(27).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_rx_error_out;      --
        when 180 => --0xb4
          localRdData( 9 downto  0)  <=  reg_data(180)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(180)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(27).DRP.rd_rdy;                          --DRP Enable
        when 181 => --0xb5
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(27).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(181)(31 downto 16);                         --DRP Write Data
        when 182 => --0xb6
          localRdData( 0)            <=  reg_data(182)( 0);                                   --
          localRdData( 1)            <=  reg_data(182)( 1);                                   --
          localRdData( 2)            <=  reg_data(182)( 2);                                   --
          localRdData( 3)            <=  reg_data(182)( 3);                                   --
        when 183 => --0xb7
          localRdData( 0)            <=  reg_data(183)( 0);                                   --
          localRdData( 1)            <=  reg_data(183)( 1);                                   --
          localRdData( 2)            <=  reg_data(183)( 2);                                   --
          localRdData( 3)            <=  reg_data(183)( 3);                                   --
        when 184 => --0xb8
          localRdData( 0)            <=  Mon.MGT.MGT(28).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(28).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(28).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(28).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(28).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(28).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(28).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(28).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_rx_error_out;      --
        when 186 => --0xba
          localRdData( 9 downto  0)  <=  reg_data(186)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(186)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(28).DRP.rd_rdy;                          --DRP Enable
        when 187 => --0xbb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(28).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(187)(31 downto 16);                         --DRP Write Data
        when 188 => --0xbc
          localRdData( 0)            <=  reg_data(188)( 0);                                   --
          localRdData( 1)            <=  reg_data(188)( 1);                                   --
          localRdData( 2)            <=  reg_data(188)( 2);                                   --
          localRdData( 3)            <=  reg_data(188)( 3);                                   --
        when 189 => --0xbd
          localRdData( 0)            <=  reg_data(189)( 0);                                   --
          localRdData( 1)            <=  reg_data(189)( 1);                                   --
          localRdData( 2)            <=  reg_data(189)( 2);                                   --
          localRdData( 3)            <=  reg_data(189)( 3);                                   --
        when 190 => --0xbe
          localRdData( 0)            <=  Mon.MGT.MGT(29).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(29).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(29).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(29).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(29).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(29).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(29).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(29).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_rx_error_out;      --
        when 192 => --0xc0
          localRdData( 9 downto  0)  <=  reg_data(192)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(192)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(29).DRP.rd_rdy;                          --DRP Enable
        when 193 => --0xc1
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(29).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(193)(31 downto 16);                         --DRP Write Data
        when 194 => --0xc2
          localRdData( 0)            <=  reg_data(194)( 0);                                   --
          localRdData( 1)            <=  reg_data(194)( 1);                                   --
          localRdData( 2)            <=  reg_data(194)( 2);                                   --
          localRdData( 3)            <=  reg_data(194)( 3);                                   --
        when 195 => --0xc3
          localRdData( 0)            <=  reg_data(195)( 0);                                   --
          localRdData( 1)            <=  reg_data(195)( 1);                                   --
          localRdData( 2)            <=  reg_data(195)( 2);                                   --
          localRdData( 3)            <=  reg_data(195)( 3);                                   --
        when 196 => --0xc4
          localRdData( 0)            <=  Mon.MGT.MGT(30).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(30).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(30).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(30).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(30).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(30).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(30).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(30).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_rx_error_out;      --
        when 198 => --0xc6
          localRdData( 9 downto  0)  <=  reg_data(198)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(198)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(30).DRP.rd_rdy;                          --DRP Enable
        when 199 => --0xc7
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(30).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(199)(31 downto 16);                         --DRP Write Data
        when 200 => --0xc8
          localRdData( 0)            <=  reg_data(200)( 0);                                   --
          localRdData( 1)            <=  reg_data(200)( 1);                                   --
          localRdData( 2)            <=  reg_data(200)( 2);                                   --
          localRdData( 3)            <=  reg_data(200)( 3);                                   --
        when 201 => --0xc9
          localRdData( 0)            <=  reg_data(201)( 0);                                   --
          localRdData( 1)            <=  reg_data(201)( 1);                                   --
          localRdData( 2)            <=  reg_data(201)( 2);                                   --
          localRdData( 3)            <=  reg_data(201)( 3);                                   --
        when 202 => --0xca
          localRdData( 0)            <=  Mon.MGT.MGT(31).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(31).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(31).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(31).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(31).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(31).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(31).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(31).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_rx_error_out;      --
        when 204 => --0xcc
          localRdData( 9 downto  0)  <=  reg_data(204)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(204)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(31).DRP.rd_rdy;                          --DRP Enable
        when 205 => --0xcd
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(31).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(205)(31 downto 16);                         --DRP Write Data
        when 206 => --0xce
          localRdData( 0)            <=  reg_data(206)( 0);                                   --
          localRdData( 1)            <=  reg_data(206)( 1);                                   --
          localRdData( 2)            <=  reg_data(206)( 2);                                   --
          localRdData( 3)            <=  reg_data(206)( 3);                                   --
        when 207 => --0xcf
          localRdData( 0)            <=  reg_data(207)( 0);                                   --
          localRdData( 1)            <=  reg_data(207)( 1);                                   --
          localRdData( 2)            <=  reg_data(207)( 2);                                   --
          localRdData( 3)            <=  reg_data(207)( 3);                                   --
        when 208 => --0xd0
          localRdData( 0)            <=  Mon.MGT.MGT(32).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(32).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(32).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(32).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(32).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(32).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(32).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(32).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_rx_error_out;      --
        when 210 => --0xd2
          localRdData( 9 downto  0)  <=  reg_data(210)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(210)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(32).DRP.rd_rdy;                          --DRP Enable
        when 211 => --0xd3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(32).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(211)(31 downto 16);                         --DRP Write Data
        when 212 => --0xd4
          localRdData( 0)            <=  reg_data(212)( 0);                                   --
          localRdData( 1)            <=  reg_data(212)( 1);                                   --
          localRdData( 2)            <=  reg_data(212)( 2);                                   --
          localRdData( 3)            <=  reg_data(212)( 3);                                   --
        when 213 => --0xd5
          localRdData( 0)            <=  reg_data(213)( 0);                                   --
          localRdData( 1)            <=  reg_data(213)( 1);                                   --
          localRdData( 2)            <=  reg_data(213)( 2);                                   --
          localRdData( 3)            <=  reg_data(213)( 3);                                   --
        when 214 => --0xd6
          localRdData( 0)            <=  Mon.MGT.MGT(33).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(33).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(33).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(33).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(33).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(33).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(33).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(33).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_rx_error_out;      --
        when 216 => --0xd8
          localRdData( 9 downto  0)  <=  reg_data(216)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(216)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(33).DRP.rd_rdy;                          --DRP Enable
        when 217 => --0xd9
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(33).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(217)(31 downto 16);                         --DRP Write Data
        when 218 => --0xda
          localRdData( 0)            <=  reg_data(218)( 0);                                   --
          localRdData( 1)            <=  reg_data(218)( 1);                                   --
          localRdData( 2)            <=  reg_data(218)( 2);                                   --
          localRdData( 3)            <=  reg_data(218)( 3);                                   --
        when 219 => --0xdb
          localRdData( 0)            <=  reg_data(219)( 0);                                   --
          localRdData( 1)            <=  reg_data(219)( 1);                                   --
          localRdData( 2)            <=  reg_data(219)( 2);                                   --
          localRdData( 3)            <=  reg_data(219)( 3);                                   --
        when 220 => --0xdc
          localRdData( 0)            <=  Mon.MGT.MGT(34).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(34).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(34).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(34).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(34).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(34).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(34).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(34).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_rx_error_out;      --
        when 222 => --0xde
          localRdData( 9 downto  0)  <=  reg_data(222)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(222)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(34).DRP.rd_rdy;                          --DRP Enable
        when 223 => --0xdf
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(34).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(223)(31 downto 16);                         --DRP Write Data
        when 224 => --0xe0
          localRdData( 0)            <=  reg_data(224)( 0);                                   --
          localRdData( 1)            <=  reg_data(224)( 1);                                   --
          localRdData( 2)            <=  reg_data(224)( 2);                                   --
          localRdData( 3)            <=  reg_data(224)( 3);                                   --
        when 225 => --0xe1
          localRdData( 0)            <=  reg_data(225)( 0);                                   --
          localRdData( 1)            <=  reg_data(225)( 1);                                   --
          localRdData( 2)            <=  reg_data(225)( 2);                                   --
          localRdData( 3)            <=  reg_data(225)( 3);                                   --
        when 226 => --0xe2
          localRdData( 0)            <=  Mon.MGT.MGT(35).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(35).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(35).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(35).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(35).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(35).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(35).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(35).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_rx_error_out;      --
        when 228 => --0xe4
          localRdData( 9 downto  0)  <=  reg_data(228)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(228)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(35).DRP.rd_rdy;                          --DRP Enable
        when 229 => --0xe5
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(35).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(229)(31 downto 16);                         --DRP Write Data
        when 230 => --0xe6
          localRdData( 0)            <=  reg_data(230)( 0);                                   --
          localRdData( 1)            <=  reg_data(230)( 1);                                   --
          localRdData( 2)            <=  reg_data(230)( 2);                                   --
          localRdData( 3)            <=  reg_data(230)( 3);                                   --
        when 231 => --0xe7
          localRdData( 0)            <=  reg_data(231)( 0);                                   --
          localRdData( 1)            <=  reg_data(231)( 1);                                   --
          localRdData( 2)            <=  reg_data(231)( 2);                                   --
          localRdData( 3)            <=  reg_data(231)( 3);                                   --
        when 232 => --0xe8
          localRdData( 0)            <=  Mon.MGT.MGT(36).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(36).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(36).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(36).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(36).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(36).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(36).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(36).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_rx_error_out;      --
        when 234 => --0xea
          localRdData( 9 downto  0)  <=  reg_data(234)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(234)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(36).DRP.rd_rdy;                          --DRP Enable
        when 235 => --0xeb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(36).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(235)(31 downto 16);                         --DRP Write Data
        when 236 => --0xec
          localRdData( 0)            <=  reg_data(236)( 0);                                   --
          localRdData( 1)            <=  reg_data(236)( 1);                                   --
          localRdData( 2)            <=  reg_data(236)( 2);                                   --
          localRdData( 3)            <=  reg_data(236)( 3);                                   --
        when 237 => --0xed
          localRdData( 0)            <=  reg_data(237)( 0);                                   --
          localRdData( 1)            <=  reg_data(237)( 1);                                   --
          localRdData( 2)            <=  reg_data(237)( 2);                                   --
          localRdData( 3)            <=  reg_data(237)( 3);                                   --
        when 238 => --0xee
          localRdData( 0)            <=  Mon.MGT.MGT(37).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(37).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(37).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(37).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(37).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(37).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(37).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(37).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_rx_error_out;      --
        when 240 => --0xf0
          localRdData( 9 downto  0)  <=  reg_data(240)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(240)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(37).DRP.rd_rdy;                          --DRP Enable
        when 241 => --0xf1
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(37).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(241)(31 downto 16);                         --DRP Write Data
        when 242 => --0xf2
          localRdData( 0)            <=  reg_data(242)( 0);                                   --
          localRdData( 1)            <=  reg_data(242)( 1);                                   --
          localRdData( 2)            <=  reg_data(242)( 2);                                   --
          localRdData( 3)            <=  reg_data(242)( 3);                                   --
        when 243 => --0xf3
          localRdData( 0)            <=  reg_data(243)( 0);                                   --
          localRdData( 1)            <=  reg_data(243)( 1);                                   --
          localRdData( 2)            <=  reg_data(243)( 2);                                   --
          localRdData( 3)            <=  reg_data(243)( 3);                                   --
        when 244 => --0xf4
          localRdData( 0)            <=  Mon.MGT.MGT(38).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(38).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(38).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(38).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(38).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(38).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(38).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(38).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_rx_error_out;      --
        when 246 => --0xf6
          localRdData( 9 downto  0)  <=  reg_data(246)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(246)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(38).DRP.rd_rdy;                          --DRP Enable
        when 247 => --0xf7
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(38).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(247)(31 downto 16);                         --DRP Write Data
        when 248 => --0xf8
          localRdData( 0)            <=  reg_data(248)( 0);                                   --
          localRdData( 1)            <=  reg_data(248)( 1);                                   --
          localRdData( 2)            <=  reg_data(248)( 2);                                   --
          localRdData( 3)            <=  reg_data(248)( 3);                                   --
        when 249 => --0xf9
          localRdData( 0)            <=  reg_data(249)( 0);                                   --
          localRdData( 1)            <=  reg_data(249)( 1);                                   --
          localRdData( 2)            <=  reg_data(249)( 2);                                   --
          localRdData( 3)            <=  reg_data(249)( 3);                                   --
        when 250 => --0xfa
          localRdData( 0)            <=  Mon.MGT.MGT(39).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(39).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(39).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(39).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(39).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(39).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(39).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(39).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_rx_error_out;      --
        when 252 => --0xfc
          localRdData( 9 downto  0)  <=  reg_data(252)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(252)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(39).DRP.rd_rdy;                          --DRP Enable
        when 253 => --0xfd
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(39).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(253)(31 downto 16);                         --DRP Write Data
        when 254 => --0xfe
          localRdData( 0)            <=  reg_data(254)( 0);                                   --
          localRdData( 1)            <=  reg_data(254)( 1);                                   --
          localRdData( 2)            <=  reg_data(254)( 2);                                   --
          localRdData( 3)            <=  reg_data(254)( 3);                                   --
        when 255 => --0xff
          localRdData( 0)            <=  reg_data(255)( 0);                                   --
          localRdData( 1)            <=  reg_data(255)( 1);                                   --
          localRdData( 2)            <=  reg_data(255)( 2);                                   --
          localRdData( 3)            <=  reg_data(255)( 3);                                   --
        when 256 => --0x100
          localRdData( 0)            <=  Mon.MGT.MGT(40).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(40).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(40).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(40).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(40).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(40).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(40).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(40).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_rx_error_out;      --
        when 258 => --0x102
          localRdData( 9 downto  0)  <=  reg_data(258)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(258)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(40).DRP.rd_rdy;                          --DRP Enable
        when 259 => --0x103
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(40).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(259)(31 downto 16);                         --DRP Write Data
        when 260 => --0x104
          localRdData( 0)            <=  reg_data(260)( 0);                                   --
          localRdData( 1)            <=  reg_data(260)( 1);                                   --
          localRdData( 2)            <=  reg_data(260)( 2);                                   --
          localRdData( 3)            <=  reg_data(260)( 3);                                   --
        when 261 => --0x105
          localRdData( 0)            <=  reg_data(261)( 0);                                   --
          localRdData( 1)            <=  reg_data(261)( 1);                                   --
          localRdData( 2)            <=  reg_data(261)( 2);                                   --
          localRdData( 3)            <=  reg_data(261)( 3);                                   --
        when 262 => --0x106
          localRdData( 0)            <=  Mon.MGT.MGT(41).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(41).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(41).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(41).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(41).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(41).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(41).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(41).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_rx_error_out;      --
        when 264 => --0x108
          localRdData( 9 downto  0)  <=  reg_data(264)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(264)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(41).DRP.rd_rdy;                          --DRP Enable
        when 265 => --0x109
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(41).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(265)(31 downto 16);                         --DRP Write Data
        when 266 => --0x10a
          localRdData( 0)            <=  reg_data(266)( 0);                                   --
          localRdData( 1)            <=  reg_data(266)( 1);                                   --
          localRdData( 2)            <=  reg_data(266)( 2);                                   --
          localRdData( 3)            <=  reg_data(266)( 3);                                   --
        when 267 => --0x10b
          localRdData( 0)            <=  reg_data(267)( 0);                                   --
          localRdData( 1)            <=  reg_data(267)( 1);                                   --
          localRdData( 2)            <=  reg_data(267)( 2);                                   --
          localRdData( 3)            <=  reg_data(267)( 3);                                   --
        when 268 => --0x10c
          localRdData( 0)            <=  Mon.MGT.MGT(42).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(42).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(42).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(42).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(42).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(42).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(42).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(42).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_rx_error_out;      --
        when 270 => --0x10e
          localRdData( 9 downto  0)  <=  reg_data(270)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(270)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(42).DRP.rd_rdy;                          --DRP Enable
        when 271 => --0x10f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(42).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(271)(31 downto 16);                         --DRP Write Data
        when 272 => --0x110
          localRdData( 0)            <=  reg_data(272)( 0);                                   --
          localRdData( 1)            <=  reg_data(272)( 1);                                   --
          localRdData( 2)            <=  reg_data(272)( 2);                                   --
          localRdData( 3)            <=  reg_data(272)( 3);                                   --
        when 273 => --0x111
          localRdData( 0)            <=  reg_data(273)( 0);                                   --
          localRdData( 1)            <=  reg_data(273)( 1);                                   --
          localRdData( 2)            <=  reg_data(273)( 2);                                   --
          localRdData( 3)            <=  reg_data(273)( 3);                                   --
        when 274 => --0x112
          localRdData( 0)            <=  Mon.MGT.MGT(43).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(43).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(43).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(43).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(43).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(43).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(43).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(43).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_rx_error_out;      --
        when 276 => --0x114
          localRdData( 9 downto  0)  <=  reg_data(276)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(276)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(43).DRP.rd_rdy;                          --DRP Enable
        when 277 => --0x115
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(43).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(277)(31 downto 16);                         --DRP Write Data
        when 278 => --0x116
          localRdData( 0)            <=  reg_data(278)( 0);                                   --
          localRdData( 1)            <=  reg_data(278)( 1);                                   --
          localRdData( 2)            <=  reg_data(278)( 2);                                   --
          localRdData( 3)            <=  reg_data(278)( 3);                                   --
        when 279 => --0x117
          localRdData( 0)            <=  reg_data(279)( 0);                                   --
          localRdData( 1)            <=  reg_data(279)( 1);                                   --
          localRdData( 2)            <=  reg_data(279)( 2);                                   --
          localRdData( 3)            <=  reg_data(279)( 3);                                   --
        when 280 => --0x118
          localRdData( 0)            <=  Mon.MGT.MGT(44).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(44).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(44).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(44).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(44).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(44).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(44).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(44).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_rx_error_out;      --
        when 282 => --0x11a
          localRdData( 9 downto  0)  <=  reg_data(282)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(282)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(44).DRP.rd_rdy;                          --DRP Enable
        when 283 => --0x11b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(44).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(283)(31 downto 16);                         --DRP Write Data
        when 284 => --0x11c
          localRdData( 0)            <=  reg_data(284)( 0);                                   --
          localRdData( 1)            <=  reg_data(284)( 1);                                   --
          localRdData( 2)            <=  reg_data(284)( 2);                                   --
          localRdData( 3)            <=  reg_data(284)( 3);                                   --
        when 285 => --0x11d
          localRdData( 0)            <=  reg_data(285)( 0);                                   --
          localRdData( 1)            <=  reg_data(285)( 1);                                   --
          localRdData( 2)            <=  reg_data(285)( 2);                                   --
          localRdData( 3)            <=  reg_data(285)( 3);                                   --
        when 286 => --0x11e
          localRdData( 0)            <=  Mon.MGT.MGT(45).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(45).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(45).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(45).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(45).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(45).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(45).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(45).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_rx_error_out;      --
        when 288 => --0x120
          localRdData( 9 downto  0)  <=  reg_data(288)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(288)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(45).DRP.rd_rdy;                          --DRP Enable
        when 289 => --0x121
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(45).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(289)(31 downto 16);                         --DRP Write Data
        when 290 => --0x122
          localRdData( 0)            <=  reg_data(290)( 0);                                   --
          localRdData( 1)            <=  reg_data(290)( 1);                                   --
          localRdData( 2)            <=  reg_data(290)( 2);                                   --
          localRdData( 3)            <=  reg_data(290)( 3);                                   --
        when 291 => --0x123
          localRdData( 0)            <=  reg_data(291)( 0);                                   --
          localRdData( 1)            <=  reg_data(291)( 1);                                   --
          localRdData( 2)            <=  reg_data(291)( 2);                                   --
          localRdData( 3)            <=  reg_data(291)( 3);                                   --
        when 292 => --0x124
          localRdData( 0)            <=  Mon.MGT.MGT(46).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(46).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(46).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(46).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(46).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(46).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(46).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(46).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_rx_error_out;      --
        when 294 => --0x126
          localRdData( 9 downto  0)  <=  reg_data(294)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(294)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(46).DRP.rd_rdy;                          --DRP Enable
        when 295 => --0x127
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(46).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(295)(31 downto 16);                         --DRP Write Data
        when 296 => --0x128
          localRdData( 0)            <=  reg_data(296)( 0);                                   --
          localRdData( 1)            <=  reg_data(296)( 1);                                   --
          localRdData( 2)            <=  reg_data(296)( 2);                                   --
          localRdData( 3)            <=  reg_data(296)( 3);                                   --
        when 297 => --0x129
          localRdData( 0)            <=  reg_data(297)( 0);                                   --
          localRdData( 1)            <=  reg_data(297)( 1);                                   --
          localRdData( 2)            <=  reg_data(297)( 2);                                   --
          localRdData( 3)            <=  reg_data(297)( 3);                                   --
        when 298 => --0x12a
          localRdData( 0)            <=  Mon.MGT.MGT(47).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(47).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(47).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(47).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(47).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(47).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(47).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(47).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_rx_error_out;      --
        when 300 => --0x12c
          localRdData( 9 downto  0)  <=  reg_data(300)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(300)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(47).DRP.rd_rdy;                          --DRP Enable
        when 301 => --0x12d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(47).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(301)(31 downto 16);                         --DRP Write Data
        when 302 => --0x12e
          localRdData( 0)            <=  reg_data(302)( 0);                                   --
          localRdData( 1)            <=  reg_data(302)( 1);                                   --
          localRdData( 2)            <=  reg_data(302)( 2);                                   --
          localRdData( 3)            <=  reg_data(302)( 3);                                   --
        when 303 => --0x12f
          localRdData( 0)            <=  reg_data(303)( 0);                                   --
          localRdData( 1)            <=  reg_data(303)( 1);                                   --
          localRdData( 2)            <=  reg_data(303)( 2);                                   --
          localRdData( 3)            <=  reg_data(303)( 3);                                   --
        when 304 => --0x130
          localRdData( 0)            <=  Mon.MGT.MGT(48).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(48).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(48).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(48).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(48).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(48).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(48).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(48).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_rx_error_out;      --
        when 306 => --0x132
          localRdData( 9 downto  0)  <=  reg_data(306)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(306)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(48).DRP.rd_rdy;                          --DRP Enable
        when 307 => --0x133
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(48).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(307)(31 downto 16);                         --DRP Write Data
        when 308 => --0x134
          localRdData( 0)            <=  reg_data(308)( 0);                                   --
          localRdData( 1)            <=  reg_data(308)( 1);                                   --
          localRdData( 2)            <=  reg_data(308)( 2);                                   --
          localRdData( 3)            <=  reg_data(308)( 3);                                   --
        when 309 => --0x135
          localRdData( 0)            <=  reg_data(309)( 0);                                   --
          localRdData( 1)            <=  reg_data(309)( 1);                                   --
          localRdData( 2)            <=  reg_data(309)( 2);                                   --
          localRdData( 3)            <=  reg_data(309)( 3);                                   --
        when 310 => --0x136
          localRdData( 0)            <=  Mon.MGT.MGT(49).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(49).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(49).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(49).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(49).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(49).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(49).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(49).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_rx_error_out;      --
        when 312 => --0x138
          localRdData( 9 downto  0)  <=  reg_data(312)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(312)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(49).DRP.rd_rdy;                          --DRP Enable
        when 313 => --0x139
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(49).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(313)(31 downto 16);                         --DRP Write Data
        when 314 => --0x13a
          localRdData( 0)            <=  reg_data(314)( 0);                                   --
          localRdData( 1)            <=  reg_data(314)( 1);                                   --
          localRdData( 2)            <=  reg_data(314)( 2);                                   --
          localRdData( 3)            <=  reg_data(314)( 3);                                   --
        when 315 => --0x13b
          localRdData( 0)            <=  reg_data(315)( 0);                                   --
          localRdData( 1)            <=  reg_data(315)( 1);                                   --
          localRdData( 2)            <=  reg_data(315)( 2);                                   --
          localRdData( 3)            <=  reg_data(315)( 3);                                   --
        when 316 => --0x13c
          localRdData( 0)            <=  Mon.MGT.MGT(50).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(50).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(50).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(50).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(50).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(50).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(50).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(50).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_rx_error_out;      --
        when 318 => --0x13e
          localRdData( 9 downto  0)  <=  reg_data(318)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(318)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(50).DRP.rd_rdy;                          --DRP Enable
        when 319 => --0x13f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(50).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(319)(31 downto 16);                         --DRP Write Data
        when 320 => --0x140
          localRdData( 0)            <=  reg_data(320)( 0);                                   --
          localRdData( 1)            <=  reg_data(320)( 1);                                   --
          localRdData( 2)            <=  reg_data(320)( 2);                                   --
          localRdData( 3)            <=  reg_data(320)( 3);                                   --
        when 321 => --0x141
          localRdData( 0)            <=  reg_data(321)( 0);                                   --
          localRdData( 1)            <=  reg_data(321)( 1);                                   --
          localRdData( 2)            <=  reg_data(321)( 2);                                   --
          localRdData( 3)            <=  reg_data(321)( 3);                                   --
        when 322 => --0x142
          localRdData( 0)            <=  Mon.MGT.MGT(51).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(51).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(51).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(51).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(51).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(51).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(51).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(51).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_rx_error_out;      --
        when 324 => --0x144
          localRdData( 9 downto  0)  <=  reg_data(324)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(324)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(51).DRP.rd_rdy;                          --DRP Enable
        when 325 => --0x145
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(51).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(325)(31 downto 16);                         --DRP Write Data
        when 326 => --0x146
          localRdData( 0)            <=  reg_data(326)( 0);                                   --
          localRdData( 1)            <=  reg_data(326)( 1);                                   --
          localRdData( 2)            <=  reg_data(326)( 2);                                   --
          localRdData( 3)            <=  reg_data(326)( 3);                                   --
        when 327 => --0x147
          localRdData( 0)            <=  reg_data(327)( 0);                                   --
          localRdData( 1)            <=  reg_data(327)( 1);                                   --
          localRdData( 2)            <=  reg_data(327)( 2);                                   --
          localRdData( 3)            <=  reg_data(327)( 3);                                   --
        when 328 => --0x148
          localRdData( 0)            <=  Mon.MGT.MGT(52).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(52).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(52).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(52).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(52).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(52).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(52).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(52).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_rx_error_out;      --
        when 330 => --0x14a
          localRdData( 9 downto  0)  <=  reg_data(330)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(330)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(52).DRP.rd_rdy;                          --DRP Enable
        when 331 => --0x14b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(52).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(331)(31 downto 16);                         --DRP Write Data
        when 332 => --0x14c
          localRdData( 0)            <=  reg_data(332)( 0);                                   --
          localRdData( 1)            <=  reg_data(332)( 1);                                   --
          localRdData( 2)            <=  reg_data(332)( 2);                                   --
          localRdData( 3)            <=  reg_data(332)( 3);                                   --
        when 333 => --0x14d
          localRdData( 0)            <=  reg_data(333)( 0);                                   --
          localRdData( 1)            <=  reg_data(333)( 1);                                   --
          localRdData( 2)            <=  reg_data(333)( 2);                                   --
          localRdData( 3)            <=  reg_data(333)( 3);                                   --
        when 334 => --0x14e
          localRdData( 0)            <=  Mon.MGT.MGT(53).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(53).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(53).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(53).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(53).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(53).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(53).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(53).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_rx_error_out;      --
        when 336 => --0x150
          localRdData( 9 downto  0)  <=  reg_data(336)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(336)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(53).DRP.rd_rdy;                          --DRP Enable
        when 337 => --0x151
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(53).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(337)(31 downto 16);                         --DRP Write Data
        when 338 => --0x152
          localRdData( 0)            <=  reg_data(338)( 0);                                   --
          localRdData( 1)            <=  reg_data(338)( 1);                                   --
          localRdData( 2)            <=  reg_data(338)( 2);                                   --
          localRdData( 3)            <=  reg_data(338)( 3);                                   --
        when 339 => --0x153
          localRdData( 0)            <=  reg_data(339)( 0);                                   --
          localRdData( 1)            <=  reg_data(339)( 1);                                   --
          localRdData( 2)            <=  reg_data(339)( 2);                                   --
          localRdData( 3)            <=  reg_data(339)( 3);                                   --
        when 340 => --0x154
          localRdData( 0)            <=  Mon.MGT.MGT(54).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(54).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(54).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(54).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(54).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(54).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(54).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(54).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_rx_error_out;      --
        when 342 => --0x156
          localRdData( 9 downto  0)  <=  reg_data(342)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(342)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(54).DRP.rd_rdy;                          --DRP Enable
        when 343 => --0x157
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(54).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(343)(31 downto 16);                         --DRP Write Data
        when 344 => --0x158
          localRdData( 0)            <=  reg_data(344)( 0);                                   --
          localRdData( 1)            <=  reg_data(344)( 1);                                   --
          localRdData( 2)            <=  reg_data(344)( 2);                                   --
          localRdData( 3)            <=  reg_data(344)( 3);                                   --
        when 345 => --0x159
          localRdData( 0)            <=  reg_data(345)( 0);                                   --
          localRdData( 1)            <=  reg_data(345)( 1);                                   --
          localRdData( 2)            <=  reg_data(345)( 2);                                   --
          localRdData( 3)            <=  reg_data(345)( 3);                                   --
        when 346 => --0x15a
          localRdData( 0)            <=  Mon.MGT.MGT(55).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(55).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(55).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(55).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(55).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(55).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(55).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(55).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_rx_error_out;      --
        when 348 => --0x15c
          localRdData( 9 downto  0)  <=  reg_data(348)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(348)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(55).DRP.rd_rdy;                          --DRP Enable
        when 349 => --0x15d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(55).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(349)(31 downto 16);                         --DRP Write Data
        when 350 => --0x15e
          localRdData( 0)            <=  reg_data(350)( 0);                                   --
          localRdData( 1)            <=  reg_data(350)( 1);                                   --
          localRdData( 2)            <=  reg_data(350)( 2);                                   --
          localRdData( 3)            <=  reg_data(350)( 3);                                   --
        when 351 => --0x15f
          localRdData( 0)            <=  reg_data(351)( 0);                                   --
          localRdData( 1)            <=  reg_data(351)( 1);                                   --
          localRdData( 2)            <=  reg_data(351)( 2);                                   --
          localRdData( 3)            <=  reg_data(351)( 3);                                   --
        when 352 => --0x160
          localRdData( 0)            <=  Mon.MGT.MGT(56).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(56).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(56).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(56).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(56).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(56).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(56).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(56).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_rx_error_out;      --
        when 354 => --0x162
          localRdData( 9 downto  0)  <=  reg_data(354)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(354)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(56).DRP.rd_rdy;                          --DRP Enable
        when 355 => --0x163
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(56).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(355)(31 downto 16);                         --DRP Write Data
        when 356 => --0x164
          localRdData( 0)            <=  reg_data(356)( 0);                                   --
          localRdData( 1)            <=  reg_data(356)( 1);                                   --
          localRdData( 2)            <=  reg_data(356)( 2);                                   --
          localRdData( 3)            <=  reg_data(356)( 3);                                   --
        when 357 => --0x165
          localRdData( 0)            <=  reg_data(357)( 0);                                   --
          localRdData( 1)            <=  reg_data(357)( 1);                                   --
          localRdData( 2)            <=  reg_data(357)( 2);                                   --
          localRdData( 3)            <=  reg_data(357)( 3);                                   --
        when 358 => --0x166
          localRdData( 0)            <=  Mon.MGT.MGT(57).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(57).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(57).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(57).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(57).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(57).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(57).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(57).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_rx_error_out;      --
        when 360 => --0x168
          localRdData( 9 downto  0)  <=  reg_data(360)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(360)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(57).DRP.rd_rdy;                          --DRP Enable
        when 361 => --0x169
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(57).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(361)(31 downto 16);                         --DRP Write Data
        when 362 => --0x16a
          localRdData( 0)            <=  reg_data(362)( 0);                                   --
          localRdData( 1)            <=  reg_data(362)( 1);                                   --
          localRdData( 2)            <=  reg_data(362)( 2);                                   --
          localRdData( 3)            <=  reg_data(362)( 3);                                   --
        when 363 => --0x16b
          localRdData( 0)            <=  reg_data(363)( 0);                                   --
          localRdData( 1)            <=  reg_data(363)( 1);                                   --
          localRdData( 2)            <=  reg_data(363)( 2);                                   --
          localRdData( 3)            <=  reg_data(363)( 3);                                   --
        when 364 => --0x16c
          localRdData( 0)            <=  Mon.MGT.MGT(58).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(58).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(58).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(58).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(58).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(58).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(58).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(58).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_rx_error_out;      --
        when 366 => --0x16e
          localRdData( 9 downto  0)  <=  reg_data(366)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(366)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(58).DRP.rd_rdy;                          --DRP Enable
        when 367 => --0x16f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(58).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(367)(31 downto 16);                         --DRP Write Data
        when 368 => --0x170
          localRdData( 0)            <=  reg_data(368)( 0);                                   --
          localRdData( 1)            <=  reg_data(368)( 1);                                   --
          localRdData( 2)            <=  reg_data(368)( 2);                                   --
          localRdData( 3)            <=  reg_data(368)( 3);                                   --
        when 369 => --0x171
          localRdData( 0)            <=  reg_data(369)( 0);                                   --
          localRdData( 1)            <=  reg_data(369)( 1);                                   --
          localRdData( 2)            <=  reg_data(369)( 2);                                   --
          localRdData( 3)            <=  reg_data(369)( 3);                                   --
        when 370 => --0x172
          localRdData( 0)            <=  Mon.MGT.MGT(59).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(59).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(59).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(59).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(59).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(59).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(59).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(59).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_rx_error_out;      --
        when 372 => --0x174
          localRdData( 9 downto  0)  <=  reg_data(372)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(372)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(59).DRP.rd_rdy;                          --DRP Enable
        when 373 => --0x175
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(59).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(373)(31 downto 16);                         --DRP Write Data
        when 374 => --0x176
          localRdData( 0)            <=  reg_data(374)( 0);                                   --
          localRdData( 1)            <=  reg_data(374)( 1);                                   --
          localRdData( 2)            <=  reg_data(374)( 2);                                   --
          localRdData( 3)            <=  reg_data(374)( 3);                                   --
        when 375 => --0x177
          localRdData( 0)            <=  reg_data(375)( 0);                                   --
          localRdData( 1)            <=  reg_data(375)( 1);                                   --
          localRdData( 2)            <=  reg_data(375)( 2);                                   --
          localRdData( 3)            <=  reg_data(375)( 3);                                   --
        when 376 => --0x178
          localRdData( 0)            <=  Mon.MGT.MGT(60).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(60).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(60).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(60).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(60).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(60).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(60).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(60).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_rx_error_out;      --
        when 378 => --0x17a
          localRdData( 9 downto  0)  <=  reg_data(378)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(378)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(60).DRP.rd_rdy;                          --DRP Enable
        when 379 => --0x17b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(60).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(379)(31 downto 16);                         --DRP Write Data
        when 380 => --0x17c
          localRdData( 0)            <=  reg_data(380)( 0);                                   --
          localRdData( 1)            <=  reg_data(380)( 1);                                   --
          localRdData( 2)            <=  reg_data(380)( 2);                                   --
          localRdData( 3)            <=  reg_data(380)( 3);                                   --
        when 381 => --0x17d
          localRdData( 0)            <=  reg_data(381)( 0);                                   --
          localRdData( 1)            <=  reg_data(381)( 1);                                   --
          localRdData( 2)            <=  reg_data(381)( 2);                                   --
          localRdData( 3)            <=  reg_data(381)( 3);                                   --
        when 382 => --0x17e
          localRdData( 0)            <=  Mon.MGT.MGT(61).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(61).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(61).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(61).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(61).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(61).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(61).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(61).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_rx_error_out;      --
        when 384 => --0x180
          localRdData( 9 downto  0)  <=  reg_data(384)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(384)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(61).DRP.rd_rdy;                          --DRP Enable
        when 385 => --0x181
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(61).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(385)(31 downto 16);                         --DRP Write Data
        when 386 => --0x182
          localRdData( 0)            <=  reg_data(386)( 0);                                   --
          localRdData( 1)            <=  reg_data(386)( 1);                                   --
          localRdData( 2)            <=  reg_data(386)( 2);                                   --
          localRdData( 3)            <=  reg_data(386)( 3);                                   --
        when 387 => --0x183
          localRdData( 0)            <=  reg_data(387)( 0);                                   --
          localRdData( 1)            <=  reg_data(387)( 1);                                   --
          localRdData( 2)            <=  reg_data(387)( 2);                                   --
          localRdData( 3)            <=  reg_data(387)( 3);                                   --
        when 388 => --0x184
          localRdData( 0)            <=  Mon.MGT.MGT(62).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(62).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(62).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(62).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(62).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(62).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(62).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(62).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_rx_error_out;      --
        when 390 => --0x186
          localRdData( 9 downto  0)  <=  reg_data(390)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(390)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(62).DRP.rd_rdy;                          --DRP Enable
        when 391 => --0x187
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(62).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(391)(31 downto 16);                         --DRP Write Data
        when 392 => --0x188
          localRdData( 0)            <=  reg_data(392)( 0);                                   --
          localRdData( 1)            <=  reg_data(392)( 1);                                   --
          localRdData( 2)            <=  reg_data(392)( 2);                                   --
          localRdData( 3)            <=  reg_data(392)( 3);                                   --
        when 393 => --0x189
          localRdData( 0)            <=  reg_data(393)( 0);                                   --
          localRdData( 1)            <=  reg_data(393)( 1);                                   --
          localRdData( 2)            <=  reg_data(393)( 2);                                   --
          localRdData( 3)            <=  reg_data(393)( 3);                                   --
        when 394 => --0x18a
          localRdData( 0)            <=  Mon.MGT.MGT(63).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(63).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(63).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(63).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(63).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(63).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(63).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(63).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_rx_error_out;      --
        when 396 => --0x18c
          localRdData( 9 downto  0)  <=  reg_data(396)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(396)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(63).DRP.rd_rdy;                          --DRP Enable
        when 397 => --0x18d
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(63).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(397)(31 downto 16);                         --DRP Write Data
        when 398 => --0x18e
          localRdData( 0)            <=  reg_data(398)( 0);                                   --
          localRdData( 1)            <=  reg_data(398)( 1);                                   --
          localRdData( 2)            <=  reg_data(398)( 2);                                   --
          localRdData( 3)            <=  reg_data(398)( 3);                                   --
        when 399 => --0x18f
          localRdData( 0)            <=  reg_data(399)( 0);                                   --
          localRdData( 1)            <=  reg_data(399)( 1);                                   --
          localRdData( 2)            <=  reg_data(399)( 2);                                   --
          localRdData( 3)            <=  reg_data(399)( 3);                                   --
        when 400 => --0x190
          localRdData( 0)            <=  Mon.MGT.MGT(64).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(64).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(64).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(64).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(64).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(64).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(64).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(64).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_rx_error_out;      --
        when 402 => --0x192
          localRdData( 9 downto  0)  <=  reg_data(402)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(402)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(64).DRP.rd_rdy;                          --DRP Enable
        when 403 => --0x193
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(64).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(403)(31 downto 16);                         --DRP Write Data
        when 404 => --0x194
          localRdData( 0)            <=  reg_data(404)( 0);                                   --
          localRdData( 1)            <=  reg_data(404)( 1);                                   --
          localRdData( 2)            <=  reg_data(404)( 2);                                   --
          localRdData( 3)            <=  reg_data(404)( 3);                                   --
        when 405 => --0x195
          localRdData( 0)            <=  reg_data(405)( 0);                                   --
          localRdData( 1)            <=  reg_data(405)( 1);                                   --
          localRdData( 2)            <=  reg_data(405)( 2);                                   --
          localRdData( 3)            <=  reg_data(405)( 3);                                   --
        when 406 => --0x196
          localRdData( 0)            <=  Mon.MGT.MGT(65).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(65).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(65).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(65).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(65).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(65).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(65).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(65).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_rx_error_out;      --
        when 408 => --0x198
          localRdData( 9 downto  0)  <=  reg_data(408)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(408)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(65).DRP.rd_rdy;                          --DRP Enable
        when 409 => --0x199
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(65).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(409)(31 downto 16);                         --DRP Write Data
        when 410 => --0x19a
          localRdData( 0)            <=  reg_data(410)( 0);                                   --
          localRdData( 1)            <=  reg_data(410)( 1);                                   --
          localRdData( 2)            <=  reg_data(410)( 2);                                   --
          localRdData( 3)            <=  reg_data(410)( 3);                                   --
        when 411 => --0x19b
          localRdData( 0)            <=  reg_data(411)( 0);                                   --
          localRdData( 1)            <=  reg_data(411)( 1);                                   --
          localRdData( 2)            <=  reg_data(411)( 2);                                   --
          localRdData( 3)            <=  reg_data(411)( 3);                                   --
        when 412 => --0x19c
          localRdData( 0)            <=  Mon.MGT.MGT(66).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(66).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(66).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(66).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(66).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(66).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(66).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(66).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_rx_error_out;      --
        when 414 => --0x19e
          localRdData( 9 downto  0)  <=  reg_data(414)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(414)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(66).DRP.rd_rdy;                          --DRP Enable
        when 415 => --0x19f
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(66).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(415)(31 downto 16);                         --DRP Write Data
        when 416 => --0x1a0
          localRdData( 0)            <=  reg_data(416)( 0);                                   --
          localRdData( 1)            <=  reg_data(416)( 1);                                   --
          localRdData( 2)            <=  reg_data(416)( 2);                                   --
          localRdData( 3)            <=  reg_data(416)( 3);                                   --
        when 417 => --0x1a1
          localRdData( 0)            <=  reg_data(417)( 0);                                   --
          localRdData( 1)            <=  reg_data(417)( 1);                                   --
          localRdData( 2)            <=  reg_data(417)( 2);                                   --
          localRdData( 3)            <=  reg_data(417)( 3);                                   --
        when 418 => --0x1a2
          localRdData( 0)            <=  Mon.MGT.MGT(67).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(67).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(67).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(67).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(67).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(67).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(67).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(67).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_rx_error_out;      --
        when 420 => --0x1a4
          localRdData( 9 downto  0)  <=  reg_data(420)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(420)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(67).DRP.rd_rdy;                          --DRP Enable
        when 421 => --0x1a5
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(67).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(421)(31 downto 16);                         --DRP Write Data
        when 422 => --0x1a6
          localRdData( 0)            <=  reg_data(422)( 0);                                   --
          localRdData( 1)            <=  reg_data(422)( 1);                                   --
          localRdData( 2)            <=  reg_data(422)( 2);                                   --
          localRdData( 3)            <=  reg_data(422)( 3);                                   --
        when 423 => --0x1a7
          localRdData( 0)            <=  reg_data(423)( 0);                                   --
          localRdData( 1)            <=  reg_data(423)( 1);                                   --
          localRdData( 2)            <=  reg_data(423)( 2);                                   --
          localRdData( 3)            <=  reg_data(423)( 3);                                   --
        when 424 => --0x1a8
          localRdData( 0)            <=  Mon.MGT.MGT(68).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(68).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(68).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(68).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(68).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(68).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(68).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(68).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_rx_error_out;      --
        when 426 => --0x1aa
          localRdData( 9 downto  0)  <=  reg_data(426)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(426)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(68).DRP.rd_rdy;                          --DRP Enable
        when 427 => --0x1ab
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(68).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(427)(31 downto 16);                         --DRP Write Data
        when 428 => --0x1ac
          localRdData( 0)            <=  reg_data(428)( 0);                                   --
          localRdData( 1)            <=  reg_data(428)( 1);                                   --
          localRdData( 2)            <=  reg_data(428)( 2);                                   --
          localRdData( 3)            <=  reg_data(428)( 3);                                   --
        when 429 => --0x1ad
          localRdData( 0)            <=  reg_data(429)( 0);                                   --
          localRdData( 1)            <=  reg_data(429)( 1);                                   --
          localRdData( 2)            <=  reg_data(429)( 2);                                   --
          localRdData( 3)            <=  reg_data(429)( 3);                                   --
        when 430 => --0x1ae
          localRdData( 0)            <=  Mon.MGT.MGT(69).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(69).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(69).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(69).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(69).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(69).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(69).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(69).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_rx_error_out;      --
        when 432 => --0x1b0
          localRdData( 9 downto  0)  <=  reg_data(432)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(432)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(69).DRP.rd_rdy;                          --DRP Enable
        when 433 => --0x1b1
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(69).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(433)(31 downto 16);                         --DRP Write Data
        when 434 => --0x1b2
          localRdData( 0)            <=  reg_data(434)( 0);                                   --
          localRdData( 1)            <=  reg_data(434)( 1);                                   --
          localRdData( 2)            <=  reg_data(434)( 2);                                   --
          localRdData( 3)            <=  reg_data(434)( 3);                                   --
        when 435 => --0x1b3
          localRdData( 0)            <=  reg_data(435)( 0);                                   --
          localRdData( 1)            <=  reg_data(435)( 1);                                   --
          localRdData( 2)            <=  reg_data(435)( 2);                                   --
          localRdData( 3)            <=  reg_data(435)( 3);                                   --
        when 436 => --0x1b4
          localRdData( 0)            <=  Mon.MGT.MGT(70).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(70).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(70).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(70).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(70).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(70).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(70).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(70).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_rx_error_out;      --
        when 438 => --0x1b6
          localRdData( 9 downto  0)  <=  reg_data(438)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(438)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(70).DRP.rd_rdy;                          --DRP Enable
        when 439 => --0x1b7
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(70).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(439)(31 downto 16);                         --DRP Write Data
        when 440 => --0x1b8
          localRdData( 0)            <=  reg_data(440)( 0);                                   --
          localRdData( 1)            <=  reg_data(440)( 1);                                   --
          localRdData( 2)            <=  reg_data(440)( 2);                                   --
          localRdData( 3)            <=  reg_data(440)( 3);                                   --
        when 441 => --0x1b9
          localRdData( 0)            <=  reg_data(441)( 0);                                   --
          localRdData( 1)            <=  reg_data(441)( 1);                                   --
          localRdData( 2)            <=  reg_data(441)( 2);                                   --
          localRdData( 3)            <=  reg_data(441)( 3);                                   --
        when 442 => --0x1ba
          localRdData( 0)            <=  Mon.MGT.MGT(71).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(71).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(71).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(71).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(71).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(71).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(71).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(71).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_rx_error_out;      --
        when 444 => --0x1bc
          localRdData( 9 downto  0)  <=  reg_data(444)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(444)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(71).DRP.rd_rdy;                          --DRP Enable
        when 445 => --0x1bd
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(71).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(445)(31 downto 16);                         --DRP Write Data
        when 446 => --0x1be
          localRdData( 0)            <=  reg_data(446)( 0);                                   --
          localRdData( 1)            <=  reg_data(446)( 1);                                   --
          localRdData( 2)            <=  reg_data(446)( 2);                                   --
          localRdData( 3)            <=  reg_data(446)( 3);                                   --
        when 447 => --0x1bf
          localRdData( 0)            <=  reg_data(447)( 0);                                   --
          localRdData( 1)            <=  reg_data(447)( 1);                                   --
          localRdData( 2)            <=  reg_data(447)( 2);                                   --
          localRdData( 3)            <=  reg_data(447)( 3);                                   --
        when 448 => --0x1c0
          localRdData( 0)            <=  Mon.MGT.MGT(72).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(72).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(72).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(72).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(72).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(72).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(72).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(72).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_rx_error_out;      --
        when 450 => --0x1c2
          localRdData( 9 downto  0)  <=  reg_data(450)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(450)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(72).DRP.rd_rdy;                          --DRP Enable
        when 451 => --0x1c3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(72).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(451)(31 downto 16);                         --DRP Write Data
        when 452 => --0x1c4
          localRdData( 0)            <=  reg_data(452)( 0);                                   --
          localRdData( 1)            <=  reg_data(452)( 1);                                   --
          localRdData( 2)            <=  reg_data(452)( 2);                                   --
          localRdData( 3)            <=  reg_data(452)( 3);                                   --
        when 453 => --0x1c5
          localRdData( 0)            <=  reg_data(453)( 0);                                   --
          localRdData( 1)            <=  reg_data(453)( 1);                                   --
          localRdData( 2)            <=  reg_data(453)( 2);                                   --
          localRdData( 3)            <=  reg_data(453)( 3);                                   --
        when 454 => --0x1c6
          localRdData( 0)            <=  Mon.MGT.MGT(73).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(73).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(73).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(73).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(73).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(73).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(73).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(73).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_rx_error_out;      --
        when 456 => --0x1c8
          localRdData( 9 downto  0)  <=  reg_data(456)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(456)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(73).DRP.rd_rdy;                          --DRP Enable
        when 457 => --0x1c9
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(73).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(457)(31 downto 16);                         --DRP Write Data
        when 458 => --0x1ca
          localRdData( 0)            <=  reg_data(458)( 0);                                   --
          localRdData( 1)            <=  reg_data(458)( 1);                                   --
          localRdData( 2)            <=  reg_data(458)( 2);                                   --
          localRdData( 3)            <=  reg_data(458)( 3);                                   --
        when 459 => --0x1cb
          localRdData( 0)            <=  reg_data(459)( 0);                                   --
          localRdData( 1)            <=  reg_data(459)( 1);                                   --
          localRdData( 2)            <=  reg_data(459)( 2);                                   --
          localRdData( 3)            <=  reg_data(459)( 3);                                   --
        when 460 => --0x1cc
          localRdData( 0)            <=  Mon.MGT.MGT(74).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(74).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(74).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(74).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(74).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(74).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(74).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(74).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_rx_error_out;      --
        when 462 => --0x1ce
          localRdData( 9 downto  0)  <=  reg_data(462)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(462)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(74).DRP.rd_rdy;                          --DRP Enable
        when 463 => --0x1cf
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(74).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(463)(31 downto 16);                         --DRP Write Data
        when 464 => --0x1d0
          localRdData( 0)            <=  reg_data(464)( 0);                                   --
          localRdData( 1)            <=  reg_data(464)( 1);                                   --
          localRdData( 2)            <=  reg_data(464)( 2);                                   --
          localRdData( 3)            <=  reg_data(464)( 3);                                   --
        when 465 => --0x1d1
          localRdData( 0)            <=  reg_data(465)( 0);                                   --
          localRdData( 1)            <=  reg_data(465)( 1);                                   --
          localRdData( 2)            <=  reg_data(465)( 2);                                   --
          localRdData( 3)            <=  reg_data(465)( 3);                                   --
        when 466 => --0x1d2
          localRdData( 0)            <=  Mon.MGT.MGT(75).STATUS.rxcdr_stable;                 --
          localRdData( 1)            <=  Mon.MGT.MGT(75).STATUS.powergood;                    --
          localRdData( 2)            <=  Mon.MGT.MGT(75).STATUS.txready;                      --
          localRdData( 3)            <=  Mon.MGT.MGT(75).STATUS.rxready;                      --
          localRdData( 4)            <=  Mon.MGT.MGT(75).STATUS.rx_pma_reset_done;            --
          localRdData( 5)            <=  Mon.MGT.MGT(75).STATUS.tx_pma_reset_done;            --
          localRdData( 6)            <=  Mon.MGT.MGT(75).STATUS.tx_reset_done;                --
          localRdData( 7)            <=  Mon.MGT.MGT(75).STATUS.rx_reset_done;                --
          localRdData( 8)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_tx_done_out;       --
          localRdData( 9)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_tx_error_out;      --
          localRdData(10)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_rx_done_out;       --
          localRdData(11)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_rx_error_out;      --
        when 468 => --0x1d4
          localRdData( 9 downto  0)  <=  reg_data(468)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(468)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(75).DRP.rd_rdy;                          --DRP Enable
        when 469 => --0x1d5
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(75).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(469)(31 downto 16);                         --DRP Write Data
        when 470 => --0x1d6
          localRdData( 0)            <=  reg_data(470)( 0);                                   --
          localRdData( 1)            <=  reg_data(470)( 1);                                   --
          localRdData( 2)            <=  reg_data(470)( 2);                                   --
          localRdData( 3)            <=  reg_data(470)( 3);                                   --
        when 471 => --0x1d7
          localRdData( 0)            <=  reg_data(471)( 0);                                   --
          localRdData( 1)            <=  reg_data(471)( 1);                                   --
          localRdData( 2)            <=  reg_data(471)( 2);                                   --
          localRdData( 3)            <=  reg_data(471)( 3);                                   --


          when others =>
            regRdAck <= '0';
            localRdData <= x"00000000";
        end case;
      end if;
    end if;
  end process reads;


  -------------------------------------------------------------------------------
  -- Record write decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  -- Register mapping to ctrl structures
  Ctrl.CLOCKING.RESET_MMCM                           <=  reg_data( 1)( 1);                
  Ctrl.MGT.MGT(0).DRP.wr_addr                        <=  reg_data(18)( 9 downto  0);      
  Ctrl.MGT.MGT(0).DRP.en                             <=  reg_data(18)(12);                
  Ctrl.MGT.MGT(0).DRP.wr_data                        <=  reg_data(19)(31 downto 16);      
  Ctrl.MGT.MGT(0).TX_RESETS.reset                    <=  reg_data(20)( 0);                
  Ctrl.MGT.MGT(0).TX_RESETS.reset_pll_and_datapath   <=  reg_data(20)( 1);                
  Ctrl.MGT.MGT(0).TX_RESETS.reset_datapath           <=  reg_data(20)( 2);                
  Ctrl.MGT.MGT(0).TX_RESETS.reset_bufbypass          <=  reg_data(20)( 3);                
  Ctrl.MGT.MGT(0).RX_RESETS.reset                    <=  reg_data(21)( 0);                
  Ctrl.MGT.MGT(0).RX_RESETS.reset_pll_and_datapath   <=  reg_data(21)( 1);                
  Ctrl.MGT.MGT(0).RX_RESETS.reset_datapath           <=  reg_data(21)( 2);                
  Ctrl.MGT.MGT(0).RX_RESETS.reset_bufbypass          <=  reg_data(21)( 3);                
  Ctrl.MGT.MGT(1).DRP.wr_addr                        <=  reg_data(24)( 9 downto  0);      
  Ctrl.MGT.MGT(1).DRP.en                             <=  reg_data(24)(12);                
  Ctrl.MGT.MGT(1).DRP.wr_data                        <=  reg_data(25)(31 downto 16);      
  Ctrl.MGT.MGT(1).TX_RESETS.reset                    <=  reg_data(26)( 0);                
  Ctrl.MGT.MGT(1).TX_RESETS.reset_pll_and_datapath   <=  reg_data(26)( 1);                
  Ctrl.MGT.MGT(1).TX_RESETS.reset_datapath           <=  reg_data(26)( 2);                
  Ctrl.MGT.MGT(1).TX_RESETS.reset_bufbypass          <=  reg_data(26)( 3);                
  Ctrl.MGT.MGT(1).RX_RESETS.reset                    <=  reg_data(27)( 0);                
  Ctrl.MGT.MGT(1).RX_RESETS.reset_pll_and_datapath   <=  reg_data(27)( 1);                
  Ctrl.MGT.MGT(1).RX_RESETS.reset_datapath           <=  reg_data(27)( 2);                
  Ctrl.MGT.MGT(1).RX_RESETS.reset_bufbypass          <=  reg_data(27)( 3);                
  Ctrl.MGT.MGT(2).DRP.wr_addr                        <=  reg_data(30)( 9 downto  0);      
  Ctrl.MGT.MGT(2).DRP.en                             <=  reg_data(30)(12);                
  Ctrl.MGT.MGT(2).DRP.wr_data                        <=  reg_data(31)(31 downto 16);      
  Ctrl.MGT.MGT(2).TX_RESETS.reset                    <=  reg_data(32)( 0);                
  Ctrl.MGT.MGT(2).TX_RESETS.reset_pll_and_datapath   <=  reg_data(32)( 1);                
  Ctrl.MGT.MGT(2).TX_RESETS.reset_datapath           <=  reg_data(32)( 2);                
  Ctrl.MGT.MGT(2).TX_RESETS.reset_bufbypass          <=  reg_data(32)( 3);                
  Ctrl.MGT.MGT(2).RX_RESETS.reset                    <=  reg_data(33)( 0);                
  Ctrl.MGT.MGT(2).RX_RESETS.reset_pll_and_datapath   <=  reg_data(33)( 1);                
  Ctrl.MGT.MGT(2).RX_RESETS.reset_datapath           <=  reg_data(33)( 2);                
  Ctrl.MGT.MGT(2).RX_RESETS.reset_bufbypass          <=  reg_data(33)( 3);                
  Ctrl.MGT.MGT(3).DRP.wr_addr                        <=  reg_data(36)( 9 downto  0);      
  Ctrl.MGT.MGT(3).DRP.en                             <=  reg_data(36)(12);                
  Ctrl.MGT.MGT(3).DRP.wr_data                        <=  reg_data(37)(31 downto 16);      
  Ctrl.MGT.MGT(3).TX_RESETS.reset                    <=  reg_data(38)( 0);                
  Ctrl.MGT.MGT(3).TX_RESETS.reset_pll_and_datapath   <=  reg_data(38)( 1);                
  Ctrl.MGT.MGT(3).TX_RESETS.reset_datapath           <=  reg_data(38)( 2);                
  Ctrl.MGT.MGT(3).TX_RESETS.reset_bufbypass          <=  reg_data(38)( 3);                
  Ctrl.MGT.MGT(3).RX_RESETS.reset                    <=  reg_data(39)( 0);                
  Ctrl.MGT.MGT(3).RX_RESETS.reset_pll_and_datapath   <=  reg_data(39)( 1);                
  Ctrl.MGT.MGT(3).RX_RESETS.reset_datapath           <=  reg_data(39)( 2);                
  Ctrl.MGT.MGT(3).RX_RESETS.reset_bufbypass          <=  reg_data(39)( 3);                
  Ctrl.MGT.MGT(4).DRP.wr_addr                        <=  reg_data(42)( 9 downto  0);      
  Ctrl.MGT.MGT(4).DRP.en                             <=  reg_data(42)(12);                
  Ctrl.MGT.MGT(4).DRP.wr_data                        <=  reg_data(43)(31 downto 16);      
  Ctrl.MGT.MGT(4).TX_RESETS.reset                    <=  reg_data(44)( 0);                
  Ctrl.MGT.MGT(4).TX_RESETS.reset_pll_and_datapath   <=  reg_data(44)( 1);                
  Ctrl.MGT.MGT(4).TX_RESETS.reset_datapath           <=  reg_data(44)( 2);                
  Ctrl.MGT.MGT(4).TX_RESETS.reset_bufbypass          <=  reg_data(44)( 3);                
  Ctrl.MGT.MGT(4).RX_RESETS.reset                    <=  reg_data(45)( 0);                
  Ctrl.MGT.MGT(4).RX_RESETS.reset_pll_and_datapath   <=  reg_data(45)( 1);                
  Ctrl.MGT.MGT(4).RX_RESETS.reset_datapath           <=  reg_data(45)( 2);                
  Ctrl.MGT.MGT(4).RX_RESETS.reset_bufbypass          <=  reg_data(45)( 3);                
  Ctrl.MGT.MGT(5).DRP.wr_addr                        <=  reg_data(48)( 9 downto  0);      
  Ctrl.MGT.MGT(5).DRP.en                             <=  reg_data(48)(12);                
  Ctrl.MGT.MGT(5).DRP.wr_data                        <=  reg_data(49)(31 downto 16);      
  Ctrl.MGT.MGT(5).TX_RESETS.reset                    <=  reg_data(50)( 0);                
  Ctrl.MGT.MGT(5).TX_RESETS.reset_pll_and_datapath   <=  reg_data(50)( 1);                
  Ctrl.MGT.MGT(5).TX_RESETS.reset_datapath           <=  reg_data(50)( 2);                
  Ctrl.MGT.MGT(5).TX_RESETS.reset_bufbypass          <=  reg_data(50)( 3);                
  Ctrl.MGT.MGT(5).RX_RESETS.reset                    <=  reg_data(51)( 0);                
  Ctrl.MGT.MGT(5).RX_RESETS.reset_pll_and_datapath   <=  reg_data(51)( 1);                
  Ctrl.MGT.MGT(5).RX_RESETS.reset_datapath           <=  reg_data(51)( 2);                
  Ctrl.MGT.MGT(5).RX_RESETS.reset_bufbypass          <=  reg_data(51)( 3);                
  Ctrl.MGT.MGT(6).DRP.wr_addr                        <=  reg_data(54)( 9 downto  0);      
  Ctrl.MGT.MGT(6).DRP.en                             <=  reg_data(54)(12);                
  Ctrl.MGT.MGT(6).DRP.wr_data                        <=  reg_data(55)(31 downto 16);      
  Ctrl.MGT.MGT(6).TX_RESETS.reset                    <=  reg_data(56)( 0);                
  Ctrl.MGT.MGT(6).TX_RESETS.reset_pll_and_datapath   <=  reg_data(56)( 1);                
  Ctrl.MGT.MGT(6).TX_RESETS.reset_datapath           <=  reg_data(56)( 2);                
  Ctrl.MGT.MGT(6).TX_RESETS.reset_bufbypass          <=  reg_data(56)( 3);                
  Ctrl.MGT.MGT(6).RX_RESETS.reset                    <=  reg_data(57)( 0);                
  Ctrl.MGT.MGT(6).RX_RESETS.reset_pll_and_datapath   <=  reg_data(57)( 1);                
  Ctrl.MGT.MGT(6).RX_RESETS.reset_datapath           <=  reg_data(57)( 2);                
  Ctrl.MGT.MGT(6).RX_RESETS.reset_bufbypass          <=  reg_data(57)( 3);                
  Ctrl.MGT.MGT(7).DRP.wr_addr                        <=  reg_data(60)( 9 downto  0);      
  Ctrl.MGT.MGT(7).DRP.en                             <=  reg_data(60)(12);                
  Ctrl.MGT.MGT(7).DRP.wr_data                        <=  reg_data(61)(31 downto 16);      
  Ctrl.MGT.MGT(7).TX_RESETS.reset                    <=  reg_data(62)( 0);                
  Ctrl.MGT.MGT(7).TX_RESETS.reset_pll_and_datapath   <=  reg_data(62)( 1);                
  Ctrl.MGT.MGT(7).TX_RESETS.reset_datapath           <=  reg_data(62)( 2);                
  Ctrl.MGT.MGT(7).TX_RESETS.reset_bufbypass          <=  reg_data(62)( 3);                
  Ctrl.MGT.MGT(7).RX_RESETS.reset                    <=  reg_data(63)( 0);                
  Ctrl.MGT.MGT(7).RX_RESETS.reset_pll_and_datapath   <=  reg_data(63)( 1);                
  Ctrl.MGT.MGT(7).RX_RESETS.reset_datapath           <=  reg_data(63)( 2);                
  Ctrl.MGT.MGT(7).RX_RESETS.reset_bufbypass          <=  reg_data(63)( 3);                
  Ctrl.MGT.MGT(8).DRP.wr_addr                        <=  reg_data(66)( 9 downto  0);      
  Ctrl.MGT.MGT(8).DRP.en                             <=  reg_data(66)(12);                
  Ctrl.MGT.MGT(8).DRP.wr_data                        <=  reg_data(67)(31 downto 16);      
  Ctrl.MGT.MGT(8).TX_RESETS.reset                    <=  reg_data(68)( 0);                
  Ctrl.MGT.MGT(8).TX_RESETS.reset_pll_and_datapath   <=  reg_data(68)( 1);                
  Ctrl.MGT.MGT(8).TX_RESETS.reset_datapath           <=  reg_data(68)( 2);                
  Ctrl.MGT.MGT(8).TX_RESETS.reset_bufbypass          <=  reg_data(68)( 3);                
  Ctrl.MGT.MGT(8).RX_RESETS.reset                    <=  reg_data(69)( 0);                
  Ctrl.MGT.MGT(8).RX_RESETS.reset_pll_and_datapath   <=  reg_data(69)( 1);                
  Ctrl.MGT.MGT(8).RX_RESETS.reset_datapath           <=  reg_data(69)( 2);                
  Ctrl.MGT.MGT(8).RX_RESETS.reset_bufbypass          <=  reg_data(69)( 3);                
  Ctrl.MGT.MGT(9).DRP.wr_addr                        <=  reg_data(72)( 9 downto  0);      
  Ctrl.MGT.MGT(9).DRP.en                             <=  reg_data(72)(12);                
  Ctrl.MGT.MGT(9).DRP.wr_data                        <=  reg_data(73)(31 downto 16);      
  Ctrl.MGT.MGT(9).TX_RESETS.reset                    <=  reg_data(74)( 0);                
  Ctrl.MGT.MGT(9).TX_RESETS.reset_pll_and_datapath   <=  reg_data(74)( 1);                
  Ctrl.MGT.MGT(9).TX_RESETS.reset_datapath           <=  reg_data(74)( 2);                
  Ctrl.MGT.MGT(9).TX_RESETS.reset_bufbypass          <=  reg_data(74)( 3);                
  Ctrl.MGT.MGT(9).RX_RESETS.reset                    <=  reg_data(75)( 0);                
  Ctrl.MGT.MGT(9).RX_RESETS.reset_pll_and_datapath   <=  reg_data(75)( 1);                
  Ctrl.MGT.MGT(9).RX_RESETS.reset_datapath           <=  reg_data(75)( 2);                
  Ctrl.MGT.MGT(9).RX_RESETS.reset_bufbypass          <=  reg_data(75)( 3);                
  Ctrl.MGT.MGT(10).DRP.wr_addr                       <=  reg_data(78)( 9 downto  0);      
  Ctrl.MGT.MGT(10).DRP.en                            <=  reg_data(78)(12);                
  Ctrl.MGT.MGT(10).DRP.wr_data                       <=  reg_data(79)(31 downto 16);      
  Ctrl.MGT.MGT(10).TX_RESETS.reset                   <=  reg_data(80)( 0);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_pll_and_datapath  <=  reg_data(80)( 1);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_datapath          <=  reg_data(80)( 2);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_bufbypass         <=  reg_data(80)( 3);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset                   <=  reg_data(81)( 0);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_pll_and_datapath  <=  reg_data(81)( 1);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_datapath          <=  reg_data(81)( 2);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_bufbypass         <=  reg_data(81)( 3);                
  Ctrl.MGT.MGT(11).DRP.wr_addr                       <=  reg_data(84)( 9 downto  0);      
  Ctrl.MGT.MGT(11).DRP.en                            <=  reg_data(84)(12);                
  Ctrl.MGT.MGT(11).DRP.wr_data                       <=  reg_data(85)(31 downto 16);      
  Ctrl.MGT.MGT(11).TX_RESETS.reset                   <=  reg_data(86)( 0);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_pll_and_datapath  <=  reg_data(86)( 1);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_datapath          <=  reg_data(86)( 2);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_bufbypass         <=  reg_data(86)( 3);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset                   <=  reg_data(87)( 0);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_pll_and_datapath  <=  reg_data(87)( 1);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_datapath          <=  reg_data(87)( 2);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_bufbypass         <=  reg_data(87)( 3);                
  Ctrl.MGT.MGT(12).DRP.wr_addr                       <=  reg_data(90)( 9 downto  0);      
  Ctrl.MGT.MGT(12).DRP.en                            <=  reg_data(90)(12);                
  Ctrl.MGT.MGT(12).DRP.wr_data                       <=  reg_data(91)(31 downto 16);      
  Ctrl.MGT.MGT(12).TX_RESETS.reset                   <=  reg_data(92)( 0);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_pll_and_datapath  <=  reg_data(92)( 1);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_datapath          <=  reg_data(92)( 2);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_bufbypass         <=  reg_data(92)( 3);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset                   <=  reg_data(93)( 0);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_pll_and_datapath  <=  reg_data(93)( 1);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_datapath          <=  reg_data(93)( 2);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_bufbypass         <=  reg_data(93)( 3);                
  Ctrl.MGT.MGT(13).DRP.wr_addr                       <=  reg_data(96)( 9 downto  0);      
  Ctrl.MGT.MGT(13).DRP.en                            <=  reg_data(96)(12);                
  Ctrl.MGT.MGT(13).DRP.wr_data                       <=  reg_data(97)(31 downto 16);      
  Ctrl.MGT.MGT(13).TX_RESETS.reset                   <=  reg_data(98)( 0);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_pll_and_datapath  <=  reg_data(98)( 1);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_datapath          <=  reg_data(98)( 2);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_bufbypass         <=  reg_data(98)( 3);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset                   <=  reg_data(99)( 0);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_pll_and_datapath  <=  reg_data(99)( 1);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_datapath          <=  reg_data(99)( 2);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_bufbypass         <=  reg_data(99)( 3);                
  Ctrl.MGT.MGT(14).DRP.wr_addr                       <=  reg_data(102)( 9 downto  0);     
  Ctrl.MGT.MGT(14).DRP.en                            <=  reg_data(102)(12);               
  Ctrl.MGT.MGT(14).DRP.wr_data                       <=  reg_data(103)(31 downto 16);     
  Ctrl.MGT.MGT(14).TX_RESETS.reset                   <=  reg_data(104)( 0);               
  Ctrl.MGT.MGT(14).TX_RESETS.reset_pll_and_datapath  <=  reg_data(104)( 1);               
  Ctrl.MGT.MGT(14).TX_RESETS.reset_datapath          <=  reg_data(104)( 2);               
  Ctrl.MGT.MGT(14).TX_RESETS.reset_bufbypass         <=  reg_data(104)( 3);               
  Ctrl.MGT.MGT(14).RX_RESETS.reset                   <=  reg_data(105)( 0);               
  Ctrl.MGT.MGT(14).RX_RESETS.reset_pll_and_datapath  <=  reg_data(105)( 1);               
  Ctrl.MGT.MGT(14).RX_RESETS.reset_datapath          <=  reg_data(105)( 2);               
  Ctrl.MGT.MGT(14).RX_RESETS.reset_bufbypass         <=  reg_data(105)( 3);               
  Ctrl.MGT.MGT(15).DRP.wr_addr                       <=  reg_data(108)( 9 downto  0);     
  Ctrl.MGT.MGT(15).DRP.en                            <=  reg_data(108)(12);               
  Ctrl.MGT.MGT(15).DRP.wr_data                       <=  reg_data(109)(31 downto 16);     
  Ctrl.MGT.MGT(15).TX_RESETS.reset                   <=  reg_data(110)( 0);               
  Ctrl.MGT.MGT(15).TX_RESETS.reset_pll_and_datapath  <=  reg_data(110)( 1);               
  Ctrl.MGT.MGT(15).TX_RESETS.reset_datapath          <=  reg_data(110)( 2);               
  Ctrl.MGT.MGT(15).TX_RESETS.reset_bufbypass         <=  reg_data(110)( 3);               
  Ctrl.MGT.MGT(15).RX_RESETS.reset                   <=  reg_data(111)( 0);               
  Ctrl.MGT.MGT(15).RX_RESETS.reset_pll_and_datapath  <=  reg_data(111)( 1);               
  Ctrl.MGT.MGT(15).RX_RESETS.reset_datapath          <=  reg_data(111)( 2);               
  Ctrl.MGT.MGT(15).RX_RESETS.reset_bufbypass         <=  reg_data(111)( 3);               
  Ctrl.MGT.MGT(16).DRP.wr_addr                       <=  reg_data(114)( 9 downto  0);     
  Ctrl.MGT.MGT(16).DRP.en                            <=  reg_data(114)(12);               
  Ctrl.MGT.MGT(16).DRP.wr_data                       <=  reg_data(115)(31 downto 16);     
  Ctrl.MGT.MGT(16).TX_RESETS.reset                   <=  reg_data(116)( 0);               
  Ctrl.MGT.MGT(16).TX_RESETS.reset_pll_and_datapath  <=  reg_data(116)( 1);               
  Ctrl.MGT.MGT(16).TX_RESETS.reset_datapath          <=  reg_data(116)( 2);               
  Ctrl.MGT.MGT(16).TX_RESETS.reset_bufbypass         <=  reg_data(116)( 3);               
  Ctrl.MGT.MGT(16).RX_RESETS.reset                   <=  reg_data(117)( 0);               
  Ctrl.MGT.MGT(16).RX_RESETS.reset_pll_and_datapath  <=  reg_data(117)( 1);               
  Ctrl.MGT.MGT(16).RX_RESETS.reset_datapath          <=  reg_data(117)( 2);               
  Ctrl.MGT.MGT(16).RX_RESETS.reset_bufbypass         <=  reg_data(117)( 3);               
  Ctrl.MGT.MGT(17).DRP.wr_addr                       <=  reg_data(120)( 9 downto  0);     
  Ctrl.MGT.MGT(17).DRP.en                            <=  reg_data(120)(12);               
  Ctrl.MGT.MGT(17).DRP.wr_data                       <=  reg_data(121)(31 downto 16);     
  Ctrl.MGT.MGT(17).TX_RESETS.reset                   <=  reg_data(122)( 0);               
  Ctrl.MGT.MGT(17).TX_RESETS.reset_pll_and_datapath  <=  reg_data(122)( 1);               
  Ctrl.MGT.MGT(17).TX_RESETS.reset_datapath          <=  reg_data(122)( 2);               
  Ctrl.MGT.MGT(17).TX_RESETS.reset_bufbypass         <=  reg_data(122)( 3);               
  Ctrl.MGT.MGT(17).RX_RESETS.reset                   <=  reg_data(123)( 0);               
  Ctrl.MGT.MGT(17).RX_RESETS.reset_pll_and_datapath  <=  reg_data(123)( 1);               
  Ctrl.MGT.MGT(17).RX_RESETS.reset_datapath          <=  reg_data(123)( 2);               
  Ctrl.MGT.MGT(17).RX_RESETS.reset_bufbypass         <=  reg_data(123)( 3);               
  Ctrl.MGT.MGT(18).DRP.wr_addr                       <=  reg_data(126)( 9 downto  0);     
  Ctrl.MGT.MGT(18).DRP.en                            <=  reg_data(126)(12);               
  Ctrl.MGT.MGT(18).DRP.wr_data                       <=  reg_data(127)(31 downto 16);     
  Ctrl.MGT.MGT(18).TX_RESETS.reset                   <=  reg_data(128)( 0);               
  Ctrl.MGT.MGT(18).TX_RESETS.reset_pll_and_datapath  <=  reg_data(128)( 1);               
  Ctrl.MGT.MGT(18).TX_RESETS.reset_datapath          <=  reg_data(128)( 2);               
  Ctrl.MGT.MGT(18).TX_RESETS.reset_bufbypass         <=  reg_data(128)( 3);               
  Ctrl.MGT.MGT(18).RX_RESETS.reset                   <=  reg_data(129)( 0);               
  Ctrl.MGT.MGT(18).RX_RESETS.reset_pll_and_datapath  <=  reg_data(129)( 1);               
  Ctrl.MGT.MGT(18).RX_RESETS.reset_datapath          <=  reg_data(129)( 2);               
  Ctrl.MGT.MGT(18).RX_RESETS.reset_bufbypass         <=  reg_data(129)( 3);               
  Ctrl.MGT.MGT(19).DRP.wr_addr                       <=  reg_data(132)( 9 downto  0);     
  Ctrl.MGT.MGT(19).DRP.en                            <=  reg_data(132)(12);               
  Ctrl.MGT.MGT(19).DRP.wr_data                       <=  reg_data(133)(31 downto 16);     
  Ctrl.MGT.MGT(19).TX_RESETS.reset                   <=  reg_data(134)( 0);               
  Ctrl.MGT.MGT(19).TX_RESETS.reset_pll_and_datapath  <=  reg_data(134)( 1);               
  Ctrl.MGT.MGT(19).TX_RESETS.reset_datapath          <=  reg_data(134)( 2);               
  Ctrl.MGT.MGT(19).TX_RESETS.reset_bufbypass         <=  reg_data(134)( 3);               
  Ctrl.MGT.MGT(19).RX_RESETS.reset                   <=  reg_data(135)( 0);               
  Ctrl.MGT.MGT(19).RX_RESETS.reset_pll_and_datapath  <=  reg_data(135)( 1);               
  Ctrl.MGT.MGT(19).RX_RESETS.reset_datapath          <=  reg_data(135)( 2);               
  Ctrl.MGT.MGT(19).RX_RESETS.reset_bufbypass         <=  reg_data(135)( 3);               
  Ctrl.MGT.MGT(20).DRP.wr_addr                       <=  reg_data(138)( 9 downto  0);     
  Ctrl.MGT.MGT(20).DRP.en                            <=  reg_data(138)(12);               
  Ctrl.MGT.MGT(20).DRP.wr_data                       <=  reg_data(139)(31 downto 16);     
  Ctrl.MGT.MGT(20).TX_RESETS.reset                   <=  reg_data(140)( 0);               
  Ctrl.MGT.MGT(20).TX_RESETS.reset_pll_and_datapath  <=  reg_data(140)( 1);               
  Ctrl.MGT.MGT(20).TX_RESETS.reset_datapath          <=  reg_data(140)( 2);               
  Ctrl.MGT.MGT(20).TX_RESETS.reset_bufbypass         <=  reg_data(140)( 3);               
  Ctrl.MGT.MGT(20).RX_RESETS.reset                   <=  reg_data(141)( 0);               
  Ctrl.MGT.MGT(20).RX_RESETS.reset_pll_and_datapath  <=  reg_data(141)( 1);               
  Ctrl.MGT.MGT(20).RX_RESETS.reset_datapath          <=  reg_data(141)( 2);               
  Ctrl.MGT.MGT(20).RX_RESETS.reset_bufbypass         <=  reg_data(141)( 3);               
  Ctrl.MGT.MGT(21).DRP.wr_addr                       <=  reg_data(144)( 9 downto  0);     
  Ctrl.MGT.MGT(21).DRP.en                            <=  reg_data(144)(12);               
  Ctrl.MGT.MGT(21).DRP.wr_data                       <=  reg_data(145)(31 downto 16);     
  Ctrl.MGT.MGT(21).TX_RESETS.reset                   <=  reg_data(146)( 0);               
  Ctrl.MGT.MGT(21).TX_RESETS.reset_pll_and_datapath  <=  reg_data(146)( 1);               
  Ctrl.MGT.MGT(21).TX_RESETS.reset_datapath          <=  reg_data(146)( 2);               
  Ctrl.MGT.MGT(21).TX_RESETS.reset_bufbypass         <=  reg_data(146)( 3);               
  Ctrl.MGT.MGT(21).RX_RESETS.reset                   <=  reg_data(147)( 0);               
  Ctrl.MGT.MGT(21).RX_RESETS.reset_pll_and_datapath  <=  reg_data(147)( 1);               
  Ctrl.MGT.MGT(21).RX_RESETS.reset_datapath          <=  reg_data(147)( 2);               
  Ctrl.MGT.MGT(21).RX_RESETS.reset_bufbypass         <=  reg_data(147)( 3);               
  Ctrl.MGT.MGT(22).DRP.wr_addr                       <=  reg_data(150)( 9 downto  0);     
  Ctrl.MGT.MGT(22).DRP.en                            <=  reg_data(150)(12);               
  Ctrl.MGT.MGT(22).DRP.wr_data                       <=  reg_data(151)(31 downto 16);     
  Ctrl.MGT.MGT(22).TX_RESETS.reset                   <=  reg_data(152)( 0);               
  Ctrl.MGT.MGT(22).TX_RESETS.reset_pll_and_datapath  <=  reg_data(152)( 1);               
  Ctrl.MGT.MGT(22).TX_RESETS.reset_datapath          <=  reg_data(152)( 2);               
  Ctrl.MGT.MGT(22).TX_RESETS.reset_bufbypass         <=  reg_data(152)( 3);               
  Ctrl.MGT.MGT(22).RX_RESETS.reset                   <=  reg_data(153)( 0);               
  Ctrl.MGT.MGT(22).RX_RESETS.reset_pll_and_datapath  <=  reg_data(153)( 1);               
  Ctrl.MGT.MGT(22).RX_RESETS.reset_datapath          <=  reg_data(153)( 2);               
  Ctrl.MGT.MGT(22).RX_RESETS.reset_bufbypass         <=  reg_data(153)( 3);               
  Ctrl.MGT.MGT(23).DRP.wr_addr                       <=  reg_data(156)( 9 downto  0);     
  Ctrl.MGT.MGT(23).DRP.en                            <=  reg_data(156)(12);               
  Ctrl.MGT.MGT(23).DRP.wr_data                       <=  reg_data(157)(31 downto 16);     
  Ctrl.MGT.MGT(23).TX_RESETS.reset                   <=  reg_data(158)( 0);               
  Ctrl.MGT.MGT(23).TX_RESETS.reset_pll_and_datapath  <=  reg_data(158)( 1);               
  Ctrl.MGT.MGT(23).TX_RESETS.reset_datapath          <=  reg_data(158)( 2);               
  Ctrl.MGT.MGT(23).TX_RESETS.reset_bufbypass         <=  reg_data(158)( 3);               
  Ctrl.MGT.MGT(23).RX_RESETS.reset                   <=  reg_data(159)( 0);               
  Ctrl.MGT.MGT(23).RX_RESETS.reset_pll_and_datapath  <=  reg_data(159)( 1);               
  Ctrl.MGT.MGT(23).RX_RESETS.reset_datapath          <=  reg_data(159)( 2);               
  Ctrl.MGT.MGT(23).RX_RESETS.reset_bufbypass         <=  reg_data(159)( 3);               
  Ctrl.MGT.MGT(24).DRP.wr_addr                       <=  reg_data(162)( 9 downto  0);     
  Ctrl.MGT.MGT(24).DRP.en                            <=  reg_data(162)(12);               
  Ctrl.MGT.MGT(24).DRP.wr_data                       <=  reg_data(163)(31 downto 16);     
  Ctrl.MGT.MGT(24).TX_RESETS.reset                   <=  reg_data(164)( 0);               
  Ctrl.MGT.MGT(24).TX_RESETS.reset_pll_and_datapath  <=  reg_data(164)( 1);               
  Ctrl.MGT.MGT(24).TX_RESETS.reset_datapath          <=  reg_data(164)( 2);               
  Ctrl.MGT.MGT(24).TX_RESETS.reset_bufbypass         <=  reg_data(164)( 3);               
  Ctrl.MGT.MGT(24).RX_RESETS.reset                   <=  reg_data(165)( 0);               
  Ctrl.MGT.MGT(24).RX_RESETS.reset_pll_and_datapath  <=  reg_data(165)( 1);               
  Ctrl.MGT.MGT(24).RX_RESETS.reset_datapath          <=  reg_data(165)( 2);               
  Ctrl.MGT.MGT(24).RX_RESETS.reset_bufbypass         <=  reg_data(165)( 3);               
  Ctrl.MGT.MGT(25).DRP.wr_addr                       <=  reg_data(168)( 9 downto  0);     
  Ctrl.MGT.MGT(25).DRP.en                            <=  reg_data(168)(12);               
  Ctrl.MGT.MGT(25).DRP.wr_data                       <=  reg_data(169)(31 downto 16);     
  Ctrl.MGT.MGT(25).TX_RESETS.reset                   <=  reg_data(170)( 0);               
  Ctrl.MGT.MGT(25).TX_RESETS.reset_pll_and_datapath  <=  reg_data(170)( 1);               
  Ctrl.MGT.MGT(25).TX_RESETS.reset_datapath          <=  reg_data(170)( 2);               
  Ctrl.MGT.MGT(25).TX_RESETS.reset_bufbypass         <=  reg_data(170)( 3);               
  Ctrl.MGT.MGT(25).RX_RESETS.reset                   <=  reg_data(171)( 0);               
  Ctrl.MGT.MGT(25).RX_RESETS.reset_pll_and_datapath  <=  reg_data(171)( 1);               
  Ctrl.MGT.MGT(25).RX_RESETS.reset_datapath          <=  reg_data(171)( 2);               
  Ctrl.MGT.MGT(25).RX_RESETS.reset_bufbypass         <=  reg_data(171)( 3);               
  Ctrl.MGT.MGT(26).DRP.wr_addr                       <=  reg_data(174)( 9 downto  0);     
  Ctrl.MGT.MGT(26).DRP.en                            <=  reg_data(174)(12);               
  Ctrl.MGT.MGT(26).DRP.wr_data                       <=  reg_data(175)(31 downto 16);     
  Ctrl.MGT.MGT(26).TX_RESETS.reset                   <=  reg_data(176)( 0);               
  Ctrl.MGT.MGT(26).TX_RESETS.reset_pll_and_datapath  <=  reg_data(176)( 1);               
  Ctrl.MGT.MGT(26).TX_RESETS.reset_datapath          <=  reg_data(176)( 2);               
  Ctrl.MGT.MGT(26).TX_RESETS.reset_bufbypass         <=  reg_data(176)( 3);               
  Ctrl.MGT.MGT(26).RX_RESETS.reset                   <=  reg_data(177)( 0);               
  Ctrl.MGT.MGT(26).RX_RESETS.reset_pll_and_datapath  <=  reg_data(177)( 1);               
  Ctrl.MGT.MGT(26).RX_RESETS.reset_datapath          <=  reg_data(177)( 2);               
  Ctrl.MGT.MGT(26).RX_RESETS.reset_bufbypass         <=  reg_data(177)( 3);               
  Ctrl.MGT.MGT(27).DRP.wr_addr                       <=  reg_data(180)( 9 downto  0);     
  Ctrl.MGT.MGT(27).DRP.en                            <=  reg_data(180)(12);               
  Ctrl.MGT.MGT(27).DRP.wr_data                       <=  reg_data(181)(31 downto 16);     
  Ctrl.MGT.MGT(27).TX_RESETS.reset                   <=  reg_data(182)( 0);               
  Ctrl.MGT.MGT(27).TX_RESETS.reset_pll_and_datapath  <=  reg_data(182)( 1);               
  Ctrl.MGT.MGT(27).TX_RESETS.reset_datapath          <=  reg_data(182)( 2);               
  Ctrl.MGT.MGT(27).TX_RESETS.reset_bufbypass         <=  reg_data(182)( 3);               
  Ctrl.MGT.MGT(27).RX_RESETS.reset                   <=  reg_data(183)( 0);               
  Ctrl.MGT.MGT(27).RX_RESETS.reset_pll_and_datapath  <=  reg_data(183)( 1);               
  Ctrl.MGT.MGT(27).RX_RESETS.reset_datapath          <=  reg_data(183)( 2);               
  Ctrl.MGT.MGT(27).RX_RESETS.reset_bufbypass         <=  reg_data(183)( 3);               
  Ctrl.MGT.MGT(28).DRP.wr_addr                       <=  reg_data(186)( 9 downto  0);     
  Ctrl.MGT.MGT(28).DRP.en                            <=  reg_data(186)(12);               
  Ctrl.MGT.MGT(28).DRP.wr_data                       <=  reg_data(187)(31 downto 16);     
  Ctrl.MGT.MGT(28).TX_RESETS.reset                   <=  reg_data(188)( 0);               
  Ctrl.MGT.MGT(28).TX_RESETS.reset_pll_and_datapath  <=  reg_data(188)( 1);               
  Ctrl.MGT.MGT(28).TX_RESETS.reset_datapath          <=  reg_data(188)( 2);               
  Ctrl.MGT.MGT(28).TX_RESETS.reset_bufbypass         <=  reg_data(188)( 3);               
  Ctrl.MGT.MGT(28).RX_RESETS.reset                   <=  reg_data(189)( 0);               
  Ctrl.MGT.MGT(28).RX_RESETS.reset_pll_and_datapath  <=  reg_data(189)( 1);               
  Ctrl.MGT.MGT(28).RX_RESETS.reset_datapath          <=  reg_data(189)( 2);               
  Ctrl.MGT.MGT(28).RX_RESETS.reset_bufbypass         <=  reg_data(189)( 3);               
  Ctrl.MGT.MGT(29).DRP.wr_addr                       <=  reg_data(192)( 9 downto  0);     
  Ctrl.MGT.MGT(29).DRP.en                            <=  reg_data(192)(12);               
  Ctrl.MGT.MGT(29).DRP.wr_data                       <=  reg_data(193)(31 downto 16);     
  Ctrl.MGT.MGT(29).TX_RESETS.reset                   <=  reg_data(194)( 0);               
  Ctrl.MGT.MGT(29).TX_RESETS.reset_pll_and_datapath  <=  reg_data(194)( 1);               
  Ctrl.MGT.MGT(29).TX_RESETS.reset_datapath          <=  reg_data(194)( 2);               
  Ctrl.MGT.MGT(29).TX_RESETS.reset_bufbypass         <=  reg_data(194)( 3);               
  Ctrl.MGT.MGT(29).RX_RESETS.reset                   <=  reg_data(195)( 0);               
  Ctrl.MGT.MGT(29).RX_RESETS.reset_pll_and_datapath  <=  reg_data(195)( 1);               
  Ctrl.MGT.MGT(29).RX_RESETS.reset_datapath          <=  reg_data(195)( 2);               
  Ctrl.MGT.MGT(29).RX_RESETS.reset_bufbypass         <=  reg_data(195)( 3);               
  Ctrl.MGT.MGT(30).DRP.wr_addr                       <=  reg_data(198)( 9 downto  0);     
  Ctrl.MGT.MGT(30).DRP.en                            <=  reg_data(198)(12);               
  Ctrl.MGT.MGT(30).DRP.wr_data                       <=  reg_data(199)(31 downto 16);     
  Ctrl.MGT.MGT(30).TX_RESETS.reset                   <=  reg_data(200)( 0);               
  Ctrl.MGT.MGT(30).TX_RESETS.reset_pll_and_datapath  <=  reg_data(200)( 1);               
  Ctrl.MGT.MGT(30).TX_RESETS.reset_datapath          <=  reg_data(200)( 2);               
  Ctrl.MGT.MGT(30).TX_RESETS.reset_bufbypass         <=  reg_data(200)( 3);               
  Ctrl.MGT.MGT(30).RX_RESETS.reset                   <=  reg_data(201)( 0);               
  Ctrl.MGT.MGT(30).RX_RESETS.reset_pll_and_datapath  <=  reg_data(201)( 1);               
  Ctrl.MGT.MGT(30).RX_RESETS.reset_datapath          <=  reg_data(201)( 2);               
  Ctrl.MGT.MGT(30).RX_RESETS.reset_bufbypass         <=  reg_data(201)( 3);               
  Ctrl.MGT.MGT(31).DRP.wr_addr                       <=  reg_data(204)( 9 downto  0);     
  Ctrl.MGT.MGT(31).DRP.en                            <=  reg_data(204)(12);               
  Ctrl.MGT.MGT(31).DRP.wr_data                       <=  reg_data(205)(31 downto 16);     
  Ctrl.MGT.MGT(31).TX_RESETS.reset                   <=  reg_data(206)( 0);               
  Ctrl.MGT.MGT(31).TX_RESETS.reset_pll_and_datapath  <=  reg_data(206)( 1);               
  Ctrl.MGT.MGT(31).TX_RESETS.reset_datapath          <=  reg_data(206)( 2);               
  Ctrl.MGT.MGT(31).TX_RESETS.reset_bufbypass         <=  reg_data(206)( 3);               
  Ctrl.MGT.MGT(31).RX_RESETS.reset                   <=  reg_data(207)( 0);               
  Ctrl.MGT.MGT(31).RX_RESETS.reset_pll_and_datapath  <=  reg_data(207)( 1);               
  Ctrl.MGT.MGT(31).RX_RESETS.reset_datapath          <=  reg_data(207)( 2);               
  Ctrl.MGT.MGT(31).RX_RESETS.reset_bufbypass         <=  reg_data(207)( 3);               
  Ctrl.MGT.MGT(32).DRP.wr_addr                       <=  reg_data(210)( 9 downto  0);     
  Ctrl.MGT.MGT(32).DRP.en                            <=  reg_data(210)(12);               
  Ctrl.MGT.MGT(32).DRP.wr_data                       <=  reg_data(211)(31 downto 16);     
  Ctrl.MGT.MGT(32).TX_RESETS.reset                   <=  reg_data(212)( 0);               
  Ctrl.MGT.MGT(32).TX_RESETS.reset_pll_and_datapath  <=  reg_data(212)( 1);               
  Ctrl.MGT.MGT(32).TX_RESETS.reset_datapath          <=  reg_data(212)( 2);               
  Ctrl.MGT.MGT(32).TX_RESETS.reset_bufbypass         <=  reg_data(212)( 3);               
  Ctrl.MGT.MGT(32).RX_RESETS.reset                   <=  reg_data(213)( 0);               
  Ctrl.MGT.MGT(32).RX_RESETS.reset_pll_and_datapath  <=  reg_data(213)( 1);               
  Ctrl.MGT.MGT(32).RX_RESETS.reset_datapath          <=  reg_data(213)( 2);               
  Ctrl.MGT.MGT(32).RX_RESETS.reset_bufbypass         <=  reg_data(213)( 3);               
  Ctrl.MGT.MGT(33).DRP.wr_addr                       <=  reg_data(216)( 9 downto  0);     
  Ctrl.MGT.MGT(33).DRP.en                            <=  reg_data(216)(12);               
  Ctrl.MGT.MGT(33).DRP.wr_data                       <=  reg_data(217)(31 downto 16);     
  Ctrl.MGT.MGT(33).TX_RESETS.reset                   <=  reg_data(218)( 0);               
  Ctrl.MGT.MGT(33).TX_RESETS.reset_pll_and_datapath  <=  reg_data(218)( 1);               
  Ctrl.MGT.MGT(33).TX_RESETS.reset_datapath          <=  reg_data(218)( 2);               
  Ctrl.MGT.MGT(33).TX_RESETS.reset_bufbypass         <=  reg_data(218)( 3);               
  Ctrl.MGT.MGT(33).RX_RESETS.reset                   <=  reg_data(219)( 0);               
  Ctrl.MGT.MGT(33).RX_RESETS.reset_pll_and_datapath  <=  reg_data(219)( 1);               
  Ctrl.MGT.MGT(33).RX_RESETS.reset_datapath          <=  reg_data(219)( 2);               
  Ctrl.MGT.MGT(33).RX_RESETS.reset_bufbypass         <=  reg_data(219)( 3);               
  Ctrl.MGT.MGT(34).DRP.wr_addr                       <=  reg_data(222)( 9 downto  0);     
  Ctrl.MGT.MGT(34).DRP.en                            <=  reg_data(222)(12);               
  Ctrl.MGT.MGT(34).DRP.wr_data                       <=  reg_data(223)(31 downto 16);     
  Ctrl.MGT.MGT(34).TX_RESETS.reset                   <=  reg_data(224)( 0);               
  Ctrl.MGT.MGT(34).TX_RESETS.reset_pll_and_datapath  <=  reg_data(224)( 1);               
  Ctrl.MGT.MGT(34).TX_RESETS.reset_datapath          <=  reg_data(224)( 2);               
  Ctrl.MGT.MGT(34).TX_RESETS.reset_bufbypass         <=  reg_data(224)( 3);               
  Ctrl.MGT.MGT(34).RX_RESETS.reset                   <=  reg_data(225)( 0);               
  Ctrl.MGT.MGT(34).RX_RESETS.reset_pll_and_datapath  <=  reg_data(225)( 1);               
  Ctrl.MGT.MGT(34).RX_RESETS.reset_datapath          <=  reg_data(225)( 2);               
  Ctrl.MGT.MGT(34).RX_RESETS.reset_bufbypass         <=  reg_data(225)( 3);               
  Ctrl.MGT.MGT(35).DRP.wr_addr                       <=  reg_data(228)( 9 downto  0);     
  Ctrl.MGT.MGT(35).DRP.en                            <=  reg_data(228)(12);               
  Ctrl.MGT.MGT(35).DRP.wr_data                       <=  reg_data(229)(31 downto 16);     
  Ctrl.MGT.MGT(35).TX_RESETS.reset                   <=  reg_data(230)( 0);               
  Ctrl.MGT.MGT(35).TX_RESETS.reset_pll_and_datapath  <=  reg_data(230)( 1);               
  Ctrl.MGT.MGT(35).TX_RESETS.reset_datapath          <=  reg_data(230)( 2);               
  Ctrl.MGT.MGT(35).TX_RESETS.reset_bufbypass         <=  reg_data(230)( 3);               
  Ctrl.MGT.MGT(35).RX_RESETS.reset                   <=  reg_data(231)( 0);               
  Ctrl.MGT.MGT(35).RX_RESETS.reset_pll_and_datapath  <=  reg_data(231)( 1);               
  Ctrl.MGT.MGT(35).RX_RESETS.reset_datapath          <=  reg_data(231)( 2);               
  Ctrl.MGT.MGT(35).RX_RESETS.reset_bufbypass         <=  reg_data(231)( 3);               
  Ctrl.MGT.MGT(36).DRP.wr_addr                       <=  reg_data(234)( 9 downto  0);     
  Ctrl.MGT.MGT(36).DRP.en                            <=  reg_data(234)(12);               
  Ctrl.MGT.MGT(36).DRP.wr_data                       <=  reg_data(235)(31 downto 16);     
  Ctrl.MGT.MGT(36).TX_RESETS.reset                   <=  reg_data(236)( 0);               
  Ctrl.MGT.MGT(36).TX_RESETS.reset_pll_and_datapath  <=  reg_data(236)( 1);               
  Ctrl.MGT.MGT(36).TX_RESETS.reset_datapath          <=  reg_data(236)( 2);               
  Ctrl.MGT.MGT(36).TX_RESETS.reset_bufbypass         <=  reg_data(236)( 3);               
  Ctrl.MGT.MGT(36).RX_RESETS.reset                   <=  reg_data(237)( 0);               
  Ctrl.MGT.MGT(36).RX_RESETS.reset_pll_and_datapath  <=  reg_data(237)( 1);               
  Ctrl.MGT.MGT(36).RX_RESETS.reset_datapath          <=  reg_data(237)( 2);               
  Ctrl.MGT.MGT(36).RX_RESETS.reset_bufbypass         <=  reg_data(237)( 3);               
  Ctrl.MGT.MGT(37).DRP.wr_addr                       <=  reg_data(240)( 9 downto  0);     
  Ctrl.MGT.MGT(37).DRP.en                            <=  reg_data(240)(12);               
  Ctrl.MGT.MGT(37).DRP.wr_data                       <=  reg_data(241)(31 downto 16);     
  Ctrl.MGT.MGT(37).TX_RESETS.reset                   <=  reg_data(242)( 0);               
  Ctrl.MGT.MGT(37).TX_RESETS.reset_pll_and_datapath  <=  reg_data(242)( 1);               
  Ctrl.MGT.MGT(37).TX_RESETS.reset_datapath          <=  reg_data(242)( 2);               
  Ctrl.MGT.MGT(37).TX_RESETS.reset_bufbypass         <=  reg_data(242)( 3);               
  Ctrl.MGT.MGT(37).RX_RESETS.reset                   <=  reg_data(243)( 0);               
  Ctrl.MGT.MGT(37).RX_RESETS.reset_pll_and_datapath  <=  reg_data(243)( 1);               
  Ctrl.MGT.MGT(37).RX_RESETS.reset_datapath          <=  reg_data(243)( 2);               
  Ctrl.MGT.MGT(37).RX_RESETS.reset_bufbypass         <=  reg_data(243)( 3);               
  Ctrl.MGT.MGT(38).DRP.wr_addr                       <=  reg_data(246)( 9 downto  0);     
  Ctrl.MGT.MGT(38).DRP.en                            <=  reg_data(246)(12);               
  Ctrl.MGT.MGT(38).DRP.wr_data                       <=  reg_data(247)(31 downto 16);     
  Ctrl.MGT.MGT(38).TX_RESETS.reset                   <=  reg_data(248)( 0);               
  Ctrl.MGT.MGT(38).TX_RESETS.reset_pll_and_datapath  <=  reg_data(248)( 1);               
  Ctrl.MGT.MGT(38).TX_RESETS.reset_datapath          <=  reg_data(248)( 2);               
  Ctrl.MGT.MGT(38).TX_RESETS.reset_bufbypass         <=  reg_data(248)( 3);               
  Ctrl.MGT.MGT(38).RX_RESETS.reset                   <=  reg_data(249)( 0);               
  Ctrl.MGT.MGT(38).RX_RESETS.reset_pll_and_datapath  <=  reg_data(249)( 1);               
  Ctrl.MGT.MGT(38).RX_RESETS.reset_datapath          <=  reg_data(249)( 2);               
  Ctrl.MGT.MGT(38).RX_RESETS.reset_bufbypass         <=  reg_data(249)( 3);               
  Ctrl.MGT.MGT(39).DRP.wr_addr                       <=  reg_data(252)( 9 downto  0);     
  Ctrl.MGT.MGT(39).DRP.en                            <=  reg_data(252)(12);               
  Ctrl.MGT.MGT(39).DRP.wr_data                       <=  reg_data(253)(31 downto 16);     
  Ctrl.MGT.MGT(39).TX_RESETS.reset                   <=  reg_data(254)( 0);               
  Ctrl.MGT.MGT(39).TX_RESETS.reset_pll_and_datapath  <=  reg_data(254)( 1);               
  Ctrl.MGT.MGT(39).TX_RESETS.reset_datapath          <=  reg_data(254)( 2);               
  Ctrl.MGT.MGT(39).TX_RESETS.reset_bufbypass         <=  reg_data(254)( 3);               
  Ctrl.MGT.MGT(39).RX_RESETS.reset                   <=  reg_data(255)( 0);               
  Ctrl.MGT.MGT(39).RX_RESETS.reset_pll_and_datapath  <=  reg_data(255)( 1);               
  Ctrl.MGT.MGT(39).RX_RESETS.reset_datapath          <=  reg_data(255)( 2);               
  Ctrl.MGT.MGT(39).RX_RESETS.reset_bufbypass         <=  reg_data(255)( 3);               
  Ctrl.MGT.MGT(40).DRP.wr_addr                       <=  reg_data(258)( 9 downto  0);     
  Ctrl.MGT.MGT(40).DRP.en                            <=  reg_data(258)(12);               
  Ctrl.MGT.MGT(40).DRP.wr_data                       <=  reg_data(259)(31 downto 16);     
  Ctrl.MGT.MGT(40).TX_RESETS.reset                   <=  reg_data(260)( 0);               
  Ctrl.MGT.MGT(40).TX_RESETS.reset_pll_and_datapath  <=  reg_data(260)( 1);               
  Ctrl.MGT.MGT(40).TX_RESETS.reset_datapath          <=  reg_data(260)( 2);               
  Ctrl.MGT.MGT(40).TX_RESETS.reset_bufbypass         <=  reg_data(260)( 3);               
  Ctrl.MGT.MGT(40).RX_RESETS.reset                   <=  reg_data(261)( 0);               
  Ctrl.MGT.MGT(40).RX_RESETS.reset_pll_and_datapath  <=  reg_data(261)( 1);               
  Ctrl.MGT.MGT(40).RX_RESETS.reset_datapath          <=  reg_data(261)( 2);               
  Ctrl.MGT.MGT(40).RX_RESETS.reset_bufbypass         <=  reg_data(261)( 3);               
  Ctrl.MGT.MGT(41).DRP.wr_addr                       <=  reg_data(264)( 9 downto  0);     
  Ctrl.MGT.MGT(41).DRP.en                            <=  reg_data(264)(12);               
  Ctrl.MGT.MGT(41).DRP.wr_data                       <=  reg_data(265)(31 downto 16);     
  Ctrl.MGT.MGT(41).TX_RESETS.reset                   <=  reg_data(266)( 0);               
  Ctrl.MGT.MGT(41).TX_RESETS.reset_pll_and_datapath  <=  reg_data(266)( 1);               
  Ctrl.MGT.MGT(41).TX_RESETS.reset_datapath          <=  reg_data(266)( 2);               
  Ctrl.MGT.MGT(41).TX_RESETS.reset_bufbypass         <=  reg_data(266)( 3);               
  Ctrl.MGT.MGT(41).RX_RESETS.reset                   <=  reg_data(267)( 0);               
  Ctrl.MGT.MGT(41).RX_RESETS.reset_pll_and_datapath  <=  reg_data(267)( 1);               
  Ctrl.MGT.MGT(41).RX_RESETS.reset_datapath          <=  reg_data(267)( 2);               
  Ctrl.MGT.MGT(41).RX_RESETS.reset_bufbypass         <=  reg_data(267)( 3);               
  Ctrl.MGT.MGT(42).DRP.wr_addr                       <=  reg_data(270)( 9 downto  0);     
  Ctrl.MGT.MGT(42).DRP.en                            <=  reg_data(270)(12);               
  Ctrl.MGT.MGT(42).DRP.wr_data                       <=  reg_data(271)(31 downto 16);     
  Ctrl.MGT.MGT(42).TX_RESETS.reset                   <=  reg_data(272)( 0);               
  Ctrl.MGT.MGT(42).TX_RESETS.reset_pll_and_datapath  <=  reg_data(272)( 1);               
  Ctrl.MGT.MGT(42).TX_RESETS.reset_datapath          <=  reg_data(272)( 2);               
  Ctrl.MGT.MGT(42).TX_RESETS.reset_bufbypass         <=  reg_data(272)( 3);               
  Ctrl.MGT.MGT(42).RX_RESETS.reset                   <=  reg_data(273)( 0);               
  Ctrl.MGT.MGT(42).RX_RESETS.reset_pll_and_datapath  <=  reg_data(273)( 1);               
  Ctrl.MGT.MGT(42).RX_RESETS.reset_datapath          <=  reg_data(273)( 2);               
  Ctrl.MGT.MGT(42).RX_RESETS.reset_bufbypass         <=  reg_data(273)( 3);               
  Ctrl.MGT.MGT(43).DRP.wr_addr                       <=  reg_data(276)( 9 downto  0);     
  Ctrl.MGT.MGT(43).DRP.en                            <=  reg_data(276)(12);               
  Ctrl.MGT.MGT(43).DRP.wr_data                       <=  reg_data(277)(31 downto 16);     
  Ctrl.MGT.MGT(43).TX_RESETS.reset                   <=  reg_data(278)( 0);               
  Ctrl.MGT.MGT(43).TX_RESETS.reset_pll_and_datapath  <=  reg_data(278)( 1);               
  Ctrl.MGT.MGT(43).TX_RESETS.reset_datapath          <=  reg_data(278)( 2);               
  Ctrl.MGT.MGT(43).TX_RESETS.reset_bufbypass         <=  reg_data(278)( 3);               
  Ctrl.MGT.MGT(43).RX_RESETS.reset                   <=  reg_data(279)( 0);               
  Ctrl.MGT.MGT(43).RX_RESETS.reset_pll_and_datapath  <=  reg_data(279)( 1);               
  Ctrl.MGT.MGT(43).RX_RESETS.reset_datapath          <=  reg_data(279)( 2);               
  Ctrl.MGT.MGT(43).RX_RESETS.reset_bufbypass         <=  reg_data(279)( 3);               
  Ctrl.MGT.MGT(44).DRP.wr_addr                       <=  reg_data(282)( 9 downto  0);     
  Ctrl.MGT.MGT(44).DRP.en                            <=  reg_data(282)(12);               
  Ctrl.MGT.MGT(44).DRP.wr_data                       <=  reg_data(283)(31 downto 16);     
  Ctrl.MGT.MGT(44).TX_RESETS.reset                   <=  reg_data(284)( 0);               
  Ctrl.MGT.MGT(44).TX_RESETS.reset_pll_and_datapath  <=  reg_data(284)( 1);               
  Ctrl.MGT.MGT(44).TX_RESETS.reset_datapath          <=  reg_data(284)( 2);               
  Ctrl.MGT.MGT(44).TX_RESETS.reset_bufbypass         <=  reg_data(284)( 3);               
  Ctrl.MGT.MGT(44).RX_RESETS.reset                   <=  reg_data(285)( 0);               
  Ctrl.MGT.MGT(44).RX_RESETS.reset_pll_and_datapath  <=  reg_data(285)( 1);               
  Ctrl.MGT.MGT(44).RX_RESETS.reset_datapath          <=  reg_data(285)( 2);               
  Ctrl.MGT.MGT(44).RX_RESETS.reset_bufbypass         <=  reg_data(285)( 3);               
  Ctrl.MGT.MGT(45).DRP.wr_addr                       <=  reg_data(288)( 9 downto  0);     
  Ctrl.MGT.MGT(45).DRP.en                            <=  reg_data(288)(12);               
  Ctrl.MGT.MGT(45).DRP.wr_data                       <=  reg_data(289)(31 downto 16);     
  Ctrl.MGT.MGT(45).TX_RESETS.reset                   <=  reg_data(290)( 0);               
  Ctrl.MGT.MGT(45).TX_RESETS.reset_pll_and_datapath  <=  reg_data(290)( 1);               
  Ctrl.MGT.MGT(45).TX_RESETS.reset_datapath          <=  reg_data(290)( 2);               
  Ctrl.MGT.MGT(45).TX_RESETS.reset_bufbypass         <=  reg_data(290)( 3);               
  Ctrl.MGT.MGT(45).RX_RESETS.reset                   <=  reg_data(291)( 0);               
  Ctrl.MGT.MGT(45).RX_RESETS.reset_pll_and_datapath  <=  reg_data(291)( 1);               
  Ctrl.MGT.MGT(45).RX_RESETS.reset_datapath          <=  reg_data(291)( 2);               
  Ctrl.MGT.MGT(45).RX_RESETS.reset_bufbypass         <=  reg_data(291)( 3);               
  Ctrl.MGT.MGT(46).DRP.wr_addr                       <=  reg_data(294)( 9 downto  0);     
  Ctrl.MGT.MGT(46).DRP.en                            <=  reg_data(294)(12);               
  Ctrl.MGT.MGT(46).DRP.wr_data                       <=  reg_data(295)(31 downto 16);     
  Ctrl.MGT.MGT(46).TX_RESETS.reset                   <=  reg_data(296)( 0);               
  Ctrl.MGT.MGT(46).TX_RESETS.reset_pll_and_datapath  <=  reg_data(296)( 1);               
  Ctrl.MGT.MGT(46).TX_RESETS.reset_datapath          <=  reg_data(296)( 2);               
  Ctrl.MGT.MGT(46).TX_RESETS.reset_bufbypass         <=  reg_data(296)( 3);               
  Ctrl.MGT.MGT(46).RX_RESETS.reset                   <=  reg_data(297)( 0);               
  Ctrl.MGT.MGT(46).RX_RESETS.reset_pll_and_datapath  <=  reg_data(297)( 1);               
  Ctrl.MGT.MGT(46).RX_RESETS.reset_datapath          <=  reg_data(297)( 2);               
  Ctrl.MGT.MGT(46).RX_RESETS.reset_bufbypass         <=  reg_data(297)( 3);               
  Ctrl.MGT.MGT(47).DRP.wr_addr                       <=  reg_data(300)( 9 downto  0);     
  Ctrl.MGT.MGT(47).DRP.en                            <=  reg_data(300)(12);               
  Ctrl.MGT.MGT(47).DRP.wr_data                       <=  reg_data(301)(31 downto 16);     
  Ctrl.MGT.MGT(47).TX_RESETS.reset                   <=  reg_data(302)( 0);               
  Ctrl.MGT.MGT(47).TX_RESETS.reset_pll_and_datapath  <=  reg_data(302)( 1);               
  Ctrl.MGT.MGT(47).TX_RESETS.reset_datapath          <=  reg_data(302)( 2);               
  Ctrl.MGT.MGT(47).TX_RESETS.reset_bufbypass         <=  reg_data(302)( 3);               
  Ctrl.MGT.MGT(47).RX_RESETS.reset                   <=  reg_data(303)( 0);               
  Ctrl.MGT.MGT(47).RX_RESETS.reset_pll_and_datapath  <=  reg_data(303)( 1);               
  Ctrl.MGT.MGT(47).RX_RESETS.reset_datapath          <=  reg_data(303)( 2);               
  Ctrl.MGT.MGT(47).RX_RESETS.reset_bufbypass         <=  reg_data(303)( 3);               
  Ctrl.MGT.MGT(48).DRP.wr_addr                       <=  reg_data(306)( 9 downto  0);     
  Ctrl.MGT.MGT(48).DRP.en                            <=  reg_data(306)(12);               
  Ctrl.MGT.MGT(48).DRP.wr_data                       <=  reg_data(307)(31 downto 16);     
  Ctrl.MGT.MGT(48).TX_RESETS.reset                   <=  reg_data(308)( 0);               
  Ctrl.MGT.MGT(48).TX_RESETS.reset_pll_and_datapath  <=  reg_data(308)( 1);               
  Ctrl.MGT.MGT(48).TX_RESETS.reset_datapath          <=  reg_data(308)( 2);               
  Ctrl.MGT.MGT(48).TX_RESETS.reset_bufbypass         <=  reg_data(308)( 3);               
  Ctrl.MGT.MGT(48).RX_RESETS.reset                   <=  reg_data(309)( 0);               
  Ctrl.MGT.MGT(48).RX_RESETS.reset_pll_and_datapath  <=  reg_data(309)( 1);               
  Ctrl.MGT.MGT(48).RX_RESETS.reset_datapath          <=  reg_data(309)( 2);               
  Ctrl.MGT.MGT(48).RX_RESETS.reset_bufbypass         <=  reg_data(309)( 3);               
  Ctrl.MGT.MGT(49).DRP.wr_addr                       <=  reg_data(312)( 9 downto  0);     
  Ctrl.MGT.MGT(49).DRP.en                            <=  reg_data(312)(12);               
  Ctrl.MGT.MGT(49).DRP.wr_data                       <=  reg_data(313)(31 downto 16);     
  Ctrl.MGT.MGT(49).TX_RESETS.reset                   <=  reg_data(314)( 0);               
  Ctrl.MGT.MGT(49).TX_RESETS.reset_pll_and_datapath  <=  reg_data(314)( 1);               
  Ctrl.MGT.MGT(49).TX_RESETS.reset_datapath          <=  reg_data(314)( 2);               
  Ctrl.MGT.MGT(49).TX_RESETS.reset_bufbypass         <=  reg_data(314)( 3);               
  Ctrl.MGT.MGT(49).RX_RESETS.reset                   <=  reg_data(315)( 0);               
  Ctrl.MGT.MGT(49).RX_RESETS.reset_pll_and_datapath  <=  reg_data(315)( 1);               
  Ctrl.MGT.MGT(49).RX_RESETS.reset_datapath          <=  reg_data(315)( 2);               
  Ctrl.MGT.MGT(49).RX_RESETS.reset_bufbypass         <=  reg_data(315)( 3);               
  Ctrl.MGT.MGT(50).DRP.wr_addr                       <=  reg_data(318)( 9 downto  0);     
  Ctrl.MGT.MGT(50).DRP.en                            <=  reg_data(318)(12);               
  Ctrl.MGT.MGT(50).DRP.wr_data                       <=  reg_data(319)(31 downto 16);     
  Ctrl.MGT.MGT(50).TX_RESETS.reset                   <=  reg_data(320)( 0);               
  Ctrl.MGT.MGT(50).TX_RESETS.reset_pll_and_datapath  <=  reg_data(320)( 1);               
  Ctrl.MGT.MGT(50).TX_RESETS.reset_datapath          <=  reg_data(320)( 2);               
  Ctrl.MGT.MGT(50).TX_RESETS.reset_bufbypass         <=  reg_data(320)( 3);               
  Ctrl.MGT.MGT(50).RX_RESETS.reset                   <=  reg_data(321)( 0);               
  Ctrl.MGT.MGT(50).RX_RESETS.reset_pll_and_datapath  <=  reg_data(321)( 1);               
  Ctrl.MGT.MGT(50).RX_RESETS.reset_datapath          <=  reg_data(321)( 2);               
  Ctrl.MGT.MGT(50).RX_RESETS.reset_bufbypass         <=  reg_data(321)( 3);               
  Ctrl.MGT.MGT(51).DRP.wr_addr                       <=  reg_data(324)( 9 downto  0);     
  Ctrl.MGT.MGT(51).DRP.en                            <=  reg_data(324)(12);               
  Ctrl.MGT.MGT(51).DRP.wr_data                       <=  reg_data(325)(31 downto 16);     
  Ctrl.MGT.MGT(51).TX_RESETS.reset                   <=  reg_data(326)( 0);               
  Ctrl.MGT.MGT(51).TX_RESETS.reset_pll_and_datapath  <=  reg_data(326)( 1);               
  Ctrl.MGT.MGT(51).TX_RESETS.reset_datapath          <=  reg_data(326)( 2);               
  Ctrl.MGT.MGT(51).TX_RESETS.reset_bufbypass         <=  reg_data(326)( 3);               
  Ctrl.MGT.MGT(51).RX_RESETS.reset                   <=  reg_data(327)( 0);               
  Ctrl.MGT.MGT(51).RX_RESETS.reset_pll_and_datapath  <=  reg_data(327)( 1);               
  Ctrl.MGT.MGT(51).RX_RESETS.reset_datapath          <=  reg_data(327)( 2);               
  Ctrl.MGT.MGT(51).RX_RESETS.reset_bufbypass         <=  reg_data(327)( 3);               
  Ctrl.MGT.MGT(52).DRP.wr_addr                       <=  reg_data(330)( 9 downto  0);     
  Ctrl.MGT.MGT(52).DRP.en                            <=  reg_data(330)(12);               
  Ctrl.MGT.MGT(52).DRP.wr_data                       <=  reg_data(331)(31 downto 16);     
  Ctrl.MGT.MGT(52).TX_RESETS.reset                   <=  reg_data(332)( 0);               
  Ctrl.MGT.MGT(52).TX_RESETS.reset_pll_and_datapath  <=  reg_data(332)( 1);               
  Ctrl.MGT.MGT(52).TX_RESETS.reset_datapath          <=  reg_data(332)( 2);               
  Ctrl.MGT.MGT(52).TX_RESETS.reset_bufbypass         <=  reg_data(332)( 3);               
  Ctrl.MGT.MGT(52).RX_RESETS.reset                   <=  reg_data(333)( 0);               
  Ctrl.MGT.MGT(52).RX_RESETS.reset_pll_and_datapath  <=  reg_data(333)( 1);               
  Ctrl.MGT.MGT(52).RX_RESETS.reset_datapath          <=  reg_data(333)( 2);               
  Ctrl.MGT.MGT(52).RX_RESETS.reset_bufbypass         <=  reg_data(333)( 3);               
  Ctrl.MGT.MGT(53).DRP.wr_addr                       <=  reg_data(336)( 9 downto  0);     
  Ctrl.MGT.MGT(53).DRP.en                            <=  reg_data(336)(12);               
  Ctrl.MGT.MGT(53).DRP.wr_data                       <=  reg_data(337)(31 downto 16);     
  Ctrl.MGT.MGT(53).TX_RESETS.reset                   <=  reg_data(338)( 0);               
  Ctrl.MGT.MGT(53).TX_RESETS.reset_pll_and_datapath  <=  reg_data(338)( 1);               
  Ctrl.MGT.MGT(53).TX_RESETS.reset_datapath          <=  reg_data(338)( 2);               
  Ctrl.MGT.MGT(53).TX_RESETS.reset_bufbypass         <=  reg_data(338)( 3);               
  Ctrl.MGT.MGT(53).RX_RESETS.reset                   <=  reg_data(339)( 0);               
  Ctrl.MGT.MGT(53).RX_RESETS.reset_pll_and_datapath  <=  reg_data(339)( 1);               
  Ctrl.MGT.MGT(53).RX_RESETS.reset_datapath          <=  reg_data(339)( 2);               
  Ctrl.MGT.MGT(53).RX_RESETS.reset_bufbypass         <=  reg_data(339)( 3);               
  Ctrl.MGT.MGT(54).DRP.wr_addr                       <=  reg_data(342)( 9 downto  0);     
  Ctrl.MGT.MGT(54).DRP.en                            <=  reg_data(342)(12);               
  Ctrl.MGT.MGT(54).DRP.wr_data                       <=  reg_data(343)(31 downto 16);     
  Ctrl.MGT.MGT(54).TX_RESETS.reset                   <=  reg_data(344)( 0);               
  Ctrl.MGT.MGT(54).TX_RESETS.reset_pll_and_datapath  <=  reg_data(344)( 1);               
  Ctrl.MGT.MGT(54).TX_RESETS.reset_datapath          <=  reg_data(344)( 2);               
  Ctrl.MGT.MGT(54).TX_RESETS.reset_bufbypass         <=  reg_data(344)( 3);               
  Ctrl.MGT.MGT(54).RX_RESETS.reset                   <=  reg_data(345)( 0);               
  Ctrl.MGT.MGT(54).RX_RESETS.reset_pll_and_datapath  <=  reg_data(345)( 1);               
  Ctrl.MGT.MGT(54).RX_RESETS.reset_datapath          <=  reg_data(345)( 2);               
  Ctrl.MGT.MGT(54).RX_RESETS.reset_bufbypass         <=  reg_data(345)( 3);               
  Ctrl.MGT.MGT(55).DRP.wr_addr                       <=  reg_data(348)( 9 downto  0);     
  Ctrl.MGT.MGT(55).DRP.en                            <=  reg_data(348)(12);               
  Ctrl.MGT.MGT(55).DRP.wr_data                       <=  reg_data(349)(31 downto 16);     
  Ctrl.MGT.MGT(55).TX_RESETS.reset                   <=  reg_data(350)( 0);               
  Ctrl.MGT.MGT(55).TX_RESETS.reset_pll_and_datapath  <=  reg_data(350)( 1);               
  Ctrl.MGT.MGT(55).TX_RESETS.reset_datapath          <=  reg_data(350)( 2);               
  Ctrl.MGT.MGT(55).TX_RESETS.reset_bufbypass         <=  reg_data(350)( 3);               
  Ctrl.MGT.MGT(55).RX_RESETS.reset                   <=  reg_data(351)( 0);               
  Ctrl.MGT.MGT(55).RX_RESETS.reset_pll_and_datapath  <=  reg_data(351)( 1);               
  Ctrl.MGT.MGT(55).RX_RESETS.reset_datapath          <=  reg_data(351)( 2);               
  Ctrl.MGT.MGT(55).RX_RESETS.reset_bufbypass         <=  reg_data(351)( 3);               
  Ctrl.MGT.MGT(56).DRP.wr_addr                       <=  reg_data(354)( 9 downto  0);     
  Ctrl.MGT.MGT(56).DRP.en                            <=  reg_data(354)(12);               
  Ctrl.MGT.MGT(56).DRP.wr_data                       <=  reg_data(355)(31 downto 16);     
  Ctrl.MGT.MGT(56).TX_RESETS.reset                   <=  reg_data(356)( 0);               
  Ctrl.MGT.MGT(56).TX_RESETS.reset_pll_and_datapath  <=  reg_data(356)( 1);               
  Ctrl.MGT.MGT(56).TX_RESETS.reset_datapath          <=  reg_data(356)( 2);               
  Ctrl.MGT.MGT(56).TX_RESETS.reset_bufbypass         <=  reg_data(356)( 3);               
  Ctrl.MGT.MGT(56).RX_RESETS.reset                   <=  reg_data(357)( 0);               
  Ctrl.MGT.MGT(56).RX_RESETS.reset_pll_and_datapath  <=  reg_data(357)( 1);               
  Ctrl.MGT.MGT(56).RX_RESETS.reset_datapath          <=  reg_data(357)( 2);               
  Ctrl.MGT.MGT(56).RX_RESETS.reset_bufbypass         <=  reg_data(357)( 3);               
  Ctrl.MGT.MGT(57).DRP.wr_addr                       <=  reg_data(360)( 9 downto  0);     
  Ctrl.MGT.MGT(57).DRP.en                            <=  reg_data(360)(12);               
  Ctrl.MGT.MGT(57).DRP.wr_data                       <=  reg_data(361)(31 downto 16);     
  Ctrl.MGT.MGT(57).TX_RESETS.reset                   <=  reg_data(362)( 0);               
  Ctrl.MGT.MGT(57).TX_RESETS.reset_pll_and_datapath  <=  reg_data(362)( 1);               
  Ctrl.MGT.MGT(57).TX_RESETS.reset_datapath          <=  reg_data(362)( 2);               
  Ctrl.MGT.MGT(57).TX_RESETS.reset_bufbypass         <=  reg_data(362)( 3);               
  Ctrl.MGT.MGT(57).RX_RESETS.reset                   <=  reg_data(363)( 0);               
  Ctrl.MGT.MGT(57).RX_RESETS.reset_pll_and_datapath  <=  reg_data(363)( 1);               
  Ctrl.MGT.MGT(57).RX_RESETS.reset_datapath          <=  reg_data(363)( 2);               
  Ctrl.MGT.MGT(57).RX_RESETS.reset_bufbypass         <=  reg_data(363)( 3);               
  Ctrl.MGT.MGT(58).DRP.wr_addr                       <=  reg_data(366)( 9 downto  0);     
  Ctrl.MGT.MGT(58).DRP.en                            <=  reg_data(366)(12);               
  Ctrl.MGT.MGT(58).DRP.wr_data                       <=  reg_data(367)(31 downto 16);     
  Ctrl.MGT.MGT(58).TX_RESETS.reset                   <=  reg_data(368)( 0);               
  Ctrl.MGT.MGT(58).TX_RESETS.reset_pll_and_datapath  <=  reg_data(368)( 1);               
  Ctrl.MGT.MGT(58).TX_RESETS.reset_datapath          <=  reg_data(368)( 2);               
  Ctrl.MGT.MGT(58).TX_RESETS.reset_bufbypass         <=  reg_data(368)( 3);               
  Ctrl.MGT.MGT(58).RX_RESETS.reset                   <=  reg_data(369)( 0);               
  Ctrl.MGT.MGT(58).RX_RESETS.reset_pll_and_datapath  <=  reg_data(369)( 1);               
  Ctrl.MGT.MGT(58).RX_RESETS.reset_datapath          <=  reg_data(369)( 2);               
  Ctrl.MGT.MGT(58).RX_RESETS.reset_bufbypass         <=  reg_data(369)( 3);               
  Ctrl.MGT.MGT(59).DRP.wr_addr                       <=  reg_data(372)( 9 downto  0);     
  Ctrl.MGT.MGT(59).DRP.en                            <=  reg_data(372)(12);               
  Ctrl.MGT.MGT(59).DRP.wr_data                       <=  reg_data(373)(31 downto 16);     
  Ctrl.MGT.MGT(59).TX_RESETS.reset                   <=  reg_data(374)( 0);               
  Ctrl.MGT.MGT(59).TX_RESETS.reset_pll_and_datapath  <=  reg_data(374)( 1);               
  Ctrl.MGT.MGT(59).TX_RESETS.reset_datapath          <=  reg_data(374)( 2);               
  Ctrl.MGT.MGT(59).TX_RESETS.reset_bufbypass         <=  reg_data(374)( 3);               
  Ctrl.MGT.MGT(59).RX_RESETS.reset                   <=  reg_data(375)( 0);               
  Ctrl.MGT.MGT(59).RX_RESETS.reset_pll_and_datapath  <=  reg_data(375)( 1);               
  Ctrl.MGT.MGT(59).RX_RESETS.reset_datapath          <=  reg_data(375)( 2);               
  Ctrl.MGT.MGT(59).RX_RESETS.reset_bufbypass         <=  reg_data(375)( 3);               
  Ctrl.MGT.MGT(60).DRP.wr_addr                       <=  reg_data(378)( 9 downto  0);     
  Ctrl.MGT.MGT(60).DRP.en                            <=  reg_data(378)(12);               
  Ctrl.MGT.MGT(60).DRP.wr_data                       <=  reg_data(379)(31 downto 16);     
  Ctrl.MGT.MGT(60).TX_RESETS.reset                   <=  reg_data(380)( 0);               
  Ctrl.MGT.MGT(60).TX_RESETS.reset_pll_and_datapath  <=  reg_data(380)( 1);               
  Ctrl.MGT.MGT(60).TX_RESETS.reset_datapath          <=  reg_data(380)( 2);               
  Ctrl.MGT.MGT(60).TX_RESETS.reset_bufbypass         <=  reg_data(380)( 3);               
  Ctrl.MGT.MGT(60).RX_RESETS.reset                   <=  reg_data(381)( 0);               
  Ctrl.MGT.MGT(60).RX_RESETS.reset_pll_and_datapath  <=  reg_data(381)( 1);               
  Ctrl.MGT.MGT(60).RX_RESETS.reset_datapath          <=  reg_data(381)( 2);               
  Ctrl.MGT.MGT(60).RX_RESETS.reset_bufbypass         <=  reg_data(381)( 3);               
  Ctrl.MGT.MGT(61).DRP.wr_addr                       <=  reg_data(384)( 9 downto  0);     
  Ctrl.MGT.MGT(61).DRP.en                            <=  reg_data(384)(12);               
  Ctrl.MGT.MGT(61).DRP.wr_data                       <=  reg_data(385)(31 downto 16);     
  Ctrl.MGT.MGT(61).TX_RESETS.reset                   <=  reg_data(386)( 0);               
  Ctrl.MGT.MGT(61).TX_RESETS.reset_pll_and_datapath  <=  reg_data(386)( 1);               
  Ctrl.MGT.MGT(61).TX_RESETS.reset_datapath          <=  reg_data(386)( 2);               
  Ctrl.MGT.MGT(61).TX_RESETS.reset_bufbypass         <=  reg_data(386)( 3);               
  Ctrl.MGT.MGT(61).RX_RESETS.reset                   <=  reg_data(387)( 0);               
  Ctrl.MGT.MGT(61).RX_RESETS.reset_pll_and_datapath  <=  reg_data(387)( 1);               
  Ctrl.MGT.MGT(61).RX_RESETS.reset_datapath          <=  reg_data(387)( 2);               
  Ctrl.MGT.MGT(61).RX_RESETS.reset_bufbypass         <=  reg_data(387)( 3);               
  Ctrl.MGT.MGT(62).DRP.wr_addr                       <=  reg_data(390)( 9 downto  0);     
  Ctrl.MGT.MGT(62).DRP.en                            <=  reg_data(390)(12);               
  Ctrl.MGT.MGT(62).DRP.wr_data                       <=  reg_data(391)(31 downto 16);     
  Ctrl.MGT.MGT(62).TX_RESETS.reset                   <=  reg_data(392)( 0);               
  Ctrl.MGT.MGT(62).TX_RESETS.reset_pll_and_datapath  <=  reg_data(392)( 1);               
  Ctrl.MGT.MGT(62).TX_RESETS.reset_datapath          <=  reg_data(392)( 2);               
  Ctrl.MGT.MGT(62).TX_RESETS.reset_bufbypass         <=  reg_data(392)( 3);               
  Ctrl.MGT.MGT(62).RX_RESETS.reset                   <=  reg_data(393)( 0);               
  Ctrl.MGT.MGT(62).RX_RESETS.reset_pll_and_datapath  <=  reg_data(393)( 1);               
  Ctrl.MGT.MGT(62).RX_RESETS.reset_datapath          <=  reg_data(393)( 2);               
  Ctrl.MGT.MGT(62).RX_RESETS.reset_bufbypass         <=  reg_data(393)( 3);               
  Ctrl.MGT.MGT(63).DRP.wr_addr                       <=  reg_data(396)( 9 downto  0);     
  Ctrl.MGT.MGT(63).DRP.en                            <=  reg_data(396)(12);               
  Ctrl.MGT.MGT(63).DRP.wr_data                       <=  reg_data(397)(31 downto 16);     
  Ctrl.MGT.MGT(63).TX_RESETS.reset                   <=  reg_data(398)( 0);               
  Ctrl.MGT.MGT(63).TX_RESETS.reset_pll_and_datapath  <=  reg_data(398)( 1);               
  Ctrl.MGT.MGT(63).TX_RESETS.reset_datapath          <=  reg_data(398)( 2);               
  Ctrl.MGT.MGT(63).TX_RESETS.reset_bufbypass         <=  reg_data(398)( 3);               
  Ctrl.MGT.MGT(63).RX_RESETS.reset                   <=  reg_data(399)( 0);               
  Ctrl.MGT.MGT(63).RX_RESETS.reset_pll_and_datapath  <=  reg_data(399)( 1);               
  Ctrl.MGT.MGT(63).RX_RESETS.reset_datapath          <=  reg_data(399)( 2);               
  Ctrl.MGT.MGT(63).RX_RESETS.reset_bufbypass         <=  reg_data(399)( 3);               
  Ctrl.MGT.MGT(64).DRP.wr_addr                       <=  reg_data(402)( 9 downto  0);     
  Ctrl.MGT.MGT(64).DRP.en                            <=  reg_data(402)(12);               
  Ctrl.MGT.MGT(64).DRP.wr_data                       <=  reg_data(403)(31 downto 16);     
  Ctrl.MGT.MGT(64).TX_RESETS.reset                   <=  reg_data(404)( 0);               
  Ctrl.MGT.MGT(64).TX_RESETS.reset_pll_and_datapath  <=  reg_data(404)( 1);               
  Ctrl.MGT.MGT(64).TX_RESETS.reset_datapath          <=  reg_data(404)( 2);               
  Ctrl.MGT.MGT(64).TX_RESETS.reset_bufbypass         <=  reg_data(404)( 3);               
  Ctrl.MGT.MGT(64).RX_RESETS.reset                   <=  reg_data(405)( 0);               
  Ctrl.MGT.MGT(64).RX_RESETS.reset_pll_and_datapath  <=  reg_data(405)( 1);               
  Ctrl.MGT.MGT(64).RX_RESETS.reset_datapath          <=  reg_data(405)( 2);               
  Ctrl.MGT.MGT(64).RX_RESETS.reset_bufbypass         <=  reg_data(405)( 3);               
  Ctrl.MGT.MGT(65).DRP.wr_addr                       <=  reg_data(408)( 9 downto  0);     
  Ctrl.MGT.MGT(65).DRP.en                            <=  reg_data(408)(12);               
  Ctrl.MGT.MGT(65).DRP.wr_data                       <=  reg_data(409)(31 downto 16);     
  Ctrl.MGT.MGT(65).TX_RESETS.reset                   <=  reg_data(410)( 0);               
  Ctrl.MGT.MGT(65).TX_RESETS.reset_pll_and_datapath  <=  reg_data(410)( 1);               
  Ctrl.MGT.MGT(65).TX_RESETS.reset_datapath          <=  reg_data(410)( 2);               
  Ctrl.MGT.MGT(65).TX_RESETS.reset_bufbypass         <=  reg_data(410)( 3);               
  Ctrl.MGT.MGT(65).RX_RESETS.reset                   <=  reg_data(411)( 0);               
  Ctrl.MGT.MGT(65).RX_RESETS.reset_pll_and_datapath  <=  reg_data(411)( 1);               
  Ctrl.MGT.MGT(65).RX_RESETS.reset_datapath          <=  reg_data(411)( 2);               
  Ctrl.MGT.MGT(65).RX_RESETS.reset_bufbypass         <=  reg_data(411)( 3);               
  Ctrl.MGT.MGT(66).DRP.wr_addr                       <=  reg_data(414)( 9 downto  0);     
  Ctrl.MGT.MGT(66).DRP.en                            <=  reg_data(414)(12);               
  Ctrl.MGT.MGT(66).DRP.wr_data                       <=  reg_data(415)(31 downto 16);     
  Ctrl.MGT.MGT(66).TX_RESETS.reset                   <=  reg_data(416)( 0);               
  Ctrl.MGT.MGT(66).TX_RESETS.reset_pll_and_datapath  <=  reg_data(416)( 1);               
  Ctrl.MGT.MGT(66).TX_RESETS.reset_datapath          <=  reg_data(416)( 2);               
  Ctrl.MGT.MGT(66).TX_RESETS.reset_bufbypass         <=  reg_data(416)( 3);               
  Ctrl.MGT.MGT(66).RX_RESETS.reset                   <=  reg_data(417)( 0);               
  Ctrl.MGT.MGT(66).RX_RESETS.reset_pll_and_datapath  <=  reg_data(417)( 1);               
  Ctrl.MGT.MGT(66).RX_RESETS.reset_datapath          <=  reg_data(417)( 2);               
  Ctrl.MGT.MGT(66).RX_RESETS.reset_bufbypass         <=  reg_data(417)( 3);               
  Ctrl.MGT.MGT(67).DRP.wr_addr                       <=  reg_data(420)( 9 downto  0);     
  Ctrl.MGT.MGT(67).DRP.en                            <=  reg_data(420)(12);               
  Ctrl.MGT.MGT(67).DRP.wr_data                       <=  reg_data(421)(31 downto 16);     
  Ctrl.MGT.MGT(67).TX_RESETS.reset                   <=  reg_data(422)( 0);               
  Ctrl.MGT.MGT(67).TX_RESETS.reset_pll_and_datapath  <=  reg_data(422)( 1);               
  Ctrl.MGT.MGT(67).TX_RESETS.reset_datapath          <=  reg_data(422)( 2);               
  Ctrl.MGT.MGT(67).TX_RESETS.reset_bufbypass         <=  reg_data(422)( 3);               
  Ctrl.MGT.MGT(67).RX_RESETS.reset                   <=  reg_data(423)( 0);               
  Ctrl.MGT.MGT(67).RX_RESETS.reset_pll_and_datapath  <=  reg_data(423)( 1);               
  Ctrl.MGT.MGT(67).RX_RESETS.reset_datapath          <=  reg_data(423)( 2);               
  Ctrl.MGT.MGT(67).RX_RESETS.reset_bufbypass         <=  reg_data(423)( 3);               
  Ctrl.MGT.MGT(68).DRP.wr_addr                       <=  reg_data(426)( 9 downto  0);     
  Ctrl.MGT.MGT(68).DRP.en                            <=  reg_data(426)(12);               
  Ctrl.MGT.MGT(68).DRP.wr_data                       <=  reg_data(427)(31 downto 16);     
  Ctrl.MGT.MGT(68).TX_RESETS.reset                   <=  reg_data(428)( 0);               
  Ctrl.MGT.MGT(68).TX_RESETS.reset_pll_and_datapath  <=  reg_data(428)( 1);               
  Ctrl.MGT.MGT(68).TX_RESETS.reset_datapath          <=  reg_data(428)( 2);               
  Ctrl.MGT.MGT(68).TX_RESETS.reset_bufbypass         <=  reg_data(428)( 3);               
  Ctrl.MGT.MGT(68).RX_RESETS.reset                   <=  reg_data(429)( 0);               
  Ctrl.MGT.MGT(68).RX_RESETS.reset_pll_and_datapath  <=  reg_data(429)( 1);               
  Ctrl.MGT.MGT(68).RX_RESETS.reset_datapath          <=  reg_data(429)( 2);               
  Ctrl.MGT.MGT(68).RX_RESETS.reset_bufbypass         <=  reg_data(429)( 3);               
  Ctrl.MGT.MGT(69).DRP.wr_addr                       <=  reg_data(432)( 9 downto  0);     
  Ctrl.MGT.MGT(69).DRP.en                            <=  reg_data(432)(12);               
  Ctrl.MGT.MGT(69).DRP.wr_data                       <=  reg_data(433)(31 downto 16);     
  Ctrl.MGT.MGT(69).TX_RESETS.reset                   <=  reg_data(434)( 0);               
  Ctrl.MGT.MGT(69).TX_RESETS.reset_pll_and_datapath  <=  reg_data(434)( 1);               
  Ctrl.MGT.MGT(69).TX_RESETS.reset_datapath          <=  reg_data(434)( 2);               
  Ctrl.MGT.MGT(69).TX_RESETS.reset_bufbypass         <=  reg_data(434)( 3);               
  Ctrl.MGT.MGT(69).RX_RESETS.reset                   <=  reg_data(435)( 0);               
  Ctrl.MGT.MGT(69).RX_RESETS.reset_pll_and_datapath  <=  reg_data(435)( 1);               
  Ctrl.MGT.MGT(69).RX_RESETS.reset_datapath          <=  reg_data(435)( 2);               
  Ctrl.MGT.MGT(69).RX_RESETS.reset_bufbypass         <=  reg_data(435)( 3);               
  Ctrl.MGT.MGT(70).DRP.wr_addr                       <=  reg_data(438)( 9 downto  0);     
  Ctrl.MGT.MGT(70).DRP.en                            <=  reg_data(438)(12);               
  Ctrl.MGT.MGT(70).DRP.wr_data                       <=  reg_data(439)(31 downto 16);     
  Ctrl.MGT.MGT(70).TX_RESETS.reset                   <=  reg_data(440)( 0);               
  Ctrl.MGT.MGT(70).TX_RESETS.reset_pll_and_datapath  <=  reg_data(440)( 1);               
  Ctrl.MGT.MGT(70).TX_RESETS.reset_datapath          <=  reg_data(440)( 2);               
  Ctrl.MGT.MGT(70).TX_RESETS.reset_bufbypass         <=  reg_data(440)( 3);               
  Ctrl.MGT.MGT(70).RX_RESETS.reset                   <=  reg_data(441)( 0);               
  Ctrl.MGT.MGT(70).RX_RESETS.reset_pll_and_datapath  <=  reg_data(441)( 1);               
  Ctrl.MGT.MGT(70).RX_RESETS.reset_datapath          <=  reg_data(441)( 2);               
  Ctrl.MGT.MGT(70).RX_RESETS.reset_bufbypass         <=  reg_data(441)( 3);               
  Ctrl.MGT.MGT(71).DRP.wr_addr                       <=  reg_data(444)( 9 downto  0);     
  Ctrl.MGT.MGT(71).DRP.en                            <=  reg_data(444)(12);               
  Ctrl.MGT.MGT(71).DRP.wr_data                       <=  reg_data(445)(31 downto 16);     
  Ctrl.MGT.MGT(71).TX_RESETS.reset                   <=  reg_data(446)( 0);               
  Ctrl.MGT.MGT(71).TX_RESETS.reset_pll_and_datapath  <=  reg_data(446)( 1);               
  Ctrl.MGT.MGT(71).TX_RESETS.reset_datapath          <=  reg_data(446)( 2);               
  Ctrl.MGT.MGT(71).TX_RESETS.reset_bufbypass         <=  reg_data(446)( 3);               
  Ctrl.MGT.MGT(71).RX_RESETS.reset                   <=  reg_data(447)( 0);               
  Ctrl.MGT.MGT(71).RX_RESETS.reset_pll_and_datapath  <=  reg_data(447)( 1);               
  Ctrl.MGT.MGT(71).RX_RESETS.reset_datapath          <=  reg_data(447)( 2);               
  Ctrl.MGT.MGT(71).RX_RESETS.reset_bufbypass         <=  reg_data(447)( 3);               
  Ctrl.MGT.MGT(72).DRP.wr_addr                       <=  reg_data(450)( 9 downto  0);     
  Ctrl.MGT.MGT(72).DRP.en                            <=  reg_data(450)(12);               
  Ctrl.MGT.MGT(72).DRP.wr_data                       <=  reg_data(451)(31 downto 16);     
  Ctrl.MGT.MGT(72).TX_RESETS.reset                   <=  reg_data(452)( 0);               
  Ctrl.MGT.MGT(72).TX_RESETS.reset_pll_and_datapath  <=  reg_data(452)( 1);               
  Ctrl.MGT.MGT(72).TX_RESETS.reset_datapath          <=  reg_data(452)( 2);               
  Ctrl.MGT.MGT(72).TX_RESETS.reset_bufbypass         <=  reg_data(452)( 3);               
  Ctrl.MGT.MGT(72).RX_RESETS.reset                   <=  reg_data(453)( 0);               
  Ctrl.MGT.MGT(72).RX_RESETS.reset_pll_and_datapath  <=  reg_data(453)( 1);               
  Ctrl.MGT.MGT(72).RX_RESETS.reset_datapath          <=  reg_data(453)( 2);               
  Ctrl.MGT.MGT(72).RX_RESETS.reset_bufbypass         <=  reg_data(453)( 3);               
  Ctrl.MGT.MGT(73).DRP.wr_addr                       <=  reg_data(456)( 9 downto  0);     
  Ctrl.MGT.MGT(73).DRP.en                            <=  reg_data(456)(12);               
  Ctrl.MGT.MGT(73).DRP.wr_data                       <=  reg_data(457)(31 downto 16);     
  Ctrl.MGT.MGT(73).TX_RESETS.reset                   <=  reg_data(458)( 0);               
  Ctrl.MGT.MGT(73).TX_RESETS.reset_pll_and_datapath  <=  reg_data(458)( 1);               
  Ctrl.MGT.MGT(73).TX_RESETS.reset_datapath          <=  reg_data(458)( 2);               
  Ctrl.MGT.MGT(73).TX_RESETS.reset_bufbypass         <=  reg_data(458)( 3);               
  Ctrl.MGT.MGT(73).RX_RESETS.reset                   <=  reg_data(459)( 0);               
  Ctrl.MGT.MGT(73).RX_RESETS.reset_pll_and_datapath  <=  reg_data(459)( 1);               
  Ctrl.MGT.MGT(73).RX_RESETS.reset_datapath          <=  reg_data(459)( 2);               
  Ctrl.MGT.MGT(73).RX_RESETS.reset_bufbypass         <=  reg_data(459)( 3);               
  Ctrl.MGT.MGT(74).DRP.wr_addr                       <=  reg_data(462)( 9 downto  0);     
  Ctrl.MGT.MGT(74).DRP.en                            <=  reg_data(462)(12);               
  Ctrl.MGT.MGT(74).DRP.wr_data                       <=  reg_data(463)(31 downto 16);     
  Ctrl.MGT.MGT(74).TX_RESETS.reset                   <=  reg_data(464)( 0);               
  Ctrl.MGT.MGT(74).TX_RESETS.reset_pll_and_datapath  <=  reg_data(464)( 1);               
  Ctrl.MGT.MGT(74).TX_RESETS.reset_datapath          <=  reg_data(464)( 2);               
  Ctrl.MGT.MGT(74).TX_RESETS.reset_bufbypass         <=  reg_data(464)( 3);               
  Ctrl.MGT.MGT(74).RX_RESETS.reset                   <=  reg_data(465)( 0);               
  Ctrl.MGT.MGT(74).RX_RESETS.reset_pll_and_datapath  <=  reg_data(465)( 1);               
  Ctrl.MGT.MGT(74).RX_RESETS.reset_datapath          <=  reg_data(465)( 2);               
  Ctrl.MGT.MGT(74).RX_RESETS.reset_bufbypass         <=  reg_data(465)( 3);               
  Ctrl.MGT.MGT(75).DRP.wr_addr                       <=  reg_data(468)( 9 downto  0);     
  Ctrl.MGT.MGT(75).DRP.en                            <=  reg_data(468)(12);               
  Ctrl.MGT.MGT(75).DRP.wr_data                       <=  reg_data(469)(31 downto 16);     
  Ctrl.MGT.MGT(75).TX_RESETS.reset                   <=  reg_data(470)( 0);               
  Ctrl.MGT.MGT(75).TX_RESETS.reset_pll_and_datapath  <=  reg_data(470)( 1);               
  Ctrl.MGT.MGT(75).TX_RESETS.reset_datapath          <=  reg_data(470)( 2);               
  Ctrl.MGT.MGT(75).TX_RESETS.reset_bufbypass         <=  reg_data(470)( 3);               
  Ctrl.MGT.MGT(75).RX_RESETS.reset                   <=  reg_data(471)( 0);               
  Ctrl.MGT.MGT(75).RX_RESETS.reset_pll_and_datapath  <=  reg_data(471)( 1);               
  Ctrl.MGT.MGT(75).RX_RESETS.reset_datapath          <=  reg_data(471)( 2);               
  Ctrl.MGT.MGT(75).RX_RESETS.reset_bufbypass         <=  reg_data(471)( 3);               


  reg_writes: process (clk_axi, reset_axi_n) is
  begin  -- process reg_writes
    if reset_axi_n = '0' then                 -- asynchronous reset (active low)
      reg_data( 1)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.CLOCKING.RESET_MMCM;
      reg_data(18)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).DRP.wr_addr;
      reg_data(18)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).DRP.en;
      reg_data(19)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).DRP.wr_data;
      reg_data(20)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).TX_RESETS.reset;
      reg_data(20)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).TX_RESETS.reset_pll_and_datapath;
      reg_data(20)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).TX_RESETS.reset_datapath;
      reg_data(20)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).TX_RESETS.reset_bufbypass;
      reg_data(21)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).RX_RESETS.reset;
      reg_data(21)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).RX_RESETS.reset_pll_and_datapath;
      reg_data(21)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).RX_RESETS.reset_datapath;
      reg_data(21)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(0).RX_RESETS.reset_bufbypass;
      reg_data(24)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).DRP.wr_addr;
      reg_data(24)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).DRP.en;
      reg_data(25)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).DRP.wr_data;
      reg_data(26)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).TX_RESETS.reset;
      reg_data(26)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).TX_RESETS.reset_pll_and_datapath;
      reg_data(26)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).TX_RESETS.reset_datapath;
      reg_data(26)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).TX_RESETS.reset_bufbypass;
      reg_data(27)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).RX_RESETS.reset;
      reg_data(27)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).RX_RESETS.reset_pll_and_datapath;
      reg_data(27)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).RX_RESETS.reset_datapath;
      reg_data(27)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(1).RX_RESETS.reset_bufbypass;
      reg_data(30)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).DRP.wr_addr;
      reg_data(30)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).DRP.en;
      reg_data(31)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).DRP.wr_data;
      reg_data(32)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).TX_RESETS.reset;
      reg_data(32)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).TX_RESETS.reset_pll_and_datapath;
      reg_data(32)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).TX_RESETS.reset_datapath;
      reg_data(32)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).TX_RESETS.reset_bufbypass;
      reg_data(33)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).RX_RESETS.reset;
      reg_data(33)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).RX_RESETS.reset_pll_and_datapath;
      reg_data(33)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).RX_RESETS.reset_datapath;
      reg_data(33)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(2).RX_RESETS.reset_bufbypass;
      reg_data(36)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).DRP.wr_addr;
      reg_data(36)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).DRP.en;
      reg_data(37)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).DRP.wr_data;
      reg_data(38)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).TX_RESETS.reset;
      reg_data(38)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).TX_RESETS.reset_pll_and_datapath;
      reg_data(38)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).TX_RESETS.reset_datapath;
      reg_data(38)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).TX_RESETS.reset_bufbypass;
      reg_data(39)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).RX_RESETS.reset;
      reg_data(39)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).RX_RESETS.reset_pll_and_datapath;
      reg_data(39)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).RX_RESETS.reset_datapath;
      reg_data(39)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(3).RX_RESETS.reset_bufbypass;
      reg_data(42)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).DRP.wr_addr;
      reg_data(42)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).DRP.en;
      reg_data(43)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).DRP.wr_data;
      reg_data(44)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).TX_RESETS.reset;
      reg_data(44)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).TX_RESETS.reset_pll_and_datapath;
      reg_data(44)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).TX_RESETS.reset_datapath;
      reg_data(44)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).TX_RESETS.reset_bufbypass;
      reg_data(45)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).RX_RESETS.reset;
      reg_data(45)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).RX_RESETS.reset_pll_and_datapath;
      reg_data(45)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).RX_RESETS.reset_datapath;
      reg_data(45)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(4).RX_RESETS.reset_bufbypass;
      reg_data(48)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).DRP.wr_addr;
      reg_data(48)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).DRP.en;
      reg_data(49)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).DRP.wr_data;
      reg_data(50)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).TX_RESETS.reset;
      reg_data(50)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).TX_RESETS.reset_pll_and_datapath;
      reg_data(50)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).TX_RESETS.reset_datapath;
      reg_data(50)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).TX_RESETS.reset_bufbypass;
      reg_data(51)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).RX_RESETS.reset;
      reg_data(51)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).RX_RESETS.reset_pll_and_datapath;
      reg_data(51)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).RX_RESETS.reset_datapath;
      reg_data(51)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(5).RX_RESETS.reset_bufbypass;
      reg_data(54)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).DRP.wr_addr;
      reg_data(54)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).DRP.en;
      reg_data(55)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).DRP.wr_data;
      reg_data(56)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).TX_RESETS.reset;
      reg_data(56)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).TX_RESETS.reset_pll_and_datapath;
      reg_data(56)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).TX_RESETS.reset_datapath;
      reg_data(56)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).TX_RESETS.reset_bufbypass;
      reg_data(57)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).RX_RESETS.reset;
      reg_data(57)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).RX_RESETS.reset_pll_and_datapath;
      reg_data(57)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).RX_RESETS.reset_datapath;
      reg_data(57)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(6).RX_RESETS.reset_bufbypass;
      reg_data(60)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).DRP.wr_addr;
      reg_data(60)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).DRP.en;
      reg_data(61)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).DRP.wr_data;
      reg_data(62)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).TX_RESETS.reset;
      reg_data(62)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).TX_RESETS.reset_pll_and_datapath;
      reg_data(62)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).TX_RESETS.reset_datapath;
      reg_data(62)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).TX_RESETS.reset_bufbypass;
      reg_data(63)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).RX_RESETS.reset;
      reg_data(63)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).RX_RESETS.reset_pll_and_datapath;
      reg_data(63)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).RX_RESETS.reset_datapath;
      reg_data(63)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(7).RX_RESETS.reset_bufbypass;
      reg_data(66)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).DRP.wr_addr;
      reg_data(66)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).DRP.en;
      reg_data(67)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).DRP.wr_data;
      reg_data(68)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).TX_RESETS.reset;
      reg_data(68)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).TX_RESETS.reset_pll_and_datapath;
      reg_data(68)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).TX_RESETS.reset_datapath;
      reg_data(68)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).TX_RESETS.reset_bufbypass;
      reg_data(69)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).RX_RESETS.reset;
      reg_data(69)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).RX_RESETS.reset_pll_and_datapath;
      reg_data(69)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).RX_RESETS.reset_datapath;
      reg_data(69)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(8).RX_RESETS.reset_bufbypass;
      reg_data(72)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).DRP.wr_addr;
      reg_data(72)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).DRP.en;
      reg_data(73)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).DRP.wr_data;
      reg_data(74)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).TX_RESETS.reset;
      reg_data(74)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).TX_RESETS.reset_pll_and_datapath;
      reg_data(74)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).TX_RESETS.reset_datapath;
      reg_data(74)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).TX_RESETS.reset_bufbypass;
      reg_data(75)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).RX_RESETS.reset;
      reg_data(75)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).RX_RESETS.reset_pll_and_datapath;
      reg_data(75)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).RX_RESETS.reset_datapath;
      reg_data(75)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(9).RX_RESETS.reset_bufbypass;
      reg_data(78)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).DRP.wr_addr;
      reg_data(78)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).DRP.en;
      reg_data(79)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).DRP.wr_data;
      reg_data(80)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).TX_RESETS.reset;
      reg_data(80)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).TX_RESETS.reset_pll_and_datapath;
      reg_data(80)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).TX_RESETS.reset_datapath;
      reg_data(80)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).TX_RESETS.reset_bufbypass;
      reg_data(81)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).RX_RESETS.reset;
      reg_data(81)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).RX_RESETS.reset_pll_and_datapath;
      reg_data(81)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).RX_RESETS.reset_datapath;
      reg_data(81)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(10).RX_RESETS.reset_bufbypass;
      reg_data(84)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).DRP.wr_addr;
      reg_data(84)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).DRP.en;
      reg_data(85)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).DRP.wr_data;
      reg_data(86)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).TX_RESETS.reset;
      reg_data(86)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).TX_RESETS.reset_pll_and_datapath;
      reg_data(86)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).TX_RESETS.reset_datapath;
      reg_data(86)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).TX_RESETS.reset_bufbypass;
      reg_data(87)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).RX_RESETS.reset;
      reg_data(87)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).RX_RESETS.reset_pll_and_datapath;
      reg_data(87)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).RX_RESETS.reset_datapath;
      reg_data(87)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(11).RX_RESETS.reset_bufbypass;
      reg_data(90)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).DRP.wr_addr;
      reg_data(90)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).DRP.en;
      reg_data(91)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).DRP.wr_data;
      reg_data(92)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).TX_RESETS.reset;
      reg_data(92)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).TX_RESETS.reset_pll_and_datapath;
      reg_data(92)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).TX_RESETS.reset_datapath;
      reg_data(92)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).TX_RESETS.reset_bufbypass;
      reg_data(93)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).RX_RESETS.reset;
      reg_data(93)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).RX_RESETS.reset_pll_and_datapath;
      reg_data(93)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).RX_RESETS.reset_datapath;
      reg_data(93)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(12).RX_RESETS.reset_bufbypass;
      reg_data(96)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).DRP.wr_addr;
      reg_data(96)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).DRP.en;
      reg_data(97)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).DRP.wr_data;
      reg_data(98)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).TX_RESETS.reset;
      reg_data(98)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).TX_RESETS.reset_pll_and_datapath;
      reg_data(98)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).TX_RESETS.reset_datapath;
      reg_data(98)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).TX_RESETS.reset_bufbypass;
      reg_data(99)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).RX_RESETS.reset;
      reg_data(99)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).RX_RESETS.reset_pll_and_datapath;
      reg_data(99)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).RX_RESETS.reset_datapath;
      reg_data(99)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(13).RX_RESETS.reset_bufbypass;
      reg_data(102)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).DRP.wr_addr;
      reg_data(102)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).DRP.en;
      reg_data(103)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).DRP.wr_data;
      reg_data(104)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).TX_RESETS.reset;
      reg_data(104)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).TX_RESETS.reset_pll_and_datapath;
      reg_data(104)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).TX_RESETS.reset_datapath;
      reg_data(104)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).TX_RESETS.reset_bufbypass;
      reg_data(105)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).RX_RESETS.reset;
      reg_data(105)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).RX_RESETS.reset_pll_and_datapath;
      reg_data(105)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).RX_RESETS.reset_datapath;
      reg_data(105)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(14).RX_RESETS.reset_bufbypass;
      reg_data(108)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).DRP.wr_addr;
      reg_data(108)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).DRP.en;
      reg_data(109)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).DRP.wr_data;
      reg_data(110)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).TX_RESETS.reset;
      reg_data(110)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).TX_RESETS.reset_pll_and_datapath;
      reg_data(110)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).TX_RESETS.reset_datapath;
      reg_data(110)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).TX_RESETS.reset_bufbypass;
      reg_data(111)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).RX_RESETS.reset;
      reg_data(111)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).RX_RESETS.reset_pll_and_datapath;
      reg_data(111)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).RX_RESETS.reset_datapath;
      reg_data(111)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(15).RX_RESETS.reset_bufbypass;
      reg_data(114)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).DRP.wr_addr;
      reg_data(114)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).DRP.en;
      reg_data(115)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).DRP.wr_data;
      reg_data(116)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).TX_RESETS.reset;
      reg_data(116)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).TX_RESETS.reset_pll_and_datapath;
      reg_data(116)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).TX_RESETS.reset_datapath;
      reg_data(116)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).TX_RESETS.reset_bufbypass;
      reg_data(117)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).RX_RESETS.reset;
      reg_data(117)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).RX_RESETS.reset_pll_and_datapath;
      reg_data(117)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).RX_RESETS.reset_datapath;
      reg_data(117)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(16).RX_RESETS.reset_bufbypass;
      reg_data(120)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).DRP.wr_addr;
      reg_data(120)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).DRP.en;
      reg_data(121)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).DRP.wr_data;
      reg_data(122)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).TX_RESETS.reset;
      reg_data(122)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).TX_RESETS.reset_pll_and_datapath;
      reg_data(122)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).TX_RESETS.reset_datapath;
      reg_data(122)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).TX_RESETS.reset_bufbypass;
      reg_data(123)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).RX_RESETS.reset;
      reg_data(123)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).RX_RESETS.reset_pll_and_datapath;
      reg_data(123)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).RX_RESETS.reset_datapath;
      reg_data(123)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(17).RX_RESETS.reset_bufbypass;
      reg_data(126)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).DRP.wr_addr;
      reg_data(126)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).DRP.en;
      reg_data(127)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).DRP.wr_data;
      reg_data(128)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).TX_RESETS.reset;
      reg_data(128)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).TX_RESETS.reset_pll_and_datapath;
      reg_data(128)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).TX_RESETS.reset_datapath;
      reg_data(128)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).TX_RESETS.reset_bufbypass;
      reg_data(129)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).RX_RESETS.reset;
      reg_data(129)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).RX_RESETS.reset_pll_and_datapath;
      reg_data(129)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).RX_RESETS.reset_datapath;
      reg_data(129)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(18).RX_RESETS.reset_bufbypass;
      reg_data(132)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).DRP.wr_addr;
      reg_data(132)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).DRP.en;
      reg_data(133)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).DRP.wr_data;
      reg_data(134)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).TX_RESETS.reset;
      reg_data(134)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).TX_RESETS.reset_pll_and_datapath;
      reg_data(134)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).TX_RESETS.reset_datapath;
      reg_data(134)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).TX_RESETS.reset_bufbypass;
      reg_data(135)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).RX_RESETS.reset;
      reg_data(135)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).RX_RESETS.reset_pll_and_datapath;
      reg_data(135)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).RX_RESETS.reset_datapath;
      reg_data(135)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(19).RX_RESETS.reset_bufbypass;
      reg_data(138)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).DRP.wr_addr;
      reg_data(138)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).DRP.en;
      reg_data(139)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).DRP.wr_data;
      reg_data(140)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).TX_RESETS.reset;
      reg_data(140)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).TX_RESETS.reset_pll_and_datapath;
      reg_data(140)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).TX_RESETS.reset_datapath;
      reg_data(140)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).TX_RESETS.reset_bufbypass;
      reg_data(141)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).RX_RESETS.reset;
      reg_data(141)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).RX_RESETS.reset_pll_and_datapath;
      reg_data(141)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).RX_RESETS.reset_datapath;
      reg_data(141)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(20).RX_RESETS.reset_bufbypass;
      reg_data(144)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).DRP.wr_addr;
      reg_data(144)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).DRP.en;
      reg_data(145)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).DRP.wr_data;
      reg_data(146)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).TX_RESETS.reset;
      reg_data(146)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).TX_RESETS.reset_pll_and_datapath;
      reg_data(146)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).TX_RESETS.reset_datapath;
      reg_data(146)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).TX_RESETS.reset_bufbypass;
      reg_data(147)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).RX_RESETS.reset;
      reg_data(147)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).RX_RESETS.reset_pll_and_datapath;
      reg_data(147)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).RX_RESETS.reset_datapath;
      reg_data(147)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(21).RX_RESETS.reset_bufbypass;
      reg_data(150)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).DRP.wr_addr;
      reg_data(150)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).DRP.en;
      reg_data(151)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).DRP.wr_data;
      reg_data(152)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).TX_RESETS.reset;
      reg_data(152)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).TX_RESETS.reset_pll_and_datapath;
      reg_data(152)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).TX_RESETS.reset_datapath;
      reg_data(152)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).TX_RESETS.reset_bufbypass;
      reg_data(153)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).RX_RESETS.reset;
      reg_data(153)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).RX_RESETS.reset_pll_and_datapath;
      reg_data(153)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).RX_RESETS.reset_datapath;
      reg_data(153)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(22).RX_RESETS.reset_bufbypass;
      reg_data(156)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).DRP.wr_addr;
      reg_data(156)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).DRP.en;
      reg_data(157)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).DRP.wr_data;
      reg_data(158)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).TX_RESETS.reset;
      reg_data(158)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).TX_RESETS.reset_pll_and_datapath;
      reg_data(158)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).TX_RESETS.reset_datapath;
      reg_data(158)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).TX_RESETS.reset_bufbypass;
      reg_data(159)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).RX_RESETS.reset;
      reg_data(159)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).RX_RESETS.reset_pll_and_datapath;
      reg_data(159)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).RX_RESETS.reset_datapath;
      reg_data(159)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(23).RX_RESETS.reset_bufbypass;
      reg_data(162)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).DRP.wr_addr;
      reg_data(162)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).DRP.en;
      reg_data(163)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).DRP.wr_data;
      reg_data(164)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).TX_RESETS.reset;
      reg_data(164)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).TX_RESETS.reset_pll_and_datapath;
      reg_data(164)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).TX_RESETS.reset_datapath;
      reg_data(164)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).TX_RESETS.reset_bufbypass;
      reg_data(165)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).RX_RESETS.reset;
      reg_data(165)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).RX_RESETS.reset_pll_and_datapath;
      reg_data(165)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).RX_RESETS.reset_datapath;
      reg_data(165)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(24).RX_RESETS.reset_bufbypass;
      reg_data(168)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).DRP.wr_addr;
      reg_data(168)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).DRP.en;
      reg_data(169)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).DRP.wr_data;
      reg_data(170)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).TX_RESETS.reset;
      reg_data(170)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).TX_RESETS.reset_pll_and_datapath;
      reg_data(170)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).TX_RESETS.reset_datapath;
      reg_data(170)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).TX_RESETS.reset_bufbypass;
      reg_data(171)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).RX_RESETS.reset;
      reg_data(171)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).RX_RESETS.reset_pll_and_datapath;
      reg_data(171)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).RX_RESETS.reset_datapath;
      reg_data(171)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(25).RX_RESETS.reset_bufbypass;
      reg_data(174)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).DRP.wr_addr;
      reg_data(174)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).DRP.en;
      reg_data(175)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).DRP.wr_data;
      reg_data(176)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).TX_RESETS.reset;
      reg_data(176)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).TX_RESETS.reset_pll_and_datapath;
      reg_data(176)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).TX_RESETS.reset_datapath;
      reg_data(176)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).TX_RESETS.reset_bufbypass;
      reg_data(177)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).RX_RESETS.reset;
      reg_data(177)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).RX_RESETS.reset_pll_and_datapath;
      reg_data(177)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).RX_RESETS.reset_datapath;
      reg_data(177)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(26).RX_RESETS.reset_bufbypass;
      reg_data(180)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).DRP.wr_addr;
      reg_data(180)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).DRP.en;
      reg_data(181)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).DRP.wr_data;
      reg_data(182)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).TX_RESETS.reset;
      reg_data(182)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).TX_RESETS.reset_pll_and_datapath;
      reg_data(182)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).TX_RESETS.reset_datapath;
      reg_data(182)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).TX_RESETS.reset_bufbypass;
      reg_data(183)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).RX_RESETS.reset;
      reg_data(183)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).RX_RESETS.reset_pll_and_datapath;
      reg_data(183)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).RX_RESETS.reset_datapath;
      reg_data(183)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(27).RX_RESETS.reset_bufbypass;
      reg_data(186)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).DRP.wr_addr;
      reg_data(186)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).DRP.en;
      reg_data(187)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).DRP.wr_data;
      reg_data(188)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).TX_RESETS.reset;
      reg_data(188)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).TX_RESETS.reset_pll_and_datapath;
      reg_data(188)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).TX_RESETS.reset_datapath;
      reg_data(188)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).TX_RESETS.reset_bufbypass;
      reg_data(189)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).RX_RESETS.reset;
      reg_data(189)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).RX_RESETS.reset_pll_and_datapath;
      reg_data(189)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).RX_RESETS.reset_datapath;
      reg_data(189)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(28).RX_RESETS.reset_bufbypass;
      reg_data(192)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).DRP.wr_addr;
      reg_data(192)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).DRP.en;
      reg_data(193)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).DRP.wr_data;
      reg_data(194)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).TX_RESETS.reset;
      reg_data(194)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).TX_RESETS.reset_pll_and_datapath;
      reg_data(194)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).TX_RESETS.reset_datapath;
      reg_data(194)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).TX_RESETS.reset_bufbypass;
      reg_data(195)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).RX_RESETS.reset;
      reg_data(195)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).RX_RESETS.reset_pll_and_datapath;
      reg_data(195)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).RX_RESETS.reset_datapath;
      reg_data(195)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(29).RX_RESETS.reset_bufbypass;
      reg_data(198)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).DRP.wr_addr;
      reg_data(198)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).DRP.en;
      reg_data(199)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).DRP.wr_data;
      reg_data(200)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).TX_RESETS.reset;
      reg_data(200)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).TX_RESETS.reset_pll_and_datapath;
      reg_data(200)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).TX_RESETS.reset_datapath;
      reg_data(200)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).TX_RESETS.reset_bufbypass;
      reg_data(201)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).RX_RESETS.reset;
      reg_data(201)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).RX_RESETS.reset_pll_and_datapath;
      reg_data(201)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).RX_RESETS.reset_datapath;
      reg_data(201)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(30).RX_RESETS.reset_bufbypass;
      reg_data(204)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).DRP.wr_addr;
      reg_data(204)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).DRP.en;
      reg_data(205)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).DRP.wr_data;
      reg_data(206)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).TX_RESETS.reset;
      reg_data(206)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).TX_RESETS.reset_pll_and_datapath;
      reg_data(206)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).TX_RESETS.reset_datapath;
      reg_data(206)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).TX_RESETS.reset_bufbypass;
      reg_data(207)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).RX_RESETS.reset;
      reg_data(207)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).RX_RESETS.reset_pll_and_datapath;
      reg_data(207)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).RX_RESETS.reset_datapath;
      reg_data(207)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(31).RX_RESETS.reset_bufbypass;
      reg_data(210)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).DRP.wr_addr;
      reg_data(210)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).DRP.en;
      reg_data(211)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).DRP.wr_data;
      reg_data(212)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).TX_RESETS.reset;
      reg_data(212)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).TX_RESETS.reset_pll_and_datapath;
      reg_data(212)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).TX_RESETS.reset_datapath;
      reg_data(212)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).TX_RESETS.reset_bufbypass;
      reg_data(213)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).RX_RESETS.reset;
      reg_data(213)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).RX_RESETS.reset_pll_and_datapath;
      reg_data(213)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).RX_RESETS.reset_datapath;
      reg_data(213)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(32).RX_RESETS.reset_bufbypass;
      reg_data(216)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).DRP.wr_addr;
      reg_data(216)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).DRP.en;
      reg_data(217)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).DRP.wr_data;
      reg_data(218)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).TX_RESETS.reset;
      reg_data(218)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).TX_RESETS.reset_pll_and_datapath;
      reg_data(218)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).TX_RESETS.reset_datapath;
      reg_data(218)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).TX_RESETS.reset_bufbypass;
      reg_data(219)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).RX_RESETS.reset;
      reg_data(219)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).RX_RESETS.reset_pll_and_datapath;
      reg_data(219)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).RX_RESETS.reset_datapath;
      reg_data(219)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(33).RX_RESETS.reset_bufbypass;
      reg_data(222)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).DRP.wr_addr;
      reg_data(222)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).DRP.en;
      reg_data(223)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).DRP.wr_data;
      reg_data(224)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).TX_RESETS.reset;
      reg_data(224)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).TX_RESETS.reset_pll_and_datapath;
      reg_data(224)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).TX_RESETS.reset_datapath;
      reg_data(224)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).TX_RESETS.reset_bufbypass;
      reg_data(225)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).RX_RESETS.reset;
      reg_data(225)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).RX_RESETS.reset_pll_and_datapath;
      reg_data(225)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).RX_RESETS.reset_datapath;
      reg_data(225)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(34).RX_RESETS.reset_bufbypass;
      reg_data(228)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).DRP.wr_addr;
      reg_data(228)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).DRP.en;
      reg_data(229)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).DRP.wr_data;
      reg_data(230)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).TX_RESETS.reset;
      reg_data(230)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).TX_RESETS.reset_pll_and_datapath;
      reg_data(230)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).TX_RESETS.reset_datapath;
      reg_data(230)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).TX_RESETS.reset_bufbypass;
      reg_data(231)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).RX_RESETS.reset;
      reg_data(231)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).RX_RESETS.reset_pll_and_datapath;
      reg_data(231)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).RX_RESETS.reset_datapath;
      reg_data(231)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(35).RX_RESETS.reset_bufbypass;
      reg_data(234)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).DRP.wr_addr;
      reg_data(234)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).DRP.en;
      reg_data(235)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).DRP.wr_data;
      reg_data(236)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).TX_RESETS.reset;
      reg_data(236)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).TX_RESETS.reset_pll_and_datapath;
      reg_data(236)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).TX_RESETS.reset_datapath;
      reg_data(236)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).TX_RESETS.reset_bufbypass;
      reg_data(237)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).RX_RESETS.reset;
      reg_data(237)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).RX_RESETS.reset_pll_and_datapath;
      reg_data(237)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).RX_RESETS.reset_datapath;
      reg_data(237)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(36).RX_RESETS.reset_bufbypass;
      reg_data(240)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).DRP.wr_addr;
      reg_data(240)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).DRP.en;
      reg_data(241)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).DRP.wr_data;
      reg_data(242)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).TX_RESETS.reset;
      reg_data(242)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).TX_RESETS.reset_pll_and_datapath;
      reg_data(242)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).TX_RESETS.reset_datapath;
      reg_data(242)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).TX_RESETS.reset_bufbypass;
      reg_data(243)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).RX_RESETS.reset;
      reg_data(243)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).RX_RESETS.reset_pll_and_datapath;
      reg_data(243)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).RX_RESETS.reset_datapath;
      reg_data(243)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(37).RX_RESETS.reset_bufbypass;
      reg_data(246)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).DRP.wr_addr;
      reg_data(246)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).DRP.en;
      reg_data(247)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).DRP.wr_data;
      reg_data(248)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).TX_RESETS.reset;
      reg_data(248)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).TX_RESETS.reset_pll_and_datapath;
      reg_data(248)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).TX_RESETS.reset_datapath;
      reg_data(248)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).TX_RESETS.reset_bufbypass;
      reg_data(249)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).RX_RESETS.reset;
      reg_data(249)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).RX_RESETS.reset_pll_and_datapath;
      reg_data(249)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).RX_RESETS.reset_datapath;
      reg_data(249)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(38).RX_RESETS.reset_bufbypass;
      reg_data(252)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).DRP.wr_addr;
      reg_data(252)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).DRP.en;
      reg_data(253)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).DRP.wr_data;
      reg_data(254)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).TX_RESETS.reset;
      reg_data(254)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).TX_RESETS.reset_pll_and_datapath;
      reg_data(254)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).TX_RESETS.reset_datapath;
      reg_data(254)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).TX_RESETS.reset_bufbypass;
      reg_data(255)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).RX_RESETS.reset;
      reg_data(255)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).RX_RESETS.reset_pll_and_datapath;
      reg_data(255)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).RX_RESETS.reset_datapath;
      reg_data(255)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(39).RX_RESETS.reset_bufbypass;
      reg_data(258)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).DRP.wr_addr;
      reg_data(258)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).DRP.en;
      reg_data(259)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).DRP.wr_data;
      reg_data(260)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).TX_RESETS.reset;
      reg_data(260)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).TX_RESETS.reset_pll_and_datapath;
      reg_data(260)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).TX_RESETS.reset_datapath;
      reg_data(260)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).TX_RESETS.reset_bufbypass;
      reg_data(261)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).RX_RESETS.reset;
      reg_data(261)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).RX_RESETS.reset_pll_and_datapath;
      reg_data(261)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).RX_RESETS.reset_datapath;
      reg_data(261)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(40).RX_RESETS.reset_bufbypass;
      reg_data(264)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).DRP.wr_addr;
      reg_data(264)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).DRP.en;
      reg_data(265)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).DRP.wr_data;
      reg_data(266)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).TX_RESETS.reset;
      reg_data(266)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).TX_RESETS.reset_pll_and_datapath;
      reg_data(266)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).TX_RESETS.reset_datapath;
      reg_data(266)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).TX_RESETS.reset_bufbypass;
      reg_data(267)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).RX_RESETS.reset;
      reg_data(267)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).RX_RESETS.reset_pll_and_datapath;
      reg_data(267)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).RX_RESETS.reset_datapath;
      reg_data(267)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(41).RX_RESETS.reset_bufbypass;
      reg_data(270)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).DRP.wr_addr;
      reg_data(270)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).DRP.en;
      reg_data(271)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).DRP.wr_data;
      reg_data(272)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).TX_RESETS.reset;
      reg_data(272)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).TX_RESETS.reset_pll_and_datapath;
      reg_data(272)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).TX_RESETS.reset_datapath;
      reg_data(272)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).TX_RESETS.reset_bufbypass;
      reg_data(273)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).RX_RESETS.reset;
      reg_data(273)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).RX_RESETS.reset_pll_and_datapath;
      reg_data(273)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).RX_RESETS.reset_datapath;
      reg_data(273)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(42).RX_RESETS.reset_bufbypass;
      reg_data(276)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).DRP.wr_addr;
      reg_data(276)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).DRP.en;
      reg_data(277)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).DRP.wr_data;
      reg_data(278)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).TX_RESETS.reset;
      reg_data(278)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).TX_RESETS.reset_pll_and_datapath;
      reg_data(278)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).TX_RESETS.reset_datapath;
      reg_data(278)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).TX_RESETS.reset_bufbypass;
      reg_data(279)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).RX_RESETS.reset;
      reg_data(279)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).RX_RESETS.reset_pll_and_datapath;
      reg_data(279)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).RX_RESETS.reset_datapath;
      reg_data(279)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(43).RX_RESETS.reset_bufbypass;
      reg_data(282)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).DRP.wr_addr;
      reg_data(282)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).DRP.en;
      reg_data(283)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).DRP.wr_data;
      reg_data(284)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).TX_RESETS.reset;
      reg_data(284)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).TX_RESETS.reset_pll_and_datapath;
      reg_data(284)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).TX_RESETS.reset_datapath;
      reg_data(284)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).TX_RESETS.reset_bufbypass;
      reg_data(285)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).RX_RESETS.reset;
      reg_data(285)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).RX_RESETS.reset_pll_and_datapath;
      reg_data(285)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).RX_RESETS.reset_datapath;
      reg_data(285)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(44).RX_RESETS.reset_bufbypass;
      reg_data(288)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).DRP.wr_addr;
      reg_data(288)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).DRP.en;
      reg_data(289)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).DRP.wr_data;
      reg_data(290)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).TX_RESETS.reset;
      reg_data(290)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).TX_RESETS.reset_pll_and_datapath;
      reg_data(290)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).TX_RESETS.reset_datapath;
      reg_data(290)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).TX_RESETS.reset_bufbypass;
      reg_data(291)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).RX_RESETS.reset;
      reg_data(291)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).RX_RESETS.reset_pll_and_datapath;
      reg_data(291)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).RX_RESETS.reset_datapath;
      reg_data(291)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(45).RX_RESETS.reset_bufbypass;
      reg_data(294)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).DRP.wr_addr;
      reg_data(294)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).DRP.en;
      reg_data(295)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).DRP.wr_data;
      reg_data(296)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).TX_RESETS.reset;
      reg_data(296)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).TX_RESETS.reset_pll_and_datapath;
      reg_data(296)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).TX_RESETS.reset_datapath;
      reg_data(296)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).TX_RESETS.reset_bufbypass;
      reg_data(297)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).RX_RESETS.reset;
      reg_data(297)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).RX_RESETS.reset_pll_and_datapath;
      reg_data(297)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).RX_RESETS.reset_datapath;
      reg_data(297)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(46).RX_RESETS.reset_bufbypass;
      reg_data(300)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).DRP.wr_addr;
      reg_data(300)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).DRP.en;
      reg_data(301)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).DRP.wr_data;
      reg_data(302)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).TX_RESETS.reset;
      reg_data(302)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).TX_RESETS.reset_pll_and_datapath;
      reg_data(302)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).TX_RESETS.reset_datapath;
      reg_data(302)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).TX_RESETS.reset_bufbypass;
      reg_data(303)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).RX_RESETS.reset;
      reg_data(303)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).RX_RESETS.reset_pll_and_datapath;
      reg_data(303)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).RX_RESETS.reset_datapath;
      reg_data(303)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(47).RX_RESETS.reset_bufbypass;
      reg_data(306)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).DRP.wr_addr;
      reg_data(306)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).DRP.en;
      reg_data(307)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).DRP.wr_data;
      reg_data(308)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).TX_RESETS.reset;
      reg_data(308)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).TX_RESETS.reset_pll_and_datapath;
      reg_data(308)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).TX_RESETS.reset_datapath;
      reg_data(308)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).TX_RESETS.reset_bufbypass;
      reg_data(309)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).RX_RESETS.reset;
      reg_data(309)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).RX_RESETS.reset_pll_and_datapath;
      reg_data(309)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).RX_RESETS.reset_datapath;
      reg_data(309)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(48).RX_RESETS.reset_bufbypass;
      reg_data(312)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).DRP.wr_addr;
      reg_data(312)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).DRP.en;
      reg_data(313)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).DRP.wr_data;
      reg_data(314)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).TX_RESETS.reset;
      reg_data(314)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).TX_RESETS.reset_pll_and_datapath;
      reg_data(314)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).TX_RESETS.reset_datapath;
      reg_data(314)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).TX_RESETS.reset_bufbypass;
      reg_data(315)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).RX_RESETS.reset;
      reg_data(315)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).RX_RESETS.reset_pll_and_datapath;
      reg_data(315)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).RX_RESETS.reset_datapath;
      reg_data(315)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(49).RX_RESETS.reset_bufbypass;
      reg_data(318)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).DRP.wr_addr;
      reg_data(318)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).DRP.en;
      reg_data(319)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).DRP.wr_data;
      reg_data(320)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).TX_RESETS.reset;
      reg_data(320)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).TX_RESETS.reset_pll_and_datapath;
      reg_data(320)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).TX_RESETS.reset_datapath;
      reg_data(320)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).TX_RESETS.reset_bufbypass;
      reg_data(321)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).RX_RESETS.reset;
      reg_data(321)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).RX_RESETS.reset_pll_and_datapath;
      reg_data(321)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).RX_RESETS.reset_datapath;
      reg_data(321)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(50).RX_RESETS.reset_bufbypass;
      reg_data(324)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).DRP.wr_addr;
      reg_data(324)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).DRP.en;
      reg_data(325)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).DRP.wr_data;
      reg_data(326)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).TX_RESETS.reset;
      reg_data(326)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).TX_RESETS.reset_pll_and_datapath;
      reg_data(326)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).TX_RESETS.reset_datapath;
      reg_data(326)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).TX_RESETS.reset_bufbypass;
      reg_data(327)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).RX_RESETS.reset;
      reg_data(327)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).RX_RESETS.reset_pll_and_datapath;
      reg_data(327)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).RX_RESETS.reset_datapath;
      reg_data(327)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(51).RX_RESETS.reset_bufbypass;
      reg_data(330)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).DRP.wr_addr;
      reg_data(330)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).DRP.en;
      reg_data(331)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).DRP.wr_data;
      reg_data(332)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).TX_RESETS.reset;
      reg_data(332)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).TX_RESETS.reset_pll_and_datapath;
      reg_data(332)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).TX_RESETS.reset_datapath;
      reg_data(332)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).TX_RESETS.reset_bufbypass;
      reg_data(333)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).RX_RESETS.reset;
      reg_data(333)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).RX_RESETS.reset_pll_and_datapath;
      reg_data(333)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).RX_RESETS.reset_datapath;
      reg_data(333)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(52).RX_RESETS.reset_bufbypass;
      reg_data(336)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).DRP.wr_addr;
      reg_data(336)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).DRP.en;
      reg_data(337)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).DRP.wr_data;
      reg_data(338)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).TX_RESETS.reset;
      reg_data(338)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).TX_RESETS.reset_pll_and_datapath;
      reg_data(338)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).TX_RESETS.reset_datapath;
      reg_data(338)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).TX_RESETS.reset_bufbypass;
      reg_data(339)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).RX_RESETS.reset;
      reg_data(339)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).RX_RESETS.reset_pll_and_datapath;
      reg_data(339)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).RX_RESETS.reset_datapath;
      reg_data(339)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(53).RX_RESETS.reset_bufbypass;
      reg_data(342)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).DRP.wr_addr;
      reg_data(342)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).DRP.en;
      reg_data(343)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).DRP.wr_data;
      reg_data(344)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).TX_RESETS.reset;
      reg_data(344)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).TX_RESETS.reset_pll_and_datapath;
      reg_data(344)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).TX_RESETS.reset_datapath;
      reg_data(344)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).TX_RESETS.reset_bufbypass;
      reg_data(345)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).RX_RESETS.reset;
      reg_data(345)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).RX_RESETS.reset_pll_and_datapath;
      reg_data(345)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).RX_RESETS.reset_datapath;
      reg_data(345)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(54).RX_RESETS.reset_bufbypass;
      reg_data(348)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).DRP.wr_addr;
      reg_data(348)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).DRP.en;
      reg_data(349)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).DRP.wr_data;
      reg_data(350)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).TX_RESETS.reset;
      reg_data(350)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).TX_RESETS.reset_pll_and_datapath;
      reg_data(350)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).TX_RESETS.reset_datapath;
      reg_data(350)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).TX_RESETS.reset_bufbypass;
      reg_data(351)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).RX_RESETS.reset;
      reg_data(351)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).RX_RESETS.reset_pll_and_datapath;
      reg_data(351)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).RX_RESETS.reset_datapath;
      reg_data(351)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(55).RX_RESETS.reset_bufbypass;
      reg_data(354)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).DRP.wr_addr;
      reg_data(354)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).DRP.en;
      reg_data(355)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).DRP.wr_data;
      reg_data(356)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).TX_RESETS.reset;
      reg_data(356)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).TX_RESETS.reset_pll_and_datapath;
      reg_data(356)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).TX_RESETS.reset_datapath;
      reg_data(356)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).TX_RESETS.reset_bufbypass;
      reg_data(357)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).RX_RESETS.reset;
      reg_data(357)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).RX_RESETS.reset_pll_and_datapath;
      reg_data(357)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).RX_RESETS.reset_datapath;
      reg_data(357)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(56).RX_RESETS.reset_bufbypass;
      reg_data(360)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).DRP.wr_addr;
      reg_data(360)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).DRP.en;
      reg_data(361)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).DRP.wr_data;
      reg_data(362)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).TX_RESETS.reset;
      reg_data(362)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).TX_RESETS.reset_pll_and_datapath;
      reg_data(362)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).TX_RESETS.reset_datapath;
      reg_data(362)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).TX_RESETS.reset_bufbypass;
      reg_data(363)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).RX_RESETS.reset;
      reg_data(363)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).RX_RESETS.reset_pll_and_datapath;
      reg_data(363)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).RX_RESETS.reset_datapath;
      reg_data(363)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(57).RX_RESETS.reset_bufbypass;
      reg_data(366)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).DRP.wr_addr;
      reg_data(366)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).DRP.en;
      reg_data(367)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).DRP.wr_data;
      reg_data(368)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).TX_RESETS.reset;
      reg_data(368)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).TX_RESETS.reset_pll_and_datapath;
      reg_data(368)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).TX_RESETS.reset_datapath;
      reg_data(368)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).TX_RESETS.reset_bufbypass;
      reg_data(369)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).RX_RESETS.reset;
      reg_data(369)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).RX_RESETS.reset_pll_and_datapath;
      reg_data(369)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).RX_RESETS.reset_datapath;
      reg_data(369)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(58).RX_RESETS.reset_bufbypass;
      reg_data(372)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).DRP.wr_addr;
      reg_data(372)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).DRP.en;
      reg_data(373)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).DRP.wr_data;
      reg_data(374)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).TX_RESETS.reset;
      reg_data(374)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).TX_RESETS.reset_pll_and_datapath;
      reg_data(374)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).TX_RESETS.reset_datapath;
      reg_data(374)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).TX_RESETS.reset_bufbypass;
      reg_data(375)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).RX_RESETS.reset;
      reg_data(375)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).RX_RESETS.reset_pll_and_datapath;
      reg_data(375)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).RX_RESETS.reset_datapath;
      reg_data(375)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(59).RX_RESETS.reset_bufbypass;
      reg_data(378)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).DRP.wr_addr;
      reg_data(378)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).DRP.en;
      reg_data(379)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).DRP.wr_data;
      reg_data(380)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).TX_RESETS.reset;
      reg_data(380)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).TX_RESETS.reset_pll_and_datapath;
      reg_data(380)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).TX_RESETS.reset_datapath;
      reg_data(380)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).TX_RESETS.reset_bufbypass;
      reg_data(381)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).RX_RESETS.reset;
      reg_data(381)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).RX_RESETS.reset_pll_and_datapath;
      reg_data(381)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).RX_RESETS.reset_datapath;
      reg_data(381)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(60).RX_RESETS.reset_bufbypass;
      reg_data(384)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).DRP.wr_addr;
      reg_data(384)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).DRP.en;
      reg_data(385)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).DRP.wr_data;
      reg_data(386)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).TX_RESETS.reset;
      reg_data(386)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).TX_RESETS.reset_pll_and_datapath;
      reg_data(386)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).TX_RESETS.reset_datapath;
      reg_data(386)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).TX_RESETS.reset_bufbypass;
      reg_data(387)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).RX_RESETS.reset;
      reg_data(387)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).RX_RESETS.reset_pll_and_datapath;
      reg_data(387)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).RX_RESETS.reset_datapath;
      reg_data(387)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(61).RX_RESETS.reset_bufbypass;
      reg_data(390)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).DRP.wr_addr;
      reg_data(390)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).DRP.en;
      reg_data(391)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).DRP.wr_data;
      reg_data(392)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).TX_RESETS.reset;
      reg_data(392)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).TX_RESETS.reset_pll_and_datapath;
      reg_data(392)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).TX_RESETS.reset_datapath;
      reg_data(392)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).TX_RESETS.reset_bufbypass;
      reg_data(393)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).RX_RESETS.reset;
      reg_data(393)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).RX_RESETS.reset_pll_and_datapath;
      reg_data(393)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).RX_RESETS.reset_datapath;
      reg_data(393)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(62).RX_RESETS.reset_bufbypass;
      reg_data(396)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).DRP.wr_addr;
      reg_data(396)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).DRP.en;
      reg_data(397)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).DRP.wr_data;
      reg_data(398)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).TX_RESETS.reset;
      reg_data(398)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).TX_RESETS.reset_pll_and_datapath;
      reg_data(398)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).TX_RESETS.reset_datapath;
      reg_data(398)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).TX_RESETS.reset_bufbypass;
      reg_data(399)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).RX_RESETS.reset;
      reg_data(399)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).RX_RESETS.reset_pll_and_datapath;
      reg_data(399)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).RX_RESETS.reset_datapath;
      reg_data(399)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(63).RX_RESETS.reset_bufbypass;
      reg_data(402)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).DRP.wr_addr;
      reg_data(402)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).DRP.en;
      reg_data(403)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).DRP.wr_data;
      reg_data(404)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).TX_RESETS.reset;
      reg_data(404)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).TX_RESETS.reset_pll_and_datapath;
      reg_data(404)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).TX_RESETS.reset_datapath;
      reg_data(404)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).TX_RESETS.reset_bufbypass;
      reg_data(405)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).RX_RESETS.reset;
      reg_data(405)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).RX_RESETS.reset_pll_and_datapath;
      reg_data(405)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).RX_RESETS.reset_datapath;
      reg_data(405)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(64).RX_RESETS.reset_bufbypass;
      reg_data(408)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).DRP.wr_addr;
      reg_data(408)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).DRP.en;
      reg_data(409)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).DRP.wr_data;
      reg_data(410)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).TX_RESETS.reset;
      reg_data(410)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).TX_RESETS.reset_pll_and_datapath;
      reg_data(410)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).TX_RESETS.reset_datapath;
      reg_data(410)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).TX_RESETS.reset_bufbypass;
      reg_data(411)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).RX_RESETS.reset;
      reg_data(411)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).RX_RESETS.reset_pll_and_datapath;
      reg_data(411)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).RX_RESETS.reset_datapath;
      reg_data(411)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(65).RX_RESETS.reset_bufbypass;
      reg_data(414)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).DRP.wr_addr;
      reg_data(414)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).DRP.en;
      reg_data(415)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).DRP.wr_data;
      reg_data(416)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).TX_RESETS.reset;
      reg_data(416)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).TX_RESETS.reset_pll_and_datapath;
      reg_data(416)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).TX_RESETS.reset_datapath;
      reg_data(416)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).TX_RESETS.reset_bufbypass;
      reg_data(417)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).RX_RESETS.reset;
      reg_data(417)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).RX_RESETS.reset_pll_and_datapath;
      reg_data(417)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).RX_RESETS.reset_datapath;
      reg_data(417)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(66).RX_RESETS.reset_bufbypass;
      reg_data(420)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).DRP.wr_addr;
      reg_data(420)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).DRP.en;
      reg_data(421)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).DRP.wr_data;
      reg_data(422)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).TX_RESETS.reset;
      reg_data(422)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).TX_RESETS.reset_pll_and_datapath;
      reg_data(422)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).TX_RESETS.reset_datapath;
      reg_data(422)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).TX_RESETS.reset_bufbypass;
      reg_data(423)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).RX_RESETS.reset;
      reg_data(423)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).RX_RESETS.reset_pll_and_datapath;
      reg_data(423)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).RX_RESETS.reset_datapath;
      reg_data(423)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(67).RX_RESETS.reset_bufbypass;
      reg_data(426)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).DRP.wr_addr;
      reg_data(426)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).DRP.en;
      reg_data(427)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).DRP.wr_data;
      reg_data(428)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).TX_RESETS.reset;
      reg_data(428)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).TX_RESETS.reset_pll_and_datapath;
      reg_data(428)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).TX_RESETS.reset_datapath;
      reg_data(428)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).TX_RESETS.reset_bufbypass;
      reg_data(429)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).RX_RESETS.reset;
      reg_data(429)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).RX_RESETS.reset_pll_and_datapath;
      reg_data(429)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).RX_RESETS.reset_datapath;
      reg_data(429)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(68).RX_RESETS.reset_bufbypass;
      reg_data(432)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).DRP.wr_addr;
      reg_data(432)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).DRP.en;
      reg_data(433)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).DRP.wr_data;
      reg_data(434)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).TX_RESETS.reset;
      reg_data(434)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).TX_RESETS.reset_pll_and_datapath;
      reg_data(434)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).TX_RESETS.reset_datapath;
      reg_data(434)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).TX_RESETS.reset_bufbypass;
      reg_data(435)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).RX_RESETS.reset;
      reg_data(435)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).RX_RESETS.reset_pll_and_datapath;
      reg_data(435)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).RX_RESETS.reset_datapath;
      reg_data(435)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(69).RX_RESETS.reset_bufbypass;
      reg_data(438)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).DRP.wr_addr;
      reg_data(438)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).DRP.en;
      reg_data(439)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).DRP.wr_data;
      reg_data(440)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).TX_RESETS.reset;
      reg_data(440)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).TX_RESETS.reset_pll_and_datapath;
      reg_data(440)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).TX_RESETS.reset_datapath;
      reg_data(440)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).TX_RESETS.reset_bufbypass;
      reg_data(441)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).RX_RESETS.reset;
      reg_data(441)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).RX_RESETS.reset_pll_and_datapath;
      reg_data(441)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).RX_RESETS.reset_datapath;
      reg_data(441)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(70).RX_RESETS.reset_bufbypass;
      reg_data(444)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).DRP.wr_addr;
      reg_data(444)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).DRP.en;
      reg_data(445)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).DRP.wr_data;
      reg_data(446)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).TX_RESETS.reset;
      reg_data(446)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).TX_RESETS.reset_pll_and_datapath;
      reg_data(446)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).TX_RESETS.reset_datapath;
      reg_data(446)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).TX_RESETS.reset_bufbypass;
      reg_data(447)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).RX_RESETS.reset;
      reg_data(447)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).RX_RESETS.reset_pll_and_datapath;
      reg_data(447)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).RX_RESETS.reset_datapath;
      reg_data(447)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(71).RX_RESETS.reset_bufbypass;
      reg_data(450)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).DRP.wr_addr;
      reg_data(450)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).DRP.en;
      reg_data(451)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).DRP.wr_data;
      reg_data(452)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).TX_RESETS.reset;
      reg_data(452)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).TX_RESETS.reset_pll_and_datapath;
      reg_data(452)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).TX_RESETS.reset_datapath;
      reg_data(452)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).TX_RESETS.reset_bufbypass;
      reg_data(453)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).RX_RESETS.reset;
      reg_data(453)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).RX_RESETS.reset_pll_and_datapath;
      reg_data(453)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).RX_RESETS.reset_datapath;
      reg_data(453)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(72).RX_RESETS.reset_bufbypass;
      reg_data(456)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).DRP.wr_addr;
      reg_data(456)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).DRP.en;
      reg_data(457)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).DRP.wr_data;
      reg_data(458)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).TX_RESETS.reset;
      reg_data(458)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).TX_RESETS.reset_pll_and_datapath;
      reg_data(458)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).TX_RESETS.reset_datapath;
      reg_data(458)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).TX_RESETS.reset_bufbypass;
      reg_data(459)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).RX_RESETS.reset;
      reg_data(459)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).RX_RESETS.reset_pll_and_datapath;
      reg_data(459)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).RX_RESETS.reset_datapath;
      reg_data(459)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(73).RX_RESETS.reset_bufbypass;
      reg_data(462)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).DRP.wr_addr;
      reg_data(462)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).DRP.en;
      reg_data(463)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).DRP.wr_data;
      reg_data(464)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).TX_RESETS.reset;
      reg_data(464)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).TX_RESETS.reset_pll_and_datapath;
      reg_data(464)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).TX_RESETS.reset_datapath;
      reg_data(464)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).TX_RESETS.reset_bufbypass;
      reg_data(465)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).RX_RESETS.reset;
      reg_data(465)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).RX_RESETS.reset_pll_and_datapath;
      reg_data(465)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).RX_RESETS.reset_datapath;
      reg_data(465)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(74).RX_RESETS.reset_bufbypass;
      reg_data(468)( 9 downto  0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).DRP.wr_addr;
      reg_data(468)(12)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).DRP.en;
      reg_data(469)(31 downto 16)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).DRP.wr_data;
      reg_data(470)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).TX_RESETS.reset;
      reg_data(470)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).TX_RESETS.reset_pll_and_datapath;
      reg_data(470)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).TX_RESETS.reset_datapath;
      reg_data(470)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).TX_RESETS.reset_bufbypass;
      reg_data(471)( 0)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).RX_RESETS.reset;
      reg_data(471)( 1)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).RX_RESETS.reset_pll_and_datapath;
      reg_data(471)( 2)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).RX_RESETS.reset_datapath;
      reg_data(471)( 3)  <= DEFAULT_HAL_CORE_CTRL_t.MGT.MGT(75).RX_RESETS.reset_bufbypass;

    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      Ctrl.MGT.MGT(0).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(1).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(2).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(3).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(4).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(5).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(6).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(7).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(8).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(9).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(10).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(11).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(12).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(13).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(14).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(15).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(16).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(17).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(18).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(19).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(20).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(21).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(22).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(23).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(24).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(25).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(26).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(27).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(28).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(29).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(30).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(31).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(32).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(33).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(34).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(35).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(36).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(37).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(38).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(39).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(40).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(41).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(42).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(43).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(44).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(45).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(46).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(47).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(48).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(49).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(50).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(51).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(52).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(53).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(54).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(55).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(56).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(57).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(58).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(59).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(60).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(61).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(62).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(63).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(64).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(65).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(66).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(67).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(68).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(69).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(70).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(71).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(72).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(73).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(74).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(75).DRP.wr_en <= '0';
      

      
      if localWrEn = '1' then
        case to_integer(unsigned(localAddress(8 downto 0))) is
        when 1 => --0x1
          reg_data( 1)( 1)             <=  localWrData( 1);                --
        when 17 => --0x11
          Ctrl.MGT.MGT(0).DRP.wr_en    <=  localWrData( 0);               
        when 18 => --0x12
          reg_data(18)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(18)(12)             <=  localWrData(12);                --DRP Enable
        when 19 => --0x13
          reg_data(19)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 20 => --0x14
          reg_data(20)( 0)             <=  localWrData( 0);                --
          reg_data(20)( 1)             <=  localWrData( 1);                --
          reg_data(20)( 2)             <=  localWrData( 2);                --
          reg_data(20)( 3)             <=  localWrData( 3);                --
        when 21 => --0x15
          reg_data(21)( 0)             <=  localWrData( 0);                --
          reg_data(21)( 1)             <=  localWrData( 1);                --
          reg_data(21)( 2)             <=  localWrData( 2);                --
          reg_data(21)( 3)             <=  localWrData( 3);                --
        when 23 => --0x17
          Ctrl.MGT.MGT(1).DRP.wr_en    <=  localWrData( 0);               
        when 24 => --0x18
          reg_data(24)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(24)(12)             <=  localWrData(12);                --DRP Enable
        when 25 => --0x19
          reg_data(25)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 26 => --0x1a
          reg_data(26)( 0)             <=  localWrData( 0);                --
          reg_data(26)( 1)             <=  localWrData( 1);                --
          reg_data(26)( 2)             <=  localWrData( 2);                --
          reg_data(26)( 3)             <=  localWrData( 3);                --
        when 27 => --0x1b
          reg_data(27)( 0)             <=  localWrData( 0);                --
          reg_data(27)( 1)             <=  localWrData( 1);                --
          reg_data(27)( 2)             <=  localWrData( 2);                --
          reg_data(27)( 3)             <=  localWrData( 3);                --
        when 29 => --0x1d
          Ctrl.MGT.MGT(2).DRP.wr_en    <=  localWrData( 0);               
        when 30 => --0x1e
          reg_data(30)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(30)(12)             <=  localWrData(12);                --DRP Enable
        when 31 => --0x1f
          reg_data(31)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 32 => --0x20
          reg_data(32)( 0)             <=  localWrData( 0);                --
          reg_data(32)( 1)             <=  localWrData( 1);                --
          reg_data(32)( 2)             <=  localWrData( 2);                --
          reg_data(32)( 3)             <=  localWrData( 3);                --
        when 33 => --0x21
          reg_data(33)( 0)             <=  localWrData( 0);                --
          reg_data(33)( 1)             <=  localWrData( 1);                --
          reg_data(33)( 2)             <=  localWrData( 2);                --
          reg_data(33)( 3)             <=  localWrData( 3);                --
        when 35 => --0x23
          Ctrl.MGT.MGT(3).DRP.wr_en    <=  localWrData( 0);               
        when 36 => --0x24
          reg_data(36)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(36)(12)             <=  localWrData(12);                --DRP Enable
        when 37 => --0x25
          reg_data(37)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 38 => --0x26
          reg_data(38)( 0)             <=  localWrData( 0);                --
          reg_data(38)( 1)             <=  localWrData( 1);                --
          reg_data(38)( 2)             <=  localWrData( 2);                --
          reg_data(38)( 3)             <=  localWrData( 3);                --
        when 39 => --0x27
          reg_data(39)( 0)             <=  localWrData( 0);                --
          reg_data(39)( 1)             <=  localWrData( 1);                --
          reg_data(39)( 2)             <=  localWrData( 2);                --
          reg_data(39)( 3)             <=  localWrData( 3);                --
        when 41 => --0x29
          Ctrl.MGT.MGT(4).DRP.wr_en    <=  localWrData( 0);               
        when 42 => --0x2a
          reg_data(42)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(42)(12)             <=  localWrData(12);                --DRP Enable
        when 43 => --0x2b
          reg_data(43)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 44 => --0x2c
          reg_data(44)( 0)             <=  localWrData( 0);                --
          reg_data(44)( 1)             <=  localWrData( 1);                --
          reg_data(44)( 2)             <=  localWrData( 2);                --
          reg_data(44)( 3)             <=  localWrData( 3);                --
        when 45 => --0x2d
          reg_data(45)( 0)             <=  localWrData( 0);                --
          reg_data(45)( 1)             <=  localWrData( 1);                --
          reg_data(45)( 2)             <=  localWrData( 2);                --
          reg_data(45)( 3)             <=  localWrData( 3);                --
        when 47 => --0x2f
          Ctrl.MGT.MGT(5).DRP.wr_en    <=  localWrData( 0);               
        when 48 => --0x30
          reg_data(48)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(48)(12)             <=  localWrData(12);                --DRP Enable
        when 49 => --0x31
          reg_data(49)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 50 => --0x32
          reg_data(50)( 0)             <=  localWrData( 0);                --
          reg_data(50)( 1)             <=  localWrData( 1);                --
          reg_data(50)( 2)             <=  localWrData( 2);                --
          reg_data(50)( 3)             <=  localWrData( 3);                --
        when 51 => --0x33
          reg_data(51)( 0)             <=  localWrData( 0);                --
          reg_data(51)( 1)             <=  localWrData( 1);                --
          reg_data(51)( 2)             <=  localWrData( 2);                --
          reg_data(51)( 3)             <=  localWrData( 3);                --
        when 53 => --0x35
          Ctrl.MGT.MGT(6).DRP.wr_en    <=  localWrData( 0);               
        when 54 => --0x36
          reg_data(54)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(54)(12)             <=  localWrData(12);                --DRP Enable
        when 55 => --0x37
          reg_data(55)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 56 => --0x38
          reg_data(56)( 0)             <=  localWrData( 0);                --
          reg_data(56)( 1)             <=  localWrData( 1);                --
          reg_data(56)( 2)             <=  localWrData( 2);                --
          reg_data(56)( 3)             <=  localWrData( 3);                --
        when 57 => --0x39
          reg_data(57)( 0)             <=  localWrData( 0);                --
          reg_data(57)( 1)             <=  localWrData( 1);                --
          reg_data(57)( 2)             <=  localWrData( 2);                --
          reg_data(57)( 3)             <=  localWrData( 3);                --
        when 59 => --0x3b
          Ctrl.MGT.MGT(7).DRP.wr_en    <=  localWrData( 0);               
        when 60 => --0x3c
          reg_data(60)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(60)(12)             <=  localWrData(12);                --DRP Enable
        when 61 => --0x3d
          reg_data(61)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 62 => --0x3e
          reg_data(62)( 0)             <=  localWrData( 0);                --
          reg_data(62)( 1)             <=  localWrData( 1);                --
          reg_data(62)( 2)             <=  localWrData( 2);                --
          reg_data(62)( 3)             <=  localWrData( 3);                --
        when 63 => --0x3f
          reg_data(63)( 0)             <=  localWrData( 0);                --
          reg_data(63)( 1)             <=  localWrData( 1);                --
          reg_data(63)( 2)             <=  localWrData( 2);                --
          reg_data(63)( 3)             <=  localWrData( 3);                --
        when 65 => --0x41
          Ctrl.MGT.MGT(8).DRP.wr_en    <=  localWrData( 0);               
        when 66 => --0x42
          reg_data(66)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(66)(12)             <=  localWrData(12);                --DRP Enable
        when 67 => --0x43
          reg_data(67)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 68 => --0x44
          reg_data(68)( 0)             <=  localWrData( 0);                --
          reg_data(68)( 1)             <=  localWrData( 1);                --
          reg_data(68)( 2)             <=  localWrData( 2);                --
          reg_data(68)( 3)             <=  localWrData( 3);                --
        when 69 => --0x45
          reg_data(69)( 0)             <=  localWrData( 0);                --
          reg_data(69)( 1)             <=  localWrData( 1);                --
          reg_data(69)( 2)             <=  localWrData( 2);                --
          reg_data(69)( 3)             <=  localWrData( 3);                --
        when 71 => --0x47
          Ctrl.MGT.MGT(9).DRP.wr_en    <=  localWrData( 0);               
        when 72 => --0x48
          reg_data(72)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(72)(12)             <=  localWrData(12);                --DRP Enable
        when 73 => --0x49
          reg_data(73)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 74 => --0x4a
          reg_data(74)( 0)             <=  localWrData( 0);                --
          reg_data(74)( 1)             <=  localWrData( 1);                --
          reg_data(74)( 2)             <=  localWrData( 2);                --
          reg_data(74)( 3)             <=  localWrData( 3);                --
        when 75 => --0x4b
          reg_data(75)( 0)             <=  localWrData( 0);                --
          reg_data(75)( 1)             <=  localWrData( 1);                --
          reg_data(75)( 2)             <=  localWrData( 2);                --
          reg_data(75)( 3)             <=  localWrData( 3);                --
        when 77 => --0x4d
          Ctrl.MGT.MGT(10).DRP.wr_en   <=  localWrData( 0);               
        when 78 => --0x4e
          reg_data(78)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(78)(12)             <=  localWrData(12);                --DRP Enable
        when 79 => --0x4f
          reg_data(79)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 80 => --0x50
          reg_data(80)( 0)             <=  localWrData( 0);                --
          reg_data(80)( 1)             <=  localWrData( 1);                --
          reg_data(80)( 2)             <=  localWrData( 2);                --
          reg_data(80)( 3)             <=  localWrData( 3);                --
        when 81 => --0x51
          reg_data(81)( 0)             <=  localWrData( 0);                --
          reg_data(81)( 1)             <=  localWrData( 1);                --
          reg_data(81)( 2)             <=  localWrData( 2);                --
          reg_data(81)( 3)             <=  localWrData( 3);                --
        when 83 => --0x53
          Ctrl.MGT.MGT(11).DRP.wr_en   <=  localWrData( 0);               
        when 84 => --0x54
          reg_data(84)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(84)(12)             <=  localWrData(12);                --DRP Enable
        when 85 => --0x55
          reg_data(85)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 86 => --0x56
          reg_data(86)( 0)             <=  localWrData( 0);                --
          reg_data(86)( 1)             <=  localWrData( 1);                --
          reg_data(86)( 2)             <=  localWrData( 2);                --
          reg_data(86)( 3)             <=  localWrData( 3);                --
        when 87 => --0x57
          reg_data(87)( 0)             <=  localWrData( 0);                --
          reg_data(87)( 1)             <=  localWrData( 1);                --
          reg_data(87)( 2)             <=  localWrData( 2);                --
          reg_data(87)( 3)             <=  localWrData( 3);                --
        when 89 => --0x59
          Ctrl.MGT.MGT(12).DRP.wr_en   <=  localWrData( 0);               
        when 90 => --0x5a
          reg_data(90)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(90)(12)             <=  localWrData(12);                --DRP Enable
        when 91 => --0x5b
          reg_data(91)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 92 => --0x5c
          reg_data(92)( 0)             <=  localWrData( 0);                --
          reg_data(92)( 1)             <=  localWrData( 1);                --
          reg_data(92)( 2)             <=  localWrData( 2);                --
          reg_data(92)( 3)             <=  localWrData( 3);                --
        when 93 => --0x5d
          reg_data(93)( 0)             <=  localWrData( 0);                --
          reg_data(93)( 1)             <=  localWrData( 1);                --
          reg_data(93)( 2)             <=  localWrData( 2);                --
          reg_data(93)( 3)             <=  localWrData( 3);                --
        when 95 => --0x5f
          Ctrl.MGT.MGT(13).DRP.wr_en   <=  localWrData( 0);               
        when 96 => --0x60
          reg_data(96)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(96)(12)             <=  localWrData(12);                --DRP Enable
        when 97 => --0x61
          reg_data(97)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 98 => --0x62
          reg_data(98)( 0)             <=  localWrData( 0);                --
          reg_data(98)( 1)             <=  localWrData( 1);                --
          reg_data(98)( 2)             <=  localWrData( 2);                --
          reg_data(98)( 3)             <=  localWrData( 3);                --
        when 99 => --0x63
          reg_data(99)( 0)             <=  localWrData( 0);                --
          reg_data(99)( 1)             <=  localWrData( 1);                --
          reg_data(99)( 2)             <=  localWrData( 2);                --
          reg_data(99)( 3)             <=  localWrData( 3);                --
        when 101 => --0x65
          Ctrl.MGT.MGT(14).DRP.wr_en   <=  localWrData( 0);               
        when 102 => --0x66
          reg_data(102)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(102)(12)            <=  localWrData(12);                --DRP Enable
        when 103 => --0x67
          reg_data(103)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 104 => --0x68
          reg_data(104)( 0)            <=  localWrData( 0);                --
          reg_data(104)( 1)            <=  localWrData( 1);                --
          reg_data(104)( 2)            <=  localWrData( 2);                --
          reg_data(104)( 3)            <=  localWrData( 3);                --
        when 105 => --0x69
          reg_data(105)( 0)            <=  localWrData( 0);                --
          reg_data(105)( 1)            <=  localWrData( 1);                --
          reg_data(105)( 2)            <=  localWrData( 2);                --
          reg_data(105)( 3)            <=  localWrData( 3);                --
        when 107 => --0x6b
          Ctrl.MGT.MGT(15).DRP.wr_en   <=  localWrData( 0);               
        when 108 => --0x6c
          reg_data(108)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(108)(12)            <=  localWrData(12);                --DRP Enable
        when 109 => --0x6d
          reg_data(109)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 110 => --0x6e
          reg_data(110)( 0)            <=  localWrData( 0);                --
          reg_data(110)( 1)            <=  localWrData( 1);                --
          reg_data(110)( 2)            <=  localWrData( 2);                --
          reg_data(110)( 3)            <=  localWrData( 3);                --
        when 111 => --0x6f
          reg_data(111)( 0)            <=  localWrData( 0);                --
          reg_data(111)( 1)            <=  localWrData( 1);                --
          reg_data(111)( 2)            <=  localWrData( 2);                --
          reg_data(111)( 3)            <=  localWrData( 3);                --
        when 113 => --0x71
          Ctrl.MGT.MGT(16).DRP.wr_en   <=  localWrData( 0);               
        when 114 => --0x72
          reg_data(114)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(114)(12)            <=  localWrData(12);                --DRP Enable
        when 115 => --0x73
          reg_data(115)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 116 => --0x74
          reg_data(116)( 0)            <=  localWrData( 0);                --
          reg_data(116)( 1)            <=  localWrData( 1);                --
          reg_data(116)( 2)            <=  localWrData( 2);                --
          reg_data(116)( 3)            <=  localWrData( 3);                --
        when 117 => --0x75
          reg_data(117)( 0)            <=  localWrData( 0);                --
          reg_data(117)( 1)            <=  localWrData( 1);                --
          reg_data(117)( 2)            <=  localWrData( 2);                --
          reg_data(117)( 3)            <=  localWrData( 3);                --
        when 119 => --0x77
          Ctrl.MGT.MGT(17).DRP.wr_en   <=  localWrData( 0);               
        when 120 => --0x78
          reg_data(120)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(120)(12)            <=  localWrData(12);                --DRP Enable
        when 121 => --0x79
          reg_data(121)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 122 => --0x7a
          reg_data(122)( 0)            <=  localWrData( 0);                --
          reg_data(122)( 1)            <=  localWrData( 1);                --
          reg_data(122)( 2)            <=  localWrData( 2);                --
          reg_data(122)( 3)            <=  localWrData( 3);                --
        when 123 => --0x7b
          reg_data(123)( 0)            <=  localWrData( 0);                --
          reg_data(123)( 1)            <=  localWrData( 1);                --
          reg_data(123)( 2)            <=  localWrData( 2);                --
          reg_data(123)( 3)            <=  localWrData( 3);                --
        when 125 => --0x7d
          Ctrl.MGT.MGT(18).DRP.wr_en   <=  localWrData( 0);               
        when 126 => --0x7e
          reg_data(126)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(126)(12)            <=  localWrData(12);                --DRP Enable
        when 127 => --0x7f
          reg_data(127)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 128 => --0x80
          reg_data(128)( 0)            <=  localWrData( 0);                --
          reg_data(128)( 1)            <=  localWrData( 1);                --
          reg_data(128)( 2)            <=  localWrData( 2);                --
          reg_data(128)( 3)            <=  localWrData( 3);                --
        when 129 => --0x81
          reg_data(129)( 0)            <=  localWrData( 0);                --
          reg_data(129)( 1)            <=  localWrData( 1);                --
          reg_data(129)( 2)            <=  localWrData( 2);                --
          reg_data(129)( 3)            <=  localWrData( 3);                --
        when 131 => --0x83
          Ctrl.MGT.MGT(19).DRP.wr_en   <=  localWrData( 0);               
        when 132 => --0x84
          reg_data(132)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(132)(12)            <=  localWrData(12);                --DRP Enable
        when 133 => --0x85
          reg_data(133)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 134 => --0x86
          reg_data(134)( 0)            <=  localWrData( 0);                --
          reg_data(134)( 1)            <=  localWrData( 1);                --
          reg_data(134)( 2)            <=  localWrData( 2);                --
          reg_data(134)( 3)            <=  localWrData( 3);                --
        when 135 => --0x87
          reg_data(135)( 0)            <=  localWrData( 0);                --
          reg_data(135)( 1)            <=  localWrData( 1);                --
          reg_data(135)( 2)            <=  localWrData( 2);                --
          reg_data(135)( 3)            <=  localWrData( 3);                --
        when 137 => --0x89
          Ctrl.MGT.MGT(20).DRP.wr_en   <=  localWrData( 0);               
        when 138 => --0x8a
          reg_data(138)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(138)(12)            <=  localWrData(12);                --DRP Enable
        when 139 => --0x8b
          reg_data(139)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 140 => --0x8c
          reg_data(140)( 0)            <=  localWrData( 0);                --
          reg_data(140)( 1)            <=  localWrData( 1);                --
          reg_data(140)( 2)            <=  localWrData( 2);                --
          reg_data(140)( 3)            <=  localWrData( 3);                --
        when 141 => --0x8d
          reg_data(141)( 0)            <=  localWrData( 0);                --
          reg_data(141)( 1)            <=  localWrData( 1);                --
          reg_data(141)( 2)            <=  localWrData( 2);                --
          reg_data(141)( 3)            <=  localWrData( 3);                --
        when 143 => --0x8f
          Ctrl.MGT.MGT(21).DRP.wr_en   <=  localWrData( 0);               
        when 144 => --0x90
          reg_data(144)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(144)(12)            <=  localWrData(12);                --DRP Enable
        when 145 => --0x91
          reg_data(145)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 146 => --0x92
          reg_data(146)( 0)            <=  localWrData( 0);                --
          reg_data(146)( 1)            <=  localWrData( 1);                --
          reg_data(146)( 2)            <=  localWrData( 2);                --
          reg_data(146)( 3)            <=  localWrData( 3);                --
        when 147 => --0x93
          reg_data(147)( 0)            <=  localWrData( 0);                --
          reg_data(147)( 1)            <=  localWrData( 1);                --
          reg_data(147)( 2)            <=  localWrData( 2);                --
          reg_data(147)( 3)            <=  localWrData( 3);                --
        when 149 => --0x95
          Ctrl.MGT.MGT(22).DRP.wr_en   <=  localWrData( 0);               
        when 150 => --0x96
          reg_data(150)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(150)(12)            <=  localWrData(12);                --DRP Enable
        when 151 => --0x97
          reg_data(151)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 152 => --0x98
          reg_data(152)( 0)            <=  localWrData( 0);                --
          reg_data(152)( 1)            <=  localWrData( 1);                --
          reg_data(152)( 2)            <=  localWrData( 2);                --
          reg_data(152)( 3)            <=  localWrData( 3);                --
        when 153 => --0x99
          reg_data(153)( 0)            <=  localWrData( 0);                --
          reg_data(153)( 1)            <=  localWrData( 1);                --
          reg_data(153)( 2)            <=  localWrData( 2);                --
          reg_data(153)( 3)            <=  localWrData( 3);                --
        when 155 => --0x9b
          Ctrl.MGT.MGT(23).DRP.wr_en   <=  localWrData( 0);               
        when 156 => --0x9c
          reg_data(156)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(156)(12)            <=  localWrData(12);                --DRP Enable
        when 157 => --0x9d
          reg_data(157)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 158 => --0x9e
          reg_data(158)( 0)            <=  localWrData( 0);                --
          reg_data(158)( 1)            <=  localWrData( 1);                --
          reg_data(158)( 2)            <=  localWrData( 2);                --
          reg_data(158)( 3)            <=  localWrData( 3);                --
        when 159 => --0x9f
          reg_data(159)( 0)            <=  localWrData( 0);                --
          reg_data(159)( 1)            <=  localWrData( 1);                --
          reg_data(159)( 2)            <=  localWrData( 2);                --
          reg_data(159)( 3)            <=  localWrData( 3);                --
        when 161 => --0xa1
          Ctrl.MGT.MGT(24).DRP.wr_en   <=  localWrData( 0);               
        when 162 => --0xa2
          reg_data(162)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(162)(12)            <=  localWrData(12);                --DRP Enable
        when 163 => --0xa3
          reg_data(163)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 164 => --0xa4
          reg_data(164)( 0)            <=  localWrData( 0);                --
          reg_data(164)( 1)            <=  localWrData( 1);                --
          reg_data(164)( 2)            <=  localWrData( 2);                --
          reg_data(164)( 3)            <=  localWrData( 3);                --
        when 165 => --0xa5
          reg_data(165)( 0)            <=  localWrData( 0);                --
          reg_data(165)( 1)            <=  localWrData( 1);                --
          reg_data(165)( 2)            <=  localWrData( 2);                --
          reg_data(165)( 3)            <=  localWrData( 3);                --
        when 167 => --0xa7
          Ctrl.MGT.MGT(25).DRP.wr_en   <=  localWrData( 0);               
        when 168 => --0xa8
          reg_data(168)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(168)(12)            <=  localWrData(12);                --DRP Enable
        when 169 => --0xa9
          reg_data(169)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 170 => --0xaa
          reg_data(170)( 0)            <=  localWrData( 0);                --
          reg_data(170)( 1)            <=  localWrData( 1);                --
          reg_data(170)( 2)            <=  localWrData( 2);                --
          reg_data(170)( 3)            <=  localWrData( 3);                --
        when 171 => --0xab
          reg_data(171)( 0)            <=  localWrData( 0);                --
          reg_data(171)( 1)            <=  localWrData( 1);                --
          reg_data(171)( 2)            <=  localWrData( 2);                --
          reg_data(171)( 3)            <=  localWrData( 3);                --
        when 173 => --0xad
          Ctrl.MGT.MGT(26).DRP.wr_en   <=  localWrData( 0);               
        when 174 => --0xae
          reg_data(174)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(174)(12)            <=  localWrData(12);                --DRP Enable
        when 175 => --0xaf
          reg_data(175)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 176 => --0xb0
          reg_data(176)( 0)            <=  localWrData( 0);                --
          reg_data(176)( 1)            <=  localWrData( 1);                --
          reg_data(176)( 2)            <=  localWrData( 2);                --
          reg_data(176)( 3)            <=  localWrData( 3);                --
        when 177 => --0xb1
          reg_data(177)( 0)            <=  localWrData( 0);                --
          reg_data(177)( 1)            <=  localWrData( 1);                --
          reg_data(177)( 2)            <=  localWrData( 2);                --
          reg_data(177)( 3)            <=  localWrData( 3);                --
        when 179 => --0xb3
          Ctrl.MGT.MGT(27).DRP.wr_en   <=  localWrData( 0);               
        when 180 => --0xb4
          reg_data(180)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(180)(12)            <=  localWrData(12);                --DRP Enable
        when 181 => --0xb5
          reg_data(181)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 182 => --0xb6
          reg_data(182)( 0)            <=  localWrData( 0);                --
          reg_data(182)( 1)            <=  localWrData( 1);                --
          reg_data(182)( 2)            <=  localWrData( 2);                --
          reg_data(182)( 3)            <=  localWrData( 3);                --
        when 183 => --0xb7
          reg_data(183)( 0)            <=  localWrData( 0);                --
          reg_data(183)( 1)            <=  localWrData( 1);                --
          reg_data(183)( 2)            <=  localWrData( 2);                --
          reg_data(183)( 3)            <=  localWrData( 3);                --
        when 185 => --0xb9
          Ctrl.MGT.MGT(28).DRP.wr_en   <=  localWrData( 0);               
        when 186 => --0xba
          reg_data(186)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(186)(12)            <=  localWrData(12);                --DRP Enable
        when 187 => --0xbb
          reg_data(187)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 188 => --0xbc
          reg_data(188)( 0)            <=  localWrData( 0);                --
          reg_data(188)( 1)            <=  localWrData( 1);                --
          reg_data(188)( 2)            <=  localWrData( 2);                --
          reg_data(188)( 3)            <=  localWrData( 3);                --
        when 189 => --0xbd
          reg_data(189)( 0)            <=  localWrData( 0);                --
          reg_data(189)( 1)            <=  localWrData( 1);                --
          reg_data(189)( 2)            <=  localWrData( 2);                --
          reg_data(189)( 3)            <=  localWrData( 3);                --
        when 191 => --0xbf
          Ctrl.MGT.MGT(29).DRP.wr_en   <=  localWrData( 0);               
        when 192 => --0xc0
          reg_data(192)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(192)(12)            <=  localWrData(12);                --DRP Enable
        when 193 => --0xc1
          reg_data(193)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 194 => --0xc2
          reg_data(194)( 0)            <=  localWrData( 0);                --
          reg_data(194)( 1)            <=  localWrData( 1);                --
          reg_data(194)( 2)            <=  localWrData( 2);                --
          reg_data(194)( 3)            <=  localWrData( 3);                --
        when 195 => --0xc3
          reg_data(195)( 0)            <=  localWrData( 0);                --
          reg_data(195)( 1)            <=  localWrData( 1);                --
          reg_data(195)( 2)            <=  localWrData( 2);                --
          reg_data(195)( 3)            <=  localWrData( 3);                --
        when 197 => --0xc5
          Ctrl.MGT.MGT(30).DRP.wr_en   <=  localWrData( 0);               
        when 198 => --0xc6
          reg_data(198)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(198)(12)            <=  localWrData(12);                --DRP Enable
        when 199 => --0xc7
          reg_data(199)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 200 => --0xc8
          reg_data(200)( 0)            <=  localWrData( 0);                --
          reg_data(200)( 1)            <=  localWrData( 1);                --
          reg_data(200)( 2)            <=  localWrData( 2);                --
          reg_data(200)( 3)            <=  localWrData( 3);                --
        when 201 => --0xc9
          reg_data(201)( 0)            <=  localWrData( 0);                --
          reg_data(201)( 1)            <=  localWrData( 1);                --
          reg_data(201)( 2)            <=  localWrData( 2);                --
          reg_data(201)( 3)            <=  localWrData( 3);                --
        when 203 => --0xcb
          Ctrl.MGT.MGT(31).DRP.wr_en   <=  localWrData( 0);               
        when 204 => --0xcc
          reg_data(204)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(204)(12)            <=  localWrData(12);                --DRP Enable
        when 205 => --0xcd
          reg_data(205)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 206 => --0xce
          reg_data(206)( 0)            <=  localWrData( 0);                --
          reg_data(206)( 1)            <=  localWrData( 1);                --
          reg_data(206)( 2)            <=  localWrData( 2);                --
          reg_data(206)( 3)            <=  localWrData( 3);                --
        when 207 => --0xcf
          reg_data(207)( 0)            <=  localWrData( 0);                --
          reg_data(207)( 1)            <=  localWrData( 1);                --
          reg_data(207)( 2)            <=  localWrData( 2);                --
          reg_data(207)( 3)            <=  localWrData( 3);                --
        when 209 => --0xd1
          Ctrl.MGT.MGT(32).DRP.wr_en   <=  localWrData( 0);               
        when 210 => --0xd2
          reg_data(210)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(210)(12)            <=  localWrData(12);                --DRP Enable
        when 211 => --0xd3
          reg_data(211)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 212 => --0xd4
          reg_data(212)( 0)            <=  localWrData( 0);                --
          reg_data(212)( 1)            <=  localWrData( 1);                --
          reg_data(212)( 2)            <=  localWrData( 2);                --
          reg_data(212)( 3)            <=  localWrData( 3);                --
        when 213 => --0xd5
          reg_data(213)( 0)            <=  localWrData( 0);                --
          reg_data(213)( 1)            <=  localWrData( 1);                --
          reg_data(213)( 2)            <=  localWrData( 2);                --
          reg_data(213)( 3)            <=  localWrData( 3);                --
        when 215 => --0xd7
          Ctrl.MGT.MGT(33).DRP.wr_en   <=  localWrData( 0);               
        when 216 => --0xd8
          reg_data(216)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(216)(12)            <=  localWrData(12);                --DRP Enable
        when 217 => --0xd9
          reg_data(217)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 218 => --0xda
          reg_data(218)( 0)            <=  localWrData( 0);                --
          reg_data(218)( 1)            <=  localWrData( 1);                --
          reg_data(218)( 2)            <=  localWrData( 2);                --
          reg_data(218)( 3)            <=  localWrData( 3);                --
        when 219 => --0xdb
          reg_data(219)( 0)            <=  localWrData( 0);                --
          reg_data(219)( 1)            <=  localWrData( 1);                --
          reg_data(219)( 2)            <=  localWrData( 2);                --
          reg_data(219)( 3)            <=  localWrData( 3);                --
        when 221 => --0xdd
          Ctrl.MGT.MGT(34).DRP.wr_en   <=  localWrData( 0);               
        when 222 => --0xde
          reg_data(222)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(222)(12)            <=  localWrData(12);                --DRP Enable
        when 223 => --0xdf
          reg_data(223)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 224 => --0xe0
          reg_data(224)( 0)            <=  localWrData( 0);                --
          reg_data(224)( 1)            <=  localWrData( 1);                --
          reg_data(224)( 2)            <=  localWrData( 2);                --
          reg_data(224)( 3)            <=  localWrData( 3);                --
        when 225 => --0xe1
          reg_data(225)( 0)            <=  localWrData( 0);                --
          reg_data(225)( 1)            <=  localWrData( 1);                --
          reg_data(225)( 2)            <=  localWrData( 2);                --
          reg_data(225)( 3)            <=  localWrData( 3);                --
        when 227 => --0xe3
          Ctrl.MGT.MGT(35).DRP.wr_en   <=  localWrData( 0);               
        when 228 => --0xe4
          reg_data(228)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(228)(12)            <=  localWrData(12);                --DRP Enable
        when 229 => --0xe5
          reg_data(229)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 230 => --0xe6
          reg_data(230)( 0)            <=  localWrData( 0);                --
          reg_data(230)( 1)            <=  localWrData( 1);                --
          reg_data(230)( 2)            <=  localWrData( 2);                --
          reg_data(230)( 3)            <=  localWrData( 3);                --
        when 231 => --0xe7
          reg_data(231)( 0)            <=  localWrData( 0);                --
          reg_data(231)( 1)            <=  localWrData( 1);                --
          reg_data(231)( 2)            <=  localWrData( 2);                --
          reg_data(231)( 3)            <=  localWrData( 3);                --
        when 233 => --0xe9
          Ctrl.MGT.MGT(36).DRP.wr_en   <=  localWrData( 0);               
        when 234 => --0xea
          reg_data(234)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(234)(12)            <=  localWrData(12);                --DRP Enable
        when 235 => --0xeb
          reg_data(235)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 236 => --0xec
          reg_data(236)( 0)            <=  localWrData( 0);                --
          reg_data(236)( 1)            <=  localWrData( 1);                --
          reg_data(236)( 2)            <=  localWrData( 2);                --
          reg_data(236)( 3)            <=  localWrData( 3);                --
        when 237 => --0xed
          reg_data(237)( 0)            <=  localWrData( 0);                --
          reg_data(237)( 1)            <=  localWrData( 1);                --
          reg_data(237)( 2)            <=  localWrData( 2);                --
          reg_data(237)( 3)            <=  localWrData( 3);                --
        when 239 => --0xef
          Ctrl.MGT.MGT(37).DRP.wr_en   <=  localWrData( 0);               
        when 240 => --0xf0
          reg_data(240)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(240)(12)            <=  localWrData(12);                --DRP Enable
        when 241 => --0xf1
          reg_data(241)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 242 => --0xf2
          reg_data(242)( 0)            <=  localWrData( 0);                --
          reg_data(242)( 1)            <=  localWrData( 1);                --
          reg_data(242)( 2)            <=  localWrData( 2);                --
          reg_data(242)( 3)            <=  localWrData( 3);                --
        when 243 => --0xf3
          reg_data(243)( 0)            <=  localWrData( 0);                --
          reg_data(243)( 1)            <=  localWrData( 1);                --
          reg_data(243)( 2)            <=  localWrData( 2);                --
          reg_data(243)( 3)            <=  localWrData( 3);                --
        when 245 => --0xf5
          Ctrl.MGT.MGT(38).DRP.wr_en   <=  localWrData( 0);               
        when 246 => --0xf6
          reg_data(246)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(246)(12)            <=  localWrData(12);                --DRP Enable
        when 247 => --0xf7
          reg_data(247)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 248 => --0xf8
          reg_data(248)( 0)            <=  localWrData( 0);                --
          reg_data(248)( 1)            <=  localWrData( 1);                --
          reg_data(248)( 2)            <=  localWrData( 2);                --
          reg_data(248)( 3)            <=  localWrData( 3);                --
        when 249 => --0xf9
          reg_data(249)( 0)            <=  localWrData( 0);                --
          reg_data(249)( 1)            <=  localWrData( 1);                --
          reg_data(249)( 2)            <=  localWrData( 2);                --
          reg_data(249)( 3)            <=  localWrData( 3);                --
        when 251 => --0xfb
          Ctrl.MGT.MGT(39).DRP.wr_en   <=  localWrData( 0);               
        when 252 => --0xfc
          reg_data(252)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(252)(12)            <=  localWrData(12);                --DRP Enable
        when 253 => --0xfd
          reg_data(253)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 254 => --0xfe
          reg_data(254)( 0)            <=  localWrData( 0);                --
          reg_data(254)( 1)            <=  localWrData( 1);                --
          reg_data(254)( 2)            <=  localWrData( 2);                --
          reg_data(254)( 3)            <=  localWrData( 3);                --
        when 255 => --0xff
          reg_data(255)( 0)            <=  localWrData( 0);                --
          reg_data(255)( 1)            <=  localWrData( 1);                --
          reg_data(255)( 2)            <=  localWrData( 2);                --
          reg_data(255)( 3)            <=  localWrData( 3);                --
        when 257 => --0x101
          Ctrl.MGT.MGT(40).DRP.wr_en   <=  localWrData( 0);               
        when 258 => --0x102
          reg_data(258)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(258)(12)            <=  localWrData(12);                --DRP Enable
        when 259 => --0x103
          reg_data(259)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 260 => --0x104
          reg_data(260)( 0)            <=  localWrData( 0);                --
          reg_data(260)( 1)            <=  localWrData( 1);                --
          reg_data(260)( 2)            <=  localWrData( 2);                --
          reg_data(260)( 3)            <=  localWrData( 3);                --
        when 261 => --0x105
          reg_data(261)( 0)            <=  localWrData( 0);                --
          reg_data(261)( 1)            <=  localWrData( 1);                --
          reg_data(261)( 2)            <=  localWrData( 2);                --
          reg_data(261)( 3)            <=  localWrData( 3);                --
        when 263 => --0x107
          Ctrl.MGT.MGT(41).DRP.wr_en   <=  localWrData( 0);               
        when 264 => --0x108
          reg_data(264)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(264)(12)            <=  localWrData(12);                --DRP Enable
        when 265 => --0x109
          reg_data(265)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 266 => --0x10a
          reg_data(266)( 0)            <=  localWrData( 0);                --
          reg_data(266)( 1)            <=  localWrData( 1);                --
          reg_data(266)( 2)            <=  localWrData( 2);                --
          reg_data(266)( 3)            <=  localWrData( 3);                --
        when 267 => --0x10b
          reg_data(267)( 0)            <=  localWrData( 0);                --
          reg_data(267)( 1)            <=  localWrData( 1);                --
          reg_data(267)( 2)            <=  localWrData( 2);                --
          reg_data(267)( 3)            <=  localWrData( 3);                --
        when 269 => --0x10d
          Ctrl.MGT.MGT(42).DRP.wr_en   <=  localWrData( 0);               
        when 270 => --0x10e
          reg_data(270)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(270)(12)            <=  localWrData(12);                --DRP Enable
        when 271 => --0x10f
          reg_data(271)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 272 => --0x110
          reg_data(272)( 0)            <=  localWrData( 0);                --
          reg_data(272)( 1)            <=  localWrData( 1);                --
          reg_data(272)( 2)            <=  localWrData( 2);                --
          reg_data(272)( 3)            <=  localWrData( 3);                --
        when 273 => --0x111
          reg_data(273)( 0)            <=  localWrData( 0);                --
          reg_data(273)( 1)            <=  localWrData( 1);                --
          reg_data(273)( 2)            <=  localWrData( 2);                --
          reg_data(273)( 3)            <=  localWrData( 3);                --
        when 275 => --0x113
          Ctrl.MGT.MGT(43).DRP.wr_en   <=  localWrData( 0);               
        when 276 => --0x114
          reg_data(276)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(276)(12)            <=  localWrData(12);                --DRP Enable
        when 277 => --0x115
          reg_data(277)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 278 => --0x116
          reg_data(278)( 0)            <=  localWrData( 0);                --
          reg_data(278)( 1)            <=  localWrData( 1);                --
          reg_data(278)( 2)            <=  localWrData( 2);                --
          reg_data(278)( 3)            <=  localWrData( 3);                --
        when 279 => --0x117
          reg_data(279)( 0)            <=  localWrData( 0);                --
          reg_data(279)( 1)            <=  localWrData( 1);                --
          reg_data(279)( 2)            <=  localWrData( 2);                --
          reg_data(279)( 3)            <=  localWrData( 3);                --
        when 281 => --0x119
          Ctrl.MGT.MGT(44).DRP.wr_en   <=  localWrData( 0);               
        when 282 => --0x11a
          reg_data(282)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(282)(12)            <=  localWrData(12);                --DRP Enable
        when 283 => --0x11b
          reg_data(283)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 284 => --0x11c
          reg_data(284)( 0)            <=  localWrData( 0);                --
          reg_data(284)( 1)            <=  localWrData( 1);                --
          reg_data(284)( 2)            <=  localWrData( 2);                --
          reg_data(284)( 3)            <=  localWrData( 3);                --
        when 285 => --0x11d
          reg_data(285)( 0)            <=  localWrData( 0);                --
          reg_data(285)( 1)            <=  localWrData( 1);                --
          reg_data(285)( 2)            <=  localWrData( 2);                --
          reg_data(285)( 3)            <=  localWrData( 3);                --
        when 287 => --0x11f
          Ctrl.MGT.MGT(45).DRP.wr_en   <=  localWrData( 0);               
        when 288 => --0x120
          reg_data(288)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(288)(12)            <=  localWrData(12);                --DRP Enable
        when 289 => --0x121
          reg_data(289)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 290 => --0x122
          reg_data(290)( 0)            <=  localWrData( 0);                --
          reg_data(290)( 1)            <=  localWrData( 1);                --
          reg_data(290)( 2)            <=  localWrData( 2);                --
          reg_data(290)( 3)            <=  localWrData( 3);                --
        when 291 => --0x123
          reg_data(291)( 0)            <=  localWrData( 0);                --
          reg_data(291)( 1)            <=  localWrData( 1);                --
          reg_data(291)( 2)            <=  localWrData( 2);                --
          reg_data(291)( 3)            <=  localWrData( 3);                --
        when 293 => --0x125
          Ctrl.MGT.MGT(46).DRP.wr_en   <=  localWrData( 0);               
        when 294 => --0x126
          reg_data(294)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(294)(12)            <=  localWrData(12);                --DRP Enable
        when 295 => --0x127
          reg_data(295)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 296 => --0x128
          reg_data(296)( 0)            <=  localWrData( 0);                --
          reg_data(296)( 1)            <=  localWrData( 1);                --
          reg_data(296)( 2)            <=  localWrData( 2);                --
          reg_data(296)( 3)            <=  localWrData( 3);                --
        when 297 => --0x129
          reg_data(297)( 0)            <=  localWrData( 0);                --
          reg_data(297)( 1)            <=  localWrData( 1);                --
          reg_data(297)( 2)            <=  localWrData( 2);                --
          reg_data(297)( 3)            <=  localWrData( 3);                --
        when 299 => --0x12b
          Ctrl.MGT.MGT(47).DRP.wr_en   <=  localWrData( 0);               
        when 300 => --0x12c
          reg_data(300)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(300)(12)            <=  localWrData(12);                --DRP Enable
        when 301 => --0x12d
          reg_data(301)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 302 => --0x12e
          reg_data(302)( 0)            <=  localWrData( 0);                --
          reg_data(302)( 1)            <=  localWrData( 1);                --
          reg_data(302)( 2)            <=  localWrData( 2);                --
          reg_data(302)( 3)            <=  localWrData( 3);                --
        when 303 => --0x12f
          reg_data(303)( 0)            <=  localWrData( 0);                --
          reg_data(303)( 1)            <=  localWrData( 1);                --
          reg_data(303)( 2)            <=  localWrData( 2);                --
          reg_data(303)( 3)            <=  localWrData( 3);                --
        when 305 => --0x131
          Ctrl.MGT.MGT(48).DRP.wr_en   <=  localWrData( 0);               
        when 306 => --0x132
          reg_data(306)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(306)(12)            <=  localWrData(12);                --DRP Enable
        when 307 => --0x133
          reg_data(307)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 308 => --0x134
          reg_data(308)( 0)            <=  localWrData( 0);                --
          reg_data(308)( 1)            <=  localWrData( 1);                --
          reg_data(308)( 2)            <=  localWrData( 2);                --
          reg_data(308)( 3)            <=  localWrData( 3);                --
        when 309 => --0x135
          reg_data(309)( 0)            <=  localWrData( 0);                --
          reg_data(309)( 1)            <=  localWrData( 1);                --
          reg_data(309)( 2)            <=  localWrData( 2);                --
          reg_data(309)( 3)            <=  localWrData( 3);                --
        when 311 => --0x137
          Ctrl.MGT.MGT(49).DRP.wr_en   <=  localWrData( 0);               
        when 312 => --0x138
          reg_data(312)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(312)(12)            <=  localWrData(12);                --DRP Enable
        when 313 => --0x139
          reg_data(313)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 314 => --0x13a
          reg_data(314)( 0)            <=  localWrData( 0);                --
          reg_data(314)( 1)            <=  localWrData( 1);                --
          reg_data(314)( 2)            <=  localWrData( 2);                --
          reg_data(314)( 3)            <=  localWrData( 3);                --
        when 315 => --0x13b
          reg_data(315)( 0)            <=  localWrData( 0);                --
          reg_data(315)( 1)            <=  localWrData( 1);                --
          reg_data(315)( 2)            <=  localWrData( 2);                --
          reg_data(315)( 3)            <=  localWrData( 3);                --
        when 317 => --0x13d
          Ctrl.MGT.MGT(50).DRP.wr_en   <=  localWrData( 0);               
        when 318 => --0x13e
          reg_data(318)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(318)(12)            <=  localWrData(12);                --DRP Enable
        when 319 => --0x13f
          reg_data(319)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 320 => --0x140
          reg_data(320)( 0)            <=  localWrData( 0);                --
          reg_data(320)( 1)            <=  localWrData( 1);                --
          reg_data(320)( 2)            <=  localWrData( 2);                --
          reg_data(320)( 3)            <=  localWrData( 3);                --
        when 321 => --0x141
          reg_data(321)( 0)            <=  localWrData( 0);                --
          reg_data(321)( 1)            <=  localWrData( 1);                --
          reg_data(321)( 2)            <=  localWrData( 2);                --
          reg_data(321)( 3)            <=  localWrData( 3);                --
        when 323 => --0x143
          Ctrl.MGT.MGT(51).DRP.wr_en   <=  localWrData( 0);               
        when 324 => --0x144
          reg_data(324)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(324)(12)            <=  localWrData(12);                --DRP Enable
        when 325 => --0x145
          reg_data(325)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 326 => --0x146
          reg_data(326)( 0)            <=  localWrData( 0);                --
          reg_data(326)( 1)            <=  localWrData( 1);                --
          reg_data(326)( 2)            <=  localWrData( 2);                --
          reg_data(326)( 3)            <=  localWrData( 3);                --
        when 327 => --0x147
          reg_data(327)( 0)            <=  localWrData( 0);                --
          reg_data(327)( 1)            <=  localWrData( 1);                --
          reg_data(327)( 2)            <=  localWrData( 2);                --
          reg_data(327)( 3)            <=  localWrData( 3);                --
        when 329 => --0x149
          Ctrl.MGT.MGT(52).DRP.wr_en   <=  localWrData( 0);               
        when 330 => --0x14a
          reg_data(330)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(330)(12)            <=  localWrData(12);                --DRP Enable
        when 331 => --0x14b
          reg_data(331)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 332 => --0x14c
          reg_data(332)( 0)            <=  localWrData( 0);                --
          reg_data(332)( 1)            <=  localWrData( 1);                --
          reg_data(332)( 2)            <=  localWrData( 2);                --
          reg_data(332)( 3)            <=  localWrData( 3);                --
        when 333 => --0x14d
          reg_data(333)( 0)            <=  localWrData( 0);                --
          reg_data(333)( 1)            <=  localWrData( 1);                --
          reg_data(333)( 2)            <=  localWrData( 2);                --
          reg_data(333)( 3)            <=  localWrData( 3);                --
        when 335 => --0x14f
          Ctrl.MGT.MGT(53).DRP.wr_en   <=  localWrData( 0);               
        when 336 => --0x150
          reg_data(336)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(336)(12)            <=  localWrData(12);                --DRP Enable
        when 337 => --0x151
          reg_data(337)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 338 => --0x152
          reg_data(338)( 0)            <=  localWrData( 0);                --
          reg_data(338)( 1)            <=  localWrData( 1);                --
          reg_data(338)( 2)            <=  localWrData( 2);                --
          reg_data(338)( 3)            <=  localWrData( 3);                --
        when 339 => --0x153
          reg_data(339)( 0)            <=  localWrData( 0);                --
          reg_data(339)( 1)            <=  localWrData( 1);                --
          reg_data(339)( 2)            <=  localWrData( 2);                --
          reg_data(339)( 3)            <=  localWrData( 3);                --
        when 341 => --0x155
          Ctrl.MGT.MGT(54).DRP.wr_en   <=  localWrData( 0);               
        when 342 => --0x156
          reg_data(342)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(342)(12)            <=  localWrData(12);                --DRP Enable
        when 343 => --0x157
          reg_data(343)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 344 => --0x158
          reg_data(344)( 0)            <=  localWrData( 0);                --
          reg_data(344)( 1)            <=  localWrData( 1);                --
          reg_data(344)( 2)            <=  localWrData( 2);                --
          reg_data(344)( 3)            <=  localWrData( 3);                --
        when 345 => --0x159
          reg_data(345)( 0)            <=  localWrData( 0);                --
          reg_data(345)( 1)            <=  localWrData( 1);                --
          reg_data(345)( 2)            <=  localWrData( 2);                --
          reg_data(345)( 3)            <=  localWrData( 3);                --
        when 347 => --0x15b
          Ctrl.MGT.MGT(55).DRP.wr_en   <=  localWrData( 0);               
        when 348 => --0x15c
          reg_data(348)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(348)(12)            <=  localWrData(12);                --DRP Enable
        when 349 => --0x15d
          reg_data(349)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 350 => --0x15e
          reg_data(350)( 0)            <=  localWrData( 0);                --
          reg_data(350)( 1)            <=  localWrData( 1);                --
          reg_data(350)( 2)            <=  localWrData( 2);                --
          reg_data(350)( 3)            <=  localWrData( 3);                --
        when 351 => --0x15f
          reg_data(351)( 0)            <=  localWrData( 0);                --
          reg_data(351)( 1)            <=  localWrData( 1);                --
          reg_data(351)( 2)            <=  localWrData( 2);                --
          reg_data(351)( 3)            <=  localWrData( 3);                --
        when 353 => --0x161
          Ctrl.MGT.MGT(56).DRP.wr_en   <=  localWrData( 0);               
        when 354 => --0x162
          reg_data(354)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(354)(12)            <=  localWrData(12);                --DRP Enable
        when 355 => --0x163
          reg_data(355)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 356 => --0x164
          reg_data(356)( 0)            <=  localWrData( 0);                --
          reg_data(356)( 1)            <=  localWrData( 1);                --
          reg_data(356)( 2)            <=  localWrData( 2);                --
          reg_data(356)( 3)            <=  localWrData( 3);                --
        when 357 => --0x165
          reg_data(357)( 0)            <=  localWrData( 0);                --
          reg_data(357)( 1)            <=  localWrData( 1);                --
          reg_data(357)( 2)            <=  localWrData( 2);                --
          reg_data(357)( 3)            <=  localWrData( 3);                --
        when 359 => --0x167
          Ctrl.MGT.MGT(57).DRP.wr_en   <=  localWrData( 0);               
        when 360 => --0x168
          reg_data(360)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(360)(12)            <=  localWrData(12);                --DRP Enable
        when 361 => --0x169
          reg_data(361)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 362 => --0x16a
          reg_data(362)( 0)            <=  localWrData( 0);                --
          reg_data(362)( 1)            <=  localWrData( 1);                --
          reg_data(362)( 2)            <=  localWrData( 2);                --
          reg_data(362)( 3)            <=  localWrData( 3);                --
        when 363 => --0x16b
          reg_data(363)( 0)            <=  localWrData( 0);                --
          reg_data(363)( 1)            <=  localWrData( 1);                --
          reg_data(363)( 2)            <=  localWrData( 2);                --
          reg_data(363)( 3)            <=  localWrData( 3);                --
        when 365 => --0x16d
          Ctrl.MGT.MGT(58).DRP.wr_en   <=  localWrData( 0);               
        when 366 => --0x16e
          reg_data(366)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(366)(12)            <=  localWrData(12);                --DRP Enable
        when 367 => --0x16f
          reg_data(367)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 368 => --0x170
          reg_data(368)( 0)            <=  localWrData( 0);                --
          reg_data(368)( 1)            <=  localWrData( 1);                --
          reg_data(368)( 2)            <=  localWrData( 2);                --
          reg_data(368)( 3)            <=  localWrData( 3);                --
        when 369 => --0x171
          reg_data(369)( 0)            <=  localWrData( 0);                --
          reg_data(369)( 1)            <=  localWrData( 1);                --
          reg_data(369)( 2)            <=  localWrData( 2);                --
          reg_data(369)( 3)            <=  localWrData( 3);                --
        when 371 => --0x173
          Ctrl.MGT.MGT(59).DRP.wr_en   <=  localWrData( 0);               
        when 372 => --0x174
          reg_data(372)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(372)(12)            <=  localWrData(12);                --DRP Enable
        when 373 => --0x175
          reg_data(373)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 374 => --0x176
          reg_data(374)( 0)            <=  localWrData( 0);                --
          reg_data(374)( 1)            <=  localWrData( 1);                --
          reg_data(374)( 2)            <=  localWrData( 2);                --
          reg_data(374)( 3)            <=  localWrData( 3);                --
        when 375 => --0x177
          reg_data(375)( 0)            <=  localWrData( 0);                --
          reg_data(375)( 1)            <=  localWrData( 1);                --
          reg_data(375)( 2)            <=  localWrData( 2);                --
          reg_data(375)( 3)            <=  localWrData( 3);                --
        when 377 => --0x179
          Ctrl.MGT.MGT(60).DRP.wr_en   <=  localWrData( 0);               
        when 378 => --0x17a
          reg_data(378)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(378)(12)            <=  localWrData(12);                --DRP Enable
        when 379 => --0x17b
          reg_data(379)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 380 => --0x17c
          reg_data(380)( 0)            <=  localWrData( 0);                --
          reg_data(380)( 1)            <=  localWrData( 1);                --
          reg_data(380)( 2)            <=  localWrData( 2);                --
          reg_data(380)( 3)            <=  localWrData( 3);                --
        when 381 => --0x17d
          reg_data(381)( 0)            <=  localWrData( 0);                --
          reg_data(381)( 1)            <=  localWrData( 1);                --
          reg_data(381)( 2)            <=  localWrData( 2);                --
          reg_data(381)( 3)            <=  localWrData( 3);                --
        when 383 => --0x17f
          Ctrl.MGT.MGT(61).DRP.wr_en   <=  localWrData( 0);               
        when 384 => --0x180
          reg_data(384)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(384)(12)            <=  localWrData(12);                --DRP Enable
        when 385 => --0x181
          reg_data(385)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 386 => --0x182
          reg_data(386)( 0)            <=  localWrData( 0);                --
          reg_data(386)( 1)            <=  localWrData( 1);                --
          reg_data(386)( 2)            <=  localWrData( 2);                --
          reg_data(386)( 3)            <=  localWrData( 3);                --
        when 387 => --0x183
          reg_data(387)( 0)            <=  localWrData( 0);                --
          reg_data(387)( 1)            <=  localWrData( 1);                --
          reg_data(387)( 2)            <=  localWrData( 2);                --
          reg_data(387)( 3)            <=  localWrData( 3);                --
        when 389 => --0x185
          Ctrl.MGT.MGT(62).DRP.wr_en   <=  localWrData( 0);               
        when 390 => --0x186
          reg_data(390)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(390)(12)            <=  localWrData(12);                --DRP Enable
        when 391 => --0x187
          reg_data(391)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 392 => --0x188
          reg_data(392)( 0)            <=  localWrData( 0);                --
          reg_data(392)( 1)            <=  localWrData( 1);                --
          reg_data(392)( 2)            <=  localWrData( 2);                --
          reg_data(392)( 3)            <=  localWrData( 3);                --
        when 393 => --0x189
          reg_data(393)( 0)            <=  localWrData( 0);                --
          reg_data(393)( 1)            <=  localWrData( 1);                --
          reg_data(393)( 2)            <=  localWrData( 2);                --
          reg_data(393)( 3)            <=  localWrData( 3);                --
        when 395 => --0x18b
          Ctrl.MGT.MGT(63).DRP.wr_en   <=  localWrData( 0);               
        when 396 => --0x18c
          reg_data(396)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(396)(12)            <=  localWrData(12);                --DRP Enable
        when 397 => --0x18d
          reg_data(397)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 398 => --0x18e
          reg_data(398)( 0)            <=  localWrData( 0);                --
          reg_data(398)( 1)            <=  localWrData( 1);                --
          reg_data(398)( 2)            <=  localWrData( 2);                --
          reg_data(398)( 3)            <=  localWrData( 3);                --
        when 399 => --0x18f
          reg_data(399)( 0)            <=  localWrData( 0);                --
          reg_data(399)( 1)            <=  localWrData( 1);                --
          reg_data(399)( 2)            <=  localWrData( 2);                --
          reg_data(399)( 3)            <=  localWrData( 3);                --
        when 401 => --0x191
          Ctrl.MGT.MGT(64).DRP.wr_en   <=  localWrData( 0);               
        when 402 => --0x192
          reg_data(402)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(402)(12)            <=  localWrData(12);                --DRP Enable
        when 403 => --0x193
          reg_data(403)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 404 => --0x194
          reg_data(404)( 0)            <=  localWrData( 0);                --
          reg_data(404)( 1)            <=  localWrData( 1);                --
          reg_data(404)( 2)            <=  localWrData( 2);                --
          reg_data(404)( 3)            <=  localWrData( 3);                --
        when 405 => --0x195
          reg_data(405)( 0)            <=  localWrData( 0);                --
          reg_data(405)( 1)            <=  localWrData( 1);                --
          reg_data(405)( 2)            <=  localWrData( 2);                --
          reg_data(405)( 3)            <=  localWrData( 3);                --
        when 407 => --0x197
          Ctrl.MGT.MGT(65).DRP.wr_en   <=  localWrData( 0);               
        when 408 => --0x198
          reg_data(408)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(408)(12)            <=  localWrData(12);                --DRP Enable
        when 409 => --0x199
          reg_data(409)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 410 => --0x19a
          reg_data(410)( 0)            <=  localWrData( 0);                --
          reg_data(410)( 1)            <=  localWrData( 1);                --
          reg_data(410)( 2)            <=  localWrData( 2);                --
          reg_data(410)( 3)            <=  localWrData( 3);                --
        when 411 => --0x19b
          reg_data(411)( 0)            <=  localWrData( 0);                --
          reg_data(411)( 1)            <=  localWrData( 1);                --
          reg_data(411)( 2)            <=  localWrData( 2);                --
          reg_data(411)( 3)            <=  localWrData( 3);                --
        when 413 => --0x19d
          Ctrl.MGT.MGT(66).DRP.wr_en   <=  localWrData( 0);               
        when 414 => --0x19e
          reg_data(414)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(414)(12)            <=  localWrData(12);                --DRP Enable
        when 415 => --0x19f
          reg_data(415)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 416 => --0x1a0
          reg_data(416)( 0)            <=  localWrData( 0);                --
          reg_data(416)( 1)            <=  localWrData( 1);                --
          reg_data(416)( 2)            <=  localWrData( 2);                --
          reg_data(416)( 3)            <=  localWrData( 3);                --
        when 417 => --0x1a1
          reg_data(417)( 0)            <=  localWrData( 0);                --
          reg_data(417)( 1)            <=  localWrData( 1);                --
          reg_data(417)( 2)            <=  localWrData( 2);                --
          reg_data(417)( 3)            <=  localWrData( 3);                --
        when 419 => --0x1a3
          Ctrl.MGT.MGT(67).DRP.wr_en   <=  localWrData( 0);               
        when 420 => --0x1a4
          reg_data(420)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(420)(12)            <=  localWrData(12);                --DRP Enable
        when 421 => --0x1a5
          reg_data(421)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 422 => --0x1a6
          reg_data(422)( 0)            <=  localWrData( 0);                --
          reg_data(422)( 1)            <=  localWrData( 1);                --
          reg_data(422)( 2)            <=  localWrData( 2);                --
          reg_data(422)( 3)            <=  localWrData( 3);                --
        when 423 => --0x1a7
          reg_data(423)( 0)            <=  localWrData( 0);                --
          reg_data(423)( 1)            <=  localWrData( 1);                --
          reg_data(423)( 2)            <=  localWrData( 2);                --
          reg_data(423)( 3)            <=  localWrData( 3);                --
        when 425 => --0x1a9
          Ctrl.MGT.MGT(68).DRP.wr_en   <=  localWrData( 0);               
        when 426 => --0x1aa
          reg_data(426)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(426)(12)            <=  localWrData(12);                --DRP Enable
        when 427 => --0x1ab
          reg_data(427)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 428 => --0x1ac
          reg_data(428)( 0)            <=  localWrData( 0);                --
          reg_data(428)( 1)            <=  localWrData( 1);                --
          reg_data(428)( 2)            <=  localWrData( 2);                --
          reg_data(428)( 3)            <=  localWrData( 3);                --
        when 429 => --0x1ad
          reg_data(429)( 0)            <=  localWrData( 0);                --
          reg_data(429)( 1)            <=  localWrData( 1);                --
          reg_data(429)( 2)            <=  localWrData( 2);                --
          reg_data(429)( 3)            <=  localWrData( 3);                --
        when 431 => --0x1af
          Ctrl.MGT.MGT(69).DRP.wr_en   <=  localWrData( 0);               
        when 432 => --0x1b0
          reg_data(432)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(432)(12)            <=  localWrData(12);                --DRP Enable
        when 433 => --0x1b1
          reg_data(433)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 434 => --0x1b2
          reg_data(434)( 0)            <=  localWrData( 0);                --
          reg_data(434)( 1)            <=  localWrData( 1);                --
          reg_data(434)( 2)            <=  localWrData( 2);                --
          reg_data(434)( 3)            <=  localWrData( 3);                --
        when 435 => --0x1b3
          reg_data(435)( 0)            <=  localWrData( 0);                --
          reg_data(435)( 1)            <=  localWrData( 1);                --
          reg_data(435)( 2)            <=  localWrData( 2);                --
          reg_data(435)( 3)            <=  localWrData( 3);                --
        when 437 => --0x1b5
          Ctrl.MGT.MGT(70).DRP.wr_en   <=  localWrData( 0);               
        when 438 => --0x1b6
          reg_data(438)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(438)(12)            <=  localWrData(12);                --DRP Enable
        when 439 => --0x1b7
          reg_data(439)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 440 => --0x1b8
          reg_data(440)( 0)            <=  localWrData( 0);                --
          reg_data(440)( 1)            <=  localWrData( 1);                --
          reg_data(440)( 2)            <=  localWrData( 2);                --
          reg_data(440)( 3)            <=  localWrData( 3);                --
        when 441 => --0x1b9
          reg_data(441)( 0)            <=  localWrData( 0);                --
          reg_data(441)( 1)            <=  localWrData( 1);                --
          reg_data(441)( 2)            <=  localWrData( 2);                --
          reg_data(441)( 3)            <=  localWrData( 3);                --
        when 443 => --0x1bb
          Ctrl.MGT.MGT(71).DRP.wr_en   <=  localWrData( 0);               
        when 444 => --0x1bc
          reg_data(444)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(444)(12)            <=  localWrData(12);                --DRP Enable
        when 445 => --0x1bd
          reg_data(445)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 446 => --0x1be
          reg_data(446)( 0)            <=  localWrData( 0);                --
          reg_data(446)( 1)            <=  localWrData( 1);                --
          reg_data(446)( 2)            <=  localWrData( 2);                --
          reg_data(446)( 3)            <=  localWrData( 3);                --
        when 447 => --0x1bf
          reg_data(447)( 0)            <=  localWrData( 0);                --
          reg_data(447)( 1)            <=  localWrData( 1);                --
          reg_data(447)( 2)            <=  localWrData( 2);                --
          reg_data(447)( 3)            <=  localWrData( 3);                --
        when 449 => --0x1c1
          Ctrl.MGT.MGT(72).DRP.wr_en   <=  localWrData( 0);               
        when 450 => --0x1c2
          reg_data(450)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(450)(12)            <=  localWrData(12);                --DRP Enable
        when 451 => --0x1c3
          reg_data(451)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 452 => --0x1c4
          reg_data(452)( 0)            <=  localWrData( 0);                --
          reg_data(452)( 1)            <=  localWrData( 1);                --
          reg_data(452)( 2)            <=  localWrData( 2);                --
          reg_data(452)( 3)            <=  localWrData( 3);                --
        when 453 => --0x1c5
          reg_data(453)( 0)            <=  localWrData( 0);                --
          reg_data(453)( 1)            <=  localWrData( 1);                --
          reg_data(453)( 2)            <=  localWrData( 2);                --
          reg_data(453)( 3)            <=  localWrData( 3);                --
        when 455 => --0x1c7
          Ctrl.MGT.MGT(73).DRP.wr_en   <=  localWrData( 0);               
        when 456 => --0x1c8
          reg_data(456)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(456)(12)            <=  localWrData(12);                --DRP Enable
        when 457 => --0x1c9
          reg_data(457)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 458 => --0x1ca
          reg_data(458)( 0)            <=  localWrData( 0);                --
          reg_data(458)( 1)            <=  localWrData( 1);                --
          reg_data(458)( 2)            <=  localWrData( 2);                --
          reg_data(458)( 3)            <=  localWrData( 3);                --
        when 459 => --0x1cb
          reg_data(459)( 0)            <=  localWrData( 0);                --
          reg_data(459)( 1)            <=  localWrData( 1);                --
          reg_data(459)( 2)            <=  localWrData( 2);                --
          reg_data(459)( 3)            <=  localWrData( 3);                --
        when 461 => --0x1cd
          Ctrl.MGT.MGT(74).DRP.wr_en   <=  localWrData( 0);               
        when 462 => --0x1ce
          reg_data(462)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(462)(12)            <=  localWrData(12);                --DRP Enable
        when 463 => --0x1cf
          reg_data(463)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 464 => --0x1d0
          reg_data(464)( 0)            <=  localWrData( 0);                --
          reg_data(464)( 1)            <=  localWrData( 1);                --
          reg_data(464)( 2)            <=  localWrData( 2);                --
          reg_data(464)( 3)            <=  localWrData( 3);                --
        when 465 => --0x1d1
          reg_data(465)( 0)            <=  localWrData( 0);                --
          reg_data(465)( 1)            <=  localWrData( 1);                --
          reg_data(465)( 2)            <=  localWrData( 2);                --
          reg_data(465)( 3)            <=  localWrData( 3);                --
        when 467 => --0x1d3
          Ctrl.MGT.MGT(75).DRP.wr_en   <=  localWrData( 0);               
        when 468 => --0x1d4
          reg_data(468)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(468)(12)            <=  localWrData(12);                --DRP Enable
        when 469 => --0x1d5
          reg_data(469)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 470 => --0x1d6
          reg_data(470)( 0)            <=  localWrData( 0);                --
          reg_data(470)( 1)            <=  localWrData( 1);                --
          reg_data(470)( 2)            <=  localWrData( 2);                --
          reg_data(470)( 3)            <=  localWrData( 3);                --
        when 471 => --0x1d7
          reg_data(471)( 0)            <=  localWrData( 0);                --
          reg_data(471)( 1)            <=  localWrData( 1);                --
          reg_data(471)( 2)            <=  localWrData( 2);                --
          reg_data(471)( 3)            <=  localWrData( 3);                --

          when others => null;
        end case;
      end if;
    end if;
  end process reg_writes;







  
end architecture behavioral;