--This file was auto-generated.
--Modifications might be lost.
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_misc.all;
use ieee.numeric_std.all;
use work.AXIRegWidthPkg.all;
use work.AXIRegPkg.all;
use work.types.all;

use work.CORE_HAL_Ctrl.all;
use work.CORE_HAL_Ctrl_DEF.all;


entity CORE_HAL_map is
  generic (
    READ_TIMEOUT     : integer := 2048;
    ALLOCATED_MEMORY_RANGE : integer 
    );
  port (
    clk_axi          : in  std_logic;
    reset_axi_n      : in  std_logic;
    slave_readMOSI   : in  AXIReadMOSI;
    slave_readMISO   : out AXIReadMISO  := DefaultAXIReadMISO;
    slave_writeMOSI  : in  AXIWriteMOSI;
    slave_writeMISO  : out AXIWriteMISO := DefaultAXIWriteMISO;
    
    Mon              : in  CORE_HAL_Mon_t;
    
    
    Ctrl             : out CORE_HAL_Ctrl_t
        
    );
end entity CORE_HAL_map;
architecture behavioral of CORE_HAL_map is
  signal localAddress       : std_logic_vector(AXI_ADDR_WIDTH-1 downto 0);
  signal localRdData        : slv_32_t;
  signal localRdData_latch  : slv_32_t;
  signal localWrData        : slv_32_t;
  signal localWrEn          : std_logic;
  signal localRdReq         : std_logic;
  signal localRdAck         : std_logic;
  signal regRdAck           : std_logic;

  
  
  signal reg_data :  slv32_array_t(integer range 0 to 1071);
  constant Default_reg_data : slv32_array_t(integer range 0 to 1071) := (others => x"00000000");
begin  -- architecture behavioral

  -------------------------------------------------------------------------------
  -- AXI 
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------
  assert ((4*1071) <= ALLOCATED_MEMORY_RANGE)
    report "CORE_HAL: Regmap addressing range " & integer'image(4*1071) & " is outside of AXI mapped range " & integer'image(ALLOCATED_MEMORY_RANGE)
  severity ERROR;
  assert ((4*1071) > ALLOCATED_MEMORY_RANGE)
    report "CORE_HAL: Regmap addressing range " & integer'image(4*1071) & " is inside of AXI mapped range " & integer'image(ALLOCATED_MEMORY_RANGE)
  severity NOTE;

  AXIRegBridge : entity work.axiLiteRegBlocking
    generic map (
      READ_TIMEOUT => READ_TIMEOUT
      )
    port map (
      clk_axi     => clk_axi,
      reset_axi_n => reset_axi_n,
      readMOSI    => slave_readMOSI,
      readMISO    => slave_readMISO,
      writeMOSI   => slave_writeMOSI,
      writeMISO   => slave_writeMISO,
      address     => localAddress,
      rd_data     => localRdData_latch,
      wr_data     => localWrData,
      write_en    => localWrEn,
      read_req    => localRdReq,
      read_ack    => localRdAck);

  -------------------------------------------------------------------------------
  -- Record read decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  latch_reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      localRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      localRdAck <= '0';
      
      if regRdAck = '1' then
        localRdData_latch <= localRdData;
        localRdAck <= '1';
      
      end if;
    end if;
  end process latch_reads;

  
  reads: process (clk_axi,reset_axi_n) is
  begin  -- process latch_reads
    if reset_axi_n = '0' then
      regRdAck <= '0';
    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      regRdAck  <= '0';
      localRdData <= x"00000000";
      if localRdReq = '1' then
        regRdAck  <= '1';
        case to_integer(unsigned(localAddress(10 downto 0))) is
          
        when 0 => --0x0
          localRdData( 0)            <=  Mon.CLOCKING.MMCM_LOCKED;                             --LHC MMCM: 1 means it is locked
        when 1 => --0x1
          localRdData( 1)            <=  reg_data( 1)( 1);                                     --LHC MMCM: Set 1 to reset the MMCM
        when 2 => --0x2
          localRdData(31 downto  0)  <=  Mon.CLOCKING.CLK40_FREQ;                              --LHC 40MHz clock freq
        when 3 => --0x3
          localRdData(31 downto  0)  <=  Mon.CLOCKING.CLK320_FREQ;                             --LHC 320MHz clock freq 
        when 4 => --0x4
          localRdData(31 downto  0)  <=  Mon.CLOCKING.CLK50_FREQ;                              --System 50 MHz clock freq
        when 5 => --0x5
          localRdData(31 downto  0)  <=  Mon.CLOCKING.CLK100_FREQ;                             --System 100 MHz clock freq
        when 6 => --0x6
          localRdData(31 downto  0)  <=  Mon.CLOCKING.CLK200_FREQ;                             --System 200 MHz clock freq
        when 16 => --0x10
          localRdData( 0)            <=  Mon.MGT.MGT(0).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(0).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(0).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(0).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(0).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(0).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(0).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 18 => --0x12
          localRdData( 9 downto  0)  <=  reg_data(18)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(18)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(0).DRP.rd_rdy;                            --DRP Enable
        when 19 => --0x13
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(0).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(19)(31 downto 16);                           --DRP Write Data
        when 20 => --0x14
          localRdData( 0)            <=  reg_data(20)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(20)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(20)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(20)( 3);                                     --tx reset_bufbypass
        when 21 => --0x15
          localRdData( 0)            <=  reg_data(21)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(21)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(21)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(21)( 3);                                     --rx reset_bufbypass
        when 22 => --0x16
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(0).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(0).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(0).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(0).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(0).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(0).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 24 => --0x18
          localRdData( 0)            <=  Mon.MGT.MGT(1).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(1).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(1).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(1).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(1).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(1).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(1).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 26 => --0x1a
          localRdData( 9 downto  0)  <=  reg_data(26)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(26)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(1).DRP.rd_rdy;                            --DRP Enable
        when 27 => --0x1b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(1).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(27)(31 downto 16);                           --DRP Write Data
        when 28 => --0x1c
          localRdData( 0)            <=  reg_data(28)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(28)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(28)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(28)( 3);                                     --tx reset_bufbypass
        when 29 => --0x1d
          localRdData( 0)            <=  reg_data(29)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(29)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(29)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(29)( 3);                                     --rx reset_bufbypass
        when 30 => --0x1e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(1).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(1).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(1).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(1).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(1).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(1).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 32 => --0x20
          localRdData( 0)            <=  Mon.MGT.MGT(2).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(2).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(2).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(2).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(2).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(2).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(2).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 34 => --0x22
          localRdData( 9 downto  0)  <=  reg_data(34)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(34)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(2).DRP.rd_rdy;                            --DRP Enable
        when 35 => --0x23
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(2).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(35)(31 downto 16);                           --DRP Write Data
        when 36 => --0x24
          localRdData( 0)            <=  reg_data(36)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(36)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(36)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(36)( 3);                                     --tx reset_bufbypass
        when 37 => --0x25
          localRdData( 0)            <=  reg_data(37)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(37)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(37)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(37)( 3);                                     --rx reset_bufbypass
        when 38 => --0x26
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(2).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(2).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(2).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(2).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(2).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(2).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 40 => --0x28
          localRdData( 0)            <=  Mon.MGT.MGT(3).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(3).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(3).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(3).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(3).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(3).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(3).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 42 => --0x2a
          localRdData( 9 downto  0)  <=  reg_data(42)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(42)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(3).DRP.rd_rdy;                            --DRP Enable
        when 43 => --0x2b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(3).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(43)(31 downto 16);                           --DRP Write Data
        when 44 => --0x2c
          localRdData( 0)            <=  reg_data(44)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(44)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(44)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(44)( 3);                                     --tx reset_bufbypass
        when 45 => --0x2d
          localRdData( 0)            <=  reg_data(45)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(45)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(45)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(45)( 3);                                     --rx reset_bufbypass
        when 46 => --0x2e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(3).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(3).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(3).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(3).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(3).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(3).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 48 => --0x30
          localRdData( 0)            <=  Mon.MGT.MGT(4).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(4).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(4).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(4).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(4).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(4).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(4).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 50 => --0x32
          localRdData( 9 downto  0)  <=  reg_data(50)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(50)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(4).DRP.rd_rdy;                            --DRP Enable
        when 51 => --0x33
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(4).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(51)(31 downto 16);                           --DRP Write Data
        when 52 => --0x34
          localRdData( 0)            <=  reg_data(52)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(52)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(52)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(52)( 3);                                     --tx reset_bufbypass
        when 53 => --0x35
          localRdData( 0)            <=  reg_data(53)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(53)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(53)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(53)( 3);                                     --rx reset_bufbypass
        when 54 => --0x36
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(4).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(4).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(4).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(4).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(4).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(4).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 56 => --0x38
          localRdData( 0)            <=  Mon.MGT.MGT(5).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(5).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(5).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(5).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(5).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(5).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(5).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 58 => --0x3a
          localRdData( 9 downto  0)  <=  reg_data(58)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(58)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(5).DRP.rd_rdy;                            --DRP Enable
        when 59 => --0x3b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(5).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(59)(31 downto 16);                           --DRP Write Data
        when 60 => --0x3c
          localRdData( 0)            <=  reg_data(60)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(60)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(60)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(60)( 3);                                     --tx reset_bufbypass
        when 61 => --0x3d
          localRdData( 0)            <=  reg_data(61)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(61)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(61)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(61)( 3);                                     --rx reset_bufbypass
        when 62 => --0x3e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(5).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(5).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(5).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(5).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(5).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(5).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 64 => --0x40
          localRdData( 0)            <=  Mon.MGT.MGT(6).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(6).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(6).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(6).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(6).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(6).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(6).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 66 => --0x42
          localRdData( 9 downto  0)  <=  reg_data(66)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(66)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(6).DRP.rd_rdy;                            --DRP Enable
        when 67 => --0x43
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(6).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(67)(31 downto 16);                           --DRP Write Data
        when 68 => --0x44
          localRdData( 0)            <=  reg_data(68)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(68)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(68)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(68)( 3);                                     --tx reset_bufbypass
        when 69 => --0x45
          localRdData( 0)            <=  reg_data(69)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(69)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(69)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(69)( 3);                                     --rx reset_bufbypass
        when 70 => --0x46
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(6).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(6).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(6).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(6).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(6).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(6).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 72 => --0x48
          localRdData( 0)            <=  Mon.MGT.MGT(7).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(7).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(7).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(7).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(7).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(7).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(7).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 74 => --0x4a
          localRdData( 9 downto  0)  <=  reg_data(74)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(74)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(7).DRP.rd_rdy;                            --DRP Enable
        when 75 => --0x4b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(7).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(75)(31 downto 16);                           --DRP Write Data
        when 76 => --0x4c
          localRdData( 0)            <=  reg_data(76)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(76)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(76)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(76)( 3);                                     --tx reset_bufbypass
        when 77 => --0x4d
          localRdData( 0)            <=  reg_data(77)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(77)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(77)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(77)( 3);                                     --rx reset_bufbypass
        when 78 => --0x4e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(7).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(7).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(7).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(7).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(7).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(7).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 80 => --0x50
          localRdData( 0)            <=  Mon.MGT.MGT(8).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(8).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(8).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(8).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(8).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(8).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(8).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 82 => --0x52
          localRdData( 9 downto  0)  <=  reg_data(82)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(82)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(8).DRP.rd_rdy;                            --DRP Enable
        when 83 => --0x53
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(8).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(83)(31 downto 16);                           --DRP Write Data
        when 84 => --0x54
          localRdData( 0)            <=  reg_data(84)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(84)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(84)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(84)( 3);                                     --tx reset_bufbypass
        when 85 => --0x55
          localRdData( 0)            <=  reg_data(85)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(85)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(85)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(85)( 3);                                     --rx reset_bufbypass
        when 86 => --0x56
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(8).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(8).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(8).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(8).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(8).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(8).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 88 => --0x58
          localRdData( 0)            <=  Mon.MGT.MGT(9).STATUS.rxcdr_stable;                   --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(9).STATUS.powergood;                      --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(9).STATUS.rx_pma_reset_done;              --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(9).STATUS.tx_pma_reset_done;              --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(9).STATUS.tx_reset_done;                  --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(9).STATUS.rx_reset_done;                  --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_tx_done_out;         --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(9).STATUS.buffbypass_tx_error_out;        --buffbypass_tx_error_out
        when 90 => --0x5a
          localRdData( 9 downto  0)  <=  reg_data(90)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(90)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(9).DRP.rd_rdy;                            --DRP Enable
        when 91 => --0x5b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(9).DRP.rd_data;                           --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(91)(31 downto 16);                           --DRP Write Data
        when 92 => --0x5c
          localRdData( 0)            <=  reg_data(92)( 0);                                     --tx reset
          localRdData( 1)            <=  reg_data(92)( 1);                                     --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(92)( 2);                                     --tx reset_datapath
          localRdData( 3)            <=  reg_data(92)( 3);                                     --tx reset_bufbypass
        when 93 => --0x5d
          localRdData( 0)            <=  reg_data(93)( 0);                                     --rx reset
          localRdData( 1)            <=  reg_data(93)( 1);                                     --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(93)( 2);                                     --rx reset_datapath
          localRdData( 3)            <=  reg_data(93)( 3);                                     --rx reset_bufbypass
        when 94 => --0x5e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(9).CONFIG.mgt_type;                       --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(9).CONFIG.refclk;                         --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(9).CONFIG.gt_type;                        --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(9).CONFIG.x_loc;                          --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(9).CONFIG.y_loc;                          --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(9).CONFIG.is_active;                      --1 == this MGT was enabled during build
        when 96 => --0x60
          localRdData( 0)            <=  Mon.MGT.MGT(10).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(10).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(10).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(10).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(10).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(10).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(10).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 98 => --0x62
          localRdData( 9 downto  0)  <=  reg_data(98)( 9 downto  0);                           --DRP Address
          localRdData(12)            <=  reg_data(98)(12);                                     --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(10).DRP.rd_rdy;                           --DRP Enable
        when 99 => --0x63
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(10).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(99)(31 downto 16);                           --DRP Write Data
        when 100 => --0x64
          localRdData( 0)            <=  reg_data(100)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(100)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(100)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(100)( 3);                                    --tx reset_bufbypass
        when 101 => --0x65
          localRdData( 0)            <=  reg_data(101)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(101)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(101)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(101)( 3);                                    --rx reset_bufbypass
        when 102 => --0x66
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(10).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(10).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(10).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(10).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(10).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(10).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 104 => --0x68
          localRdData( 0)            <=  Mon.MGT.MGT(11).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(11).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(11).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(11).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(11).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(11).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(11).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 106 => --0x6a
          localRdData( 9 downto  0)  <=  reg_data(106)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(106)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(11).DRP.rd_rdy;                           --DRP Enable
        when 107 => --0x6b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(11).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(107)(31 downto 16);                          --DRP Write Data
        when 108 => --0x6c
          localRdData( 0)            <=  reg_data(108)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(108)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(108)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(108)( 3);                                    --tx reset_bufbypass
        when 109 => --0x6d
          localRdData( 0)            <=  reg_data(109)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(109)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(109)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(109)( 3);                                    --rx reset_bufbypass
        when 110 => --0x6e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(11).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(11).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(11).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(11).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(11).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(11).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 112 => --0x70
          localRdData( 0)            <=  Mon.MGT.MGT(12).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(12).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(12).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(12).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(12).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(12).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(12).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 114 => --0x72
          localRdData( 9 downto  0)  <=  reg_data(114)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(114)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(12).DRP.rd_rdy;                           --DRP Enable
        when 115 => --0x73
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(12).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(115)(31 downto 16);                          --DRP Write Data
        when 116 => --0x74
          localRdData( 0)            <=  reg_data(116)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(116)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(116)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(116)( 3);                                    --tx reset_bufbypass
        when 117 => --0x75
          localRdData( 0)            <=  reg_data(117)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(117)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(117)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(117)( 3);                                    --rx reset_bufbypass
        when 118 => --0x76
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(12).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(12).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(12).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(12).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(12).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(12).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 120 => --0x78
          localRdData( 0)            <=  Mon.MGT.MGT(13).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(13).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(13).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(13).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(13).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(13).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(13).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 122 => --0x7a
          localRdData( 9 downto  0)  <=  reg_data(122)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(122)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(13).DRP.rd_rdy;                           --DRP Enable
        when 123 => --0x7b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(13).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(123)(31 downto 16);                          --DRP Write Data
        when 124 => --0x7c
          localRdData( 0)            <=  reg_data(124)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(124)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(124)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(124)( 3);                                    --tx reset_bufbypass
        when 125 => --0x7d
          localRdData( 0)            <=  reg_data(125)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(125)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(125)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(125)( 3);                                    --rx reset_bufbypass
        when 126 => --0x7e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(13).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(13).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(13).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(13).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(13).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(13).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 128 => --0x80
          localRdData( 0)            <=  Mon.MGT.MGT(14).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(14).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(14).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(14).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(14).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(14).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(14).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 130 => --0x82
          localRdData( 9 downto  0)  <=  reg_data(130)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(130)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(14).DRP.rd_rdy;                           --DRP Enable
        when 131 => --0x83
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(14).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(131)(31 downto 16);                          --DRP Write Data
        when 132 => --0x84
          localRdData( 0)            <=  reg_data(132)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(132)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(132)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(132)( 3);                                    --tx reset_bufbypass
        when 133 => --0x85
          localRdData( 0)            <=  reg_data(133)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(133)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(133)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(133)( 3);                                    --rx reset_bufbypass
        when 134 => --0x86
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(14).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(14).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(14).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(14).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(14).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(14).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 136 => --0x88
          localRdData( 0)            <=  Mon.MGT.MGT(15).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(15).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(15).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(15).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(15).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(15).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(15).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 138 => --0x8a
          localRdData( 9 downto  0)  <=  reg_data(138)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(138)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(15).DRP.rd_rdy;                           --DRP Enable
        when 139 => --0x8b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(15).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(139)(31 downto 16);                          --DRP Write Data
        when 140 => --0x8c
          localRdData( 0)            <=  reg_data(140)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(140)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(140)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(140)( 3);                                    --tx reset_bufbypass
        when 141 => --0x8d
          localRdData( 0)            <=  reg_data(141)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(141)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(141)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(141)( 3);                                    --rx reset_bufbypass
        when 142 => --0x8e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(15).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(15).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(15).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(15).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(15).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(15).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 144 => --0x90
          localRdData( 0)            <=  Mon.MGT.MGT(16).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(16).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(16).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(16).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(16).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(16).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(16).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 146 => --0x92
          localRdData( 9 downto  0)  <=  reg_data(146)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(146)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(16).DRP.rd_rdy;                           --DRP Enable
        when 147 => --0x93
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(16).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(147)(31 downto 16);                          --DRP Write Data
        when 148 => --0x94
          localRdData( 0)            <=  reg_data(148)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(148)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(148)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(148)( 3);                                    --tx reset_bufbypass
        when 149 => --0x95
          localRdData( 0)            <=  reg_data(149)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(149)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(149)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(149)( 3);                                    --rx reset_bufbypass
        when 150 => --0x96
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(16).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(16).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(16).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(16).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(16).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(16).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 152 => --0x98
          localRdData( 0)            <=  Mon.MGT.MGT(17).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(17).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(17).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(17).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(17).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(17).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(17).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 154 => --0x9a
          localRdData( 9 downto  0)  <=  reg_data(154)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(154)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(17).DRP.rd_rdy;                           --DRP Enable
        when 155 => --0x9b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(17).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(155)(31 downto 16);                          --DRP Write Data
        when 156 => --0x9c
          localRdData( 0)            <=  reg_data(156)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(156)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(156)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(156)( 3);                                    --tx reset_bufbypass
        when 157 => --0x9d
          localRdData( 0)            <=  reg_data(157)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(157)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(157)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(157)( 3);                                    --rx reset_bufbypass
        when 158 => --0x9e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(17).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(17).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(17).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(17).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(17).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(17).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 160 => --0xa0
          localRdData( 0)            <=  Mon.MGT.MGT(18).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(18).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(18).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(18).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(18).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(18).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(18).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 162 => --0xa2
          localRdData( 9 downto  0)  <=  reg_data(162)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(162)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(18).DRP.rd_rdy;                           --DRP Enable
        when 163 => --0xa3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(18).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(163)(31 downto 16);                          --DRP Write Data
        when 164 => --0xa4
          localRdData( 0)            <=  reg_data(164)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(164)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(164)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(164)( 3);                                    --tx reset_bufbypass
        when 165 => --0xa5
          localRdData( 0)            <=  reg_data(165)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(165)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(165)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(165)( 3);                                    --rx reset_bufbypass
        when 166 => --0xa6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(18).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(18).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(18).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(18).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(18).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(18).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 168 => --0xa8
          localRdData( 0)            <=  Mon.MGT.MGT(19).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(19).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(19).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(19).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(19).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(19).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(19).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 170 => --0xaa
          localRdData( 9 downto  0)  <=  reg_data(170)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(170)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(19).DRP.rd_rdy;                           --DRP Enable
        when 171 => --0xab
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(19).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(171)(31 downto 16);                          --DRP Write Data
        when 172 => --0xac
          localRdData( 0)            <=  reg_data(172)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(172)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(172)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(172)( 3);                                    --tx reset_bufbypass
        when 173 => --0xad
          localRdData( 0)            <=  reg_data(173)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(173)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(173)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(173)( 3);                                    --rx reset_bufbypass
        when 174 => --0xae
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(19).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(19).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(19).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(19).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(19).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(19).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 176 => --0xb0
          localRdData( 0)            <=  Mon.MGT.MGT(20).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(20).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(20).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(20).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(20).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(20).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(20).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 178 => --0xb2
          localRdData( 9 downto  0)  <=  reg_data(178)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(178)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(20).DRP.rd_rdy;                           --DRP Enable
        when 179 => --0xb3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(20).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(179)(31 downto 16);                          --DRP Write Data
        when 180 => --0xb4
          localRdData( 0)            <=  reg_data(180)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(180)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(180)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(180)( 3);                                    --tx reset_bufbypass
        when 181 => --0xb5
          localRdData( 0)            <=  reg_data(181)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(181)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(181)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(181)( 3);                                    --rx reset_bufbypass
        when 182 => --0xb6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(20).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(20).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(20).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(20).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(20).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(20).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 184 => --0xb8
          localRdData( 0)            <=  Mon.MGT.MGT(21).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(21).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(21).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(21).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(21).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(21).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(21).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 186 => --0xba
          localRdData( 9 downto  0)  <=  reg_data(186)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(186)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(21).DRP.rd_rdy;                           --DRP Enable
        when 187 => --0xbb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(21).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(187)(31 downto 16);                          --DRP Write Data
        when 188 => --0xbc
          localRdData( 0)            <=  reg_data(188)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(188)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(188)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(188)( 3);                                    --tx reset_bufbypass
        when 189 => --0xbd
          localRdData( 0)            <=  reg_data(189)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(189)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(189)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(189)( 3);                                    --rx reset_bufbypass
        when 190 => --0xbe
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(21).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(21).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(21).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(21).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(21).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(21).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 192 => --0xc0
          localRdData( 0)            <=  Mon.MGT.MGT(22).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(22).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(22).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(22).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(22).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(22).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(22).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 194 => --0xc2
          localRdData( 9 downto  0)  <=  reg_data(194)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(194)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(22).DRP.rd_rdy;                           --DRP Enable
        when 195 => --0xc3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(22).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(195)(31 downto 16);                          --DRP Write Data
        when 196 => --0xc4
          localRdData( 0)            <=  reg_data(196)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(196)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(196)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(196)( 3);                                    --tx reset_bufbypass
        when 197 => --0xc5
          localRdData( 0)            <=  reg_data(197)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(197)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(197)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(197)( 3);                                    --rx reset_bufbypass
        when 198 => --0xc6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(22).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(22).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(22).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(22).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(22).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(22).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 200 => --0xc8
          localRdData( 0)            <=  Mon.MGT.MGT(23).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(23).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(23).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(23).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(23).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(23).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(23).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 202 => --0xca
          localRdData( 9 downto  0)  <=  reg_data(202)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(202)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(23).DRP.rd_rdy;                           --DRP Enable
        when 203 => --0xcb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(23).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(203)(31 downto 16);                          --DRP Write Data
        when 204 => --0xcc
          localRdData( 0)            <=  reg_data(204)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(204)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(204)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(204)( 3);                                    --tx reset_bufbypass
        when 205 => --0xcd
          localRdData( 0)            <=  reg_data(205)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(205)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(205)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(205)( 3);                                    --rx reset_bufbypass
        when 206 => --0xce
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(23).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(23).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(23).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(23).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(23).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(23).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 208 => --0xd0
          localRdData( 0)            <=  Mon.MGT.MGT(24).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(24).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(24).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(24).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(24).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(24).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(24).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 210 => --0xd2
          localRdData( 9 downto  0)  <=  reg_data(210)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(210)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(24).DRP.rd_rdy;                           --DRP Enable
        when 211 => --0xd3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(24).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(211)(31 downto 16);                          --DRP Write Data
        when 212 => --0xd4
          localRdData( 0)            <=  reg_data(212)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(212)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(212)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(212)( 3);                                    --tx reset_bufbypass
        when 213 => --0xd5
          localRdData( 0)            <=  reg_data(213)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(213)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(213)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(213)( 3);                                    --rx reset_bufbypass
        when 214 => --0xd6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(24).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(24).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(24).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(24).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(24).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(24).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 216 => --0xd8
          localRdData( 0)            <=  Mon.MGT.MGT(25).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(25).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(25).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(25).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(25).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(25).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(25).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 218 => --0xda
          localRdData( 9 downto  0)  <=  reg_data(218)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(218)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(25).DRP.rd_rdy;                           --DRP Enable
        when 219 => --0xdb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(25).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(219)(31 downto 16);                          --DRP Write Data
        when 220 => --0xdc
          localRdData( 0)            <=  reg_data(220)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(220)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(220)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(220)( 3);                                    --tx reset_bufbypass
        when 221 => --0xdd
          localRdData( 0)            <=  reg_data(221)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(221)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(221)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(221)( 3);                                    --rx reset_bufbypass
        when 222 => --0xde
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(25).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(25).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(25).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(25).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(25).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(25).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 224 => --0xe0
          localRdData( 0)            <=  Mon.MGT.MGT(26).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(26).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(26).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(26).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(26).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(26).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(26).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 226 => --0xe2
          localRdData( 9 downto  0)  <=  reg_data(226)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(226)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(26).DRP.rd_rdy;                           --DRP Enable
        when 227 => --0xe3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(26).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(227)(31 downto 16);                          --DRP Write Data
        when 228 => --0xe4
          localRdData( 0)            <=  reg_data(228)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(228)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(228)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(228)( 3);                                    --tx reset_bufbypass
        when 229 => --0xe5
          localRdData( 0)            <=  reg_data(229)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(229)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(229)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(229)( 3);                                    --rx reset_bufbypass
        when 230 => --0xe6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(26).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(26).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(26).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(26).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(26).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(26).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 232 => --0xe8
          localRdData( 0)            <=  Mon.MGT.MGT(27).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(27).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(27).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(27).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(27).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(27).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(27).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 234 => --0xea
          localRdData( 9 downto  0)  <=  reg_data(234)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(234)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(27).DRP.rd_rdy;                           --DRP Enable
        when 235 => --0xeb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(27).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(235)(31 downto 16);                          --DRP Write Data
        when 236 => --0xec
          localRdData( 0)            <=  reg_data(236)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(236)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(236)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(236)( 3);                                    --tx reset_bufbypass
        when 237 => --0xed
          localRdData( 0)            <=  reg_data(237)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(237)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(237)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(237)( 3);                                    --rx reset_bufbypass
        when 238 => --0xee
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(27).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(27).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(27).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(27).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(27).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(27).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 240 => --0xf0
          localRdData( 0)            <=  Mon.MGT.MGT(28).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(28).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(28).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(28).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(28).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(28).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(28).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 242 => --0xf2
          localRdData( 9 downto  0)  <=  reg_data(242)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(242)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(28).DRP.rd_rdy;                           --DRP Enable
        when 243 => --0xf3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(28).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(243)(31 downto 16);                          --DRP Write Data
        when 244 => --0xf4
          localRdData( 0)            <=  reg_data(244)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(244)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(244)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(244)( 3);                                    --tx reset_bufbypass
        when 245 => --0xf5
          localRdData( 0)            <=  reg_data(245)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(245)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(245)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(245)( 3);                                    --rx reset_bufbypass
        when 246 => --0xf6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(28).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(28).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(28).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(28).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(28).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(28).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 248 => --0xf8
          localRdData( 0)            <=  Mon.MGT.MGT(29).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(29).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(29).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(29).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(29).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(29).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(29).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 250 => --0xfa
          localRdData( 9 downto  0)  <=  reg_data(250)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(250)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(29).DRP.rd_rdy;                           --DRP Enable
        when 251 => --0xfb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(29).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(251)(31 downto 16);                          --DRP Write Data
        when 252 => --0xfc
          localRdData( 0)            <=  reg_data(252)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(252)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(252)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(252)( 3);                                    --tx reset_bufbypass
        when 253 => --0xfd
          localRdData( 0)            <=  reg_data(253)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(253)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(253)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(253)( 3);                                    --rx reset_bufbypass
        when 254 => --0xfe
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(29).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(29).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(29).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(29).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(29).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(29).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 256 => --0x100
          localRdData( 0)            <=  Mon.MGT.MGT(30).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(30).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(30).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(30).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(30).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(30).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(30).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 258 => --0x102
          localRdData( 9 downto  0)  <=  reg_data(258)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(258)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(30).DRP.rd_rdy;                           --DRP Enable
        when 259 => --0x103
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(30).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(259)(31 downto 16);                          --DRP Write Data
        when 260 => --0x104
          localRdData( 0)            <=  reg_data(260)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(260)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(260)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(260)( 3);                                    --tx reset_bufbypass
        when 261 => --0x105
          localRdData( 0)            <=  reg_data(261)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(261)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(261)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(261)( 3);                                    --rx reset_bufbypass
        when 262 => --0x106
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(30).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(30).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(30).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(30).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(30).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(30).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 264 => --0x108
          localRdData( 0)            <=  Mon.MGT.MGT(31).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(31).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(31).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(31).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(31).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(31).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(31).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 266 => --0x10a
          localRdData( 9 downto  0)  <=  reg_data(266)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(266)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(31).DRP.rd_rdy;                           --DRP Enable
        when 267 => --0x10b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(31).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(267)(31 downto 16);                          --DRP Write Data
        when 268 => --0x10c
          localRdData( 0)            <=  reg_data(268)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(268)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(268)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(268)( 3);                                    --tx reset_bufbypass
        when 269 => --0x10d
          localRdData( 0)            <=  reg_data(269)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(269)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(269)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(269)( 3);                                    --rx reset_bufbypass
        when 270 => --0x10e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(31).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(31).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(31).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(31).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(31).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(31).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 272 => --0x110
          localRdData( 0)            <=  Mon.MGT.MGT(32).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(32).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(32).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(32).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(32).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(32).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(32).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 274 => --0x112
          localRdData( 9 downto  0)  <=  reg_data(274)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(274)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(32).DRP.rd_rdy;                           --DRP Enable
        when 275 => --0x113
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(32).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(275)(31 downto 16);                          --DRP Write Data
        when 276 => --0x114
          localRdData( 0)            <=  reg_data(276)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(276)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(276)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(276)( 3);                                    --tx reset_bufbypass
        when 277 => --0x115
          localRdData( 0)            <=  reg_data(277)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(277)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(277)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(277)( 3);                                    --rx reset_bufbypass
        when 278 => --0x116
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(32).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(32).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(32).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(32).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(32).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(32).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 280 => --0x118
          localRdData( 0)            <=  Mon.MGT.MGT(33).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(33).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(33).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(33).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(33).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(33).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(33).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 282 => --0x11a
          localRdData( 9 downto  0)  <=  reg_data(282)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(282)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(33).DRP.rd_rdy;                           --DRP Enable
        when 283 => --0x11b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(33).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(283)(31 downto 16);                          --DRP Write Data
        when 284 => --0x11c
          localRdData( 0)            <=  reg_data(284)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(284)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(284)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(284)( 3);                                    --tx reset_bufbypass
        when 285 => --0x11d
          localRdData( 0)            <=  reg_data(285)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(285)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(285)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(285)( 3);                                    --rx reset_bufbypass
        when 286 => --0x11e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(33).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(33).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(33).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(33).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(33).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(33).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 288 => --0x120
          localRdData( 0)            <=  Mon.MGT.MGT(34).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(34).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(34).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(34).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(34).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(34).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(34).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 290 => --0x122
          localRdData( 9 downto  0)  <=  reg_data(290)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(290)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(34).DRP.rd_rdy;                           --DRP Enable
        when 291 => --0x123
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(34).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(291)(31 downto 16);                          --DRP Write Data
        when 292 => --0x124
          localRdData( 0)            <=  reg_data(292)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(292)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(292)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(292)( 3);                                    --tx reset_bufbypass
        when 293 => --0x125
          localRdData( 0)            <=  reg_data(293)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(293)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(293)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(293)( 3);                                    --rx reset_bufbypass
        when 294 => --0x126
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(34).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(34).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(34).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(34).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(34).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(34).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 296 => --0x128
          localRdData( 0)            <=  Mon.MGT.MGT(35).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(35).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(35).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(35).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(35).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(35).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(35).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 298 => --0x12a
          localRdData( 9 downto  0)  <=  reg_data(298)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(298)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(35).DRP.rd_rdy;                           --DRP Enable
        when 299 => --0x12b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(35).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(299)(31 downto 16);                          --DRP Write Data
        when 300 => --0x12c
          localRdData( 0)            <=  reg_data(300)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(300)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(300)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(300)( 3);                                    --tx reset_bufbypass
        when 301 => --0x12d
          localRdData( 0)            <=  reg_data(301)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(301)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(301)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(301)( 3);                                    --rx reset_bufbypass
        when 302 => --0x12e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(35).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(35).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(35).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(35).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(35).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(35).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 304 => --0x130
          localRdData( 0)            <=  Mon.MGT.MGT(36).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(36).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(36).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(36).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(36).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(36).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(36).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 306 => --0x132
          localRdData( 9 downto  0)  <=  reg_data(306)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(306)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(36).DRP.rd_rdy;                           --DRP Enable
        when 307 => --0x133
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(36).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(307)(31 downto 16);                          --DRP Write Data
        when 308 => --0x134
          localRdData( 0)            <=  reg_data(308)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(308)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(308)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(308)( 3);                                    --tx reset_bufbypass
        when 309 => --0x135
          localRdData( 0)            <=  reg_data(309)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(309)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(309)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(309)( 3);                                    --rx reset_bufbypass
        when 310 => --0x136
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(36).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(36).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(36).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(36).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(36).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(36).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 312 => --0x138
          localRdData( 0)            <=  Mon.MGT.MGT(37).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(37).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(37).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(37).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(37).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(37).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(37).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 314 => --0x13a
          localRdData( 9 downto  0)  <=  reg_data(314)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(314)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(37).DRP.rd_rdy;                           --DRP Enable
        when 315 => --0x13b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(37).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(315)(31 downto 16);                          --DRP Write Data
        when 316 => --0x13c
          localRdData( 0)            <=  reg_data(316)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(316)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(316)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(316)( 3);                                    --tx reset_bufbypass
        when 317 => --0x13d
          localRdData( 0)            <=  reg_data(317)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(317)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(317)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(317)( 3);                                    --rx reset_bufbypass
        when 318 => --0x13e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(37).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(37).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(37).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(37).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(37).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(37).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 320 => --0x140
          localRdData( 0)            <=  Mon.MGT.MGT(38).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(38).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(38).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(38).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(38).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(38).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(38).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 322 => --0x142
          localRdData( 9 downto  0)  <=  reg_data(322)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(322)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(38).DRP.rd_rdy;                           --DRP Enable
        when 323 => --0x143
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(38).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(323)(31 downto 16);                          --DRP Write Data
        when 324 => --0x144
          localRdData( 0)            <=  reg_data(324)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(324)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(324)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(324)( 3);                                    --tx reset_bufbypass
        when 325 => --0x145
          localRdData( 0)            <=  reg_data(325)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(325)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(325)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(325)( 3);                                    --rx reset_bufbypass
        when 326 => --0x146
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(38).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(38).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(38).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(38).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(38).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(38).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 328 => --0x148
          localRdData( 0)            <=  Mon.MGT.MGT(39).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(39).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(39).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(39).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(39).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(39).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(39).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 330 => --0x14a
          localRdData( 9 downto  0)  <=  reg_data(330)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(330)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(39).DRP.rd_rdy;                           --DRP Enable
        when 331 => --0x14b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(39).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(331)(31 downto 16);                          --DRP Write Data
        when 332 => --0x14c
          localRdData( 0)            <=  reg_data(332)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(332)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(332)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(332)( 3);                                    --tx reset_bufbypass
        when 333 => --0x14d
          localRdData( 0)            <=  reg_data(333)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(333)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(333)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(333)( 3);                                    --rx reset_bufbypass
        when 334 => --0x14e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(39).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(39).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(39).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(39).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(39).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(39).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 336 => --0x150
          localRdData( 0)            <=  Mon.MGT.MGT(40).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(40).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(40).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(40).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(40).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(40).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(40).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 338 => --0x152
          localRdData( 9 downto  0)  <=  reg_data(338)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(338)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(40).DRP.rd_rdy;                           --DRP Enable
        when 339 => --0x153
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(40).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(339)(31 downto 16);                          --DRP Write Data
        when 340 => --0x154
          localRdData( 0)            <=  reg_data(340)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(340)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(340)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(340)( 3);                                    --tx reset_bufbypass
        when 341 => --0x155
          localRdData( 0)            <=  reg_data(341)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(341)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(341)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(341)( 3);                                    --rx reset_bufbypass
        when 342 => --0x156
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(40).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(40).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(40).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(40).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(40).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(40).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 344 => --0x158
          localRdData( 0)            <=  Mon.MGT.MGT(41).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(41).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(41).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(41).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(41).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(41).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(41).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 346 => --0x15a
          localRdData( 9 downto  0)  <=  reg_data(346)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(346)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(41).DRP.rd_rdy;                           --DRP Enable
        when 347 => --0x15b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(41).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(347)(31 downto 16);                          --DRP Write Data
        when 348 => --0x15c
          localRdData( 0)            <=  reg_data(348)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(348)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(348)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(348)( 3);                                    --tx reset_bufbypass
        when 349 => --0x15d
          localRdData( 0)            <=  reg_data(349)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(349)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(349)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(349)( 3);                                    --rx reset_bufbypass
        when 350 => --0x15e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(41).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(41).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(41).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(41).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(41).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(41).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 352 => --0x160
          localRdData( 0)            <=  Mon.MGT.MGT(42).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(42).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(42).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(42).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(42).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(42).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(42).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 354 => --0x162
          localRdData( 9 downto  0)  <=  reg_data(354)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(354)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(42).DRP.rd_rdy;                           --DRP Enable
        when 355 => --0x163
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(42).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(355)(31 downto 16);                          --DRP Write Data
        when 356 => --0x164
          localRdData( 0)            <=  reg_data(356)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(356)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(356)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(356)( 3);                                    --tx reset_bufbypass
        when 357 => --0x165
          localRdData( 0)            <=  reg_data(357)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(357)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(357)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(357)( 3);                                    --rx reset_bufbypass
        when 358 => --0x166
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(42).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(42).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(42).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(42).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(42).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(42).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 360 => --0x168
          localRdData( 0)            <=  Mon.MGT.MGT(43).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(43).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(43).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(43).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(43).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(43).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(43).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 362 => --0x16a
          localRdData( 9 downto  0)  <=  reg_data(362)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(362)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(43).DRP.rd_rdy;                           --DRP Enable
        when 363 => --0x16b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(43).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(363)(31 downto 16);                          --DRP Write Data
        when 364 => --0x16c
          localRdData( 0)            <=  reg_data(364)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(364)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(364)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(364)( 3);                                    --tx reset_bufbypass
        when 365 => --0x16d
          localRdData( 0)            <=  reg_data(365)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(365)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(365)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(365)( 3);                                    --rx reset_bufbypass
        when 366 => --0x16e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(43).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(43).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(43).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(43).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(43).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(43).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 368 => --0x170
          localRdData( 0)            <=  Mon.MGT.MGT(44).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(44).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(44).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(44).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(44).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(44).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(44).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 370 => --0x172
          localRdData( 9 downto  0)  <=  reg_data(370)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(370)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(44).DRP.rd_rdy;                           --DRP Enable
        when 371 => --0x173
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(44).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(371)(31 downto 16);                          --DRP Write Data
        when 372 => --0x174
          localRdData( 0)            <=  reg_data(372)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(372)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(372)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(372)( 3);                                    --tx reset_bufbypass
        when 373 => --0x175
          localRdData( 0)            <=  reg_data(373)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(373)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(373)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(373)( 3);                                    --rx reset_bufbypass
        when 374 => --0x176
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(44).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(44).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(44).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(44).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(44).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(44).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 376 => --0x178
          localRdData( 0)            <=  Mon.MGT.MGT(45).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(45).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(45).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(45).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(45).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(45).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(45).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 378 => --0x17a
          localRdData( 9 downto  0)  <=  reg_data(378)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(378)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(45).DRP.rd_rdy;                           --DRP Enable
        when 379 => --0x17b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(45).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(379)(31 downto 16);                          --DRP Write Data
        when 380 => --0x17c
          localRdData( 0)            <=  reg_data(380)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(380)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(380)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(380)( 3);                                    --tx reset_bufbypass
        when 381 => --0x17d
          localRdData( 0)            <=  reg_data(381)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(381)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(381)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(381)( 3);                                    --rx reset_bufbypass
        when 382 => --0x17e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(45).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(45).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(45).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(45).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(45).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(45).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 384 => --0x180
          localRdData( 0)            <=  Mon.MGT.MGT(46).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(46).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(46).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(46).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(46).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(46).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(46).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 386 => --0x182
          localRdData( 9 downto  0)  <=  reg_data(386)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(386)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(46).DRP.rd_rdy;                           --DRP Enable
        when 387 => --0x183
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(46).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(387)(31 downto 16);                          --DRP Write Data
        when 388 => --0x184
          localRdData( 0)            <=  reg_data(388)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(388)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(388)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(388)( 3);                                    --tx reset_bufbypass
        when 389 => --0x185
          localRdData( 0)            <=  reg_data(389)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(389)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(389)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(389)( 3);                                    --rx reset_bufbypass
        when 390 => --0x186
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(46).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(46).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(46).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(46).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(46).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(46).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 392 => --0x188
          localRdData( 0)            <=  Mon.MGT.MGT(47).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(47).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(47).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(47).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(47).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(47).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(47).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 394 => --0x18a
          localRdData( 9 downto  0)  <=  reg_data(394)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(394)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(47).DRP.rd_rdy;                           --DRP Enable
        when 395 => --0x18b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(47).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(395)(31 downto 16);                          --DRP Write Data
        when 396 => --0x18c
          localRdData( 0)            <=  reg_data(396)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(396)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(396)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(396)( 3);                                    --tx reset_bufbypass
        when 397 => --0x18d
          localRdData( 0)            <=  reg_data(397)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(397)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(397)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(397)( 3);                                    --rx reset_bufbypass
        when 398 => --0x18e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(47).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(47).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(47).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(47).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(47).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(47).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 400 => --0x190
          localRdData( 0)            <=  Mon.MGT.MGT(48).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(48).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(48).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(48).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(48).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(48).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(48).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 402 => --0x192
          localRdData( 9 downto  0)  <=  reg_data(402)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(402)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(48).DRP.rd_rdy;                           --DRP Enable
        when 403 => --0x193
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(48).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(403)(31 downto 16);                          --DRP Write Data
        when 404 => --0x194
          localRdData( 0)            <=  reg_data(404)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(404)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(404)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(404)( 3);                                    --tx reset_bufbypass
        when 405 => --0x195
          localRdData( 0)            <=  reg_data(405)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(405)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(405)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(405)( 3);                                    --rx reset_bufbypass
        when 406 => --0x196
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(48).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(48).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(48).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(48).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(48).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(48).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 408 => --0x198
          localRdData( 0)            <=  Mon.MGT.MGT(49).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(49).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(49).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(49).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(49).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(49).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(49).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 410 => --0x19a
          localRdData( 9 downto  0)  <=  reg_data(410)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(410)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(49).DRP.rd_rdy;                           --DRP Enable
        when 411 => --0x19b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(49).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(411)(31 downto 16);                          --DRP Write Data
        when 412 => --0x19c
          localRdData( 0)            <=  reg_data(412)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(412)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(412)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(412)( 3);                                    --tx reset_bufbypass
        when 413 => --0x19d
          localRdData( 0)            <=  reg_data(413)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(413)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(413)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(413)( 3);                                    --rx reset_bufbypass
        when 414 => --0x19e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(49).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(49).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(49).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(49).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(49).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(49).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 416 => --0x1a0
          localRdData( 0)            <=  Mon.MGT.MGT(50).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(50).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(50).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(50).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(50).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(50).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(50).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 418 => --0x1a2
          localRdData( 9 downto  0)  <=  reg_data(418)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(418)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(50).DRP.rd_rdy;                           --DRP Enable
        when 419 => --0x1a3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(50).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(419)(31 downto 16);                          --DRP Write Data
        when 420 => --0x1a4
          localRdData( 0)            <=  reg_data(420)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(420)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(420)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(420)( 3);                                    --tx reset_bufbypass
        when 421 => --0x1a5
          localRdData( 0)            <=  reg_data(421)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(421)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(421)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(421)( 3);                                    --rx reset_bufbypass
        when 422 => --0x1a6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(50).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(50).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(50).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(50).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(50).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(50).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 424 => --0x1a8
          localRdData( 0)            <=  Mon.MGT.MGT(51).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(51).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(51).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(51).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(51).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(51).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(51).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 426 => --0x1aa
          localRdData( 9 downto  0)  <=  reg_data(426)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(426)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(51).DRP.rd_rdy;                           --DRP Enable
        when 427 => --0x1ab
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(51).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(427)(31 downto 16);                          --DRP Write Data
        when 428 => --0x1ac
          localRdData( 0)            <=  reg_data(428)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(428)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(428)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(428)( 3);                                    --tx reset_bufbypass
        when 429 => --0x1ad
          localRdData( 0)            <=  reg_data(429)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(429)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(429)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(429)( 3);                                    --rx reset_bufbypass
        when 430 => --0x1ae
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(51).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(51).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(51).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(51).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(51).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(51).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 432 => --0x1b0
          localRdData( 0)            <=  Mon.MGT.MGT(52).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(52).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(52).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(52).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(52).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(52).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(52).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 434 => --0x1b2
          localRdData( 9 downto  0)  <=  reg_data(434)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(434)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(52).DRP.rd_rdy;                           --DRP Enable
        when 435 => --0x1b3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(52).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(435)(31 downto 16);                          --DRP Write Data
        when 436 => --0x1b4
          localRdData( 0)            <=  reg_data(436)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(436)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(436)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(436)( 3);                                    --tx reset_bufbypass
        when 437 => --0x1b5
          localRdData( 0)            <=  reg_data(437)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(437)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(437)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(437)( 3);                                    --rx reset_bufbypass
        when 438 => --0x1b6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(52).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(52).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(52).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(52).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(52).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(52).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 440 => --0x1b8
          localRdData( 0)            <=  Mon.MGT.MGT(53).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(53).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(53).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(53).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(53).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(53).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(53).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 442 => --0x1ba
          localRdData( 9 downto  0)  <=  reg_data(442)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(442)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(53).DRP.rd_rdy;                           --DRP Enable
        when 443 => --0x1bb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(53).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(443)(31 downto 16);                          --DRP Write Data
        when 444 => --0x1bc
          localRdData( 0)            <=  reg_data(444)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(444)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(444)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(444)( 3);                                    --tx reset_bufbypass
        when 445 => --0x1bd
          localRdData( 0)            <=  reg_data(445)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(445)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(445)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(445)( 3);                                    --rx reset_bufbypass
        when 446 => --0x1be
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(53).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(53).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(53).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(53).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(53).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(53).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 448 => --0x1c0
          localRdData( 0)            <=  Mon.MGT.MGT(54).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(54).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(54).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(54).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(54).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(54).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(54).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 450 => --0x1c2
          localRdData( 9 downto  0)  <=  reg_data(450)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(450)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(54).DRP.rd_rdy;                           --DRP Enable
        when 451 => --0x1c3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(54).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(451)(31 downto 16);                          --DRP Write Data
        when 452 => --0x1c4
          localRdData( 0)            <=  reg_data(452)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(452)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(452)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(452)( 3);                                    --tx reset_bufbypass
        when 453 => --0x1c5
          localRdData( 0)            <=  reg_data(453)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(453)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(453)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(453)( 3);                                    --rx reset_bufbypass
        when 454 => --0x1c6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(54).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(54).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(54).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(54).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(54).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(54).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 456 => --0x1c8
          localRdData( 0)            <=  Mon.MGT.MGT(55).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(55).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(55).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(55).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(55).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(55).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(55).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 458 => --0x1ca
          localRdData( 9 downto  0)  <=  reg_data(458)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(458)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(55).DRP.rd_rdy;                           --DRP Enable
        when 459 => --0x1cb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(55).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(459)(31 downto 16);                          --DRP Write Data
        when 460 => --0x1cc
          localRdData( 0)            <=  reg_data(460)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(460)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(460)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(460)( 3);                                    --tx reset_bufbypass
        when 461 => --0x1cd
          localRdData( 0)            <=  reg_data(461)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(461)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(461)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(461)( 3);                                    --rx reset_bufbypass
        when 462 => --0x1ce
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(55).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(55).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(55).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(55).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(55).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(55).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 464 => --0x1d0
          localRdData( 0)            <=  Mon.MGT.MGT(56).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(56).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(56).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(56).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(56).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(56).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(56).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 466 => --0x1d2
          localRdData( 9 downto  0)  <=  reg_data(466)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(466)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(56).DRP.rd_rdy;                           --DRP Enable
        when 467 => --0x1d3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(56).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(467)(31 downto 16);                          --DRP Write Data
        when 468 => --0x1d4
          localRdData( 0)            <=  reg_data(468)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(468)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(468)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(468)( 3);                                    --tx reset_bufbypass
        when 469 => --0x1d5
          localRdData( 0)            <=  reg_data(469)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(469)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(469)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(469)( 3);                                    --rx reset_bufbypass
        when 470 => --0x1d6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(56).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(56).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(56).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(56).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(56).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(56).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 472 => --0x1d8
          localRdData( 0)            <=  Mon.MGT.MGT(57).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(57).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(57).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(57).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(57).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(57).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(57).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 474 => --0x1da
          localRdData( 9 downto  0)  <=  reg_data(474)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(474)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(57).DRP.rd_rdy;                           --DRP Enable
        when 475 => --0x1db
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(57).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(475)(31 downto 16);                          --DRP Write Data
        when 476 => --0x1dc
          localRdData( 0)            <=  reg_data(476)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(476)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(476)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(476)( 3);                                    --tx reset_bufbypass
        when 477 => --0x1dd
          localRdData( 0)            <=  reg_data(477)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(477)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(477)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(477)( 3);                                    --rx reset_bufbypass
        when 478 => --0x1de
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(57).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(57).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(57).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(57).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(57).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(57).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 480 => --0x1e0
          localRdData( 0)            <=  Mon.MGT.MGT(58).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(58).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(58).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(58).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(58).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(58).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(58).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 482 => --0x1e2
          localRdData( 9 downto  0)  <=  reg_data(482)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(482)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(58).DRP.rd_rdy;                           --DRP Enable
        when 483 => --0x1e3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(58).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(483)(31 downto 16);                          --DRP Write Data
        when 484 => --0x1e4
          localRdData( 0)            <=  reg_data(484)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(484)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(484)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(484)( 3);                                    --tx reset_bufbypass
        when 485 => --0x1e5
          localRdData( 0)            <=  reg_data(485)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(485)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(485)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(485)( 3);                                    --rx reset_bufbypass
        when 486 => --0x1e6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(58).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(58).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(58).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(58).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(58).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(58).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 488 => --0x1e8
          localRdData( 0)            <=  Mon.MGT.MGT(59).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(59).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(59).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(59).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(59).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(59).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(59).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 490 => --0x1ea
          localRdData( 9 downto  0)  <=  reg_data(490)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(490)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(59).DRP.rd_rdy;                           --DRP Enable
        when 491 => --0x1eb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(59).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(491)(31 downto 16);                          --DRP Write Data
        when 492 => --0x1ec
          localRdData( 0)            <=  reg_data(492)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(492)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(492)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(492)( 3);                                    --tx reset_bufbypass
        when 493 => --0x1ed
          localRdData( 0)            <=  reg_data(493)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(493)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(493)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(493)( 3);                                    --rx reset_bufbypass
        when 494 => --0x1ee
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(59).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(59).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(59).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(59).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(59).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(59).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 496 => --0x1f0
          localRdData( 0)            <=  Mon.MGT.MGT(60).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(60).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(60).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(60).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(60).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(60).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(60).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 498 => --0x1f2
          localRdData( 9 downto  0)  <=  reg_data(498)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(498)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(60).DRP.rd_rdy;                           --DRP Enable
        when 499 => --0x1f3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(60).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(499)(31 downto 16);                          --DRP Write Data
        when 500 => --0x1f4
          localRdData( 0)            <=  reg_data(500)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(500)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(500)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(500)( 3);                                    --tx reset_bufbypass
        when 501 => --0x1f5
          localRdData( 0)            <=  reg_data(501)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(501)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(501)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(501)( 3);                                    --rx reset_bufbypass
        when 502 => --0x1f6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(60).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(60).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(60).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(60).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(60).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(60).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 504 => --0x1f8
          localRdData( 0)            <=  Mon.MGT.MGT(61).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(61).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(61).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(61).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(61).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(61).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(61).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 506 => --0x1fa
          localRdData( 9 downto  0)  <=  reg_data(506)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(506)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(61).DRP.rd_rdy;                           --DRP Enable
        when 507 => --0x1fb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(61).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(507)(31 downto 16);                          --DRP Write Data
        when 508 => --0x1fc
          localRdData( 0)            <=  reg_data(508)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(508)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(508)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(508)( 3);                                    --tx reset_bufbypass
        when 509 => --0x1fd
          localRdData( 0)            <=  reg_data(509)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(509)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(509)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(509)( 3);                                    --rx reset_bufbypass
        when 510 => --0x1fe
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(61).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(61).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(61).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(61).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(61).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(61).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 512 => --0x200
          localRdData( 0)            <=  Mon.MGT.MGT(62).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(62).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(62).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(62).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(62).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(62).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(62).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 514 => --0x202
          localRdData( 9 downto  0)  <=  reg_data(514)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(514)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(62).DRP.rd_rdy;                           --DRP Enable
        when 515 => --0x203
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(62).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(515)(31 downto 16);                          --DRP Write Data
        when 516 => --0x204
          localRdData( 0)            <=  reg_data(516)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(516)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(516)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(516)( 3);                                    --tx reset_bufbypass
        when 517 => --0x205
          localRdData( 0)            <=  reg_data(517)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(517)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(517)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(517)( 3);                                    --rx reset_bufbypass
        when 518 => --0x206
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(62).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(62).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(62).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(62).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(62).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(62).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 520 => --0x208
          localRdData( 0)            <=  Mon.MGT.MGT(63).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(63).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(63).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(63).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(63).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(63).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(63).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 522 => --0x20a
          localRdData( 9 downto  0)  <=  reg_data(522)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(522)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(63).DRP.rd_rdy;                           --DRP Enable
        when 523 => --0x20b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(63).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(523)(31 downto 16);                          --DRP Write Data
        when 524 => --0x20c
          localRdData( 0)            <=  reg_data(524)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(524)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(524)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(524)( 3);                                    --tx reset_bufbypass
        when 525 => --0x20d
          localRdData( 0)            <=  reg_data(525)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(525)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(525)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(525)( 3);                                    --rx reset_bufbypass
        when 526 => --0x20e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(63).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(63).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(63).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(63).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(63).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(63).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 528 => --0x210
          localRdData( 0)            <=  Mon.MGT.MGT(64).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(64).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(64).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(64).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(64).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(64).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(64).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 530 => --0x212
          localRdData( 9 downto  0)  <=  reg_data(530)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(530)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(64).DRP.rd_rdy;                           --DRP Enable
        when 531 => --0x213
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(64).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(531)(31 downto 16);                          --DRP Write Data
        when 532 => --0x214
          localRdData( 0)            <=  reg_data(532)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(532)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(532)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(532)( 3);                                    --tx reset_bufbypass
        when 533 => --0x215
          localRdData( 0)            <=  reg_data(533)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(533)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(533)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(533)( 3);                                    --rx reset_bufbypass
        when 534 => --0x216
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(64).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(64).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(64).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(64).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(64).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(64).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 536 => --0x218
          localRdData( 0)            <=  Mon.MGT.MGT(65).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(65).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(65).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(65).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(65).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(65).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(65).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 538 => --0x21a
          localRdData( 9 downto  0)  <=  reg_data(538)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(538)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(65).DRP.rd_rdy;                           --DRP Enable
        when 539 => --0x21b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(65).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(539)(31 downto 16);                          --DRP Write Data
        when 540 => --0x21c
          localRdData( 0)            <=  reg_data(540)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(540)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(540)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(540)( 3);                                    --tx reset_bufbypass
        when 541 => --0x21d
          localRdData( 0)            <=  reg_data(541)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(541)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(541)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(541)( 3);                                    --rx reset_bufbypass
        when 542 => --0x21e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(65).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(65).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(65).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(65).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(65).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(65).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 544 => --0x220
          localRdData( 0)            <=  Mon.MGT.MGT(66).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(66).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(66).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(66).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(66).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(66).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(66).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 546 => --0x222
          localRdData( 9 downto  0)  <=  reg_data(546)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(546)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(66).DRP.rd_rdy;                           --DRP Enable
        when 547 => --0x223
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(66).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(547)(31 downto 16);                          --DRP Write Data
        when 548 => --0x224
          localRdData( 0)            <=  reg_data(548)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(548)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(548)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(548)( 3);                                    --tx reset_bufbypass
        when 549 => --0x225
          localRdData( 0)            <=  reg_data(549)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(549)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(549)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(549)( 3);                                    --rx reset_bufbypass
        when 550 => --0x226
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(66).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(66).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(66).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(66).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(66).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(66).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 552 => --0x228
          localRdData( 0)            <=  Mon.MGT.MGT(67).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(67).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(67).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(67).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(67).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(67).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(67).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 554 => --0x22a
          localRdData( 9 downto  0)  <=  reg_data(554)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(554)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(67).DRP.rd_rdy;                           --DRP Enable
        when 555 => --0x22b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(67).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(555)(31 downto 16);                          --DRP Write Data
        when 556 => --0x22c
          localRdData( 0)            <=  reg_data(556)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(556)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(556)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(556)( 3);                                    --tx reset_bufbypass
        when 557 => --0x22d
          localRdData( 0)            <=  reg_data(557)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(557)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(557)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(557)( 3);                                    --rx reset_bufbypass
        when 558 => --0x22e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(67).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(67).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(67).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(67).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(67).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(67).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 560 => --0x230
          localRdData( 0)            <=  Mon.MGT.MGT(68).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(68).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(68).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(68).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(68).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(68).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(68).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 562 => --0x232
          localRdData( 9 downto  0)  <=  reg_data(562)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(562)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(68).DRP.rd_rdy;                           --DRP Enable
        when 563 => --0x233
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(68).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(563)(31 downto 16);                          --DRP Write Data
        when 564 => --0x234
          localRdData( 0)            <=  reg_data(564)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(564)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(564)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(564)( 3);                                    --tx reset_bufbypass
        when 565 => --0x235
          localRdData( 0)            <=  reg_data(565)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(565)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(565)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(565)( 3);                                    --rx reset_bufbypass
        when 566 => --0x236
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(68).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(68).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(68).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(68).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(68).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(68).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 568 => --0x238
          localRdData( 0)            <=  Mon.MGT.MGT(69).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(69).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(69).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(69).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(69).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(69).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(69).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 570 => --0x23a
          localRdData( 9 downto  0)  <=  reg_data(570)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(570)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(69).DRP.rd_rdy;                           --DRP Enable
        when 571 => --0x23b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(69).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(571)(31 downto 16);                          --DRP Write Data
        when 572 => --0x23c
          localRdData( 0)            <=  reg_data(572)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(572)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(572)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(572)( 3);                                    --tx reset_bufbypass
        when 573 => --0x23d
          localRdData( 0)            <=  reg_data(573)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(573)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(573)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(573)( 3);                                    --rx reset_bufbypass
        when 574 => --0x23e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(69).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(69).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(69).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(69).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(69).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(69).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 576 => --0x240
          localRdData( 0)            <=  Mon.MGT.MGT(70).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(70).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(70).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(70).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(70).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(70).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(70).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 578 => --0x242
          localRdData( 9 downto  0)  <=  reg_data(578)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(578)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(70).DRP.rd_rdy;                           --DRP Enable
        when 579 => --0x243
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(70).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(579)(31 downto 16);                          --DRP Write Data
        when 580 => --0x244
          localRdData( 0)            <=  reg_data(580)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(580)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(580)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(580)( 3);                                    --tx reset_bufbypass
        when 581 => --0x245
          localRdData( 0)            <=  reg_data(581)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(581)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(581)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(581)( 3);                                    --rx reset_bufbypass
        when 582 => --0x246
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(70).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(70).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(70).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(70).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(70).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(70).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 584 => --0x248
          localRdData( 0)            <=  Mon.MGT.MGT(71).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(71).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(71).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(71).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(71).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(71).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(71).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 586 => --0x24a
          localRdData( 9 downto  0)  <=  reg_data(586)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(586)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(71).DRP.rd_rdy;                           --DRP Enable
        when 587 => --0x24b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(71).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(587)(31 downto 16);                          --DRP Write Data
        when 588 => --0x24c
          localRdData( 0)            <=  reg_data(588)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(588)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(588)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(588)( 3);                                    --tx reset_bufbypass
        when 589 => --0x24d
          localRdData( 0)            <=  reg_data(589)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(589)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(589)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(589)( 3);                                    --rx reset_bufbypass
        when 590 => --0x24e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(71).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(71).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(71).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(71).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(71).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(71).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 592 => --0x250
          localRdData( 0)            <=  Mon.MGT.MGT(72).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(72).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(72).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(72).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(72).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(72).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(72).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 594 => --0x252
          localRdData( 9 downto  0)  <=  reg_data(594)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(594)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(72).DRP.rd_rdy;                           --DRP Enable
        when 595 => --0x253
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(72).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(595)(31 downto 16);                          --DRP Write Data
        when 596 => --0x254
          localRdData( 0)            <=  reg_data(596)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(596)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(596)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(596)( 3);                                    --tx reset_bufbypass
        when 597 => --0x255
          localRdData( 0)            <=  reg_data(597)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(597)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(597)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(597)( 3);                                    --rx reset_bufbypass
        when 598 => --0x256
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(72).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(72).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(72).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(72).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(72).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(72).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 600 => --0x258
          localRdData( 0)            <=  Mon.MGT.MGT(73).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(73).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(73).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(73).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(73).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(73).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(73).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 602 => --0x25a
          localRdData( 9 downto  0)  <=  reg_data(602)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(602)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(73).DRP.rd_rdy;                           --DRP Enable
        when 603 => --0x25b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(73).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(603)(31 downto 16);                          --DRP Write Data
        when 604 => --0x25c
          localRdData( 0)            <=  reg_data(604)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(604)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(604)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(604)( 3);                                    --tx reset_bufbypass
        when 605 => --0x25d
          localRdData( 0)            <=  reg_data(605)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(605)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(605)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(605)( 3);                                    --rx reset_bufbypass
        when 606 => --0x25e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(73).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(73).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(73).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(73).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(73).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(73).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 608 => --0x260
          localRdData( 0)            <=  Mon.MGT.MGT(74).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(74).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(74).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(74).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(74).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(74).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(74).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 610 => --0x262
          localRdData( 9 downto  0)  <=  reg_data(610)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(610)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(74).DRP.rd_rdy;                           --DRP Enable
        when 611 => --0x263
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(74).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(611)(31 downto 16);                          --DRP Write Data
        when 612 => --0x264
          localRdData( 0)            <=  reg_data(612)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(612)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(612)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(612)( 3);                                    --tx reset_bufbypass
        when 613 => --0x265
          localRdData( 0)            <=  reg_data(613)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(613)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(613)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(613)( 3);                                    --rx reset_bufbypass
        when 614 => --0x266
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(74).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(74).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(74).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(74).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(74).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(74).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 616 => --0x268
          localRdData( 0)            <=  Mon.MGT.MGT(75).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(75).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(75).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(75).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(75).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(75).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(75).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 618 => --0x26a
          localRdData( 9 downto  0)  <=  reg_data(618)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(618)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(75).DRP.rd_rdy;                           --DRP Enable
        when 619 => --0x26b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(75).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(619)(31 downto 16);                          --DRP Write Data
        when 620 => --0x26c
          localRdData( 0)            <=  reg_data(620)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(620)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(620)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(620)( 3);                                    --tx reset_bufbypass
        when 621 => --0x26d
          localRdData( 0)            <=  reg_data(621)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(621)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(621)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(621)( 3);                                    --rx reset_bufbypass
        when 622 => --0x26e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(75).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(75).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(75).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(75).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(75).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(75).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 624 => --0x270
          localRdData( 0)            <=  Mon.MGT.MGT(76).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(76).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(76).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(76).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(76).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(76).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(76).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(76).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 626 => --0x272
          localRdData( 9 downto  0)  <=  reg_data(626)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(626)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(76).DRP.rd_rdy;                           --DRP Enable
        when 627 => --0x273
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(76).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(627)(31 downto 16);                          --DRP Write Data
        when 628 => --0x274
          localRdData( 0)            <=  reg_data(628)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(628)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(628)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(628)( 3);                                    --tx reset_bufbypass
        when 629 => --0x275
          localRdData( 0)            <=  reg_data(629)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(629)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(629)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(629)( 3);                                    --rx reset_bufbypass
        when 630 => --0x276
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(76).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(76).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(76).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(76).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(76).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(76).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 632 => --0x278
          localRdData( 0)            <=  Mon.MGT.MGT(77).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(77).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(77).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(77).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(77).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(77).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(77).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(77).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 634 => --0x27a
          localRdData( 9 downto  0)  <=  reg_data(634)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(634)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(77).DRP.rd_rdy;                           --DRP Enable
        when 635 => --0x27b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(77).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(635)(31 downto 16);                          --DRP Write Data
        when 636 => --0x27c
          localRdData( 0)            <=  reg_data(636)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(636)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(636)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(636)( 3);                                    --tx reset_bufbypass
        when 637 => --0x27d
          localRdData( 0)            <=  reg_data(637)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(637)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(637)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(637)( 3);                                    --rx reset_bufbypass
        when 638 => --0x27e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(77).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(77).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(77).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(77).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(77).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(77).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 640 => --0x280
          localRdData( 0)            <=  Mon.MGT.MGT(78).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(78).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(78).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(78).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(78).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(78).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(78).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(78).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 642 => --0x282
          localRdData( 9 downto  0)  <=  reg_data(642)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(642)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(78).DRP.rd_rdy;                           --DRP Enable
        when 643 => --0x283
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(78).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(643)(31 downto 16);                          --DRP Write Data
        when 644 => --0x284
          localRdData( 0)            <=  reg_data(644)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(644)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(644)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(644)( 3);                                    --tx reset_bufbypass
        when 645 => --0x285
          localRdData( 0)            <=  reg_data(645)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(645)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(645)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(645)( 3);                                    --rx reset_bufbypass
        when 646 => --0x286
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(78).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(78).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(78).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(78).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(78).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(78).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 648 => --0x288
          localRdData( 0)            <=  Mon.MGT.MGT(79).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(79).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(79).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(79).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(79).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(79).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(79).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(79).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 650 => --0x28a
          localRdData( 9 downto  0)  <=  reg_data(650)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(650)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(79).DRP.rd_rdy;                           --DRP Enable
        when 651 => --0x28b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(79).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(651)(31 downto 16);                          --DRP Write Data
        when 652 => --0x28c
          localRdData( 0)            <=  reg_data(652)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(652)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(652)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(652)( 3);                                    --tx reset_bufbypass
        when 653 => --0x28d
          localRdData( 0)            <=  reg_data(653)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(653)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(653)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(653)( 3);                                    --rx reset_bufbypass
        when 654 => --0x28e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(79).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(79).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(79).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(79).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(79).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(79).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 656 => --0x290
          localRdData( 0)            <=  Mon.MGT.MGT(80).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(80).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(80).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(80).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(80).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(80).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(80).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(80).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 658 => --0x292
          localRdData( 9 downto  0)  <=  reg_data(658)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(658)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(80).DRP.rd_rdy;                           --DRP Enable
        when 659 => --0x293
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(80).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(659)(31 downto 16);                          --DRP Write Data
        when 660 => --0x294
          localRdData( 0)            <=  reg_data(660)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(660)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(660)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(660)( 3);                                    --tx reset_bufbypass
        when 661 => --0x295
          localRdData( 0)            <=  reg_data(661)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(661)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(661)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(661)( 3);                                    --rx reset_bufbypass
        when 662 => --0x296
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(80).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(80).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(80).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(80).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(80).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(80).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 664 => --0x298
          localRdData( 0)            <=  Mon.MGT.MGT(81).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(81).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(81).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(81).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(81).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(81).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(81).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(81).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 666 => --0x29a
          localRdData( 9 downto  0)  <=  reg_data(666)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(666)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(81).DRP.rd_rdy;                           --DRP Enable
        when 667 => --0x29b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(81).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(667)(31 downto 16);                          --DRP Write Data
        when 668 => --0x29c
          localRdData( 0)            <=  reg_data(668)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(668)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(668)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(668)( 3);                                    --tx reset_bufbypass
        when 669 => --0x29d
          localRdData( 0)            <=  reg_data(669)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(669)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(669)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(669)( 3);                                    --rx reset_bufbypass
        when 670 => --0x29e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(81).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(81).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(81).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(81).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(81).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(81).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 672 => --0x2a0
          localRdData( 0)            <=  Mon.MGT.MGT(82).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(82).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(82).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(82).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(82).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(82).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(82).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(82).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 674 => --0x2a2
          localRdData( 9 downto  0)  <=  reg_data(674)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(674)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(82).DRP.rd_rdy;                           --DRP Enable
        when 675 => --0x2a3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(82).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(675)(31 downto 16);                          --DRP Write Data
        when 676 => --0x2a4
          localRdData( 0)            <=  reg_data(676)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(676)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(676)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(676)( 3);                                    --tx reset_bufbypass
        when 677 => --0x2a5
          localRdData( 0)            <=  reg_data(677)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(677)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(677)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(677)( 3);                                    --rx reset_bufbypass
        when 678 => --0x2a6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(82).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(82).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(82).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(82).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(82).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(82).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 680 => --0x2a8
          localRdData( 0)            <=  Mon.MGT.MGT(83).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(83).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(83).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(83).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(83).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(83).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(83).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(83).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 682 => --0x2aa
          localRdData( 9 downto  0)  <=  reg_data(682)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(682)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(83).DRP.rd_rdy;                           --DRP Enable
        when 683 => --0x2ab
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(83).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(683)(31 downto 16);                          --DRP Write Data
        when 684 => --0x2ac
          localRdData( 0)            <=  reg_data(684)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(684)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(684)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(684)( 3);                                    --tx reset_bufbypass
        when 685 => --0x2ad
          localRdData( 0)            <=  reg_data(685)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(685)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(685)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(685)( 3);                                    --rx reset_bufbypass
        when 686 => --0x2ae
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(83).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(83).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(83).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(83).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(83).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(83).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 688 => --0x2b0
          localRdData( 0)            <=  Mon.MGT.MGT(84).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(84).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(84).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(84).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(84).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(84).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(84).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(84).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 690 => --0x2b2
          localRdData( 9 downto  0)  <=  reg_data(690)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(690)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(84).DRP.rd_rdy;                           --DRP Enable
        when 691 => --0x2b3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(84).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(691)(31 downto 16);                          --DRP Write Data
        when 692 => --0x2b4
          localRdData( 0)            <=  reg_data(692)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(692)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(692)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(692)( 3);                                    --tx reset_bufbypass
        when 693 => --0x2b5
          localRdData( 0)            <=  reg_data(693)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(693)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(693)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(693)( 3);                                    --rx reset_bufbypass
        when 694 => --0x2b6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(84).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(84).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(84).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(84).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(84).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(84).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 696 => --0x2b8
          localRdData( 0)            <=  Mon.MGT.MGT(85).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(85).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(85).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(85).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(85).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(85).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(85).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(85).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 698 => --0x2ba
          localRdData( 9 downto  0)  <=  reg_data(698)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(698)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(85).DRP.rd_rdy;                           --DRP Enable
        when 699 => --0x2bb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(85).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(699)(31 downto 16);                          --DRP Write Data
        when 700 => --0x2bc
          localRdData( 0)            <=  reg_data(700)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(700)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(700)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(700)( 3);                                    --tx reset_bufbypass
        when 701 => --0x2bd
          localRdData( 0)            <=  reg_data(701)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(701)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(701)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(701)( 3);                                    --rx reset_bufbypass
        when 702 => --0x2be
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(85).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(85).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(85).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(85).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(85).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(85).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 704 => --0x2c0
          localRdData( 0)            <=  Mon.MGT.MGT(86).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(86).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(86).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(86).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(86).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(86).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(86).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(86).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 706 => --0x2c2
          localRdData( 9 downto  0)  <=  reg_data(706)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(706)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(86).DRP.rd_rdy;                           --DRP Enable
        when 707 => --0x2c3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(86).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(707)(31 downto 16);                          --DRP Write Data
        when 708 => --0x2c4
          localRdData( 0)            <=  reg_data(708)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(708)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(708)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(708)( 3);                                    --tx reset_bufbypass
        when 709 => --0x2c5
          localRdData( 0)            <=  reg_data(709)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(709)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(709)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(709)( 3);                                    --rx reset_bufbypass
        when 710 => --0x2c6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(86).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(86).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(86).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(86).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(86).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(86).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 712 => --0x2c8
          localRdData( 0)            <=  Mon.MGT.MGT(87).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(87).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(87).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(87).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(87).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(87).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(87).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(87).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 714 => --0x2ca
          localRdData( 9 downto  0)  <=  reg_data(714)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(714)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(87).DRP.rd_rdy;                           --DRP Enable
        when 715 => --0x2cb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(87).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(715)(31 downto 16);                          --DRP Write Data
        when 716 => --0x2cc
          localRdData( 0)            <=  reg_data(716)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(716)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(716)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(716)( 3);                                    --tx reset_bufbypass
        when 717 => --0x2cd
          localRdData( 0)            <=  reg_data(717)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(717)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(717)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(717)( 3);                                    --rx reset_bufbypass
        when 718 => --0x2ce
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(87).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(87).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(87).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(87).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(87).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(87).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 720 => --0x2d0
          localRdData( 0)            <=  Mon.MGT.MGT(88).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(88).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(88).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(88).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(88).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(88).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(88).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(88).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 722 => --0x2d2
          localRdData( 9 downto  0)  <=  reg_data(722)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(722)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(88).DRP.rd_rdy;                           --DRP Enable
        when 723 => --0x2d3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(88).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(723)(31 downto 16);                          --DRP Write Data
        when 724 => --0x2d4
          localRdData( 0)            <=  reg_data(724)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(724)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(724)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(724)( 3);                                    --tx reset_bufbypass
        when 725 => --0x2d5
          localRdData( 0)            <=  reg_data(725)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(725)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(725)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(725)( 3);                                    --rx reset_bufbypass
        when 726 => --0x2d6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(88).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(88).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(88).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(88).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(88).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(88).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 728 => --0x2d8
          localRdData( 0)            <=  Mon.MGT.MGT(89).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(89).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(89).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(89).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(89).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(89).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(89).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(89).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 730 => --0x2da
          localRdData( 9 downto  0)  <=  reg_data(730)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(730)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(89).DRP.rd_rdy;                           --DRP Enable
        when 731 => --0x2db
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(89).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(731)(31 downto 16);                          --DRP Write Data
        when 732 => --0x2dc
          localRdData( 0)            <=  reg_data(732)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(732)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(732)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(732)( 3);                                    --tx reset_bufbypass
        when 733 => --0x2dd
          localRdData( 0)            <=  reg_data(733)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(733)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(733)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(733)( 3);                                    --rx reset_bufbypass
        when 734 => --0x2de
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(89).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(89).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(89).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(89).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(89).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(89).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 736 => --0x2e0
          localRdData( 0)            <=  Mon.MGT.MGT(90).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(90).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(90).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(90).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(90).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(90).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(90).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(90).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 738 => --0x2e2
          localRdData( 9 downto  0)  <=  reg_data(738)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(738)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(90).DRP.rd_rdy;                           --DRP Enable
        when 739 => --0x2e3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(90).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(739)(31 downto 16);                          --DRP Write Data
        when 740 => --0x2e4
          localRdData( 0)            <=  reg_data(740)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(740)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(740)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(740)( 3);                                    --tx reset_bufbypass
        when 741 => --0x2e5
          localRdData( 0)            <=  reg_data(741)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(741)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(741)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(741)( 3);                                    --rx reset_bufbypass
        when 742 => --0x2e6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(90).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(90).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(90).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(90).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(90).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(90).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 744 => --0x2e8
          localRdData( 0)            <=  Mon.MGT.MGT(91).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(91).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(91).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(91).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(91).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(91).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(91).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(91).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 746 => --0x2ea
          localRdData( 9 downto  0)  <=  reg_data(746)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(746)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(91).DRP.rd_rdy;                           --DRP Enable
        when 747 => --0x2eb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(91).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(747)(31 downto 16);                          --DRP Write Data
        when 748 => --0x2ec
          localRdData( 0)            <=  reg_data(748)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(748)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(748)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(748)( 3);                                    --tx reset_bufbypass
        when 749 => --0x2ed
          localRdData( 0)            <=  reg_data(749)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(749)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(749)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(749)( 3);                                    --rx reset_bufbypass
        when 750 => --0x2ee
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(91).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(91).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(91).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(91).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(91).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(91).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 752 => --0x2f0
          localRdData( 0)            <=  Mon.MGT.MGT(92).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(92).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(92).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(92).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(92).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(92).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(92).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(92).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 754 => --0x2f2
          localRdData( 9 downto  0)  <=  reg_data(754)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(754)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(92).DRP.rd_rdy;                           --DRP Enable
        when 755 => --0x2f3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(92).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(755)(31 downto 16);                          --DRP Write Data
        when 756 => --0x2f4
          localRdData( 0)            <=  reg_data(756)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(756)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(756)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(756)( 3);                                    --tx reset_bufbypass
        when 757 => --0x2f5
          localRdData( 0)            <=  reg_data(757)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(757)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(757)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(757)( 3);                                    --rx reset_bufbypass
        when 758 => --0x2f6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(92).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(92).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(92).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(92).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(92).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(92).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 760 => --0x2f8
          localRdData( 0)            <=  Mon.MGT.MGT(93).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(93).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(93).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(93).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(93).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(93).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(93).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(93).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 762 => --0x2fa
          localRdData( 9 downto  0)  <=  reg_data(762)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(762)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(93).DRP.rd_rdy;                           --DRP Enable
        when 763 => --0x2fb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(93).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(763)(31 downto 16);                          --DRP Write Data
        when 764 => --0x2fc
          localRdData( 0)            <=  reg_data(764)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(764)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(764)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(764)( 3);                                    --tx reset_bufbypass
        when 765 => --0x2fd
          localRdData( 0)            <=  reg_data(765)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(765)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(765)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(765)( 3);                                    --rx reset_bufbypass
        when 766 => --0x2fe
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(93).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(93).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(93).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(93).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(93).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(93).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 768 => --0x300
          localRdData( 0)            <=  Mon.MGT.MGT(94).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(94).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(94).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(94).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(94).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(94).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(94).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(94).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 770 => --0x302
          localRdData( 9 downto  0)  <=  reg_data(770)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(770)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(94).DRP.rd_rdy;                           --DRP Enable
        when 771 => --0x303
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(94).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(771)(31 downto 16);                          --DRP Write Data
        when 772 => --0x304
          localRdData( 0)            <=  reg_data(772)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(772)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(772)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(772)( 3);                                    --tx reset_bufbypass
        when 773 => --0x305
          localRdData( 0)            <=  reg_data(773)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(773)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(773)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(773)( 3);                                    --rx reset_bufbypass
        when 774 => --0x306
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(94).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(94).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(94).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(94).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(94).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(94).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 776 => --0x308
          localRdData( 0)            <=  Mon.MGT.MGT(95).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(95).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(95).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(95).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(95).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(95).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(95).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(95).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 778 => --0x30a
          localRdData( 9 downto  0)  <=  reg_data(778)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(778)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(95).DRP.rd_rdy;                           --DRP Enable
        when 779 => --0x30b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(95).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(779)(31 downto 16);                          --DRP Write Data
        when 780 => --0x30c
          localRdData( 0)            <=  reg_data(780)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(780)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(780)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(780)( 3);                                    --tx reset_bufbypass
        when 781 => --0x30d
          localRdData( 0)            <=  reg_data(781)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(781)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(781)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(781)( 3);                                    --rx reset_bufbypass
        when 782 => --0x30e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(95).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(95).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(95).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(95).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(95).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(95).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 784 => --0x310
          localRdData( 0)            <=  Mon.MGT.MGT(96).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(96).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(96).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(96).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(96).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(96).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(96).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(96).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 786 => --0x312
          localRdData( 9 downto  0)  <=  reg_data(786)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(786)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(96).DRP.rd_rdy;                           --DRP Enable
        when 787 => --0x313
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(96).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(787)(31 downto 16);                          --DRP Write Data
        when 788 => --0x314
          localRdData( 0)            <=  reg_data(788)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(788)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(788)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(788)( 3);                                    --tx reset_bufbypass
        when 789 => --0x315
          localRdData( 0)            <=  reg_data(789)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(789)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(789)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(789)( 3);                                    --rx reset_bufbypass
        when 790 => --0x316
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(96).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(96).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(96).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(96).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(96).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(96).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 792 => --0x318
          localRdData( 0)            <=  Mon.MGT.MGT(97).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(97).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(97).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(97).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(97).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(97).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(97).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(97).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 794 => --0x31a
          localRdData( 9 downto  0)  <=  reg_data(794)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(794)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(97).DRP.rd_rdy;                           --DRP Enable
        when 795 => --0x31b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(97).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(795)(31 downto 16);                          --DRP Write Data
        when 796 => --0x31c
          localRdData( 0)            <=  reg_data(796)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(796)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(796)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(796)( 3);                                    --tx reset_bufbypass
        when 797 => --0x31d
          localRdData( 0)            <=  reg_data(797)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(797)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(797)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(797)( 3);                                    --rx reset_bufbypass
        when 798 => --0x31e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(97).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(97).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(97).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(97).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(97).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(97).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 800 => --0x320
          localRdData( 0)            <=  Mon.MGT.MGT(98).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(98).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(98).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(98).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(98).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(98).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(98).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(98).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 802 => --0x322
          localRdData( 9 downto  0)  <=  reg_data(802)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(802)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(98).DRP.rd_rdy;                           --DRP Enable
        when 803 => --0x323
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(98).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(803)(31 downto 16);                          --DRP Write Data
        when 804 => --0x324
          localRdData( 0)            <=  reg_data(804)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(804)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(804)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(804)( 3);                                    --tx reset_bufbypass
        when 805 => --0x325
          localRdData( 0)            <=  reg_data(805)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(805)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(805)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(805)( 3);                                    --rx reset_bufbypass
        when 806 => --0x326
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(98).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(98).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(98).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(98).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(98).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(98).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 808 => --0x328
          localRdData( 0)            <=  Mon.MGT.MGT(99).STATUS.rxcdr_stable;                  --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(99).STATUS.powergood;                     --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(99).STATUS.rx_pma_reset_done;             --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(99).STATUS.tx_pma_reset_done;             --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(99).STATUS.tx_reset_done;                 --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(99).STATUS.rx_reset_done;                 --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(99).STATUS.buffbypass_tx_done_out;        --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(99).STATUS.buffbypass_tx_error_out;       --buffbypass_tx_error_out
        when 810 => --0x32a
          localRdData( 9 downto  0)  <=  reg_data(810)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(810)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(99).DRP.rd_rdy;                           --DRP Enable
        when 811 => --0x32b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(99).DRP.rd_data;                          --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(811)(31 downto 16);                          --DRP Write Data
        when 812 => --0x32c
          localRdData( 0)            <=  reg_data(812)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(812)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(812)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(812)( 3);                                    --tx reset_bufbypass
        when 813 => --0x32d
          localRdData( 0)            <=  reg_data(813)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(813)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(813)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(813)( 3);                                    --rx reset_bufbypass
        when 814 => --0x32e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(99).CONFIG.mgt_type;                      --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(99).CONFIG.refclk;                        --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(99).CONFIG.gt_type;                       --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(99).CONFIG.x_loc;                         --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(99).CONFIG.y_loc;                         --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(99).CONFIG.is_active;                     --1 == this MGT was enabled during build
        when 816 => --0x330
          localRdData( 0)            <=  Mon.MGT.MGT(100).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(100).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(100).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(100).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(100).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(100).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(100).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(100).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 818 => --0x332
          localRdData( 9 downto  0)  <=  reg_data(818)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(818)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(100).DRP.rd_rdy;                          --DRP Enable
        when 819 => --0x333
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(100).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(819)(31 downto 16);                          --DRP Write Data
        when 820 => --0x334
          localRdData( 0)            <=  reg_data(820)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(820)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(820)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(820)( 3);                                    --tx reset_bufbypass
        when 821 => --0x335
          localRdData( 0)            <=  reg_data(821)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(821)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(821)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(821)( 3);                                    --rx reset_bufbypass
        when 822 => --0x336
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(100).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(100).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(100).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(100).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(100).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(100).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 824 => --0x338
          localRdData( 0)            <=  Mon.MGT.MGT(101).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(101).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(101).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(101).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(101).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(101).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(101).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(101).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 826 => --0x33a
          localRdData( 9 downto  0)  <=  reg_data(826)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(826)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(101).DRP.rd_rdy;                          --DRP Enable
        when 827 => --0x33b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(101).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(827)(31 downto 16);                          --DRP Write Data
        when 828 => --0x33c
          localRdData( 0)            <=  reg_data(828)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(828)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(828)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(828)( 3);                                    --tx reset_bufbypass
        when 829 => --0x33d
          localRdData( 0)            <=  reg_data(829)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(829)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(829)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(829)( 3);                                    --rx reset_bufbypass
        when 830 => --0x33e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(101).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(101).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(101).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(101).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(101).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(101).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 832 => --0x340
          localRdData( 0)            <=  Mon.MGT.MGT(102).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(102).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(102).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(102).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(102).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(102).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(102).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(102).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 834 => --0x342
          localRdData( 9 downto  0)  <=  reg_data(834)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(834)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(102).DRP.rd_rdy;                          --DRP Enable
        when 835 => --0x343
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(102).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(835)(31 downto 16);                          --DRP Write Data
        when 836 => --0x344
          localRdData( 0)            <=  reg_data(836)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(836)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(836)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(836)( 3);                                    --tx reset_bufbypass
        when 837 => --0x345
          localRdData( 0)            <=  reg_data(837)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(837)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(837)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(837)( 3);                                    --rx reset_bufbypass
        when 838 => --0x346
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(102).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(102).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(102).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(102).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(102).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(102).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 840 => --0x348
          localRdData( 0)            <=  Mon.MGT.MGT(103).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(103).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(103).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(103).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(103).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(103).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(103).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(103).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 842 => --0x34a
          localRdData( 9 downto  0)  <=  reg_data(842)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(842)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(103).DRP.rd_rdy;                          --DRP Enable
        when 843 => --0x34b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(103).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(843)(31 downto 16);                          --DRP Write Data
        when 844 => --0x34c
          localRdData( 0)            <=  reg_data(844)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(844)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(844)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(844)( 3);                                    --tx reset_bufbypass
        when 845 => --0x34d
          localRdData( 0)            <=  reg_data(845)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(845)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(845)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(845)( 3);                                    --rx reset_bufbypass
        when 846 => --0x34e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(103).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(103).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(103).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(103).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(103).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(103).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 848 => --0x350
          localRdData( 0)            <=  Mon.MGT.MGT(104).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(104).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(104).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(104).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(104).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(104).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(104).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(104).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 850 => --0x352
          localRdData( 9 downto  0)  <=  reg_data(850)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(850)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(104).DRP.rd_rdy;                          --DRP Enable
        when 851 => --0x353
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(104).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(851)(31 downto 16);                          --DRP Write Data
        when 852 => --0x354
          localRdData( 0)            <=  reg_data(852)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(852)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(852)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(852)( 3);                                    --tx reset_bufbypass
        when 853 => --0x355
          localRdData( 0)            <=  reg_data(853)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(853)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(853)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(853)( 3);                                    --rx reset_bufbypass
        when 854 => --0x356
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(104).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(104).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(104).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(104).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(104).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(104).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 856 => --0x358
          localRdData( 0)            <=  Mon.MGT.MGT(105).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(105).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(105).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(105).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(105).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(105).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(105).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(105).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 858 => --0x35a
          localRdData( 9 downto  0)  <=  reg_data(858)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(858)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(105).DRP.rd_rdy;                          --DRP Enable
        when 859 => --0x35b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(105).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(859)(31 downto 16);                          --DRP Write Data
        when 860 => --0x35c
          localRdData( 0)            <=  reg_data(860)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(860)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(860)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(860)( 3);                                    --tx reset_bufbypass
        when 861 => --0x35d
          localRdData( 0)            <=  reg_data(861)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(861)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(861)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(861)( 3);                                    --rx reset_bufbypass
        when 862 => --0x35e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(105).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(105).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(105).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(105).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(105).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(105).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 864 => --0x360
          localRdData( 0)            <=  Mon.MGT.MGT(106).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(106).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(106).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(106).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(106).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(106).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(106).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(106).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 866 => --0x362
          localRdData( 9 downto  0)  <=  reg_data(866)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(866)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(106).DRP.rd_rdy;                          --DRP Enable
        when 867 => --0x363
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(106).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(867)(31 downto 16);                          --DRP Write Data
        when 868 => --0x364
          localRdData( 0)            <=  reg_data(868)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(868)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(868)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(868)( 3);                                    --tx reset_bufbypass
        when 869 => --0x365
          localRdData( 0)            <=  reg_data(869)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(869)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(869)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(869)( 3);                                    --rx reset_bufbypass
        when 870 => --0x366
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(106).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(106).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(106).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(106).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(106).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(106).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 872 => --0x368
          localRdData( 0)            <=  Mon.MGT.MGT(107).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(107).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(107).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(107).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(107).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(107).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(107).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(107).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 874 => --0x36a
          localRdData( 9 downto  0)  <=  reg_data(874)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(874)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(107).DRP.rd_rdy;                          --DRP Enable
        when 875 => --0x36b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(107).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(875)(31 downto 16);                          --DRP Write Data
        when 876 => --0x36c
          localRdData( 0)            <=  reg_data(876)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(876)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(876)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(876)( 3);                                    --tx reset_bufbypass
        when 877 => --0x36d
          localRdData( 0)            <=  reg_data(877)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(877)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(877)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(877)( 3);                                    --rx reset_bufbypass
        when 878 => --0x36e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(107).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(107).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(107).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(107).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(107).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(107).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 880 => --0x370
          localRdData( 0)            <=  Mon.MGT.MGT(108).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(108).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(108).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(108).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(108).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(108).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(108).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(108).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 882 => --0x372
          localRdData( 9 downto  0)  <=  reg_data(882)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(882)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(108).DRP.rd_rdy;                          --DRP Enable
        when 883 => --0x373
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(108).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(883)(31 downto 16);                          --DRP Write Data
        when 884 => --0x374
          localRdData( 0)            <=  reg_data(884)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(884)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(884)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(884)( 3);                                    --tx reset_bufbypass
        when 885 => --0x375
          localRdData( 0)            <=  reg_data(885)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(885)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(885)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(885)( 3);                                    --rx reset_bufbypass
        when 886 => --0x376
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(108).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(108).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(108).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(108).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(108).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(108).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 888 => --0x378
          localRdData( 0)            <=  Mon.MGT.MGT(109).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(109).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(109).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(109).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(109).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(109).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(109).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(109).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 890 => --0x37a
          localRdData( 9 downto  0)  <=  reg_data(890)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(890)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(109).DRP.rd_rdy;                          --DRP Enable
        when 891 => --0x37b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(109).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(891)(31 downto 16);                          --DRP Write Data
        when 892 => --0x37c
          localRdData( 0)            <=  reg_data(892)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(892)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(892)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(892)( 3);                                    --tx reset_bufbypass
        when 893 => --0x37d
          localRdData( 0)            <=  reg_data(893)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(893)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(893)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(893)( 3);                                    --rx reset_bufbypass
        when 894 => --0x37e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(109).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(109).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(109).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(109).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(109).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(109).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 896 => --0x380
          localRdData( 0)            <=  Mon.MGT.MGT(110).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(110).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(110).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(110).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(110).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(110).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(110).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(110).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 898 => --0x382
          localRdData( 9 downto  0)  <=  reg_data(898)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(898)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(110).DRP.rd_rdy;                          --DRP Enable
        when 899 => --0x383
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(110).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(899)(31 downto 16);                          --DRP Write Data
        when 900 => --0x384
          localRdData( 0)            <=  reg_data(900)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(900)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(900)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(900)( 3);                                    --tx reset_bufbypass
        when 901 => --0x385
          localRdData( 0)            <=  reg_data(901)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(901)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(901)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(901)( 3);                                    --rx reset_bufbypass
        when 902 => --0x386
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(110).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(110).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(110).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(110).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(110).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(110).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 904 => --0x388
          localRdData( 0)            <=  Mon.MGT.MGT(111).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(111).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(111).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(111).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(111).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(111).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(111).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(111).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 906 => --0x38a
          localRdData( 9 downto  0)  <=  reg_data(906)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(906)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(111).DRP.rd_rdy;                          --DRP Enable
        when 907 => --0x38b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(111).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(907)(31 downto 16);                          --DRP Write Data
        when 908 => --0x38c
          localRdData( 0)            <=  reg_data(908)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(908)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(908)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(908)( 3);                                    --tx reset_bufbypass
        when 909 => --0x38d
          localRdData( 0)            <=  reg_data(909)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(909)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(909)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(909)( 3);                                    --rx reset_bufbypass
        when 910 => --0x38e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(111).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(111).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(111).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(111).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(111).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(111).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 912 => --0x390
          localRdData( 0)            <=  Mon.MGT.MGT(112).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(112).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(112).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(112).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(112).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(112).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(112).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(112).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 914 => --0x392
          localRdData( 9 downto  0)  <=  reg_data(914)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(914)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(112).DRP.rd_rdy;                          --DRP Enable
        when 915 => --0x393
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(112).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(915)(31 downto 16);                          --DRP Write Data
        when 916 => --0x394
          localRdData( 0)            <=  reg_data(916)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(916)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(916)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(916)( 3);                                    --tx reset_bufbypass
        when 917 => --0x395
          localRdData( 0)            <=  reg_data(917)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(917)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(917)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(917)( 3);                                    --rx reset_bufbypass
        when 918 => --0x396
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(112).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(112).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(112).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(112).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(112).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(112).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 920 => --0x398
          localRdData( 0)            <=  Mon.MGT.MGT(113).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(113).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(113).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(113).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(113).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(113).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(113).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(113).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 922 => --0x39a
          localRdData( 9 downto  0)  <=  reg_data(922)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(922)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(113).DRP.rd_rdy;                          --DRP Enable
        when 923 => --0x39b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(113).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(923)(31 downto 16);                          --DRP Write Data
        when 924 => --0x39c
          localRdData( 0)            <=  reg_data(924)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(924)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(924)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(924)( 3);                                    --tx reset_bufbypass
        when 925 => --0x39d
          localRdData( 0)            <=  reg_data(925)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(925)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(925)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(925)( 3);                                    --rx reset_bufbypass
        when 926 => --0x39e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(113).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(113).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(113).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(113).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(113).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(113).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 928 => --0x3a0
          localRdData( 0)            <=  Mon.MGT.MGT(114).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(114).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(114).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(114).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(114).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(114).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(114).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(114).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 930 => --0x3a2
          localRdData( 9 downto  0)  <=  reg_data(930)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(930)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(114).DRP.rd_rdy;                          --DRP Enable
        when 931 => --0x3a3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(114).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(931)(31 downto 16);                          --DRP Write Data
        when 932 => --0x3a4
          localRdData( 0)            <=  reg_data(932)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(932)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(932)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(932)( 3);                                    --tx reset_bufbypass
        when 933 => --0x3a5
          localRdData( 0)            <=  reg_data(933)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(933)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(933)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(933)( 3);                                    --rx reset_bufbypass
        when 934 => --0x3a6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(114).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(114).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(114).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(114).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(114).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(114).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 936 => --0x3a8
          localRdData( 0)            <=  Mon.MGT.MGT(115).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(115).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(115).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(115).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(115).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(115).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(115).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(115).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 938 => --0x3aa
          localRdData( 9 downto  0)  <=  reg_data(938)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(938)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(115).DRP.rd_rdy;                          --DRP Enable
        when 939 => --0x3ab
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(115).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(939)(31 downto 16);                          --DRP Write Data
        when 940 => --0x3ac
          localRdData( 0)            <=  reg_data(940)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(940)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(940)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(940)( 3);                                    --tx reset_bufbypass
        when 941 => --0x3ad
          localRdData( 0)            <=  reg_data(941)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(941)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(941)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(941)( 3);                                    --rx reset_bufbypass
        when 942 => --0x3ae
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(115).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(115).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(115).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(115).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(115).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(115).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 944 => --0x3b0
          localRdData( 0)            <=  Mon.MGT.MGT(116).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(116).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(116).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(116).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(116).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(116).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(116).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(116).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 946 => --0x3b2
          localRdData( 9 downto  0)  <=  reg_data(946)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(946)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(116).DRP.rd_rdy;                          --DRP Enable
        when 947 => --0x3b3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(116).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(947)(31 downto 16);                          --DRP Write Data
        when 948 => --0x3b4
          localRdData( 0)            <=  reg_data(948)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(948)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(948)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(948)( 3);                                    --tx reset_bufbypass
        when 949 => --0x3b5
          localRdData( 0)            <=  reg_data(949)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(949)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(949)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(949)( 3);                                    --rx reset_bufbypass
        when 950 => --0x3b6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(116).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(116).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(116).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(116).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(116).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(116).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 952 => --0x3b8
          localRdData( 0)            <=  Mon.MGT.MGT(117).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(117).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(117).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(117).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(117).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(117).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(117).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(117).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 954 => --0x3ba
          localRdData( 9 downto  0)  <=  reg_data(954)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(954)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(117).DRP.rd_rdy;                          --DRP Enable
        when 955 => --0x3bb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(117).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(955)(31 downto 16);                          --DRP Write Data
        when 956 => --0x3bc
          localRdData( 0)            <=  reg_data(956)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(956)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(956)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(956)( 3);                                    --tx reset_bufbypass
        when 957 => --0x3bd
          localRdData( 0)            <=  reg_data(957)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(957)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(957)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(957)( 3);                                    --rx reset_bufbypass
        when 958 => --0x3be
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(117).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(117).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(117).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(117).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(117).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(117).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 960 => --0x3c0
          localRdData( 0)            <=  Mon.MGT.MGT(118).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(118).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(118).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(118).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(118).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(118).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(118).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(118).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 962 => --0x3c2
          localRdData( 9 downto  0)  <=  reg_data(962)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(962)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(118).DRP.rd_rdy;                          --DRP Enable
        when 963 => --0x3c3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(118).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(963)(31 downto 16);                          --DRP Write Data
        when 964 => --0x3c4
          localRdData( 0)            <=  reg_data(964)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(964)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(964)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(964)( 3);                                    --tx reset_bufbypass
        when 965 => --0x3c5
          localRdData( 0)            <=  reg_data(965)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(965)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(965)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(965)( 3);                                    --rx reset_bufbypass
        when 966 => --0x3c6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(118).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(118).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(118).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(118).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(118).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(118).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 968 => --0x3c8
          localRdData( 0)            <=  Mon.MGT.MGT(119).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(119).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(119).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(119).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(119).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(119).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(119).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(119).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 970 => --0x3ca
          localRdData( 9 downto  0)  <=  reg_data(970)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(970)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(119).DRP.rd_rdy;                          --DRP Enable
        when 971 => --0x3cb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(119).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(971)(31 downto 16);                          --DRP Write Data
        when 972 => --0x3cc
          localRdData( 0)            <=  reg_data(972)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(972)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(972)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(972)( 3);                                    --tx reset_bufbypass
        when 973 => --0x3cd
          localRdData( 0)            <=  reg_data(973)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(973)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(973)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(973)( 3);                                    --rx reset_bufbypass
        when 974 => --0x3ce
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(119).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(119).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(119).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(119).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(119).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(119).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 976 => --0x3d0
          localRdData( 0)            <=  Mon.MGT.MGT(120).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(120).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(120).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(120).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(120).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(120).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(120).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(120).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 978 => --0x3d2
          localRdData( 9 downto  0)  <=  reg_data(978)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(978)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(120).DRP.rd_rdy;                          --DRP Enable
        when 979 => --0x3d3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(120).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(979)(31 downto 16);                          --DRP Write Data
        when 980 => --0x3d4
          localRdData( 0)            <=  reg_data(980)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(980)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(980)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(980)( 3);                                    --tx reset_bufbypass
        when 981 => --0x3d5
          localRdData( 0)            <=  reg_data(981)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(981)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(981)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(981)( 3);                                    --rx reset_bufbypass
        when 982 => --0x3d6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(120).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(120).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(120).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(120).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(120).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(120).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 984 => --0x3d8
          localRdData( 0)            <=  Mon.MGT.MGT(121).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(121).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(121).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(121).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(121).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(121).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(121).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(121).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 986 => --0x3da
          localRdData( 9 downto  0)  <=  reg_data(986)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(986)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(121).DRP.rd_rdy;                          --DRP Enable
        when 987 => --0x3db
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(121).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(987)(31 downto 16);                          --DRP Write Data
        when 988 => --0x3dc
          localRdData( 0)            <=  reg_data(988)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(988)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(988)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(988)( 3);                                    --tx reset_bufbypass
        when 989 => --0x3dd
          localRdData( 0)            <=  reg_data(989)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(989)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(989)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(989)( 3);                                    --rx reset_bufbypass
        when 990 => --0x3de
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(121).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(121).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(121).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(121).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(121).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(121).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 992 => --0x3e0
          localRdData( 0)            <=  Mon.MGT.MGT(122).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(122).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(122).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(122).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(122).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(122).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(122).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(122).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 994 => --0x3e2
          localRdData( 9 downto  0)  <=  reg_data(994)( 9 downto  0);                          --DRP Address
          localRdData(12)            <=  reg_data(994)(12);                                    --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(122).DRP.rd_rdy;                          --DRP Enable
        when 995 => --0x3e3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(122).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(995)(31 downto 16);                          --DRP Write Data
        when 996 => --0x3e4
          localRdData( 0)            <=  reg_data(996)( 0);                                    --tx reset
          localRdData( 1)            <=  reg_data(996)( 1);                                    --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(996)( 2);                                    --tx reset_datapath
          localRdData( 3)            <=  reg_data(996)( 3);                                    --tx reset_bufbypass
        when 997 => --0x3e5
          localRdData( 0)            <=  reg_data(997)( 0);                                    --rx reset
          localRdData( 1)            <=  reg_data(997)( 1);                                    --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(997)( 2);                                    --rx reset_datapath
          localRdData( 3)            <=  reg_data(997)( 3);                                    --rx reset_bufbypass
        when 998 => --0x3e6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(122).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(122).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(122).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(122).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(122).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(122).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1000 => --0x3e8
          localRdData( 0)            <=  Mon.MGT.MGT(123).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(123).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(123).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(123).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(123).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(123).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(123).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(123).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 1002 => --0x3ea
          localRdData( 9 downto  0)  <=  reg_data(1002)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(1002)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(123).DRP.rd_rdy;                          --DRP Enable
        when 1003 => --0x3eb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(123).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(1003)(31 downto 16);                         --DRP Write Data
        when 1004 => --0x3ec
          localRdData( 0)            <=  reg_data(1004)( 0);                                   --tx reset
          localRdData( 1)            <=  reg_data(1004)( 1);                                   --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1004)( 2);                                   --tx reset_datapath
          localRdData( 3)            <=  reg_data(1004)( 3);                                   --tx reset_bufbypass
        when 1005 => --0x3ed
          localRdData( 0)            <=  reg_data(1005)( 0);                                   --rx reset
          localRdData( 1)            <=  reg_data(1005)( 1);                                   --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1005)( 2);                                   --rx reset_datapath
          localRdData( 3)            <=  reg_data(1005)( 3);                                   --rx reset_bufbypass
        when 1006 => --0x3ee
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(123).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(123).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(123).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(123).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(123).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(123).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1008 => --0x3f0
          localRdData( 0)            <=  Mon.MGT.MGT(124).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(124).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(124).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(124).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(124).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(124).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(124).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(124).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 1010 => --0x3f2
          localRdData( 9 downto  0)  <=  reg_data(1010)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(1010)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(124).DRP.rd_rdy;                          --DRP Enable
        when 1011 => --0x3f3
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(124).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(1011)(31 downto 16);                         --DRP Write Data
        when 1012 => --0x3f4
          localRdData( 0)            <=  reg_data(1012)( 0);                                   --tx reset
          localRdData( 1)            <=  reg_data(1012)( 1);                                   --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1012)( 2);                                   --tx reset_datapath
          localRdData( 3)            <=  reg_data(1012)( 3);                                   --tx reset_bufbypass
        when 1013 => --0x3f5
          localRdData( 0)            <=  reg_data(1013)( 0);                                   --rx reset
          localRdData( 1)            <=  reg_data(1013)( 1);                                   --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1013)( 2);                                   --rx reset_datapath
          localRdData( 3)            <=  reg_data(1013)( 3);                                   --rx reset_bufbypass
        when 1014 => --0x3f6
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(124).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(124).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(124).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(124).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(124).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(124).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1016 => --0x3f8
          localRdData( 0)            <=  Mon.MGT.MGT(125).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(125).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(125).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(125).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(125).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(125).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(125).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(125).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 1018 => --0x3fa
          localRdData( 9 downto  0)  <=  reg_data(1018)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(1018)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(125).DRP.rd_rdy;                          --DRP Enable
        when 1019 => --0x3fb
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(125).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(1019)(31 downto 16);                         --DRP Write Data
        when 1020 => --0x3fc
          localRdData( 0)            <=  reg_data(1020)( 0);                                   --tx reset
          localRdData( 1)            <=  reg_data(1020)( 1);                                   --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1020)( 2);                                   --tx reset_datapath
          localRdData( 3)            <=  reg_data(1020)( 3);                                   --tx reset_bufbypass
        when 1021 => --0x3fd
          localRdData( 0)            <=  reg_data(1021)( 0);                                   --rx reset
          localRdData( 1)            <=  reg_data(1021)( 1);                                   --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1021)( 2);                                   --rx reset_datapath
          localRdData( 3)            <=  reg_data(1021)( 3);                                   --rx reset_bufbypass
        when 1022 => --0x3fe
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(125).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(125).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(125).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(125).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(125).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(125).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1024 => --0x400
          localRdData( 0)            <=  Mon.MGT.MGT(126).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(126).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(126).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(126).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(126).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(126).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(126).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(126).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 1026 => --0x402
          localRdData( 9 downto  0)  <=  reg_data(1026)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(1026)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(126).DRP.rd_rdy;                          --DRP Enable
        when 1027 => --0x403
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(126).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(1027)(31 downto 16);                         --DRP Write Data
        when 1028 => --0x404
          localRdData( 0)            <=  reg_data(1028)( 0);                                   --tx reset
          localRdData( 1)            <=  reg_data(1028)( 1);                                   --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1028)( 2);                                   --tx reset_datapath
          localRdData( 3)            <=  reg_data(1028)( 3);                                   --tx reset_bufbypass
        when 1029 => --0x405
          localRdData( 0)            <=  reg_data(1029)( 0);                                   --rx reset
          localRdData( 1)            <=  reg_data(1029)( 1);                                   --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1029)( 2);                                   --rx reset_datapath
          localRdData( 3)            <=  reg_data(1029)( 3);                                   --rx reset_bufbypass
        when 1030 => --0x406
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(126).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(126).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(126).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(126).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(126).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(126).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1032 => --0x408
          localRdData( 0)            <=  Mon.MGT.MGT(127).STATUS.rxcdr_stable;                 --rxcdr_stable
          localRdData( 1)            <=  Mon.MGT.MGT(127).STATUS.powergood;                    --powergood
          localRdData( 4)            <=  Mon.MGT.MGT(127).STATUS.rx_pma_reset_done;            --rx_pma_reset_done
          localRdData( 5)            <=  Mon.MGT.MGT(127).STATUS.tx_pma_reset_done;            --tx_pma_reset_done
          localRdData( 6)            <=  Mon.MGT.MGT(127).STATUS.tx_reset_done;                --tx_reset_done
          localRdData( 7)            <=  Mon.MGT.MGT(127).STATUS.rx_reset_done;                --rx_reset_done
          localRdData( 8)            <=  Mon.MGT.MGT(127).STATUS.buffbypass_tx_done_out;       --buffbypass_tx_done_out
          localRdData( 9)            <=  Mon.MGT.MGT(127).STATUS.buffbypass_tx_error_out;      --buffbypass_tx_error_out
        when 1034 => --0x40a
          localRdData( 9 downto  0)  <=  reg_data(1034)( 9 downto  0);                         --DRP Address
          localRdData(12)            <=  reg_data(1034)(12);                                   --DRP Enable
          localRdData(13)            <=  Mon.MGT.MGT(127).DRP.rd_rdy;                          --DRP Enable
        when 1035 => --0x40b
          localRdData(15 downto  0)  <=  Mon.MGT.MGT(127).DRP.rd_data;                         --DRP Read Data
          localRdData(31 downto 16)  <=  reg_data(1035)(31 downto 16);                         --DRP Write Data
        when 1036 => --0x40c
          localRdData( 0)            <=  reg_data(1036)( 0);                                   --tx reset
          localRdData( 1)            <=  reg_data(1036)( 1);                                   --tx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1036)( 2);                                   --tx reset_datapath
          localRdData( 3)            <=  reg_data(1036)( 3);                                   --tx reset_bufbypass
        when 1037 => --0x40d
          localRdData( 0)            <=  reg_data(1037)( 0);                                   --rx reset
          localRdData( 1)            <=  reg_data(1037)( 1);                                   --rx reset_pll_and_datapath
          localRdData( 2)            <=  reg_data(1037)( 2);                                   --rx reset_datapath
          localRdData( 3)            <=  reg_data(1037)( 3);                                   --rx reset_bufbypass
        when 1038 => --0x40e
          localRdData( 2 downto  0)  <=  Mon.MGT.MGT(127).CONFIG.mgt_type;                     --MGT Type (MGT_NIL, MGT_LPGBT_SIMPLEX, MGT_LPGBT, MGT_LPGBT_EMUL, MGT_C2C, MGT_SL, MGT_TTC, MGT_FELIX)
          localRdData( 7 downto  3)  <=  Mon.MGT.MGT(127).CONFIG.refclk;                       --Refclk number (consult the board_pkg)
          localRdData( 9 downto  8)  <=  Mon.MGT.MGT(127).CONFIG.gt_type;                      --(GT_NIL, GTH, GTY)
          localRdData(11 downto 10)  <=  Mon.MGT.MGT(127).CONFIG.x_loc;                        --MGT X LOC
          localRdData(17 downto 12)  <=  Mon.MGT.MGT(127).CONFIG.y_loc;                        --MGT Y LOC
          localRdData(18)            <=  Mon.MGT.MGT(127).CONFIG.is_active;                    --1 == this MGT was enabled during build
        when 1040 => --0x410
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(0).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(0).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1041 => --0x411
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(1).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(1).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1042 => --0x412
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(2).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(2).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1043 => --0x413
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(3).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(3).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1044 => --0x414
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(4).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(4).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1045 => --0x415
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(5).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(5).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1046 => --0x416
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(6).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(6).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1047 => --0x417
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(7).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(7).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1048 => --0x418
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(8).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(8).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1049 => --0x419
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(9).FREQ;                               --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(9).REFCLK_TYPE;                        --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1050 => --0x41a
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(10).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(10).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1051 => --0x41b
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(11).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(11).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1052 => --0x41c
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(12).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(12).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1053 => --0x41d
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(13).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(13).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1054 => --0x41e
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(14).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(14).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1055 => --0x41f
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(15).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(15).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1056 => --0x420
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(16).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(16).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1057 => --0x421
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(17).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(17).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1058 => --0x422
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(18).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(18).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1059 => --0x423
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(19).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(19).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1060 => --0x424
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(20).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(20).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1061 => --0x425
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(21).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(21).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1062 => --0x426
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(22).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(22).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1063 => --0x427
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(23).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(23).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1064 => --0x428
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(24).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(24).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1065 => --0x429
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(25).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(25).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1066 => --0x42a
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(26).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(26).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1067 => --0x42b
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(27).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(27).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1068 => --0x42c
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(28).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(28).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1069 => --0x42d
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(29).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(29).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1070 => --0x42e
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(30).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(30).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)
        when 1071 => --0x42f
          localRdData(28 downto  0)  <=  Mon.MGT.REFCLK(31).FREQ;                              --Reference clock frequency in Hz
          localRdData(31 downto 29)  <=  Mon.MGT.REFCLK(31).REFCLK_TYPE;                       --Reference clock type (REF_AXI_C2C, REF_ASYNC320, REF_SYNC320, REF_SYNC240, REF_NIL)


          when others =>
            regRdAck <= '0';
            localRdData <= x"00000000";
        end case;
      end if;
    end if;
  end process reads;


  -------------------------------------------------------------------------------
  -- Record write decoding
  -------------------------------------------------------------------------------
  -------------------------------------------------------------------------------

  -- Register mapping to ctrl structures
  Ctrl.CLOCKING.RESET_MMCM                            <=  reg_data( 1)( 1);                 
  Ctrl.MGT.MGT(0).DRP.wr_addr                         <=  reg_data(18)( 9 downto  0);       
  Ctrl.MGT.MGT(0).DRP.en                              <=  reg_data(18)(12);                 
  Ctrl.MGT.MGT(0).DRP.wr_data                         <=  reg_data(19)(31 downto 16);       
  Ctrl.MGT.MGT(0).TX_RESETS.reset                     <=  reg_data(20)( 0);                 
  Ctrl.MGT.MGT(0).TX_RESETS.reset_pll_and_datapath    <=  reg_data(20)( 1);                 
  Ctrl.MGT.MGT(0).TX_RESETS.reset_datapath            <=  reg_data(20)( 2);                 
  Ctrl.MGT.MGT(0).TX_RESETS.reset_bufbypass           <=  reg_data(20)( 3);                 
  Ctrl.MGT.MGT(0).RX_RESETS.reset                     <=  reg_data(21)( 0);                 
  Ctrl.MGT.MGT(0).RX_RESETS.reset_pll_and_datapath    <=  reg_data(21)( 1);                 
  Ctrl.MGT.MGT(0).RX_RESETS.reset_datapath            <=  reg_data(21)( 2);                 
  Ctrl.MGT.MGT(0).RX_RESETS.reset_bufbypass           <=  reg_data(21)( 3);                 
  Ctrl.MGT.MGT(1).DRP.wr_addr                         <=  reg_data(26)( 9 downto  0);       
  Ctrl.MGT.MGT(1).DRP.en                              <=  reg_data(26)(12);                 
  Ctrl.MGT.MGT(1).DRP.wr_data                         <=  reg_data(27)(31 downto 16);       
  Ctrl.MGT.MGT(1).TX_RESETS.reset                     <=  reg_data(28)( 0);                 
  Ctrl.MGT.MGT(1).TX_RESETS.reset_pll_and_datapath    <=  reg_data(28)( 1);                 
  Ctrl.MGT.MGT(1).TX_RESETS.reset_datapath            <=  reg_data(28)( 2);                 
  Ctrl.MGT.MGT(1).TX_RESETS.reset_bufbypass           <=  reg_data(28)( 3);                 
  Ctrl.MGT.MGT(1).RX_RESETS.reset                     <=  reg_data(29)( 0);                 
  Ctrl.MGT.MGT(1).RX_RESETS.reset_pll_and_datapath    <=  reg_data(29)( 1);                 
  Ctrl.MGT.MGT(1).RX_RESETS.reset_datapath            <=  reg_data(29)( 2);                 
  Ctrl.MGT.MGT(1).RX_RESETS.reset_bufbypass           <=  reg_data(29)( 3);                 
  Ctrl.MGT.MGT(2).DRP.wr_addr                         <=  reg_data(34)( 9 downto  0);       
  Ctrl.MGT.MGT(2).DRP.en                              <=  reg_data(34)(12);                 
  Ctrl.MGT.MGT(2).DRP.wr_data                         <=  reg_data(35)(31 downto 16);       
  Ctrl.MGT.MGT(2).TX_RESETS.reset                     <=  reg_data(36)( 0);                 
  Ctrl.MGT.MGT(2).TX_RESETS.reset_pll_and_datapath    <=  reg_data(36)( 1);                 
  Ctrl.MGT.MGT(2).TX_RESETS.reset_datapath            <=  reg_data(36)( 2);                 
  Ctrl.MGT.MGT(2).TX_RESETS.reset_bufbypass           <=  reg_data(36)( 3);                 
  Ctrl.MGT.MGT(2).RX_RESETS.reset                     <=  reg_data(37)( 0);                 
  Ctrl.MGT.MGT(2).RX_RESETS.reset_pll_and_datapath    <=  reg_data(37)( 1);                 
  Ctrl.MGT.MGT(2).RX_RESETS.reset_datapath            <=  reg_data(37)( 2);                 
  Ctrl.MGT.MGT(2).RX_RESETS.reset_bufbypass           <=  reg_data(37)( 3);                 
  Ctrl.MGT.MGT(3).DRP.wr_addr                         <=  reg_data(42)( 9 downto  0);       
  Ctrl.MGT.MGT(3).DRP.en                              <=  reg_data(42)(12);                 
  Ctrl.MGT.MGT(3).DRP.wr_data                         <=  reg_data(43)(31 downto 16);       
  Ctrl.MGT.MGT(3).TX_RESETS.reset                     <=  reg_data(44)( 0);                 
  Ctrl.MGT.MGT(3).TX_RESETS.reset_pll_and_datapath    <=  reg_data(44)( 1);                 
  Ctrl.MGT.MGT(3).TX_RESETS.reset_datapath            <=  reg_data(44)( 2);                 
  Ctrl.MGT.MGT(3).TX_RESETS.reset_bufbypass           <=  reg_data(44)( 3);                 
  Ctrl.MGT.MGT(3).RX_RESETS.reset                     <=  reg_data(45)( 0);                 
  Ctrl.MGT.MGT(3).RX_RESETS.reset_pll_and_datapath    <=  reg_data(45)( 1);                 
  Ctrl.MGT.MGT(3).RX_RESETS.reset_datapath            <=  reg_data(45)( 2);                 
  Ctrl.MGT.MGT(3).RX_RESETS.reset_bufbypass           <=  reg_data(45)( 3);                 
  Ctrl.MGT.MGT(4).DRP.wr_addr                         <=  reg_data(50)( 9 downto  0);       
  Ctrl.MGT.MGT(4).DRP.en                              <=  reg_data(50)(12);                 
  Ctrl.MGT.MGT(4).DRP.wr_data                         <=  reg_data(51)(31 downto 16);       
  Ctrl.MGT.MGT(4).TX_RESETS.reset                     <=  reg_data(52)( 0);                 
  Ctrl.MGT.MGT(4).TX_RESETS.reset_pll_and_datapath    <=  reg_data(52)( 1);                 
  Ctrl.MGT.MGT(4).TX_RESETS.reset_datapath            <=  reg_data(52)( 2);                 
  Ctrl.MGT.MGT(4).TX_RESETS.reset_bufbypass           <=  reg_data(52)( 3);                 
  Ctrl.MGT.MGT(4).RX_RESETS.reset                     <=  reg_data(53)( 0);                 
  Ctrl.MGT.MGT(4).RX_RESETS.reset_pll_and_datapath    <=  reg_data(53)( 1);                 
  Ctrl.MGT.MGT(4).RX_RESETS.reset_datapath            <=  reg_data(53)( 2);                 
  Ctrl.MGT.MGT(4).RX_RESETS.reset_bufbypass           <=  reg_data(53)( 3);                 
  Ctrl.MGT.MGT(5).DRP.wr_addr                         <=  reg_data(58)( 9 downto  0);       
  Ctrl.MGT.MGT(5).DRP.en                              <=  reg_data(58)(12);                 
  Ctrl.MGT.MGT(5).DRP.wr_data                         <=  reg_data(59)(31 downto 16);       
  Ctrl.MGT.MGT(5).TX_RESETS.reset                     <=  reg_data(60)( 0);                 
  Ctrl.MGT.MGT(5).TX_RESETS.reset_pll_and_datapath    <=  reg_data(60)( 1);                 
  Ctrl.MGT.MGT(5).TX_RESETS.reset_datapath            <=  reg_data(60)( 2);                 
  Ctrl.MGT.MGT(5).TX_RESETS.reset_bufbypass           <=  reg_data(60)( 3);                 
  Ctrl.MGT.MGT(5).RX_RESETS.reset                     <=  reg_data(61)( 0);                 
  Ctrl.MGT.MGT(5).RX_RESETS.reset_pll_and_datapath    <=  reg_data(61)( 1);                 
  Ctrl.MGT.MGT(5).RX_RESETS.reset_datapath            <=  reg_data(61)( 2);                 
  Ctrl.MGT.MGT(5).RX_RESETS.reset_bufbypass           <=  reg_data(61)( 3);                 
  Ctrl.MGT.MGT(6).DRP.wr_addr                         <=  reg_data(66)( 9 downto  0);       
  Ctrl.MGT.MGT(6).DRP.en                              <=  reg_data(66)(12);                 
  Ctrl.MGT.MGT(6).DRP.wr_data                         <=  reg_data(67)(31 downto 16);       
  Ctrl.MGT.MGT(6).TX_RESETS.reset                     <=  reg_data(68)( 0);                 
  Ctrl.MGT.MGT(6).TX_RESETS.reset_pll_and_datapath    <=  reg_data(68)( 1);                 
  Ctrl.MGT.MGT(6).TX_RESETS.reset_datapath            <=  reg_data(68)( 2);                 
  Ctrl.MGT.MGT(6).TX_RESETS.reset_bufbypass           <=  reg_data(68)( 3);                 
  Ctrl.MGT.MGT(6).RX_RESETS.reset                     <=  reg_data(69)( 0);                 
  Ctrl.MGT.MGT(6).RX_RESETS.reset_pll_and_datapath    <=  reg_data(69)( 1);                 
  Ctrl.MGT.MGT(6).RX_RESETS.reset_datapath            <=  reg_data(69)( 2);                 
  Ctrl.MGT.MGT(6).RX_RESETS.reset_bufbypass           <=  reg_data(69)( 3);                 
  Ctrl.MGT.MGT(7).DRP.wr_addr                         <=  reg_data(74)( 9 downto  0);       
  Ctrl.MGT.MGT(7).DRP.en                              <=  reg_data(74)(12);                 
  Ctrl.MGT.MGT(7).DRP.wr_data                         <=  reg_data(75)(31 downto 16);       
  Ctrl.MGT.MGT(7).TX_RESETS.reset                     <=  reg_data(76)( 0);                 
  Ctrl.MGT.MGT(7).TX_RESETS.reset_pll_and_datapath    <=  reg_data(76)( 1);                 
  Ctrl.MGT.MGT(7).TX_RESETS.reset_datapath            <=  reg_data(76)( 2);                 
  Ctrl.MGT.MGT(7).TX_RESETS.reset_bufbypass           <=  reg_data(76)( 3);                 
  Ctrl.MGT.MGT(7).RX_RESETS.reset                     <=  reg_data(77)( 0);                 
  Ctrl.MGT.MGT(7).RX_RESETS.reset_pll_and_datapath    <=  reg_data(77)( 1);                 
  Ctrl.MGT.MGT(7).RX_RESETS.reset_datapath            <=  reg_data(77)( 2);                 
  Ctrl.MGT.MGT(7).RX_RESETS.reset_bufbypass           <=  reg_data(77)( 3);                 
  Ctrl.MGT.MGT(8).DRP.wr_addr                         <=  reg_data(82)( 9 downto  0);       
  Ctrl.MGT.MGT(8).DRP.en                              <=  reg_data(82)(12);                 
  Ctrl.MGT.MGT(8).DRP.wr_data                         <=  reg_data(83)(31 downto 16);       
  Ctrl.MGT.MGT(8).TX_RESETS.reset                     <=  reg_data(84)( 0);                 
  Ctrl.MGT.MGT(8).TX_RESETS.reset_pll_and_datapath    <=  reg_data(84)( 1);                 
  Ctrl.MGT.MGT(8).TX_RESETS.reset_datapath            <=  reg_data(84)( 2);                 
  Ctrl.MGT.MGT(8).TX_RESETS.reset_bufbypass           <=  reg_data(84)( 3);                 
  Ctrl.MGT.MGT(8).RX_RESETS.reset                     <=  reg_data(85)( 0);                 
  Ctrl.MGT.MGT(8).RX_RESETS.reset_pll_and_datapath    <=  reg_data(85)( 1);                 
  Ctrl.MGT.MGT(8).RX_RESETS.reset_datapath            <=  reg_data(85)( 2);                 
  Ctrl.MGT.MGT(8).RX_RESETS.reset_bufbypass           <=  reg_data(85)( 3);                 
  Ctrl.MGT.MGT(9).DRP.wr_addr                         <=  reg_data(90)( 9 downto  0);       
  Ctrl.MGT.MGT(9).DRP.en                              <=  reg_data(90)(12);                 
  Ctrl.MGT.MGT(9).DRP.wr_data                         <=  reg_data(91)(31 downto 16);       
  Ctrl.MGT.MGT(9).TX_RESETS.reset                     <=  reg_data(92)( 0);                 
  Ctrl.MGT.MGT(9).TX_RESETS.reset_pll_and_datapath    <=  reg_data(92)( 1);                 
  Ctrl.MGT.MGT(9).TX_RESETS.reset_datapath            <=  reg_data(92)( 2);                 
  Ctrl.MGT.MGT(9).TX_RESETS.reset_bufbypass           <=  reg_data(92)( 3);                 
  Ctrl.MGT.MGT(9).RX_RESETS.reset                     <=  reg_data(93)( 0);                 
  Ctrl.MGT.MGT(9).RX_RESETS.reset_pll_and_datapath    <=  reg_data(93)( 1);                 
  Ctrl.MGT.MGT(9).RX_RESETS.reset_datapath            <=  reg_data(93)( 2);                 
  Ctrl.MGT.MGT(9).RX_RESETS.reset_bufbypass           <=  reg_data(93)( 3);                 
  Ctrl.MGT.MGT(10).DRP.wr_addr                        <=  reg_data(98)( 9 downto  0);       
  Ctrl.MGT.MGT(10).DRP.en                             <=  reg_data(98)(12);                 
  Ctrl.MGT.MGT(10).DRP.wr_data                        <=  reg_data(99)(31 downto 16);       
  Ctrl.MGT.MGT(10).TX_RESETS.reset                    <=  reg_data(100)( 0);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_pll_and_datapath   <=  reg_data(100)( 1);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_datapath           <=  reg_data(100)( 2);                
  Ctrl.MGT.MGT(10).TX_RESETS.reset_bufbypass          <=  reg_data(100)( 3);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset                    <=  reg_data(101)( 0);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_pll_and_datapath   <=  reg_data(101)( 1);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_datapath           <=  reg_data(101)( 2);                
  Ctrl.MGT.MGT(10).RX_RESETS.reset_bufbypass          <=  reg_data(101)( 3);                
  Ctrl.MGT.MGT(11).DRP.wr_addr                        <=  reg_data(106)( 9 downto  0);      
  Ctrl.MGT.MGT(11).DRP.en                             <=  reg_data(106)(12);                
  Ctrl.MGT.MGT(11).DRP.wr_data                        <=  reg_data(107)(31 downto 16);      
  Ctrl.MGT.MGT(11).TX_RESETS.reset                    <=  reg_data(108)( 0);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_pll_and_datapath   <=  reg_data(108)( 1);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_datapath           <=  reg_data(108)( 2);                
  Ctrl.MGT.MGT(11).TX_RESETS.reset_bufbypass          <=  reg_data(108)( 3);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset                    <=  reg_data(109)( 0);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_pll_and_datapath   <=  reg_data(109)( 1);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_datapath           <=  reg_data(109)( 2);                
  Ctrl.MGT.MGT(11).RX_RESETS.reset_bufbypass          <=  reg_data(109)( 3);                
  Ctrl.MGT.MGT(12).DRP.wr_addr                        <=  reg_data(114)( 9 downto  0);      
  Ctrl.MGT.MGT(12).DRP.en                             <=  reg_data(114)(12);                
  Ctrl.MGT.MGT(12).DRP.wr_data                        <=  reg_data(115)(31 downto 16);      
  Ctrl.MGT.MGT(12).TX_RESETS.reset                    <=  reg_data(116)( 0);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_pll_and_datapath   <=  reg_data(116)( 1);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_datapath           <=  reg_data(116)( 2);                
  Ctrl.MGT.MGT(12).TX_RESETS.reset_bufbypass          <=  reg_data(116)( 3);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset                    <=  reg_data(117)( 0);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_pll_and_datapath   <=  reg_data(117)( 1);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_datapath           <=  reg_data(117)( 2);                
  Ctrl.MGT.MGT(12).RX_RESETS.reset_bufbypass          <=  reg_data(117)( 3);                
  Ctrl.MGT.MGT(13).DRP.wr_addr                        <=  reg_data(122)( 9 downto  0);      
  Ctrl.MGT.MGT(13).DRP.en                             <=  reg_data(122)(12);                
  Ctrl.MGT.MGT(13).DRP.wr_data                        <=  reg_data(123)(31 downto 16);      
  Ctrl.MGT.MGT(13).TX_RESETS.reset                    <=  reg_data(124)( 0);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_pll_and_datapath   <=  reg_data(124)( 1);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_datapath           <=  reg_data(124)( 2);                
  Ctrl.MGT.MGT(13).TX_RESETS.reset_bufbypass          <=  reg_data(124)( 3);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset                    <=  reg_data(125)( 0);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_pll_and_datapath   <=  reg_data(125)( 1);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_datapath           <=  reg_data(125)( 2);                
  Ctrl.MGT.MGT(13).RX_RESETS.reset_bufbypass          <=  reg_data(125)( 3);                
  Ctrl.MGT.MGT(14).DRP.wr_addr                        <=  reg_data(130)( 9 downto  0);      
  Ctrl.MGT.MGT(14).DRP.en                             <=  reg_data(130)(12);                
  Ctrl.MGT.MGT(14).DRP.wr_data                        <=  reg_data(131)(31 downto 16);      
  Ctrl.MGT.MGT(14).TX_RESETS.reset                    <=  reg_data(132)( 0);                
  Ctrl.MGT.MGT(14).TX_RESETS.reset_pll_and_datapath   <=  reg_data(132)( 1);                
  Ctrl.MGT.MGT(14).TX_RESETS.reset_datapath           <=  reg_data(132)( 2);                
  Ctrl.MGT.MGT(14).TX_RESETS.reset_bufbypass          <=  reg_data(132)( 3);                
  Ctrl.MGT.MGT(14).RX_RESETS.reset                    <=  reg_data(133)( 0);                
  Ctrl.MGT.MGT(14).RX_RESETS.reset_pll_and_datapath   <=  reg_data(133)( 1);                
  Ctrl.MGT.MGT(14).RX_RESETS.reset_datapath           <=  reg_data(133)( 2);                
  Ctrl.MGT.MGT(14).RX_RESETS.reset_bufbypass          <=  reg_data(133)( 3);                
  Ctrl.MGT.MGT(15).DRP.wr_addr                        <=  reg_data(138)( 9 downto  0);      
  Ctrl.MGT.MGT(15).DRP.en                             <=  reg_data(138)(12);                
  Ctrl.MGT.MGT(15).DRP.wr_data                        <=  reg_data(139)(31 downto 16);      
  Ctrl.MGT.MGT(15).TX_RESETS.reset                    <=  reg_data(140)( 0);                
  Ctrl.MGT.MGT(15).TX_RESETS.reset_pll_and_datapath   <=  reg_data(140)( 1);                
  Ctrl.MGT.MGT(15).TX_RESETS.reset_datapath           <=  reg_data(140)( 2);                
  Ctrl.MGT.MGT(15).TX_RESETS.reset_bufbypass          <=  reg_data(140)( 3);                
  Ctrl.MGT.MGT(15).RX_RESETS.reset                    <=  reg_data(141)( 0);                
  Ctrl.MGT.MGT(15).RX_RESETS.reset_pll_and_datapath   <=  reg_data(141)( 1);                
  Ctrl.MGT.MGT(15).RX_RESETS.reset_datapath           <=  reg_data(141)( 2);                
  Ctrl.MGT.MGT(15).RX_RESETS.reset_bufbypass          <=  reg_data(141)( 3);                
  Ctrl.MGT.MGT(16).DRP.wr_addr                        <=  reg_data(146)( 9 downto  0);      
  Ctrl.MGT.MGT(16).DRP.en                             <=  reg_data(146)(12);                
  Ctrl.MGT.MGT(16).DRP.wr_data                        <=  reg_data(147)(31 downto 16);      
  Ctrl.MGT.MGT(16).TX_RESETS.reset                    <=  reg_data(148)( 0);                
  Ctrl.MGT.MGT(16).TX_RESETS.reset_pll_and_datapath   <=  reg_data(148)( 1);                
  Ctrl.MGT.MGT(16).TX_RESETS.reset_datapath           <=  reg_data(148)( 2);                
  Ctrl.MGT.MGT(16).TX_RESETS.reset_bufbypass          <=  reg_data(148)( 3);                
  Ctrl.MGT.MGT(16).RX_RESETS.reset                    <=  reg_data(149)( 0);                
  Ctrl.MGT.MGT(16).RX_RESETS.reset_pll_and_datapath   <=  reg_data(149)( 1);                
  Ctrl.MGT.MGT(16).RX_RESETS.reset_datapath           <=  reg_data(149)( 2);                
  Ctrl.MGT.MGT(16).RX_RESETS.reset_bufbypass          <=  reg_data(149)( 3);                
  Ctrl.MGT.MGT(17).DRP.wr_addr                        <=  reg_data(154)( 9 downto  0);      
  Ctrl.MGT.MGT(17).DRP.en                             <=  reg_data(154)(12);                
  Ctrl.MGT.MGT(17).DRP.wr_data                        <=  reg_data(155)(31 downto 16);      
  Ctrl.MGT.MGT(17).TX_RESETS.reset                    <=  reg_data(156)( 0);                
  Ctrl.MGT.MGT(17).TX_RESETS.reset_pll_and_datapath   <=  reg_data(156)( 1);                
  Ctrl.MGT.MGT(17).TX_RESETS.reset_datapath           <=  reg_data(156)( 2);                
  Ctrl.MGT.MGT(17).TX_RESETS.reset_bufbypass          <=  reg_data(156)( 3);                
  Ctrl.MGT.MGT(17).RX_RESETS.reset                    <=  reg_data(157)( 0);                
  Ctrl.MGT.MGT(17).RX_RESETS.reset_pll_and_datapath   <=  reg_data(157)( 1);                
  Ctrl.MGT.MGT(17).RX_RESETS.reset_datapath           <=  reg_data(157)( 2);                
  Ctrl.MGT.MGT(17).RX_RESETS.reset_bufbypass          <=  reg_data(157)( 3);                
  Ctrl.MGT.MGT(18).DRP.wr_addr                        <=  reg_data(162)( 9 downto  0);      
  Ctrl.MGT.MGT(18).DRP.en                             <=  reg_data(162)(12);                
  Ctrl.MGT.MGT(18).DRP.wr_data                        <=  reg_data(163)(31 downto 16);      
  Ctrl.MGT.MGT(18).TX_RESETS.reset                    <=  reg_data(164)( 0);                
  Ctrl.MGT.MGT(18).TX_RESETS.reset_pll_and_datapath   <=  reg_data(164)( 1);                
  Ctrl.MGT.MGT(18).TX_RESETS.reset_datapath           <=  reg_data(164)( 2);                
  Ctrl.MGT.MGT(18).TX_RESETS.reset_bufbypass          <=  reg_data(164)( 3);                
  Ctrl.MGT.MGT(18).RX_RESETS.reset                    <=  reg_data(165)( 0);                
  Ctrl.MGT.MGT(18).RX_RESETS.reset_pll_and_datapath   <=  reg_data(165)( 1);                
  Ctrl.MGT.MGT(18).RX_RESETS.reset_datapath           <=  reg_data(165)( 2);                
  Ctrl.MGT.MGT(18).RX_RESETS.reset_bufbypass          <=  reg_data(165)( 3);                
  Ctrl.MGT.MGT(19).DRP.wr_addr                        <=  reg_data(170)( 9 downto  0);      
  Ctrl.MGT.MGT(19).DRP.en                             <=  reg_data(170)(12);                
  Ctrl.MGT.MGT(19).DRP.wr_data                        <=  reg_data(171)(31 downto 16);      
  Ctrl.MGT.MGT(19).TX_RESETS.reset                    <=  reg_data(172)( 0);                
  Ctrl.MGT.MGT(19).TX_RESETS.reset_pll_and_datapath   <=  reg_data(172)( 1);                
  Ctrl.MGT.MGT(19).TX_RESETS.reset_datapath           <=  reg_data(172)( 2);                
  Ctrl.MGT.MGT(19).TX_RESETS.reset_bufbypass          <=  reg_data(172)( 3);                
  Ctrl.MGT.MGT(19).RX_RESETS.reset                    <=  reg_data(173)( 0);                
  Ctrl.MGT.MGT(19).RX_RESETS.reset_pll_and_datapath   <=  reg_data(173)( 1);                
  Ctrl.MGT.MGT(19).RX_RESETS.reset_datapath           <=  reg_data(173)( 2);                
  Ctrl.MGT.MGT(19).RX_RESETS.reset_bufbypass          <=  reg_data(173)( 3);                
  Ctrl.MGT.MGT(20).DRP.wr_addr                        <=  reg_data(178)( 9 downto  0);      
  Ctrl.MGT.MGT(20).DRP.en                             <=  reg_data(178)(12);                
  Ctrl.MGT.MGT(20).DRP.wr_data                        <=  reg_data(179)(31 downto 16);      
  Ctrl.MGT.MGT(20).TX_RESETS.reset                    <=  reg_data(180)( 0);                
  Ctrl.MGT.MGT(20).TX_RESETS.reset_pll_and_datapath   <=  reg_data(180)( 1);                
  Ctrl.MGT.MGT(20).TX_RESETS.reset_datapath           <=  reg_data(180)( 2);                
  Ctrl.MGT.MGT(20).TX_RESETS.reset_bufbypass          <=  reg_data(180)( 3);                
  Ctrl.MGT.MGT(20).RX_RESETS.reset                    <=  reg_data(181)( 0);                
  Ctrl.MGT.MGT(20).RX_RESETS.reset_pll_and_datapath   <=  reg_data(181)( 1);                
  Ctrl.MGT.MGT(20).RX_RESETS.reset_datapath           <=  reg_data(181)( 2);                
  Ctrl.MGT.MGT(20).RX_RESETS.reset_bufbypass          <=  reg_data(181)( 3);                
  Ctrl.MGT.MGT(21).DRP.wr_addr                        <=  reg_data(186)( 9 downto  0);      
  Ctrl.MGT.MGT(21).DRP.en                             <=  reg_data(186)(12);                
  Ctrl.MGT.MGT(21).DRP.wr_data                        <=  reg_data(187)(31 downto 16);      
  Ctrl.MGT.MGT(21).TX_RESETS.reset                    <=  reg_data(188)( 0);                
  Ctrl.MGT.MGT(21).TX_RESETS.reset_pll_and_datapath   <=  reg_data(188)( 1);                
  Ctrl.MGT.MGT(21).TX_RESETS.reset_datapath           <=  reg_data(188)( 2);                
  Ctrl.MGT.MGT(21).TX_RESETS.reset_bufbypass          <=  reg_data(188)( 3);                
  Ctrl.MGT.MGT(21).RX_RESETS.reset                    <=  reg_data(189)( 0);                
  Ctrl.MGT.MGT(21).RX_RESETS.reset_pll_and_datapath   <=  reg_data(189)( 1);                
  Ctrl.MGT.MGT(21).RX_RESETS.reset_datapath           <=  reg_data(189)( 2);                
  Ctrl.MGT.MGT(21).RX_RESETS.reset_bufbypass          <=  reg_data(189)( 3);                
  Ctrl.MGT.MGT(22).DRP.wr_addr                        <=  reg_data(194)( 9 downto  0);      
  Ctrl.MGT.MGT(22).DRP.en                             <=  reg_data(194)(12);                
  Ctrl.MGT.MGT(22).DRP.wr_data                        <=  reg_data(195)(31 downto 16);      
  Ctrl.MGT.MGT(22).TX_RESETS.reset                    <=  reg_data(196)( 0);                
  Ctrl.MGT.MGT(22).TX_RESETS.reset_pll_and_datapath   <=  reg_data(196)( 1);                
  Ctrl.MGT.MGT(22).TX_RESETS.reset_datapath           <=  reg_data(196)( 2);                
  Ctrl.MGT.MGT(22).TX_RESETS.reset_bufbypass          <=  reg_data(196)( 3);                
  Ctrl.MGT.MGT(22).RX_RESETS.reset                    <=  reg_data(197)( 0);                
  Ctrl.MGT.MGT(22).RX_RESETS.reset_pll_and_datapath   <=  reg_data(197)( 1);                
  Ctrl.MGT.MGT(22).RX_RESETS.reset_datapath           <=  reg_data(197)( 2);                
  Ctrl.MGT.MGT(22).RX_RESETS.reset_bufbypass          <=  reg_data(197)( 3);                
  Ctrl.MGT.MGT(23).DRP.wr_addr                        <=  reg_data(202)( 9 downto  0);      
  Ctrl.MGT.MGT(23).DRP.en                             <=  reg_data(202)(12);                
  Ctrl.MGT.MGT(23).DRP.wr_data                        <=  reg_data(203)(31 downto 16);      
  Ctrl.MGT.MGT(23).TX_RESETS.reset                    <=  reg_data(204)( 0);                
  Ctrl.MGT.MGT(23).TX_RESETS.reset_pll_and_datapath   <=  reg_data(204)( 1);                
  Ctrl.MGT.MGT(23).TX_RESETS.reset_datapath           <=  reg_data(204)( 2);                
  Ctrl.MGT.MGT(23).TX_RESETS.reset_bufbypass          <=  reg_data(204)( 3);                
  Ctrl.MGT.MGT(23).RX_RESETS.reset                    <=  reg_data(205)( 0);                
  Ctrl.MGT.MGT(23).RX_RESETS.reset_pll_and_datapath   <=  reg_data(205)( 1);                
  Ctrl.MGT.MGT(23).RX_RESETS.reset_datapath           <=  reg_data(205)( 2);                
  Ctrl.MGT.MGT(23).RX_RESETS.reset_bufbypass          <=  reg_data(205)( 3);                
  Ctrl.MGT.MGT(24).DRP.wr_addr                        <=  reg_data(210)( 9 downto  0);      
  Ctrl.MGT.MGT(24).DRP.en                             <=  reg_data(210)(12);                
  Ctrl.MGT.MGT(24).DRP.wr_data                        <=  reg_data(211)(31 downto 16);      
  Ctrl.MGT.MGT(24).TX_RESETS.reset                    <=  reg_data(212)( 0);                
  Ctrl.MGT.MGT(24).TX_RESETS.reset_pll_and_datapath   <=  reg_data(212)( 1);                
  Ctrl.MGT.MGT(24).TX_RESETS.reset_datapath           <=  reg_data(212)( 2);                
  Ctrl.MGT.MGT(24).TX_RESETS.reset_bufbypass          <=  reg_data(212)( 3);                
  Ctrl.MGT.MGT(24).RX_RESETS.reset                    <=  reg_data(213)( 0);                
  Ctrl.MGT.MGT(24).RX_RESETS.reset_pll_and_datapath   <=  reg_data(213)( 1);                
  Ctrl.MGT.MGT(24).RX_RESETS.reset_datapath           <=  reg_data(213)( 2);                
  Ctrl.MGT.MGT(24).RX_RESETS.reset_bufbypass          <=  reg_data(213)( 3);                
  Ctrl.MGT.MGT(25).DRP.wr_addr                        <=  reg_data(218)( 9 downto  0);      
  Ctrl.MGT.MGT(25).DRP.en                             <=  reg_data(218)(12);                
  Ctrl.MGT.MGT(25).DRP.wr_data                        <=  reg_data(219)(31 downto 16);      
  Ctrl.MGT.MGT(25).TX_RESETS.reset                    <=  reg_data(220)( 0);                
  Ctrl.MGT.MGT(25).TX_RESETS.reset_pll_and_datapath   <=  reg_data(220)( 1);                
  Ctrl.MGT.MGT(25).TX_RESETS.reset_datapath           <=  reg_data(220)( 2);                
  Ctrl.MGT.MGT(25).TX_RESETS.reset_bufbypass          <=  reg_data(220)( 3);                
  Ctrl.MGT.MGT(25).RX_RESETS.reset                    <=  reg_data(221)( 0);                
  Ctrl.MGT.MGT(25).RX_RESETS.reset_pll_and_datapath   <=  reg_data(221)( 1);                
  Ctrl.MGT.MGT(25).RX_RESETS.reset_datapath           <=  reg_data(221)( 2);                
  Ctrl.MGT.MGT(25).RX_RESETS.reset_bufbypass          <=  reg_data(221)( 3);                
  Ctrl.MGT.MGT(26).DRP.wr_addr                        <=  reg_data(226)( 9 downto  0);      
  Ctrl.MGT.MGT(26).DRP.en                             <=  reg_data(226)(12);                
  Ctrl.MGT.MGT(26).DRP.wr_data                        <=  reg_data(227)(31 downto 16);      
  Ctrl.MGT.MGT(26).TX_RESETS.reset                    <=  reg_data(228)( 0);                
  Ctrl.MGT.MGT(26).TX_RESETS.reset_pll_and_datapath   <=  reg_data(228)( 1);                
  Ctrl.MGT.MGT(26).TX_RESETS.reset_datapath           <=  reg_data(228)( 2);                
  Ctrl.MGT.MGT(26).TX_RESETS.reset_bufbypass          <=  reg_data(228)( 3);                
  Ctrl.MGT.MGT(26).RX_RESETS.reset                    <=  reg_data(229)( 0);                
  Ctrl.MGT.MGT(26).RX_RESETS.reset_pll_and_datapath   <=  reg_data(229)( 1);                
  Ctrl.MGT.MGT(26).RX_RESETS.reset_datapath           <=  reg_data(229)( 2);                
  Ctrl.MGT.MGT(26).RX_RESETS.reset_bufbypass          <=  reg_data(229)( 3);                
  Ctrl.MGT.MGT(27).DRP.wr_addr                        <=  reg_data(234)( 9 downto  0);      
  Ctrl.MGT.MGT(27).DRP.en                             <=  reg_data(234)(12);                
  Ctrl.MGT.MGT(27).DRP.wr_data                        <=  reg_data(235)(31 downto 16);      
  Ctrl.MGT.MGT(27).TX_RESETS.reset                    <=  reg_data(236)( 0);                
  Ctrl.MGT.MGT(27).TX_RESETS.reset_pll_and_datapath   <=  reg_data(236)( 1);                
  Ctrl.MGT.MGT(27).TX_RESETS.reset_datapath           <=  reg_data(236)( 2);                
  Ctrl.MGT.MGT(27).TX_RESETS.reset_bufbypass          <=  reg_data(236)( 3);                
  Ctrl.MGT.MGT(27).RX_RESETS.reset                    <=  reg_data(237)( 0);                
  Ctrl.MGT.MGT(27).RX_RESETS.reset_pll_and_datapath   <=  reg_data(237)( 1);                
  Ctrl.MGT.MGT(27).RX_RESETS.reset_datapath           <=  reg_data(237)( 2);                
  Ctrl.MGT.MGT(27).RX_RESETS.reset_bufbypass          <=  reg_data(237)( 3);                
  Ctrl.MGT.MGT(28).DRP.wr_addr                        <=  reg_data(242)( 9 downto  0);      
  Ctrl.MGT.MGT(28).DRP.en                             <=  reg_data(242)(12);                
  Ctrl.MGT.MGT(28).DRP.wr_data                        <=  reg_data(243)(31 downto 16);      
  Ctrl.MGT.MGT(28).TX_RESETS.reset                    <=  reg_data(244)( 0);                
  Ctrl.MGT.MGT(28).TX_RESETS.reset_pll_and_datapath   <=  reg_data(244)( 1);                
  Ctrl.MGT.MGT(28).TX_RESETS.reset_datapath           <=  reg_data(244)( 2);                
  Ctrl.MGT.MGT(28).TX_RESETS.reset_bufbypass          <=  reg_data(244)( 3);                
  Ctrl.MGT.MGT(28).RX_RESETS.reset                    <=  reg_data(245)( 0);                
  Ctrl.MGT.MGT(28).RX_RESETS.reset_pll_and_datapath   <=  reg_data(245)( 1);                
  Ctrl.MGT.MGT(28).RX_RESETS.reset_datapath           <=  reg_data(245)( 2);                
  Ctrl.MGT.MGT(28).RX_RESETS.reset_bufbypass          <=  reg_data(245)( 3);                
  Ctrl.MGT.MGT(29).DRP.wr_addr                        <=  reg_data(250)( 9 downto  0);      
  Ctrl.MGT.MGT(29).DRP.en                             <=  reg_data(250)(12);                
  Ctrl.MGT.MGT(29).DRP.wr_data                        <=  reg_data(251)(31 downto 16);      
  Ctrl.MGT.MGT(29).TX_RESETS.reset                    <=  reg_data(252)( 0);                
  Ctrl.MGT.MGT(29).TX_RESETS.reset_pll_and_datapath   <=  reg_data(252)( 1);                
  Ctrl.MGT.MGT(29).TX_RESETS.reset_datapath           <=  reg_data(252)( 2);                
  Ctrl.MGT.MGT(29).TX_RESETS.reset_bufbypass          <=  reg_data(252)( 3);                
  Ctrl.MGT.MGT(29).RX_RESETS.reset                    <=  reg_data(253)( 0);                
  Ctrl.MGT.MGT(29).RX_RESETS.reset_pll_and_datapath   <=  reg_data(253)( 1);                
  Ctrl.MGT.MGT(29).RX_RESETS.reset_datapath           <=  reg_data(253)( 2);                
  Ctrl.MGT.MGT(29).RX_RESETS.reset_bufbypass          <=  reg_data(253)( 3);                
  Ctrl.MGT.MGT(30).DRP.wr_addr                        <=  reg_data(258)( 9 downto  0);      
  Ctrl.MGT.MGT(30).DRP.en                             <=  reg_data(258)(12);                
  Ctrl.MGT.MGT(30).DRP.wr_data                        <=  reg_data(259)(31 downto 16);      
  Ctrl.MGT.MGT(30).TX_RESETS.reset                    <=  reg_data(260)( 0);                
  Ctrl.MGT.MGT(30).TX_RESETS.reset_pll_and_datapath   <=  reg_data(260)( 1);                
  Ctrl.MGT.MGT(30).TX_RESETS.reset_datapath           <=  reg_data(260)( 2);                
  Ctrl.MGT.MGT(30).TX_RESETS.reset_bufbypass          <=  reg_data(260)( 3);                
  Ctrl.MGT.MGT(30).RX_RESETS.reset                    <=  reg_data(261)( 0);                
  Ctrl.MGT.MGT(30).RX_RESETS.reset_pll_and_datapath   <=  reg_data(261)( 1);                
  Ctrl.MGT.MGT(30).RX_RESETS.reset_datapath           <=  reg_data(261)( 2);                
  Ctrl.MGT.MGT(30).RX_RESETS.reset_bufbypass          <=  reg_data(261)( 3);                
  Ctrl.MGT.MGT(31).DRP.wr_addr                        <=  reg_data(266)( 9 downto  0);      
  Ctrl.MGT.MGT(31).DRP.en                             <=  reg_data(266)(12);                
  Ctrl.MGT.MGT(31).DRP.wr_data                        <=  reg_data(267)(31 downto 16);      
  Ctrl.MGT.MGT(31).TX_RESETS.reset                    <=  reg_data(268)( 0);                
  Ctrl.MGT.MGT(31).TX_RESETS.reset_pll_and_datapath   <=  reg_data(268)( 1);                
  Ctrl.MGT.MGT(31).TX_RESETS.reset_datapath           <=  reg_data(268)( 2);                
  Ctrl.MGT.MGT(31).TX_RESETS.reset_bufbypass          <=  reg_data(268)( 3);                
  Ctrl.MGT.MGT(31).RX_RESETS.reset                    <=  reg_data(269)( 0);                
  Ctrl.MGT.MGT(31).RX_RESETS.reset_pll_and_datapath   <=  reg_data(269)( 1);                
  Ctrl.MGT.MGT(31).RX_RESETS.reset_datapath           <=  reg_data(269)( 2);                
  Ctrl.MGT.MGT(31).RX_RESETS.reset_bufbypass          <=  reg_data(269)( 3);                
  Ctrl.MGT.MGT(32).DRP.wr_addr                        <=  reg_data(274)( 9 downto  0);      
  Ctrl.MGT.MGT(32).DRP.en                             <=  reg_data(274)(12);                
  Ctrl.MGT.MGT(32).DRP.wr_data                        <=  reg_data(275)(31 downto 16);      
  Ctrl.MGT.MGT(32).TX_RESETS.reset                    <=  reg_data(276)( 0);                
  Ctrl.MGT.MGT(32).TX_RESETS.reset_pll_and_datapath   <=  reg_data(276)( 1);                
  Ctrl.MGT.MGT(32).TX_RESETS.reset_datapath           <=  reg_data(276)( 2);                
  Ctrl.MGT.MGT(32).TX_RESETS.reset_bufbypass          <=  reg_data(276)( 3);                
  Ctrl.MGT.MGT(32).RX_RESETS.reset                    <=  reg_data(277)( 0);                
  Ctrl.MGT.MGT(32).RX_RESETS.reset_pll_and_datapath   <=  reg_data(277)( 1);                
  Ctrl.MGT.MGT(32).RX_RESETS.reset_datapath           <=  reg_data(277)( 2);                
  Ctrl.MGT.MGT(32).RX_RESETS.reset_bufbypass          <=  reg_data(277)( 3);                
  Ctrl.MGT.MGT(33).DRP.wr_addr                        <=  reg_data(282)( 9 downto  0);      
  Ctrl.MGT.MGT(33).DRP.en                             <=  reg_data(282)(12);                
  Ctrl.MGT.MGT(33).DRP.wr_data                        <=  reg_data(283)(31 downto 16);      
  Ctrl.MGT.MGT(33).TX_RESETS.reset                    <=  reg_data(284)( 0);                
  Ctrl.MGT.MGT(33).TX_RESETS.reset_pll_and_datapath   <=  reg_data(284)( 1);                
  Ctrl.MGT.MGT(33).TX_RESETS.reset_datapath           <=  reg_data(284)( 2);                
  Ctrl.MGT.MGT(33).TX_RESETS.reset_bufbypass          <=  reg_data(284)( 3);                
  Ctrl.MGT.MGT(33).RX_RESETS.reset                    <=  reg_data(285)( 0);                
  Ctrl.MGT.MGT(33).RX_RESETS.reset_pll_and_datapath   <=  reg_data(285)( 1);                
  Ctrl.MGT.MGT(33).RX_RESETS.reset_datapath           <=  reg_data(285)( 2);                
  Ctrl.MGT.MGT(33).RX_RESETS.reset_bufbypass          <=  reg_data(285)( 3);                
  Ctrl.MGT.MGT(34).DRP.wr_addr                        <=  reg_data(290)( 9 downto  0);      
  Ctrl.MGT.MGT(34).DRP.en                             <=  reg_data(290)(12);                
  Ctrl.MGT.MGT(34).DRP.wr_data                        <=  reg_data(291)(31 downto 16);      
  Ctrl.MGT.MGT(34).TX_RESETS.reset                    <=  reg_data(292)( 0);                
  Ctrl.MGT.MGT(34).TX_RESETS.reset_pll_and_datapath   <=  reg_data(292)( 1);                
  Ctrl.MGT.MGT(34).TX_RESETS.reset_datapath           <=  reg_data(292)( 2);                
  Ctrl.MGT.MGT(34).TX_RESETS.reset_bufbypass          <=  reg_data(292)( 3);                
  Ctrl.MGT.MGT(34).RX_RESETS.reset                    <=  reg_data(293)( 0);                
  Ctrl.MGT.MGT(34).RX_RESETS.reset_pll_and_datapath   <=  reg_data(293)( 1);                
  Ctrl.MGT.MGT(34).RX_RESETS.reset_datapath           <=  reg_data(293)( 2);                
  Ctrl.MGT.MGT(34).RX_RESETS.reset_bufbypass          <=  reg_data(293)( 3);                
  Ctrl.MGT.MGT(35).DRP.wr_addr                        <=  reg_data(298)( 9 downto  0);      
  Ctrl.MGT.MGT(35).DRP.en                             <=  reg_data(298)(12);                
  Ctrl.MGT.MGT(35).DRP.wr_data                        <=  reg_data(299)(31 downto 16);      
  Ctrl.MGT.MGT(35).TX_RESETS.reset                    <=  reg_data(300)( 0);                
  Ctrl.MGT.MGT(35).TX_RESETS.reset_pll_and_datapath   <=  reg_data(300)( 1);                
  Ctrl.MGT.MGT(35).TX_RESETS.reset_datapath           <=  reg_data(300)( 2);                
  Ctrl.MGT.MGT(35).TX_RESETS.reset_bufbypass          <=  reg_data(300)( 3);                
  Ctrl.MGT.MGT(35).RX_RESETS.reset                    <=  reg_data(301)( 0);                
  Ctrl.MGT.MGT(35).RX_RESETS.reset_pll_and_datapath   <=  reg_data(301)( 1);                
  Ctrl.MGT.MGT(35).RX_RESETS.reset_datapath           <=  reg_data(301)( 2);                
  Ctrl.MGT.MGT(35).RX_RESETS.reset_bufbypass          <=  reg_data(301)( 3);                
  Ctrl.MGT.MGT(36).DRP.wr_addr                        <=  reg_data(306)( 9 downto  0);      
  Ctrl.MGT.MGT(36).DRP.en                             <=  reg_data(306)(12);                
  Ctrl.MGT.MGT(36).DRP.wr_data                        <=  reg_data(307)(31 downto 16);      
  Ctrl.MGT.MGT(36).TX_RESETS.reset                    <=  reg_data(308)( 0);                
  Ctrl.MGT.MGT(36).TX_RESETS.reset_pll_and_datapath   <=  reg_data(308)( 1);                
  Ctrl.MGT.MGT(36).TX_RESETS.reset_datapath           <=  reg_data(308)( 2);                
  Ctrl.MGT.MGT(36).TX_RESETS.reset_bufbypass          <=  reg_data(308)( 3);                
  Ctrl.MGT.MGT(36).RX_RESETS.reset                    <=  reg_data(309)( 0);                
  Ctrl.MGT.MGT(36).RX_RESETS.reset_pll_and_datapath   <=  reg_data(309)( 1);                
  Ctrl.MGT.MGT(36).RX_RESETS.reset_datapath           <=  reg_data(309)( 2);                
  Ctrl.MGT.MGT(36).RX_RESETS.reset_bufbypass          <=  reg_data(309)( 3);                
  Ctrl.MGT.MGT(37).DRP.wr_addr                        <=  reg_data(314)( 9 downto  0);      
  Ctrl.MGT.MGT(37).DRP.en                             <=  reg_data(314)(12);                
  Ctrl.MGT.MGT(37).DRP.wr_data                        <=  reg_data(315)(31 downto 16);      
  Ctrl.MGT.MGT(37).TX_RESETS.reset                    <=  reg_data(316)( 0);                
  Ctrl.MGT.MGT(37).TX_RESETS.reset_pll_and_datapath   <=  reg_data(316)( 1);                
  Ctrl.MGT.MGT(37).TX_RESETS.reset_datapath           <=  reg_data(316)( 2);                
  Ctrl.MGT.MGT(37).TX_RESETS.reset_bufbypass          <=  reg_data(316)( 3);                
  Ctrl.MGT.MGT(37).RX_RESETS.reset                    <=  reg_data(317)( 0);                
  Ctrl.MGT.MGT(37).RX_RESETS.reset_pll_and_datapath   <=  reg_data(317)( 1);                
  Ctrl.MGT.MGT(37).RX_RESETS.reset_datapath           <=  reg_data(317)( 2);                
  Ctrl.MGT.MGT(37).RX_RESETS.reset_bufbypass          <=  reg_data(317)( 3);                
  Ctrl.MGT.MGT(38).DRP.wr_addr                        <=  reg_data(322)( 9 downto  0);      
  Ctrl.MGT.MGT(38).DRP.en                             <=  reg_data(322)(12);                
  Ctrl.MGT.MGT(38).DRP.wr_data                        <=  reg_data(323)(31 downto 16);      
  Ctrl.MGT.MGT(38).TX_RESETS.reset                    <=  reg_data(324)( 0);                
  Ctrl.MGT.MGT(38).TX_RESETS.reset_pll_and_datapath   <=  reg_data(324)( 1);                
  Ctrl.MGT.MGT(38).TX_RESETS.reset_datapath           <=  reg_data(324)( 2);                
  Ctrl.MGT.MGT(38).TX_RESETS.reset_bufbypass          <=  reg_data(324)( 3);                
  Ctrl.MGT.MGT(38).RX_RESETS.reset                    <=  reg_data(325)( 0);                
  Ctrl.MGT.MGT(38).RX_RESETS.reset_pll_and_datapath   <=  reg_data(325)( 1);                
  Ctrl.MGT.MGT(38).RX_RESETS.reset_datapath           <=  reg_data(325)( 2);                
  Ctrl.MGT.MGT(38).RX_RESETS.reset_bufbypass          <=  reg_data(325)( 3);                
  Ctrl.MGT.MGT(39).DRP.wr_addr                        <=  reg_data(330)( 9 downto  0);      
  Ctrl.MGT.MGT(39).DRP.en                             <=  reg_data(330)(12);                
  Ctrl.MGT.MGT(39).DRP.wr_data                        <=  reg_data(331)(31 downto 16);      
  Ctrl.MGT.MGT(39).TX_RESETS.reset                    <=  reg_data(332)( 0);                
  Ctrl.MGT.MGT(39).TX_RESETS.reset_pll_and_datapath   <=  reg_data(332)( 1);                
  Ctrl.MGT.MGT(39).TX_RESETS.reset_datapath           <=  reg_data(332)( 2);                
  Ctrl.MGT.MGT(39).TX_RESETS.reset_bufbypass          <=  reg_data(332)( 3);                
  Ctrl.MGT.MGT(39).RX_RESETS.reset                    <=  reg_data(333)( 0);                
  Ctrl.MGT.MGT(39).RX_RESETS.reset_pll_and_datapath   <=  reg_data(333)( 1);                
  Ctrl.MGT.MGT(39).RX_RESETS.reset_datapath           <=  reg_data(333)( 2);                
  Ctrl.MGT.MGT(39).RX_RESETS.reset_bufbypass          <=  reg_data(333)( 3);                
  Ctrl.MGT.MGT(40).DRP.wr_addr                        <=  reg_data(338)( 9 downto  0);      
  Ctrl.MGT.MGT(40).DRP.en                             <=  reg_data(338)(12);                
  Ctrl.MGT.MGT(40).DRP.wr_data                        <=  reg_data(339)(31 downto 16);      
  Ctrl.MGT.MGT(40).TX_RESETS.reset                    <=  reg_data(340)( 0);                
  Ctrl.MGT.MGT(40).TX_RESETS.reset_pll_and_datapath   <=  reg_data(340)( 1);                
  Ctrl.MGT.MGT(40).TX_RESETS.reset_datapath           <=  reg_data(340)( 2);                
  Ctrl.MGT.MGT(40).TX_RESETS.reset_bufbypass          <=  reg_data(340)( 3);                
  Ctrl.MGT.MGT(40).RX_RESETS.reset                    <=  reg_data(341)( 0);                
  Ctrl.MGT.MGT(40).RX_RESETS.reset_pll_and_datapath   <=  reg_data(341)( 1);                
  Ctrl.MGT.MGT(40).RX_RESETS.reset_datapath           <=  reg_data(341)( 2);                
  Ctrl.MGT.MGT(40).RX_RESETS.reset_bufbypass          <=  reg_data(341)( 3);                
  Ctrl.MGT.MGT(41).DRP.wr_addr                        <=  reg_data(346)( 9 downto  0);      
  Ctrl.MGT.MGT(41).DRP.en                             <=  reg_data(346)(12);                
  Ctrl.MGT.MGT(41).DRP.wr_data                        <=  reg_data(347)(31 downto 16);      
  Ctrl.MGT.MGT(41).TX_RESETS.reset                    <=  reg_data(348)( 0);                
  Ctrl.MGT.MGT(41).TX_RESETS.reset_pll_and_datapath   <=  reg_data(348)( 1);                
  Ctrl.MGT.MGT(41).TX_RESETS.reset_datapath           <=  reg_data(348)( 2);                
  Ctrl.MGT.MGT(41).TX_RESETS.reset_bufbypass          <=  reg_data(348)( 3);                
  Ctrl.MGT.MGT(41).RX_RESETS.reset                    <=  reg_data(349)( 0);                
  Ctrl.MGT.MGT(41).RX_RESETS.reset_pll_and_datapath   <=  reg_data(349)( 1);                
  Ctrl.MGT.MGT(41).RX_RESETS.reset_datapath           <=  reg_data(349)( 2);                
  Ctrl.MGT.MGT(41).RX_RESETS.reset_bufbypass          <=  reg_data(349)( 3);                
  Ctrl.MGT.MGT(42).DRP.wr_addr                        <=  reg_data(354)( 9 downto  0);      
  Ctrl.MGT.MGT(42).DRP.en                             <=  reg_data(354)(12);                
  Ctrl.MGT.MGT(42).DRP.wr_data                        <=  reg_data(355)(31 downto 16);      
  Ctrl.MGT.MGT(42).TX_RESETS.reset                    <=  reg_data(356)( 0);                
  Ctrl.MGT.MGT(42).TX_RESETS.reset_pll_and_datapath   <=  reg_data(356)( 1);                
  Ctrl.MGT.MGT(42).TX_RESETS.reset_datapath           <=  reg_data(356)( 2);                
  Ctrl.MGT.MGT(42).TX_RESETS.reset_bufbypass          <=  reg_data(356)( 3);                
  Ctrl.MGT.MGT(42).RX_RESETS.reset                    <=  reg_data(357)( 0);                
  Ctrl.MGT.MGT(42).RX_RESETS.reset_pll_and_datapath   <=  reg_data(357)( 1);                
  Ctrl.MGT.MGT(42).RX_RESETS.reset_datapath           <=  reg_data(357)( 2);                
  Ctrl.MGT.MGT(42).RX_RESETS.reset_bufbypass          <=  reg_data(357)( 3);                
  Ctrl.MGT.MGT(43).DRP.wr_addr                        <=  reg_data(362)( 9 downto  0);      
  Ctrl.MGT.MGT(43).DRP.en                             <=  reg_data(362)(12);                
  Ctrl.MGT.MGT(43).DRP.wr_data                        <=  reg_data(363)(31 downto 16);      
  Ctrl.MGT.MGT(43).TX_RESETS.reset                    <=  reg_data(364)( 0);                
  Ctrl.MGT.MGT(43).TX_RESETS.reset_pll_and_datapath   <=  reg_data(364)( 1);                
  Ctrl.MGT.MGT(43).TX_RESETS.reset_datapath           <=  reg_data(364)( 2);                
  Ctrl.MGT.MGT(43).TX_RESETS.reset_bufbypass          <=  reg_data(364)( 3);                
  Ctrl.MGT.MGT(43).RX_RESETS.reset                    <=  reg_data(365)( 0);                
  Ctrl.MGT.MGT(43).RX_RESETS.reset_pll_and_datapath   <=  reg_data(365)( 1);                
  Ctrl.MGT.MGT(43).RX_RESETS.reset_datapath           <=  reg_data(365)( 2);                
  Ctrl.MGT.MGT(43).RX_RESETS.reset_bufbypass          <=  reg_data(365)( 3);                
  Ctrl.MGT.MGT(44).DRP.wr_addr                        <=  reg_data(370)( 9 downto  0);      
  Ctrl.MGT.MGT(44).DRP.en                             <=  reg_data(370)(12);                
  Ctrl.MGT.MGT(44).DRP.wr_data                        <=  reg_data(371)(31 downto 16);      
  Ctrl.MGT.MGT(44).TX_RESETS.reset                    <=  reg_data(372)( 0);                
  Ctrl.MGT.MGT(44).TX_RESETS.reset_pll_and_datapath   <=  reg_data(372)( 1);                
  Ctrl.MGT.MGT(44).TX_RESETS.reset_datapath           <=  reg_data(372)( 2);                
  Ctrl.MGT.MGT(44).TX_RESETS.reset_bufbypass          <=  reg_data(372)( 3);                
  Ctrl.MGT.MGT(44).RX_RESETS.reset                    <=  reg_data(373)( 0);                
  Ctrl.MGT.MGT(44).RX_RESETS.reset_pll_and_datapath   <=  reg_data(373)( 1);                
  Ctrl.MGT.MGT(44).RX_RESETS.reset_datapath           <=  reg_data(373)( 2);                
  Ctrl.MGT.MGT(44).RX_RESETS.reset_bufbypass          <=  reg_data(373)( 3);                
  Ctrl.MGT.MGT(45).DRP.wr_addr                        <=  reg_data(378)( 9 downto  0);      
  Ctrl.MGT.MGT(45).DRP.en                             <=  reg_data(378)(12);                
  Ctrl.MGT.MGT(45).DRP.wr_data                        <=  reg_data(379)(31 downto 16);      
  Ctrl.MGT.MGT(45).TX_RESETS.reset                    <=  reg_data(380)( 0);                
  Ctrl.MGT.MGT(45).TX_RESETS.reset_pll_and_datapath   <=  reg_data(380)( 1);                
  Ctrl.MGT.MGT(45).TX_RESETS.reset_datapath           <=  reg_data(380)( 2);                
  Ctrl.MGT.MGT(45).TX_RESETS.reset_bufbypass          <=  reg_data(380)( 3);                
  Ctrl.MGT.MGT(45).RX_RESETS.reset                    <=  reg_data(381)( 0);                
  Ctrl.MGT.MGT(45).RX_RESETS.reset_pll_and_datapath   <=  reg_data(381)( 1);                
  Ctrl.MGT.MGT(45).RX_RESETS.reset_datapath           <=  reg_data(381)( 2);                
  Ctrl.MGT.MGT(45).RX_RESETS.reset_bufbypass          <=  reg_data(381)( 3);                
  Ctrl.MGT.MGT(46).DRP.wr_addr                        <=  reg_data(386)( 9 downto  0);      
  Ctrl.MGT.MGT(46).DRP.en                             <=  reg_data(386)(12);                
  Ctrl.MGT.MGT(46).DRP.wr_data                        <=  reg_data(387)(31 downto 16);      
  Ctrl.MGT.MGT(46).TX_RESETS.reset                    <=  reg_data(388)( 0);                
  Ctrl.MGT.MGT(46).TX_RESETS.reset_pll_and_datapath   <=  reg_data(388)( 1);                
  Ctrl.MGT.MGT(46).TX_RESETS.reset_datapath           <=  reg_data(388)( 2);                
  Ctrl.MGT.MGT(46).TX_RESETS.reset_bufbypass          <=  reg_data(388)( 3);                
  Ctrl.MGT.MGT(46).RX_RESETS.reset                    <=  reg_data(389)( 0);                
  Ctrl.MGT.MGT(46).RX_RESETS.reset_pll_and_datapath   <=  reg_data(389)( 1);                
  Ctrl.MGT.MGT(46).RX_RESETS.reset_datapath           <=  reg_data(389)( 2);                
  Ctrl.MGT.MGT(46).RX_RESETS.reset_bufbypass          <=  reg_data(389)( 3);                
  Ctrl.MGT.MGT(47).DRP.wr_addr                        <=  reg_data(394)( 9 downto  0);      
  Ctrl.MGT.MGT(47).DRP.en                             <=  reg_data(394)(12);                
  Ctrl.MGT.MGT(47).DRP.wr_data                        <=  reg_data(395)(31 downto 16);      
  Ctrl.MGT.MGT(47).TX_RESETS.reset                    <=  reg_data(396)( 0);                
  Ctrl.MGT.MGT(47).TX_RESETS.reset_pll_and_datapath   <=  reg_data(396)( 1);                
  Ctrl.MGT.MGT(47).TX_RESETS.reset_datapath           <=  reg_data(396)( 2);                
  Ctrl.MGT.MGT(47).TX_RESETS.reset_bufbypass          <=  reg_data(396)( 3);                
  Ctrl.MGT.MGT(47).RX_RESETS.reset                    <=  reg_data(397)( 0);                
  Ctrl.MGT.MGT(47).RX_RESETS.reset_pll_and_datapath   <=  reg_data(397)( 1);                
  Ctrl.MGT.MGT(47).RX_RESETS.reset_datapath           <=  reg_data(397)( 2);                
  Ctrl.MGT.MGT(47).RX_RESETS.reset_bufbypass          <=  reg_data(397)( 3);                
  Ctrl.MGT.MGT(48).DRP.wr_addr                        <=  reg_data(402)( 9 downto  0);      
  Ctrl.MGT.MGT(48).DRP.en                             <=  reg_data(402)(12);                
  Ctrl.MGT.MGT(48).DRP.wr_data                        <=  reg_data(403)(31 downto 16);      
  Ctrl.MGT.MGT(48).TX_RESETS.reset                    <=  reg_data(404)( 0);                
  Ctrl.MGT.MGT(48).TX_RESETS.reset_pll_and_datapath   <=  reg_data(404)( 1);                
  Ctrl.MGT.MGT(48).TX_RESETS.reset_datapath           <=  reg_data(404)( 2);                
  Ctrl.MGT.MGT(48).TX_RESETS.reset_bufbypass          <=  reg_data(404)( 3);                
  Ctrl.MGT.MGT(48).RX_RESETS.reset                    <=  reg_data(405)( 0);                
  Ctrl.MGT.MGT(48).RX_RESETS.reset_pll_and_datapath   <=  reg_data(405)( 1);                
  Ctrl.MGT.MGT(48).RX_RESETS.reset_datapath           <=  reg_data(405)( 2);                
  Ctrl.MGT.MGT(48).RX_RESETS.reset_bufbypass          <=  reg_data(405)( 3);                
  Ctrl.MGT.MGT(49).DRP.wr_addr                        <=  reg_data(410)( 9 downto  0);      
  Ctrl.MGT.MGT(49).DRP.en                             <=  reg_data(410)(12);                
  Ctrl.MGT.MGT(49).DRP.wr_data                        <=  reg_data(411)(31 downto 16);      
  Ctrl.MGT.MGT(49).TX_RESETS.reset                    <=  reg_data(412)( 0);                
  Ctrl.MGT.MGT(49).TX_RESETS.reset_pll_and_datapath   <=  reg_data(412)( 1);                
  Ctrl.MGT.MGT(49).TX_RESETS.reset_datapath           <=  reg_data(412)( 2);                
  Ctrl.MGT.MGT(49).TX_RESETS.reset_bufbypass          <=  reg_data(412)( 3);                
  Ctrl.MGT.MGT(49).RX_RESETS.reset                    <=  reg_data(413)( 0);                
  Ctrl.MGT.MGT(49).RX_RESETS.reset_pll_and_datapath   <=  reg_data(413)( 1);                
  Ctrl.MGT.MGT(49).RX_RESETS.reset_datapath           <=  reg_data(413)( 2);                
  Ctrl.MGT.MGT(49).RX_RESETS.reset_bufbypass          <=  reg_data(413)( 3);                
  Ctrl.MGT.MGT(50).DRP.wr_addr                        <=  reg_data(418)( 9 downto  0);      
  Ctrl.MGT.MGT(50).DRP.en                             <=  reg_data(418)(12);                
  Ctrl.MGT.MGT(50).DRP.wr_data                        <=  reg_data(419)(31 downto 16);      
  Ctrl.MGT.MGT(50).TX_RESETS.reset                    <=  reg_data(420)( 0);                
  Ctrl.MGT.MGT(50).TX_RESETS.reset_pll_and_datapath   <=  reg_data(420)( 1);                
  Ctrl.MGT.MGT(50).TX_RESETS.reset_datapath           <=  reg_data(420)( 2);                
  Ctrl.MGT.MGT(50).TX_RESETS.reset_bufbypass          <=  reg_data(420)( 3);                
  Ctrl.MGT.MGT(50).RX_RESETS.reset                    <=  reg_data(421)( 0);                
  Ctrl.MGT.MGT(50).RX_RESETS.reset_pll_and_datapath   <=  reg_data(421)( 1);                
  Ctrl.MGT.MGT(50).RX_RESETS.reset_datapath           <=  reg_data(421)( 2);                
  Ctrl.MGT.MGT(50).RX_RESETS.reset_bufbypass          <=  reg_data(421)( 3);                
  Ctrl.MGT.MGT(51).DRP.wr_addr                        <=  reg_data(426)( 9 downto  0);      
  Ctrl.MGT.MGT(51).DRP.en                             <=  reg_data(426)(12);                
  Ctrl.MGT.MGT(51).DRP.wr_data                        <=  reg_data(427)(31 downto 16);      
  Ctrl.MGT.MGT(51).TX_RESETS.reset                    <=  reg_data(428)( 0);                
  Ctrl.MGT.MGT(51).TX_RESETS.reset_pll_and_datapath   <=  reg_data(428)( 1);                
  Ctrl.MGT.MGT(51).TX_RESETS.reset_datapath           <=  reg_data(428)( 2);                
  Ctrl.MGT.MGT(51).TX_RESETS.reset_bufbypass          <=  reg_data(428)( 3);                
  Ctrl.MGT.MGT(51).RX_RESETS.reset                    <=  reg_data(429)( 0);                
  Ctrl.MGT.MGT(51).RX_RESETS.reset_pll_and_datapath   <=  reg_data(429)( 1);                
  Ctrl.MGT.MGT(51).RX_RESETS.reset_datapath           <=  reg_data(429)( 2);                
  Ctrl.MGT.MGT(51).RX_RESETS.reset_bufbypass          <=  reg_data(429)( 3);                
  Ctrl.MGT.MGT(52).DRP.wr_addr                        <=  reg_data(434)( 9 downto  0);      
  Ctrl.MGT.MGT(52).DRP.en                             <=  reg_data(434)(12);                
  Ctrl.MGT.MGT(52).DRP.wr_data                        <=  reg_data(435)(31 downto 16);      
  Ctrl.MGT.MGT(52).TX_RESETS.reset                    <=  reg_data(436)( 0);                
  Ctrl.MGT.MGT(52).TX_RESETS.reset_pll_and_datapath   <=  reg_data(436)( 1);                
  Ctrl.MGT.MGT(52).TX_RESETS.reset_datapath           <=  reg_data(436)( 2);                
  Ctrl.MGT.MGT(52).TX_RESETS.reset_bufbypass          <=  reg_data(436)( 3);                
  Ctrl.MGT.MGT(52).RX_RESETS.reset                    <=  reg_data(437)( 0);                
  Ctrl.MGT.MGT(52).RX_RESETS.reset_pll_and_datapath   <=  reg_data(437)( 1);                
  Ctrl.MGT.MGT(52).RX_RESETS.reset_datapath           <=  reg_data(437)( 2);                
  Ctrl.MGT.MGT(52).RX_RESETS.reset_bufbypass          <=  reg_data(437)( 3);                
  Ctrl.MGT.MGT(53).DRP.wr_addr                        <=  reg_data(442)( 9 downto  0);      
  Ctrl.MGT.MGT(53).DRP.en                             <=  reg_data(442)(12);                
  Ctrl.MGT.MGT(53).DRP.wr_data                        <=  reg_data(443)(31 downto 16);      
  Ctrl.MGT.MGT(53).TX_RESETS.reset                    <=  reg_data(444)( 0);                
  Ctrl.MGT.MGT(53).TX_RESETS.reset_pll_and_datapath   <=  reg_data(444)( 1);                
  Ctrl.MGT.MGT(53).TX_RESETS.reset_datapath           <=  reg_data(444)( 2);                
  Ctrl.MGT.MGT(53).TX_RESETS.reset_bufbypass          <=  reg_data(444)( 3);                
  Ctrl.MGT.MGT(53).RX_RESETS.reset                    <=  reg_data(445)( 0);                
  Ctrl.MGT.MGT(53).RX_RESETS.reset_pll_and_datapath   <=  reg_data(445)( 1);                
  Ctrl.MGT.MGT(53).RX_RESETS.reset_datapath           <=  reg_data(445)( 2);                
  Ctrl.MGT.MGT(53).RX_RESETS.reset_bufbypass          <=  reg_data(445)( 3);                
  Ctrl.MGT.MGT(54).DRP.wr_addr                        <=  reg_data(450)( 9 downto  0);      
  Ctrl.MGT.MGT(54).DRP.en                             <=  reg_data(450)(12);                
  Ctrl.MGT.MGT(54).DRP.wr_data                        <=  reg_data(451)(31 downto 16);      
  Ctrl.MGT.MGT(54).TX_RESETS.reset                    <=  reg_data(452)( 0);                
  Ctrl.MGT.MGT(54).TX_RESETS.reset_pll_and_datapath   <=  reg_data(452)( 1);                
  Ctrl.MGT.MGT(54).TX_RESETS.reset_datapath           <=  reg_data(452)( 2);                
  Ctrl.MGT.MGT(54).TX_RESETS.reset_bufbypass          <=  reg_data(452)( 3);                
  Ctrl.MGT.MGT(54).RX_RESETS.reset                    <=  reg_data(453)( 0);                
  Ctrl.MGT.MGT(54).RX_RESETS.reset_pll_and_datapath   <=  reg_data(453)( 1);                
  Ctrl.MGT.MGT(54).RX_RESETS.reset_datapath           <=  reg_data(453)( 2);                
  Ctrl.MGT.MGT(54).RX_RESETS.reset_bufbypass          <=  reg_data(453)( 3);                
  Ctrl.MGT.MGT(55).DRP.wr_addr                        <=  reg_data(458)( 9 downto  0);      
  Ctrl.MGT.MGT(55).DRP.en                             <=  reg_data(458)(12);                
  Ctrl.MGT.MGT(55).DRP.wr_data                        <=  reg_data(459)(31 downto 16);      
  Ctrl.MGT.MGT(55).TX_RESETS.reset                    <=  reg_data(460)( 0);                
  Ctrl.MGT.MGT(55).TX_RESETS.reset_pll_and_datapath   <=  reg_data(460)( 1);                
  Ctrl.MGT.MGT(55).TX_RESETS.reset_datapath           <=  reg_data(460)( 2);                
  Ctrl.MGT.MGT(55).TX_RESETS.reset_bufbypass          <=  reg_data(460)( 3);                
  Ctrl.MGT.MGT(55).RX_RESETS.reset                    <=  reg_data(461)( 0);                
  Ctrl.MGT.MGT(55).RX_RESETS.reset_pll_and_datapath   <=  reg_data(461)( 1);                
  Ctrl.MGT.MGT(55).RX_RESETS.reset_datapath           <=  reg_data(461)( 2);                
  Ctrl.MGT.MGT(55).RX_RESETS.reset_bufbypass          <=  reg_data(461)( 3);                
  Ctrl.MGT.MGT(56).DRP.wr_addr                        <=  reg_data(466)( 9 downto  0);      
  Ctrl.MGT.MGT(56).DRP.en                             <=  reg_data(466)(12);                
  Ctrl.MGT.MGT(56).DRP.wr_data                        <=  reg_data(467)(31 downto 16);      
  Ctrl.MGT.MGT(56).TX_RESETS.reset                    <=  reg_data(468)( 0);                
  Ctrl.MGT.MGT(56).TX_RESETS.reset_pll_and_datapath   <=  reg_data(468)( 1);                
  Ctrl.MGT.MGT(56).TX_RESETS.reset_datapath           <=  reg_data(468)( 2);                
  Ctrl.MGT.MGT(56).TX_RESETS.reset_bufbypass          <=  reg_data(468)( 3);                
  Ctrl.MGT.MGT(56).RX_RESETS.reset                    <=  reg_data(469)( 0);                
  Ctrl.MGT.MGT(56).RX_RESETS.reset_pll_and_datapath   <=  reg_data(469)( 1);                
  Ctrl.MGT.MGT(56).RX_RESETS.reset_datapath           <=  reg_data(469)( 2);                
  Ctrl.MGT.MGT(56).RX_RESETS.reset_bufbypass          <=  reg_data(469)( 3);                
  Ctrl.MGT.MGT(57).DRP.wr_addr                        <=  reg_data(474)( 9 downto  0);      
  Ctrl.MGT.MGT(57).DRP.en                             <=  reg_data(474)(12);                
  Ctrl.MGT.MGT(57).DRP.wr_data                        <=  reg_data(475)(31 downto 16);      
  Ctrl.MGT.MGT(57).TX_RESETS.reset                    <=  reg_data(476)( 0);                
  Ctrl.MGT.MGT(57).TX_RESETS.reset_pll_and_datapath   <=  reg_data(476)( 1);                
  Ctrl.MGT.MGT(57).TX_RESETS.reset_datapath           <=  reg_data(476)( 2);                
  Ctrl.MGT.MGT(57).TX_RESETS.reset_bufbypass          <=  reg_data(476)( 3);                
  Ctrl.MGT.MGT(57).RX_RESETS.reset                    <=  reg_data(477)( 0);                
  Ctrl.MGT.MGT(57).RX_RESETS.reset_pll_and_datapath   <=  reg_data(477)( 1);                
  Ctrl.MGT.MGT(57).RX_RESETS.reset_datapath           <=  reg_data(477)( 2);                
  Ctrl.MGT.MGT(57).RX_RESETS.reset_bufbypass          <=  reg_data(477)( 3);                
  Ctrl.MGT.MGT(58).DRP.wr_addr                        <=  reg_data(482)( 9 downto  0);      
  Ctrl.MGT.MGT(58).DRP.en                             <=  reg_data(482)(12);                
  Ctrl.MGT.MGT(58).DRP.wr_data                        <=  reg_data(483)(31 downto 16);      
  Ctrl.MGT.MGT(58).TX_RESETS.reset                    <=  reg_data(484)( 0);                
  Ctrl.MGT.MGT(58).TX_RESETS.reset_pll_and_datapath   <=  reg_data(484)( 1);                
  Ctrl.MGT.MGT(58).TX_RESETS.reset_datapath           <=  reg_data(484)( 2);                
  Ctrl.MGT.MGT(58).TX_RESETS.reset_bufbypass          <=  reg_data(484)( 3);                
  Ctrl.MGT.MGT(58).RX_RESETS.reset                    <=  reg_data(485)( 0);                
  Ctrl.MGT.MGT(58).RX_RESETS.reset_pll_and_datapath   <=  reg_data(485)( 1);                
  Ctrl.MGT.MGT(58).RX_RESETS.reset_datapath           <=  reg_data(485)( 2);                
  Ctrl.MGT.MGT(58).RX_RESETS.reset_bufbypass          <=  reg_data(485)( 3);                
  Ctrl.MGT.MGT(59).DRP.wr_addr                        <=  reg_data(490)( 9 downto  0);      
  Ctrl.MGT.MGT(59).DRP.en                             <=  reg_data(490)(12);                
  Ctrl.MGT.MGT(59).DRP.wr_data                        <=  reg_data(491)(31 downto 16);      
  Ctrl.MGT.MGT(59).TX_RESETS.reset                    <=  reg_data(492)( 0);                
  Ctrl.MGT.MGT(59).TX_RESETS.reset_pll_and_datapath   <=  reg_data(492)( 1);                
  Ctrl.MGT.MGT(59).TX_RESETS.reset_datapath           <=  reg_data(492)( 2);                
  Ctrl.MGT.MGT(59).TX_RESETS.reset_bufbypass          <=  reg_data(492)( 3);                
  Ctrl.MGT.MGT(59).RX_RESETS.reset                    <=  reg_data(493)( 0);                
  Ctrl.MGT.MGT(59).RX_RESETS.reset_pll_and_datapath   <=  reg_data(493)( 1);                
  Ctrl.MGT.MGT(59).RX_RESETS.reset_datapath           <=  reg_data(493)( 2);                
  Ctrl.MGT.MGT(59).RX_RESETS.reset_bufbypass          <=  reg_data(493)( 3);                
  Ctrl.MGT.MGT(60).DRP.wr_addr                        <=  reg_data(498)( 9 downto  0);      
  Ctrl.MGT.MGT(60).DRP.en                             <=  reg_data(498)(12);                
  Ctrl.MGT.MGT(60).DRP.wr_data                        <=  reg_data(499)(31 downto 16);      
  Ctrl.MGT.MGT(60).TX_RESETS.reset                    <=  reg_data(500)( 0);                
  Ctrl.MGT.MGT(60).TX_RESETS.reset_pll_and_datapath   <=  reg_data(500)( 1);                
  Ctrl.MGT.MGT(60).TX_RESETS.reset_datapath           <=  reg_data(500)( 2);                
  Ctrl.MGT.MGT(60).TX_RESETS.reset_bufbypass          <=  reg_data(500)( 3);                
  Ctrl.MGT.MGT(60).RX_RESETS.reset                    <=  reg_data(501)( 0);                
  Ctrl.MGT.MGT(60).RX_RESETS.reset_pll_and_datapath   <=  reg_data(501)( 1);                
  Ctrl.MGT.MGT(60).RX_RESETS.reset_datapath           <=  reg_data(501)( 2);                
  Ctrl.MGT.MGT(60).RX_RESETS.reset_bufbypass          <=  reg_data(501)( 3);                
  Ctrl.MGT.MGT(61).DRP.wr_addr                        <=  reg_data(506)( 9 downto  0);      
  Ctrl.MGT.MGT(61).DRP.en                             <=  reg_data(506)(12);                
  Ctrl.MGT.MGT(61).DRP.wr_data                        <=  reg_data(507)(31 downto 16);      
  Ctrl.MGT.MGT(61).TX_RESETS.reset                    <=  reg_data(508)( 0);                
  Ctrl.MGT.MGT(61).TX_RESETS.reset_pll_and_datapath   <=  reg_data(508)( 1);                
  Ctrl.MGT.MGT(61).TX_RESETS.reset_datapath           <=  reg_data(508)( 2);                
  Ctrl.MGT.MGT(61).TX_RESETS.reset_bufbypass          <=  reg_data(508)( 3);                
  Ctrl.MGT.MGT(61).RX_RESETS.reset                    <=  reg_data(509)( 0);                
  Ctrl.MGT.MGT(61).RX_RESETS.reset_pll_and_datapath   <=  reg_data(509)( 1);                
  Ctrl.MGT.MGT(61).RX_RESETS.reset_datapath           <=  reg_data(509)( 2);                
  Ctrl.MGT.MGT(61).RX_RESETS.reset_bufbypass          <=  reg_data(509)( 3);                
  Ctrl.MGT.MGT(62).DRP.wr_addr                        <=  reg_data(514)( 9 downto  0);      
  Ctrl.MGT.MGT(62).DRP.en                             <=  reg_data(514)(12);                
  Ctrl.MGT.MGT(62).DRP.wr_data                        <=  reg_data(515)(31 downto 16);      
  Ctrl.MGT.MGT(62).TX_RESETS.reset                    <=  reg_data(516)( 0);                
  Ctrl.MGT.MGT(62).TX_RESETS.reset_pll_and_datapath   <=  reg_data(516)( 1);                
  Ctrl.MGT.MGT(62).TX_RESETS.reset_datapath           <=  reg_data(516)( 2);                
  Ctrl.MGT.MGT(62).TX_RESETS.reset_bufbypass          <=  reg_data(516)( 3);                
  Ctrl.MGT.MGT(62).RX_RESETS.reset                    <=  reg_data(517)( 0);                
  Ctrl.MGT.MGT(62).RX_RESETS.reset_pll_and_datapath   <=  reg_data(517)( 1);                
  Ctrl.MGT.MGT(62).RX_RESETS.reset_datapath           <=  reg_data(517)( 2);                
  Ctrl.MGT.MGT(62).RX_RESETS.reset_bufbypass          <=  reg_data(517)( 3);                
  Ctrl.MGT.MGT(63).DRP.wr_addr                        <=  reg_data(522)( 9 downto  0);      
  Ctrl.MGT.MGT(63).DRP.en                             <=  reg_data(522)(12);                
  Ctrl.MGT.MGT(63).DRP.wr_data                        <=  reg_data(523)(31 downto 16);      
  Ctrl.MGT.MGT(63).TX_RESETS.reset                    <=  reg_data(524)( 0);                
  Ctrl.MGT.MGT(63).TX_RESETS.reset_pll_and_datapath   <=  reg_data(524)( 1);                
  Ctrl.MGT.MGT(63).TX_RESETS.reset_datapath           <=  reg_data(524)( 2);                
  Ctrl.MGT.MGT(63).TX_RESETS.reset_bufbypass          <=  reg_data(524)( 3);                
  Ctrl.MGT.MGT(63).RX_RESETS.reset                    <=  reg_data(525)( 0);                
  Ctrl.MGT.MGT(63).RX_RESETS.reset_pll_and_datapath   <=  reg_data(525)( 1);                
  Ctrl.MGT.MGT(63).RX_RESETS.reset_datapath           <=  reg_data(525)( 2);                
  Ctrl.MGT.MGT(63).RX_RESETS.reset_bufbypass          <=  reg_data(525)( 3);                
  Ctrl.MGT.MGT(64).DRP.wr_addr                        <=  reg_data(530)( 9 downto  0);      
  Ctrl.MGT.MGT(64).DRP.en                             <=  reg_data(530)(12);                
  Ctrl.MGT.MGT(64).DRP.wr_data                        <=  reg_data(531)(31 downto 16);      
  Ctrl.MGT.MGT(64).TX_RESETS.reset                    <=  reg_data(532)( 0);                
  Ctrl.MGT.MGT(64).TX_RESETS.reset_pll_and_datapath   <=  reg_data(532)( 1);                
  Ctrl.MGT.MGT(64).TX_RESETS.reset_datapath           <=  reg_data(532)( 2);                
  Ctrl.MGT.MGT(64).TX_RESETS.reset_bufbypass          <=  reg_data(532)( 3);                
  Ctrl.MGT.MGT(64).RX_RESETS.reset                    <=  reg_data(533)( 0);                
  Ctrl.MGT.MGT(64).RX_RESETS.reset_pll_and_datapath   <=  reg_data(533)( 1);                
  Ctrl.MGT.MGT(64).RX_RESETS.reset_datapath           <=  reg_data(533)( 2);                
  Ctrl.MGT.MGT(64).RX_RESETS.reset_bufbypass          <=  reg_data(533)( 3);                
  Ctrl.MGT.MGT(65).DRP.wr_addr                        <=  reg_data(538)( 9 downto  0);      
  Ctrl.MGT.MGT(65).DRP.en                             <=  reg_data(538)(12);                
  Ctrl.MGT.MGT(65).DRP.wr_data                        <=  reg_data(539)(31 downto 16);      
  Ctrl.MGT.MGT(65).TX_RESETS.reset                    <=  reg_data(540)( 0);                
  Ctrl.MGT.MGT(65).TX_RESETS.reset_pll_and_datapath   <=  reg_data(540)( 1);                
  Ctrl.MGT.MGT(65).TX_RESETS.reset_datapath           <=  reg_data(540)( 2);                
  Ctrl.MGT.MGT(65).TX_RESETS.reset_bufbypass          <=  reg_data(540)( 3);                
  Ctrl.MGT.MGT(65).RX_RESETS.reset                    <=  reg_data(541)( 0);                
  Ctrl.MGT.MGT(65).RX_RESETS.reset_pll_and_datapath   <=  reg_data(541)( 1);                
  Ctrl.MGT.MGT(65).RX_RESETS.reset_datapath           <=  reg_data(541)( 2);                
  Ctrl.MGT.MGT(65).RX_RESETS.reset_bufbypass          <=  reg_data(541)( 3);                
  Ctrl.MGT.MGT(66).DRP.wr_addr                        <=  reg_data(546)( 9 downto  0);      
  Ctrl.MGT.MGT(66).DRP.en                             <=  reg_data(546)(12);                
  Ctrl.MGT.MGT(66).DRP.wr_data                        <=  reg_data(547)(31 downto 16);      
  Ctrl.MGT.MGT(66).TX_RESETS.reset                    <=  reg_data(548)( 0);                
  Ctrl.MGT.MGT(66).TX_RESETS.reset_pll_and_datapath   <=  reg_data(548)( 1);                
  Ctrl.MGT.MGT(66).TX_RESETS.reset_datapath           <=  reg_data(548)( 2);                
  Ctrl.MGT.MGT(66).TX_RESETS.reset_bufbypass          <=  reg_data(548)( 3);                
  Ctrl.MGT.MGT(66).RX_RESETS.reset                    <=  reg_data(549)( 0);                
  Ctrl.MGT.MGT(66).RX_RESETS.reset_pll_and_datapath   <=  reg_data(549)( 1);                
  Ctrl.MGT.MGT(66).RX_RESETS.reset_datapath           <=  reg_data(549)( 2);                
  Ctrl.MGT.MGT(66).RX_RESETS.reset_bufbypass          <=  reg_data(549)( 3);                
  Ctrl.MGT.MGT(67).DRP.wr_addr                        <=  reg_data(554)( 9 downto  0);      
  Ctrl.MGT.MGT(67).DRP.en                             <=  reg_data(554)(12);                
  Ctrl.MGT.MGT(67).DRP.wr_data                        <=  reg_data(555)(31 downto 16);      
  Ctrl.MGT.MGT(67).TX_RESETS.reset                    <=  reg_data(556)( 0);                
  Ctrl.MGT.MGT(67).TX_RESETS.reset_pll_and_datapath   <=  reg_data(556)( 1);                
  Ctrl.MGT.MGT(67).TX_RESETS.reset_datapath           <=  reg_data(556)( 2);                
  Ctrl.MGT.MGT(67).TX_RESETS.reset_bufbypass          <=  reg_data(556)( 3);                
  Ctrl.MGT.MGT(67).RX_RESETS.reset                    <=  reg_data(557)( 0);                
  Ctrl.MGT.MGT(67).RX_RESETS.reset_pll_and_datapath   <=  reg_data(557)( 1);                
  Ctrl.MGT.MGT(67).RX_RESETS.reset_datapath           <=  reg_data(557)( 2);                
  Ctrl.MGT.MGT(67).RX_RESETS.reset_bufbypass          <=  reg_data(557)( 3);                
  Ctrl.MGT.MGT(68).DRP.wr_addr                        <=  reg_data(562)( 9 downto  0);      
  Ctrl.MGT.MGT(68).DRP.en                             <=  reg_data(562)(12);                
  Ctrl.MGT.MGT(68).DRP.wr_data                        <=  reg_data(563)(31 downto 16);      
  Ctrl.MGT.MGT(68).TX_RESETS.reset                    <=  reg_data(564)( 0);                
  Ctrl.MGT.MGT(68).TX_RESETS.reset_pll_and_datapath   <=  reg_data(564)( 1);                
  Ctrl.MGT.MGT(68).TX_RESETS.reset_datapath           <=  reg_data(564)( 2);                
  Ctrl.MGT.MGT(68).TX_RESETS.reset_bufbypass          <=  reg_data(564)( 3);                
  Ctrl.MGT.MGT(68).RX_RESETS.reset                    <=  reg_data(565)( 0);                
  Ctrl.MGT.MGT(68).RX_RESETS.reset_pll_and_datapath   <=  reg_data(565)( 1);                
  Ctrl.MGT.MGT(68).RX_RESETS.reset_datapath           <=  reg_data(565)( 2);                
  Ctrl.MGT.MGT(68).RX_RESETS.reset_bufbypass          <=  reg_data(565)( 3);                
  Ctrl.MGT.MGT(69).DRP.wr_addr                        <=  reg_data(570)( 9 downto  0);      
  Ctrl.MGT.MGT(69).DRP.en                             <=  reg_data(570)(12);                
  Ctrl.MGT.MGT(69).DRP.wr_data                        <=  reg_data(571)(31 downto 16);      
  Ctrl.MGT.MGT(69).TX_RESETS.reset                    <=  reg_data(572)( 0);                
  Ctrl.MGT.MGT(69).TX_RESETS.reset_pll_and_datapath   <=  reg_data(572)( 1);                
  Ctrl.MGT.MGT(69).TX_RESETS.reset_datapath           <=  reg_data(572)( 2);                
  Ctrl.MGT.MGT(69).TX_RESETS.reset_bufbypass          <=  reg_data(572)( 3);                
  Ctrl.MGT.MGT(69).RX_RESETS.reset                    <=  reg_data(573)( 0);                
  Ctrl.MGT.MGT(69).RX_RESETS.reset_pll_and_datapath   <=  reg_data(573)( 1);                
  Ctrl.MGT.MGT(69).RX_RESETS.reset_datapath           <=  reg_data(573)( 2);                
  Ctrl.MGT.MGT(69).RX_RESETS.reset_bufbypass          <=  reg_data(573)( 3);                
  Ctrl.MGT.MGT(70).DRP.wr_addr                        <=  reg_data(578)( 9 downto  0);      
  Ctrl.MGT.MGT(70).DRP.en                             <=  reg_data(578)(12);                
  Ctrl.MGT.MGT(70).DRP.wr_data                        <=  reg_data(579)(31 downto 16);      
  Ctrl.MGT.MGT(70).TX_RESETS.reset                    <=  reg_data(580)( 0);                
  Ctrl.MGT.MGT(70).TX_RESETS.reset_pll_and_datapath   <=  reg_data(580)( 1);                
  Ctrl.MGT.MGT(70).TX_RESETS.reset_datapath           <=  reg_data(580)( 2);                
  Ctrl.MGT.MGT(70).TX_RESETS.reset_bufbypass          <=  reg_data(580)( 3);                
  Ctrl.MGT.MGT(70).RX_RESETS.reset                    <=  reg_data(581)( 0);                
  Ctrl.MGT.MGT(70).RX_RESETS.reset_pll_and_datapath   <=  reg_data(581)( 1);                
  Ctrl.MGT.MGT(70).RX_RESETS.reset_datapath           <=  reg_data(581)( 2);                
  Ctrl.MGT.MGT(70).RX_RESETS.reset_bufbypass          <=  reg_data(581)( 3);                
  Ctrl.MGT.MGT(71).DRP.wr_addr                        <=  reg_data(586)( 9 downto  0);      
  Ctrl.MGT.MGT(71).DRP.en                             <=  reg_data(586)(12);                
  Ctrl.MGT.MGT(71).DRP.wr_data                        <=  reg_data(587)(31 downto 16);      
  Ctrl.MGT.MGT(71).TX_RESETS.reset                    <=  reg_data(588)( 0);                
  Ctrl.MGT.MGT(71).TX_RESETS.reset_pll_and_datapath   <=  reg_data(588)( 1);                
  Ctrl.MGT.MGT(71).TX_RESETS.reset_datapath           <=  reg_data(588)( 2);                
  Ctrl.MGT.MGT(71).TX_RESETS.reset_bufbypass          <=  reg_data(588)( 3);                
  Ctrl.MGT.MGT(71).RX_RESETS.reset                    <=  reg_data(589)( 0);                
  Ctrl.MGT.MGT(71).RX_RESETS.reset_pll_and_datapath   <=  reg_data(589)( 1);                
  Ctrl.MGT.MGT(71).RX_RESETS.reset_datapath           <=  reg_data(589)( 2);                
  Ctrl.MGT.MGT(71).RX_RESETS.reset_bufbypass          <=  reg_data(589)( 3);                
  Ctrl.MGT.MGT(72).DRP.wr_addr                        <=  reg_data(594)( 9 downto  0);      
  Ctrl.MGT.MGT(72).DRP.en                             <=  reg_data(594)(12);                
  Ctrl.MGT.MGT(72).DRP.wr_data                        <=  reg_data(595)(31 downto 16);      
  Ctrl.MGT.MGT(72).TX_RESETS.reset                    <=  reg_data(596)( 0);                
  Ctrl.MGT.MGT(72).TX_RESETS.reset_pll_and_datapath   <=  reg_data(596)( 1);                
  Ctrl.MGT.MGT(72).TX_RESETS.reset_datapath           <=  reg_data(596)( 2);                
  Ctrl.MGT.MGT(72).TX_RESETS.reset_bufbypass          <=  reg_data(596)( 3);                
  Ctrl.MGT.MGT(72).RX_RESETS.reset                    <=  reg_data(597)( 0);                
  Ctrl.MGT.MGT(72).RX_RESETS.reset_pll_and_datapath   <=  reg_data(597)( 1);                
  Ctrl.MGT.MGT(72).RX_RESETS.reset_datapath           <=  reg_data(597)( 2);                
  Ctrl.MGT.MGT(72).RX_RESETS.reset_bufbypass          <=  reg_data(597)( 3);                
  Ctrl.MGT.MGT(73).DRP.wr_addr                        <=  reg_data(602)( 9 downto  0);      
  Ctrl.MGT.MGT(73).DRP.en                             <=  reg_data(602)(12);                
  Ctrl.MGT.MGT(73).DRP.wr_data                        <=  reg_data(603)(31 downto 16);      
  Ctrl.MGT.MGT(73).TX_RESETS.reset                    <=  reg_data(604)( 0);                
  Ctrl.MGT.MGT(73).TX_RESETS.reset_pll_and_datapath   <=  reg_data(604)( 1);                
  Ctrl.MGT.MGT(73).TX_RESETS.reset_datapath           <=  reg_data(604)( 2);                
  Ctrl.MGT.MGT(73).TX_RESETS.reset_bufbypass          <=  reg_data(604)( 3);                
  Ctrl.MGT.MGT(73).RX_RESETS.reset                    <=  reg_data(605)( 0);                
  Ctrl.MGT.MGT(73).RX_RESETS.reset_pll_and_datapath   <=  reg_data(605)( 1);                
  Ctrl.MGT.MGT(73).RX_RESETS.reset_datapath           <=  reg_data(605)( 2);                
  Ctrl.MGT.MGT(73).RX_RESETS.reset_bufbypass          <=  reg_data(605)( 3);                
  Ctrl.MGT.MGT(74).DRP.wr_addr                        <=  reg_data(610)( 9 downto  0);      
  Ctrl.MGT.MGT(74).DRP.en                             <=  reg_data(610)(12);                
  Ctrl.MGT.MGT(74).DRP.wr_data                        <=  reg_data(611)(31 downto 16);      
  Ctrl.MGT.MGT(74).TX_RESETS.reset                    <=  reg_data(612)( 0);                
  Ctrl.MGT.MGT(74).TX_RESETS.reset_pll_and_datapath   <=  reg_data(612)( 1);                
  Ctrl.MGT.MGT(74).TX_RESETS.reset_datapath           <=  reg_data(612)( 2);                
  Ctrl.MGT.MGT(74).TX_RESETS.reset_bufbypass          <=  reg_data(612)( 3);                
  Ctrl.MGT.MGT(74).RX_RESETS.reset                    <=  reg_data(613)( 0);                
  Ctrl.MGT.MGT(74).RX_RESETS.reset_pll_and_datapath   <=  reg_data(613)( 1);                
  Ctrl.MGT.MGT(74).RX_RESETS.reset_datapath           <=  reg_data(613)( 2);                
  Ctrl.MGT.MGT(74).RX_RESETS.reset_bufbypass          <=  reg_data(613)( 3);                
  Ctrl.MGT.MGT(75).DRP.wr_addr                        <=  reg_data(618)( 9 downto  0);      
  Ctrl.MGT.MGT(75).DRP.en                             <=  reg_data(618)(12);                
  Ctrl.MGT.MGT(75).DRP.wr_data                        <=  reg_data(619)(31 downto 16);      
  Ctrl.MGT.MGT(75).TX_RESETS.reset                    <=  reg_data(620)( 0);                
  Ctrl.MGT.MGT(75).TX_RESETS.reset_pll_and_datapath   <=  reg_data(620)( 1);                
  Ctrl.MGT.MGT(75).TX_RESETS.reset_datapath           <=  reg_data(620)( 2);                
  Ctrl.MGT.MGT(75).TX_RESETS.reset_bufbypass          <=  reg_data(620)( 3);                
  Ctrl.MGT.MGT(75).RX_RESETS.reset                    <=  reg_data(621)( 0);                
  Ctrl.MGT.MGT(75).RX_RESETS.reset_pll_and_datapath   <=  reg_data(621)( 1);                
  Ctrl.MGT.MGT(75).RX_RESETS.reset_datapath           <=  reg_data(621)( 2);                
  Ctrl.MGT.MGT(75).RX_RESETS.reset_bufbypass          <=  reg_data(621)( 3);                
  Ctrl.MGT.MGT(76).DRP.wr_addr                        <=  reg_data(626)( 9 downto  0);      
  Ctrl.MGT.MGT(76).DRP.en                             <=  reg_data(626)(12);                
  Ctrl.MGT.MGT(76).DRP.wr_data                        <=  reg_data(627)(31 downto 16);      
  Ctrl.MGT.MGT(76).TX_RESETS.reset                    <=  reg_data(628)( 0);                
  Ctrl.MGT.MGT(76).TX_RESETS.reset_pll_and_datapath   <=  reg_data(628)( 1);                
  Ctrl.MGT.MGT(76).TX_RESETS.reset_datapath           <=  reg_data(628)( 2);                
  Ctrl.MGT.MGT(76).TX_RESETS.reset_bufbypass          <=  reg_data(628)( 3);                
  Ctrl.MGT.MGT(76).RX_RESETS.reset                    <=  reg_data(629)( 0);                
  Ctrl.MGT.MGT(76).RX_RESETS.reset_pll_and_datapath   <=  reg_data(629)( 1);                
  Ctrl.MGT.MGT(76).RX_RESETS.reset_datapath           <=  reg_data(629)( 2);                
  Ctrl.MGT.MGT(76).RX_RESETS.reset_bufbypass          <=  reg_data(629)( 3);                
  Ctrl.MGT.MGT(77).DRP.wr_addr                        <=  reg_data(634)( 9 downto  0);      
  Ctrl.MGT.MGT(77).DRP.en                             <=  reg_data(634)(12);                
  Ctrl.MGT.MGT(77).DRP.wr_data                        <=  reg_data(635)(31 downto 16);      
  Ctrl.MGT.MGT(77).TX_RESETS.reset                    <=  reg_data(636)( 0);                
  Ctrl.MGT.MGT(77).TX_RESETS.reset_pll_and_datapath   <=  reg_data(636)( 1);                
  Ctrl.MGT.MGT(77).TX_RESETS.reset_datapath           <=  reg_data(636)( 2);                
  Ctrl.MGT.MGT(77).TX_RESETS.reset_bufbypass          <=  reg_data(636)( 3);                
  Ctrl.MGT.MGT(77).RX_RESETS.reset                    <=  reg_data(637)( 0);                
  Ctrl.MGT.MGT(77).RX_RESETS.reset_pll_and_datapath   <=  reg_data(637)( 1);                
  Ctrl.MGT.MGT(77).RX_RESETS.reset_datapath           <=  reg_data(637)( 2);                
  Ctrl.MGT.MGT(77).RX_RESETS.reset_bufbypass          <=  reg_data(637)( 3);                
  Ctrl.MGT.MGT(78).DRP.wr_addr                        <=  reg_data(642)( 9 downto  0);      
  Ctrl.MGT.MGT(78).DRP.en                             <=  reg_data(642)(12);                
  Ctrl.MGT.MGT(78).DRP.wr_data                        <=  reg_data(643)(31 downto 16);      
  Ctrl.MGT.MGT(78).TX_RESETS.reset                    <=  reg_data(644)( 0);                
  Ctrl.MGT.MGT(78).TX_RESETS.reset_pll_and_datapath   <=  reg_data(644)( 1);                
  Ctrl.MGT.MGT(78).TX_RESETS.reset_datapath           <=  reg_data(644)( 2);                
  Ctrl.MGT.MGT(78).TX_RESETS.reset_bufbypass          <=  reg_data(644)( 3);                
  Ctrl.MGT.MGT(78).RX_RESETS.reset                    <=  reg_data(645)( 0);                
  Ctrl.MGT.MGT(78).RX_RESETS.reset_pll_and_datapath   <=  reg_data(645)( 1);                
  Ctrl.MGT.MGT(78).RX_RESETS.reset_datapath           <=  reg_data(645)( 2);                
  Ctrl.MGT.MGT(78).RX_RESETS.reset_bufbypass          <=  reg_data(645)( 3);                
  Ctrl.MGT.MGT(79).DRP.wr_addr                        <=  reg_data(650)( 9 downto  0);      
  Ctrl.MGT.MGT(79).DRP.en                             <=  reg_data(650)(12);                
  Ctrl.MGT.MGT(79).DRP.wr_data                        <=  reg_data(651)(31 downto 16);      
  Ctrl.MGT.MGT(79).TX_RESETS.reset                    <=  reg_data(652)( 0);                
  Ctrl.MGT.MGT(79).TX_RESETS.reset_pll_and_datapath   <=  reg_data(652)( 1);                
  Ctrl.MGT.MGT(79).TX_RESETS.reset_datapath           <=  reg_data(652)( 2);                
  Ctrl.MGT.MGT(79).TX_RESETS.reset_bufbypass          <=  reg_data(652)( 3);                
  Ctrl.MGT.MGT(79).RX_RESETS.reset                    <=  reg_data(653)( 0);                
  Ctrl.MGT.MGT(79).RX_RESETS.reset_pll_and_datapath   <=  reg_data(653)( 1);                
  Ctrl.MGT.MGT(79).RX_RESETS.reset_datapath           <=  reg_data(653)( 2);                
  Ctrl.MGT.MGT(79).RX_RESETS.reset_bufbypass          <=  reg_data(653)( 3);                
  Ctrl.MGT.MGT(80).DRP.wr_addr                        <=  reg_data(658)( 9 downto  0);      
  Ctrl.MGT.MGT(80).DRP.en                             <=  reg_data(658)(12);                
  Ctrl.MGT.MGT(80).DRP.wr_data                        <=  reg_data(659)(31 downto 16);      
  Ctrl.MGT.MGT(80).TX_RESETS.reset                    <=  reg_data(660)( 0);                
  Ctrl.MGT.MGT(80).TX_RESETS.reset_pll_and_datapath   <=  reg_data(660)( 1);                
  Ctrl.MGT.MGT(80).TX_RESETS.reset_datapath           <=  reg_data(660)( 2);                
  Ctrl.MGT.MGT(80).TX_RESETS.reset_bufbypass          <=  reg_data(660)( 3);                
  Ctrl.MGT.MGT(80).RX_RESETS.reset                    <=  reg_data(661)( 0);                
  Ctrl.MGT.MGT(80).RX_RESETS.reset_pll_and_datapath   <=  reg_data(661)( 1);                
  Ctrl.MGT.MGT(80).RX_RESETS.reset_datapath           <=  reg_data(661)( 2);                
  Ctrl.MGT.MGT(80).RX_RESETS.reset_bufbypass          <=  reg_data(661)( 3);                
  Ctrl.MGT.MGT(81).DRP.wr_addr                        <=  reg_data(666)( 9 downto  0);      
  Ctrl.MGT.MGT(81).DRP.en                             <=  reg_data(666)(12);                
  Ctrl.MGT.MGT(81).DRP.wr_data                        <=  reg_data(667)(31 downto 16);      
  Ctrl.MGT.MGT(81).TX_RESETS.reset                    <=  reg_data(668)( 0);                
  Ctrl.MGT.MGT(81).TX_RESETS.reset_pll_and_datapath   <=  reg_data(668)( 1);                
  Ctrl.MGT.MGT(81).TX_RESETS.reset_datapath           <=  reg_data(668)( 2);                
  Ctrl.MGT.MGT(81).TX_RESETS.reset_bufbypass          <=  reg_data(668)( 3);                
  Ctrl.MGT.MGT(81).RX_RESETS.reset                    <=  reg_data(669)( 0);                
  Ctrl.MGT.MGT(81).RX_RESETS.reset_pll_and_datapath   <=  reg_data(669)( 1);                
  Ctrl.MGT.MGT(81).RX_RESETS.reset_datapath           <=  reg_data(669)( 2);                
  Ctrl.MGT.MGT(81).RX_RESETS.reset_bufbypass          <=  reg_data(669)( 3);                
  Ctrl.MGT.MGT(82).DRP.wr_addr                        <=  reg_data(674)( 9 downto  0);      
  Ctrl.MGT.MGT(82).DRP.en                             <=  reg_data(674)(12);                
  Ctrl.MGT.MGT(82).DRP.wr_data                        <=  reg_data(675)(31 downto 16);      
  Ctrl.MGT.MGT(82).TX_RESETS.reset                    <=  reg_data(676)( 0);                
  Ctrl.MGT.MGT(82).TX_RESETS.reset_pll_and_datapath   <=  reg_data(676)( 1);                
  Ctrl.MGT.MGT(82).TX_RESETS.reset_datapath           <=  reg_data(676)( 2);                
  Ctrl.MGT.MGT(82).TX_RESETS.reset_bufbypass          <=  reg_data(676)( 3);                
  Ctrl.MGT.MGT(82).RX_RESETS.reset                    <=  reg_data(677)( 0);                
  Ctrl.MGT.MGT(82).RX_RESETS.reset_pll_and_datapath   <=  reg_data(677)( 1);                
  Ctrl.MGT.MGT(82).RX_RESETS.reset_datapath           <=  reg_data(677)( 2);                
  Ctrl.MGT.MGT(82).RX_RESETS.reset_bufbypass          <=  reg_data(677)( 3);                
  Ctrl.MGT.MGT(83).DRP.wr_addr                        <=  reg_data(682)( 9 downto  0);      
  Ctrl.MGT.MGT(83).DRP.en                             <=  reg_data(682)(12);                
  Ctrl.MGT.MGT(83).DRP.wr_data                        <=  reg_data(683)(31 downto 16);      
  Ctrl.MGT.MGT(83).TX_RESETS.reset                    <=  reg_data(684)( 0);                
  Ctrl.MGT.MGT(83).TX_RESETS.reset_pll_and_datapath   <=  reg_data(684)( 1);                
  Ctrl.MGT.MGT(83).TX_RESETS.reset_datapath           <=  reg_data(684)( 2);                
  Ctrl.MGT.MGT(83).TX_RESETS.reset_bufbypass          <=  reg_data(684)( 3);                
  Ctrl.MGT.MGT(83).RX_RESETS.reset                    <=  reg_data(685)( 0);                
  Ctrl.MGT.MGT(83).RX_RESETS.reset_pll_and_datapath   <=  reg_data(685)( 1);                
  Ctrl.MGT.MGT(83).RX_RESETS.reset_datapath           <=  reg_data(685)( 2);                
  Ctrl.MGT.MGT(83).RX_RESETS.reset_bufbypass          <=  reg_data(685)( 3);                
  Ctrl.MGT.MGT(84).DRP.wr_addr                        <=  reg_data(690)( 9 downto  0);      
  Ctrl.MGT.MGT(84).DRP.en                             <=  reg_data(690)(12);                
  Ctrl.MGT.MGT(84).DRP.wr_data                        <=  reg_data(691)(31 downto 16);      
  Ctrl.MGT.MGT(84).TX_RESETS.reset                    <=  reg_data(692)( 0);                
  Ctrl.MGT.MGT(84).TX_RESETS.reset_pll_and_datapath   <=  reg_data(692)( 1);                
  Ctrl.MGT.MGT(84).TX_RESETS.reset_datapath           <=  reg_data(692)( 2);                
  Ctrl.MGT.MGT(84).TX_RESETS.reset_bufbypass          <=  reg_data(692)( 3);                
  Ctrl.MGT.MGT(84).RX_RESETS.reset                    <=  reg_data(693)( 0);                
  Ctrl.MGT.MGT(84).RX_RESETS.reset_pll_and_datapath   <=  reg_data(693)( 1);                
  Ctrl.MGT.MGT(84).RX_RESETS.reset_datapath           <=  reg_data(693)( 2);                
  Ctrl.MGT.MGT(84).RX_RESETS.reset_bufbypass          <=  reg_data(693)( 3);                
  Ctrl.MGT.MGT(85).DRP.wr_addr                        <=  reg_data(698)( 9 downto  0);      
  Ctrl.MGT.MGT(85).DRP.en                             <=  reg_data(698)(12);                
  Ctrl.MGT.MGT(85).DRP.wr_data                        <=  reg_data(699)(31 downto 16);      
  Ctrl.MGT.MGT(85).TX_RESETS.reset                    <=  reg_data(700)( 0);                
  Ctrl.MGT.MGT(85).TX_RESETS.reset_pll_and_datapath   <=  reg_data(700)( 1);                
  Ctrl.MGT.MGT(85).TX_RESETS.reset_datapath           <=  reg_data(700)( 2);                
  Ctrl.MGT.MGT(85).TX_RESETS.reset_bufbypass          <=  reg_data(700)( 3);                
  Ctrl.MGT.MGT(85).RX_RESETS.reset                    <=  reg_data(701)( 0);                
  Ctrl.MGT.MGT(85).RX_RESETS.reset_pll_and_datapath   <=  reg_data(701)( 1);                
  Ctrl.MGT.MGT(85).RX_RESETS.reset_datapath           <=  reg_data(701)( 2);                
  Ctrl.MGT.MGT(85).RX_RESETS.reset_bufbypass          <=  reg_data(701)( 3);                
  Ctrl.MGT.MGT(86).DRP.wr_addr                        <=  reg_data(706)( 9 downto  0);      
  Ctrl.MGT.MGT(86).DRP.en                             <=  reg_data(706)(12);                
  Ctrl.MGT.MGT(86).DRP.wr_data                        <=  reg_data(707)(31 downto 16);      
  Ctrl.MGT.MGT(86).TX_RESETS.reset                    <=  reg_data(708)( 0);                
  Ctrl.MGT.MGT(86).TX_RESETS.reset_pll_and_datapath   <=  reg_data(708)( 1);                
  Ctrl.MGT.MGT(86).TX_RESETS.reset_datapath           <=  reg_data(708)( 2);                
  Ctrl.MGT.MGT(86).TX_RESETS.reset_bufbypass          <=  reg_data(708)( 3);                
  Ctrl.MGT.MGT(86).RX_RESETS.reset                    <=  reg_data(709)( 0);                
  Ctrl.MGT.MGT(86).RX_RESETS.reset_pll_and_datapath   <=  reg_data(709)( 1);                
  Ctrl.MGT.MGT(86).RX_RESETS.reset_datapath           <=  reg_data(709)( 2);                
  Ctrl.MGT.MGT(86).RX_RESETS.reset_bufbypass          <=  reg_data(709)( 3);                
  Ctrl.MGT.MGT(87).DRP.wr_addr                        <=  reg_data(714)( 9 downto  0);      
  Ctrl.MGT.MGT(87).DRP.en                             <=  reg_data(714)(12);                
  Ctrl.MGT.MGT(87).DRP.wr_data                        <=  reg_data(715)(31 downto 16);      
  Ctrl.MGT.MGT(87).TX_RESETS.reset                    <=  reg_data(716)( 0);                
  Ctrl.MGT.MGT(87).TX_RESETS.reset_pll_and_datapath   <=  reg_data(716)( 1);                
  Ctrl.MGT.MGT(87).TX_RESETS.reset_datapath           <=  reg_data(716)( 2);                
  Ctrl.MGT.MGT(87).TX_RESETS.reset_bufbypass          <=  reg_data(716)( 3);                
  Ctrl.MGT.MGT(87).RX_RESETS.reset                    <=  reg_data(717)( 0);                
  Ctrl.MGT.MGT(87).RX_RESETS.reset_pll_and_datapath   <=  reg_data(717)( 1);                
  Ctrl.MGT.MGT(87).RX_RESETS.reset_datapath           <=  reg_data(717)( 2);                
  Ctrl.MGT.MGT(87).RX_RESETS.reset_bufbypass          <=  reg_data(717)( 3);                
  Ctrl.MGT.MGT(88).DRP.wr_addr                        <=  reg_data(722)( 9 downto  0);      
  Ctrl.MGT.MGT(88).DRP.en                             <=  reg_data(722)(12);                
  Ctrl.MGT.MGT(88).DRP.wr_data                        <=  reg_data(723)(31 downto 16);      
  Ctrl.MGT.MGT(88).TX_RESETS.reset                    <=  reg_data(724)( 0);                
  Ctrl.MGT.MGT(88).TX_RESETS.reset_pll_and_datapath   <=  reg_data(724)( 1);                
  Ctrl.MGT.MGT(88).TX_RESETS.reset_datapath           <=  reg_data(724)( 2);                
  Ctrl.MGT.MGT(88).TX_RESETS.reset_bufbypass          <=  reg_data(724)( 3);                
  Ctrl.MGT.MGT(88).RX_RESETS.reset                    <=  reg_data(725)( 0);                
  Ctrl.MGT.MGT(88).RX_RESETS.reset_pll_and_datapath   <=  reg_data(725)( 1);                
  Ctrl.MGT.MGT(88).RX_RESETS.reset_datapath           <=  reg_data(725)( 2);                
  Ctrl.MGT.MGT(88).RX_RESETS.reset_bufbypass          <=  reg_data(725)( 3);                
  Ctrl.MGT.MGT(89).DRP.wr_addr                        <=  reg_data(730)( 9 downto  0);      
  Ctrl.MGT.MGT(89).DRP.en                             <=  reg_data(730)(12);                
  Ctrl.MGT.MGT(89).DRP.wr_data                        <=  reg_data(731)(31 downto 16);      
  Ctrl.MGT.MGT(89).TX_RESETS.reset                    <=  reg_data(732)( 0);                
  Ctrl.MGT.MGT(89).TX_RESETS.reset_pll_and_datapath   <=  reg_data(732)( 1);                
  Ctrl.MGT.MGT(89).TX_RESETS.reset_datapath           <=  reg_data(732)( 2);                
  Ctrl.MGT.MGT(89).TX_RESETS.reset_bufbypass          <=  reg_data(732)( 3);                
  Ctrl.MGT.MGT(89).RX_RESETS.reset                    <=  reg_data(733)( 0);                
  Ctrl.MGT.MGT(89).RX_RESETS.reset_pll_and_datapath   <=  reg_data(733)( 1);                
  Ctrl.MGT.MGT(89).RX_RESETS.reset_datapath           <=  reg_data(733)( 2);                
  Ctrl.MGT.MGT(89).RX_RESETS.reset_bufbypass          <=  reg_data(733)( 3);                
  Ctrl.MGT.MGT(90).DRP.wr_addr                        <=  reg_data(738)( 9 downto  0);      
  Ctrl.MGT.MGT(90).DRP.en                             <=  reg_data(738)(12);                
  Ctrl.MGT.MGT(90).DRP.wr_data                        <=  reg_data(739)(31 downto 16);      
  Ctrl.MGT.MGT(90).TX_RESETS.reset                    <=  reg_data(740)( 0);                
  Ctrl.MGT.MGT(90).TX_RESETS.reset_pll_and_datapath   <=  reg_data(740)( 1);                
  Ctrl.MGT.MGT(90).TX_RESETS.reset_datapath           <=  reg_data(740)( 2);                
  Ctrl.MGT.MGT(90).TX_RESETS.reset_bufbypass          <=  reg_data(740)( 3);                
  Ctrl.MGT.MGT(90).RX_RESETS.reset                    <=  reg_data(741)( 0);                
  Ctrl.MGT.MGT(90).RX_RESETS.reset_pll_and_datapath   <=  reg_data(741)( 1);                
  Ctrl.MGT.MGT(90).RX_RESETS.reset_datapath           <=  reg_data(741)( 2);                
  Ctrl.MGT.MGT(90).RX_RESETS.reset_bufbypass          <=  reg_data(741)( 3);                
  Ctrl.MGT.MGT(91).DRP.wr_addr                        <=  reg_data(746)( 9 downto  0);      
  Ctrl.MGT.MGT(91).DRP.en                             <=  reg_data(746)(12);                
  Ctrl.MGT.MGT(91).DRP.wr_data                        <=  reg_data(747)(31 downto 16);      
  Ctrl.MGT.MGT(91).TX_RESETS.reset                    <=  reg_data(748)( 0);                
  Ctrl.MGT.MGT(91).TX_RESETS.reset_pll_and_datapath   <=  reg_data(748)( 1);                
  Ctrl.MGT.MGT(91).TX_RESETS.reset_datapath           <=  reg_data(748)( 2);                
  Ctrl.MGT.MGT(91).TX_RESETS.reset_bufbypass          <=  reg_data(748)( 3);                
  Ctrl.MGT.MGT(91).RX_RESETS.reset                    <=  reg_data(749)( 0);                
  Ctrl.MGT.MGT(91).RX_RESETS.reset_pll_and_datapath   <=  reg_data(749)( 1);                
  Ctrl.MGT.MGT(91).RX_RESETS.reset_datapath           <=  reg_data(749)( 2);                
  Ctrl.MGT.MGT(91).RX_RESETS.reset_bufbypass          <=  reg_data(749)( 3);                
  Ctrl.MGT.MGT(92).DRP.wr_addr                        <=  reg_data(754)( 9 downto  0);      
  Ctrl.MGT.MGT(92).DRP.en                             <=  reg_data(754)(12);                
  Ctrl.MGT.MGT(92).DRP.wr_data                        <=  reg_data(755)(31 downto 16);      
  Ctrl.MGT.MGT(92).TX_RESETS.reset                    <=  reg_data(756)( 0);                
  Ctrl.MGT.MGT(92).TX_RESETS.reset_pll_and_datapath   <=  reg_data(756)( 1);                
  Ctrl.MGT.MGT(92).TX_RESETS.reset_datapath           <=  reg_data(756)( 2);                
  Ctrl.MGT.MGT(92).TX_RESETS.reset_bufbypass          <=  reg_data(756)( 3);                
  Ctrl.MGT.MGT(92).RX_RESETS.reset                    <=  reg_data(757)( 0);                
  Ctrl.MGT.MGT(92).RX_RESETS.reset_pll_and_datapath   <=  reg_data(757)( 1);                
  Ctrl.MGT.MGT(92).RX_RESETS.reset_datapath           <=  reg_data(757)( 2);                
  Ctrl.MGT.MGT(92).RX_RESETS.reset_bufbypass          <=  reg_data(757)( 3);                
  Ctrl.MGT.MGT(93).DRP.wr_addr                        <=  reg_data(762)( 9 downto  0);      
  Ctrl.MGT.MGT(93).DRP.en                             <=  reg_data(762)(12);                
  Ctrl.MGT.MGT(93).DRP.wr_data                        <=  reg_data(763)(31 downto 16);      
  Ctrl.MGT.MGT(93).TX_RESETS.reset                    <=  reg_data(764)( 0);                
  Ctrl.MGT.MGT(93).TX_RESETS.reset_pll_and_datapath   <=  reg_data(764)( 1);                
  Ctrl.MGT.MGT(93).TX_RESETS.reset_datapath           <=  reg_data(764)( 2);                
  Ctrl.MGT.MGT(93).TX_RESETS.reset_bufbypass          <=  reg_data(764)( 3);                
  Ctrl.MGT.MGT(93).RX_RESETS.reset                    <=  reg_data(765)( 0);                
  Ctrl.MGT.MGT(93).RX_RESETS.reset_pll_and_datapath   <=  reg_data(765)( 1);                
  Ctrl.MGT.MGT(93).RX_RESETS.reset_datapath           <=  reg_data(765)( 2);                
  Ctrl.MGT.MGT(93).RX_RESETS.reset_bufbypass          <=  reg_data(765)( 3);                
  Ctrl.MGT.MGT(94).DRP.wr_addr                        <=  reg_data(770)( 9 downto  0);      
  Ctrl.MGT.MGT(94).DRP.en                             <=  reg_data(770)(12);                
  Ctrl.MGT.MGT(94).DRP.wr_data                        <=  reg_data(771)(31 downto 16);      
  Ctrl.MGT.MGT(94).TX_RESETS.reset                    <=  reg_data(772)( 0);                
  Ctrl.MGT.MGT(94).TX_RESETS.reset_pll_and_datapath   <=  reg_data(772)( 1);                
  Ctrl.MGT.MGT(94).TX_RESETS.reset_datapath           <=  reg_data(772)( 2);                
  Ctrl.MGT.MGT(94).TX_RESETS.reset_bufbypass          <=  reg_data(772)( 3);                
  Ctrl.MGT.MGT(94).RX_RESETS.reset                    <=  reg_data(773)( 0);                
  Ctrl.MGT.MGT(94).RX_RESETS.reset_pll_and_datapath   <=  reg_data(773)( 1);                
  Ctrl.MGT.MGT(94).RX_RESETS.reset_datapath           <=  reg_data(773)( 2);                
  Ctrl.MGT.MGT(94).RX_RESETS.reset_bufbypass          <=  reg_data(773)( 3);                
  Ctrl.MGT.MGT(95).DRP.wr_addr                        <=  reg_data(778)( 9 downto  0);      
  Ctrl.MGT.MGT(95).DRP.en                             <=  reg_data(778)(12);                
  Ctrl.MGT.MGT(95).DRP.wr_data                        <=  reg_data(779)(31 downto 16);      
  Ctrl.MGT.MGT(95).TX_RESETS.reset                    <=  reg_data(780)( 0);                
  Ctrl.MGT.MGT(95).TX_RESETS.reset_pll_and_datapath   <=  reg_data(780)( 1);                
  Ctrl.MGT.MGT(95).TX_RESETS.reset_datapath           <=  reg_data(780)( 2);                
  Ctrl.MGT.MGT(95).TX_RESETS.reset_bufbypass          <=  reg_data(780)( 3);                
  Ctrl.MGT.MGT(95).RX_RESETS.reset                    <=  reg_data(781)( 0);                
  Ctrl.MGT.MGT(95).RX_RESETS.reset_pll_and_datapath   <=  reg_data(781)( 1);                
  Ctrl.MGT.MGT(95).RX_RESETS.reset_datapath           <=  reg_data(781)( 2);                
  Ctrl.MGT.MGT(95).RX_RESETS.reset_bufbypass          <=  reg_data(781)( 3);                
  Ctrl.MGT.MGT(96).DRP.wr_addr                        <=  reg_data(786)( 9 downto  0);      
  Ctrl.MGT.MGT(96).DRP.en                             <=  reg_data(786)(12);                
  Ctrl.MGT.MGT(96).DRP.wr_data                        <=  reg_data(787)(31 downto 16);      
  Ctrl.MGT.MGT(96).TX_RESETS.reset                    <=  reg_data(788)( 0);                
  Ctrl.MGT.MGT(96).TX_RESETS.reset_pll_and_datapath   <=  reg_data(788)( 1);                
  Ctrl.MGT.MGT(96).TX_RESETS.reset_datapath           <=  reg_data(788)( 2);                
  Ctrl.MGT.MGT(96).TX_RESETS.reset_bufbypass          <=  reg_data(788)( 3);                
  Ctrl.MGT.MGT(96).RX_RESETS.reset                    <=  reg_data(789)( 0);                
  Ctrl.MGT.MGT(96).RX_RESETS.reset_pll_and_datapath   <=  reg_data(789)( 1);                
  Ctrl.MGT.MGT(96).RX_RESETS.reset_datapath           <=  reg_data(789)( 2);                
  Ctrl.MGT.MGT(96).RX_RESETS.reset_bufbypass          <=  reg_data(789)( 3);                
  Ctrl.MGT.MGT(97).DRP.wr_addr                        <=  reg_data(794)( 9 downto  0);      
  Ctrl.MGT.MGT(97).DRP.en                             <=  reg_data(794)(12);                
  Ctrl.MGT.MGT(97).DRP.wr_data                        <=  reg_data(795)(31 downto 16);      
  Ctrl.MGT.MGT(97).TX_RESETS.reset                    <=  reg_data(796)( 0);                
  Ctrl.MGT.MGT(97).TX_RESETS.reset_pll_and_datapath   <=  reg_data(796)( 1);                
  Ctrl.MGT.MGT(97).TX_RESETS.reset_datapath           <=  reg_data(796)( 2);                
  Ctrl.MGT.MGT(97).TX_RESETS.reset_bufbypass          <=  reg_data(796)( 3);                
  Ctrl.MGT.MGT(97).RX_RESETS.reset                    <=  reg_data(797)( 0);                
  Ctrl.MGT.MGT(97).RX_RESETS.reset_pll_and_datapath   <=  reg_data(797)( 1);                
  Ctrl.MGT.MGT(97).RX_RESETS.reset_datapath           <=  reg_data(797)( 2);                
  Ctrl.MGT.MGT(97).RX_RESETS.reset_bufbypass          <=  reg_data(797)( 3);                
  Ctrl.MGT.MGT(98).DRP.wr_addr                        <=  reg_data(802)( 9 downto  0);      
  Ctrl.MGT.MGT(98).DRP.en                             <=  reg_data(802)(12);                
  Ctrl.MGT.MGT(98).DRP.wr_data                        <=  reg_data(803)(31 downto 16);      
  Ctrl.MGT.MGT(98).TX_RESETS.reset                    <=  reg_data(804)( 0);                
  Ctrl.MGT.MGT(98).TX_RESETS.reset_pll_and_datapath   <=  reg_data(804)( 1);                
  Ctrl.MGT.MGT(98).TX_RESETS.reset_datapath           <=  reg_data(804)( 2);                
  Ctrl.MGT.MGT(98).TX_RESETS.reset_bufbypass          <=  reg_data(804)( 3);                
  Ctrl.MGT.MGT(98).RX_RESETS.reset                    <=  reg_data(805)( 0);                
  Ctrl.MGT.MGT(98).RX_RESETS.reset_pll_and_datapath   <=  reg_data(805)( 1);                
  Ctrl.MGT.MGT(98).RX_RESETS.reset_datapath           <=  reg_data(805)( 2);                
  Ctrl.MGT.MGT(98).RX_RESETS.reset_bufbypass          <=  reg_data(805)( 3);                
  Ctrl.MGT.MGT(99).DRP.wr_addr                        <=  reg_data(810)( 9 downto  0);      
  Ctrl.MGT.MGT(99).DRP.en                             <=  reg_data(810)(12);                
  Ctrl.MGT.MGT(99).DRP.wr_data                        <=  reg_data(811)(31 downto 16);      
  Ctrl.MGT.MGT(99).TX_RESETS.reset                    <=  reg_data(812)( 0);                
  Ctrl.MGT.MGT(99).TX_RESETS.reset_pll_and_datapath   <=  reg_data(812)( 1);                
  Ctrl.MGT.MGT(99).TX_RESETS.reset_datapath           <=  reg_data(812)( 2);                
  Ctrl.MGT.MGT(99).TX_RESETS.reset_bufbypass          <=  reg_data(812)( 3);                
  Ctrl.MGT.MGT(99).RX_RESETS.reset                    <=  reg_data(813)( 0);                
  Ctrl.MGT.MGT(99).RX_RESETS.reset_pll_and_datapath   <=  reg_data(813)( 1);                
  Ctrl.MGT.MGT(99).RX_RESETS.reset_datapath           <=  reg_data(813)( 2);                
  Ctrl.MGT.MGT(99).RX_RESETS.reset_bufbypass          <=  reg_data(813)( 3);                
  Ctrl.MGT.MGT(100).DRP.wr_addr                       <=  reg_data(818)( 9 downto  0);      
  Ctrl.MGT.MGT(100).DRP.en                            <=  reg_data(818)(12);                
  Ctrl.MGT.MGT(100).DRP.wr_data                       <=  reg_data(819)(31 downto 16);      
  Ctrl.MGT.MGT(100).TX_RESETS.reset                   <=  reg_data(820)( 0);                
  Ctrl.MGT.MGT(100).TX_RESETS.reset_pll_and_datapath  <=  reg_data(820)( 1);                
  Ctrl.MGT.MGT(100).TX_RESETS.reset_datapath          <=  reg_data(820)( 2);                
  Ctrl.MGT.MGT(100).TX_RESETS.reset_bufbypass         <=  reg_data(820)( 3);                
  Ctrl.MGT.MGT(100).RX_RESETS.reset                   <=  reg_data(821)( 0);                
  Ctrl.MGT.MGT(100).RX_RESETS.reset_pll_and_datapath  <=  reg_data(821)( 1);                
  Ctrl.MGT.MGT(100).RX_RESETS.reset_datapath          <=  reg_data(821)( 2);                
  Ctrl.MGT.MGT(100).RX_RESETS.reset_bufbypass         <=  reg_data(821)( 3);                
  Ctrl.MGT.MGT(101).DRP.wr_addr                       <=  reg_data(826)( 9 downto  0);      
  Ctrl.MGT.MGT(101).DRP.en                            <=  reg_data(826)(12);                
  Ctrl.MGT.MGT(101).DRP.wr_data                       <=  reg_data(827)(31 downto 16);      
  Ctrl.MGT.MGT(101).TX_RESETS.reset                   <=  reg_data(828)( 0);                
  Ctrl.MGT.MGT(101).TX_RESETS.reset_pll_and_datapath  <=  reg_data(828)( 1);                
  Ctrl.MGT.MGT(101).TX_RESETS.reset_datapath          <=  reg_data(828)( 2);                
  Ctrl.MGT.MGT(101).TX_RESETS.reset_bufbypass         <=  reg_data(828)( 3);                
  Ctrl.MGT.MGT(101).RX_RESETS.reset                   <=  reg_data(829)( 0);                
  Ctrl.MGT.MGT(101).RX_RESETS.reset_pll_and_datapath  <=  reg_data(829)( 1);                
  Ctrl.MGT.MGT(101).RX_RESETS.reset_datapath          <=  reg_data(829)( 2);                
  Ctrl.MGT.MGT(101).RX_RESETS.reset_bufbypass         <=  reg_data(829)( 3);                
  Ctrl.MGT.MGT(102).DRP.wr_addr                       <=  reg_data(834)( 9 downto  0);      
  Ctrl.MGT.MGT(102).DRP.en                            <=  reg_data(834)(12);                
  Ctrl.MGT.MGT(102).DRP.wr_data                       <=  reg_data(835)(31 downto 16);      
  Ctrl.MGT.MGT(102).TX_RESETS.reset                   <=  reg_data(836)( 0);                
  Ctrl.MGT.MGT(102).TX_RESETS.reset_pll_and_datapath  <=  reg_data(836)( 1);                
  Ctrl.MGT.MGT(102).TX_RESETS.reset_datapath          <=  reg_data(836)( 2);                
  Ctrl.MGT.MGT(102).TX_RESETS.reset_bufbypass         <=  reg_data(836)( 3);                
  Ctrl.MGT.MGT(102).RX_RESETS.reset                   <=  reg_data(837)( 0);                
  Ctrl.MGT.MGT(102).RX_RESETS.reset_pll_and_datapath  <=  reg_data(837)( 1);                
  Ctrl.MGT.MGT(102).RX_RESETS.reset_datapath          <=  reg_data(837)( 2);                
  Ctrl.MGT.MGT(102).RX_RESETS.reset_bufbypass         <=  reg_data(837)( 3);                
  Ctrl.MGT.MGT(103).DRP.wr_addr                       <=  reg_data(842)( 9 downto  0);      
  Ctrl.MGT.MGT(103).DRP.en                            <=  reg_data(842)(12);                
  Ctrl.MGT.MGT(103).DRP.wr_data                       <=  reg_data(843)(31 downto 16);      
  Ctrl.MGT.MGT(103).TX_RESETS.reset                   <=  reg_data(844)( 0);                
  Ctrl.MGT.MGT(103).TX_RESETS.reset_pll_and_datapath  <=  reg_data(844)( 1);                
  Ctrl.MGT.MGT(103).TX_RESETS.reset_datapath          <=  reg_data(844)( 2);                
  Ctrl.MGT.MGT(103).TX_RESETS.reset_bufbypass         <=  reg_data(844)( 3);                
  Ctrl.MGT.MGT(103).RX_RESETS.reset                   <=  reg_data(845)( 0);                
  Ctrl.MGT.MGT(103).RX_RESETS.reset_pll_and_datapath  <=  reg_data(845)( 1);                
  Ctrl.MGT.MGT(103).RX_RESETS.reset_datapath          <=  reg_data(845)( 2);                
  Ctrl.MGT.MGT(103).RX_RESETS.reset_bufbypass         <=  reg_data(845)( 3);                
  Ctrl.MGT.MGT(104).DRP.wr_addr                       <=  reg_data(850)( 9 downto  0);      
  Ctrl.MGT.MGT(104).DRP.en                            <=  reg_data(850)(12);                
  Ctrl.MGT.MGT(104).DRP.wr_data                       <=  reg_data(851)(31 downto 16);      
  Ctrl.MGT.MGT(104).TX_RESETS.reset                   <=  reg_data(852)( 0);                
  Ctrl.MGT.MGT(104).TX_RESETS.reset_pll_and_datapath  <=  reg_data(852)( 1);                
  Ctrl.MGT.MGT(104).TX_RESETS.reset_datapath          <=  reg_data(852)( 2);                
  Ctrl.MGT.MGT(104).TX_RESETS.reset_bufbypass         <=  reg_data(852)( 3);                
  Ctrl.MGT.MGT(104).RX_RESETS.reset                   <=  reg_data(853)( 0);                
  Ctrl.MGT.MGT(104).RX_RESETS.reset_pll_and_datapath  <=  reg_data(853)( 1);                
  Ctrl.MGT.MGT(104).RX_RESETS.reset_datapath          <=  reg_data(853)( 2);                
  Ctrl.MGT.MGT(104).RX_RESETS.reset_bufbypass         <=  reg_data(853)( 3);                
  Ctrl.MGT.MGT(105).DRP.wr_addr                       <=  reg_data(858)( 9 downto  0);      
  Ctrl.MGT.MGT(105).DRP.en                            <=  reg_data(858)(12);                
  Ctrl.MGT.MGT(105).DRP.wr_data                       <=  reg_data(859)(31 downto 16);      
  Ctrl.MGT.MGT(105).TX_RESETS.reset                   <=  reg_data(860)( 0);                
  Ctrl.MGT.MGT(105).TX_RESETS.reset_pll_and_datapath  <=  reg_data(860)( 1);                
  Ctrl.MGT.MGT(105).TX_RESETS.reset_datapath          <=  reg_data(860)( 2);                
  Ctrl.MGT.MGT(105).TX_RESETS.reset_bufbypass         <=  reg_data(860)( 3);                
  Ctrl.MGT.MGT(105).RX_RESETS.reset                   <=  reg_data(861)( 0);                
  Ctrl.MGT.MGT(105).RX_RESETS.reset_pll_and_datapath  <=  reg_data(861)( 1);                
  Ctrl.MGT.MGT(105).RX_RESETS.reset_datapath          <=  reg_data(861)( 2);                
  Ctrl.MGT.MGT(105).RX_RESETS.reset_bufbypass         <=  reg_data(861)( 3);                
  Ctrl.MGT.MGT(106).DRP.wr_addr                       <=  reg_data(866)( 9 downto  0);      
  Ctrl.MGT.MGT(106).DRP.en                            <=  reg_data(866)(12);                
  Ctrl.MGT.MGT(106).DRP.wr_data                       <=  reg_data(867)(31 downto 16);      
  Ctrl.MGT.MGT(106).TX_RESETS.reset                   <=  reg_data(868)( 0);                
  Ctrl.MGT.MGT(106).TX_RESETS.reset_pll_and_datapath  <=  reg_data(868)( 1);                
  Ctrl.MGT.MGT(106).TX_RESETS.reset_datapath          <=  reg_data(868)( 2);                
  Ctrl.MGT.MGT(106).TX_RESETS.reset_bufbypass         <=  reg_data(868)( 3);                
  Ctrl.MGT.MGT(106).RX_RESETS.reset                   <=  reg_data(869)( 0);                
  Ctrl.MGT.MGT(106).RX_RESETS.reset_pll_and_datapath  <=  reg_data(869)( 1);                
  Ctrl.MGT.MGT(106).RX_RESETS.reset_datapath          <=  reg_data(869)( 2);                
  Ctrl.MGT.MGT(106).RX_RESETS.reset_bufbypass         <=  reg_data(869)( 3);                
  Ctrl.MGT.MGT(107).DRP.wr_addr                       <=  reg_data(874)( 9 downto  0);      
  Ctrl.MGT.MGT(107).DRP.en                            <=  reg_data(874)(12);                
  Ctrl.MGT.MGT(107).DRP.wr_data                       <=  reg_data(875)(31 downto 16);      
  Ctrl.MGT.MGT(107).TX_RESETS.reset                   <=  reg_data(876)( 0);                
  Ctrl.MGT.MGT(107).TX_RESETS.reset_pll_and_datapath  <=  reg_data(876)( 1);                
  Ctrl.MGT.MGT(107).TX_RESETS.reset_datapath          <=  reg_data(876)( 2);                
  Ctrl.MGT.MGT(107).TX_RESETS.reset_bufbypass         <=  reg_data(876)( 3);                
  Ctrl.MGT.MGT(107).RX_RESETS.reset                   <=  reg_data(877)( 0);                
  Ctrl.MGT.MGT(107).RX_RESETS.reset_pll_and_datapath  <=  reg_data(877)( 1);                
  Ctrl.MGT.MGT(107).RX_RESETS.reset_datapath          <=  reg_data(877)( 2);                
  Ctrl.MGT.MGT(107).RX_RESETS.reset_bufbypass         <=  reg_data(877)( 3);                
  Ctrl.MGT.MGT(108).DRP.wr_addr                       <=  reg_data(882)( 9 downto  0);      
  Ctrl.MGT.MGT(108).DRP.en                            <=  reg_data(882)(12);                
  Ctrl.MGT.MGT(108).DRP.wr_data                       <=  reg_data(883)(31 downto 16);      
  Ctrl.MGT.MGT(108).TX_RESETS.reset                   <=  reg_data(884)( 0);                
  Ctrl.MGT.MGT(108).TX_RESETS.reset_pll_and_datapath  <=  reg_data(884)( 1);                
  Ctrl.MGT.MGT(108).TX_RESETS.reset_datapath          <=  reg_data(884)( 2);                
  Ctrl.MGT.MGT(108).TX_RESETS.reset_bufbypass         <=  reg_data(884)( 3);                
  Ctrl.MGT.MGT(108).RX_RESETS.reset                   <=  reg_data(885)( 0);                
  Ctrl.MGT.MGT(108).RX_RESETS.reset_pll_and_datapath  <=  reg_data(885)( 1);                
  Ctrl.MGT.MGT(108).RX_RESETS.reset_datapath          <=  reg_data(885)( 2);                
  Ctrl.MGT.MGT(108).RX_RESETS.reset_bufbypass         <=  reg_data(885)( 3);                
  Ctrl.MGT.MGT(109).DRP.wr_addr                       <=  reg_data(890)( 9 downto  0);      
  Ctrl.MGT.MGT(109).DRP.en                            <=  reg_data(890)(12);                
  Ctrl.MGT.MGT(109).DRP.wr_data                       <=  reg_data(891)(31 downto 16);      
  Ctrl.MGT.MGT(109).TX_RESETS.reset                   <=  reg_data(892)( 0);                
  Ctrl.MGT.MGT(109).TX_RESETS.reset_pll_and_datapath  <=  reg_data(892)( 1);                
  Ctrl.MGT.MGT(109).TX_RESETS.reset_datapath          <=  reg_data(892)( 2);                
  Ctrl.MGT.MGT(109).TX_RESETS.reset_bufbypass         <=  reg_data(892)( 3);                
  Ctrl.MGT.MGT(109).RX_RESETS.reset                   <=  reg_data(893)( 0);                
  Ctrl.MGT.MGT(109).RX_RESETS.reset_pll_and_datapath  <=  reg_data(893)( 1);                
  Ctrl.MGT.MGT(109).RX_RESETS.reset_datapath          <=  reg_data(893)( 2);                
  Ctrl.MGT.MGT(109).RX_RESETS.reset_bufbypass         <=  reg_data(893)( 3);                
  Ctrl.MGT.MGT(110).DRP.wr_addr                       <=  reg_data(898)( 9 downto  0);      
  Ctrl.MGT.MGT(110).DRP.en                            <=  reg_data(898)(12);                
  Ctrl.MGT.MGT(110).DRP.wr_data                       <=  reg_data(899)(31 downto 16);      
  Ctrl.MGT.MGT(110).TX_RESETS.reset                   <=  reg_data(900)( 0);                
  Ctrl.MGT.MGT(110).TX_RESETS.reset_pll_and_datapath  <=  reg_data(900)( 1);                
  Ctrl.MGT.MGT(110).TX_RESETS.reset_datapath          <=  reg_data(900)( 2);                
  Ctrl.MGT.MGT(110).TX_RESETS.reset_bufbypass         <=  reg_data(900)( 3);                
  Ctrl.MGT.MGT(110).RX_RESETS.reset                   <=  reg_data(901)( 0);                
  Ctrl.MGT.MGT(110).RX_RESETS.reset_pll_and_datapath  <=  reg_data(901)( 1);                
  Ctrl.MGT.MGT(110).RX_RESETS.reset_datapath          <=  reg_data(901)( 2);                
  Ctrl.MGT.MGT(110).RX_RESETS.reset_bufbypass         <=  reg_data(901)( 3);                
  Ctrl.MGT.MGT(111).DRP.wr_addr                       <=  reg_data(906)( 9 downto  0);      
  Ctrl.MGT.MGT(111).DRP.en                            <=  reg_data(906)(12);                
  Ctrl.MGT.MGT(111).DRP.wr_data                       <=  reg_data(907)(31 downto 16);      
  Ctrl.MGT.MGT(111).TX_RESETS.reset                   <=  reg_data(908)( 0);                
  Ctrl.MGT.MGT(111).TX_RESETS.reset_pll_and_datapath  <=  reg_data(908)( 1);                
  Ctrl.MGT.MGT(111).TX_RESETS.reset_datapath          <=  reg_data(908)( 2);                
  Ctrl.MGT.MGT(111).TX_RESETS.reset_bufbypass         <=  reg_data(908)( 3);                
  Ctrl.MGT.MGT(111).RX_RESETS.reset                   <=  reg_data(909)( 0);                
  Ctrl.MGT.MGT(111).RX_RESETS.reset_pll_and_datapath  <=  reg_data(909)( 1);                
  Ctrl.MGT.MGT(111).RX_RESETS.reset_datapath          <=  reg_data(909)( 2);                
  Ctrl.MGT.MGT(111).RX_RESETS.reset_bufbypass         <=  reg_data(909)( 3);                
  Ctrl.MGT.MGT(112).DRP.wr_addr                       <=  reg_data(914)( 9 downto  0);      
  Ctrl.MGT.MGT(112).DRP.en                            <=  reg_data(914)(12);                
  Ctrl.MGT.MGT(112).DRP.wr_data                       <=  reg_data(915)(31 downto 16);      
  Ctrl.MGT.MGT(112).TX_RESETS.reset                   <=  reg_data(916)( 0);                
  Ctrl.MGT.MGT(112).TX_RESETS.reset_pll_and_datapath  <=  reg_data(916)( 1);                
  Ctrl.MGT.MGT(112).TX_RESETS.reset_datapath          <=  reg_data(916)( 2);                
  Ctrl.MGT.MGT(112).TX_RESETS.reset_bufbypass         <=  reg_data(916)( 3);                
  Ctrl.MGT.MGT(112).RX_RESETS.reset                   <=  reg_data(917)( 0);                
  Ctrl.MGT.MGT(112).RX_RESETS.reset_pll_and_datapath  <=  reg_data(917)( 1);                
  Ctrl.MGT.MGT(112).RX_RESETS.reset_datapath          <=  reg_data(917)( 2);                
  Ctrl.MGT.MGT(112).RX_RESETS.reset_bufbypass         <=  reg_data(917)( 3);                
  Ctrl.MGT.MGT(113).DRP.wr_addr                       <=  reg_data(922)( 9 downto  0);      
  Ctrl.MGT.MGT(113).DRP.en                            <=  reg_data(922)(12);                
  Ctrl.MGT.MGT(113).DRP.wr_data                       <=  reg_data(923)(31 downto 16);      
  Ctrl.MGT.MGT(113).TX_RESETS.reset                   <=  reg_data(924)( 0);                
  Ctrl.MGT.MGT(113).TX_RESETS.reset_pll_and_datapath  <=  reg_data(924)( 1);                
  Ctrl.MGT.MGT(113).TX_RESETS.reset_datapath          <=  reg_data(924)( 2);                
  Ctrl.MGT.MGT(113).TX_RESETS.reset_bufbypass         <=  reg_data(924)( 3);                
  Ctrl.MGT.MGT(113).RX_RESETS.reset                   <=  reg_data(925)( 0);                
  Ctrl.MGT.MGT(113).RX_RESETS.reset_pll_and_datapath  <=  reg_data(925)( 1);                
  Ctrl.MGT.MGT(113).RX_RESETS.reset_datapath          <=  reg_data(925)( 2);                
  Ctrl.MGT.MGT(113).RX_RESETS.reset_bufbypass         <=  reg_data(925)( 3);                
  Ctrl.MGT.MGT(114).DRP.wr_addr                       <=  reg_data(930)( 9 downto  0);      
  Ctrl.MGT.MGT(114).DRP.en                            <=  reg_data(930)(12);                
  Ctrl.MGT.MGT(114).DRP.wr_data                       <=  reg_data(931)(31 downto 16);      
  Ctrl.MGT.MGT(114).TX_RESETS.reset                   <=  reg_data(932)( 0);                
  Ctrl.MGT.MGT(114).TX_RESETS.reset_pll_and_datapath  <=  reg_data(932)( 1);                
  Ctrl.MGT.MGT(114).TX_RESETS.reset_datapath          <=  reg_data(932)( 2);                
  Ctrl.MGT.MGT(114).TX_RESETS.reset_bufbypass         <=  reg_data(932)( 3);                
  Ctrl.MGT.MGT(114).RX_RESETS.reset                   <=  reg_data(933)( 0);                
  Ctrl.MGT.MGT(114).RX_RESETS.reset_pll_and_datapath  <=  reg_data(933)( 1);                
  Ctrl.MGT.MGT(114).RX_RESETS.reset_datapath          <=  reg_data(933)( 2);                
  Ctrl.MGT.MGT(114).RX_RESETS.reset_bufbypass         <=  reg_data(933)( 3);                
  Ctrl.MGT.MGT(115).DRP.wr_addr                       <=  reg_data(938)( 9 downto  0);      
  Ctrl.MGT.MGT(115).DRP.en                            <=  reg_data(938)(12);                
  Ctrl.MGT.MGT(115).DRP.wr_data                       <=  reg_data(939)(31 downto 16);      
  Ctrl.MGT.MGT(115).TX_RESETS.reset                   <=  reg_data(940)( 0);                
  Ctrl.MGT.MGT(115).TX_RESETS.reset_pll_and_datapath  <=  reg_data(940)( 1);                
  Ctrl.MGT.MGT(115).TX_RESETS.reset_datapath          <=  reg_data(940)( 2);                
  Ctrl.MGT.MGT(115).TX_RESETS.reset_bufbypass         <=  reg_data(940)( 3);                
  Ctrl.MGT.MGT(115).RX_RESETS.reset                   <=  reg_data(941)( 0);                
  Ctrl.MGT.MGT(115).RX_RESETS.reset_pll_and_datapath  <=  reg_data(941)( 1);                
  Ctrl.MGT.MGT(115).RX_RESETS.reset_datapath          <=  reg_data(941)( 2);                
  Ctrl.MGT.MGT(115).RX_RESETS.reset_bufbypass         <=  reg_data(941)( 3);                
  Ctrl.MGT.MGT(116).DRP.wr_addr                       <=  reg_data(946)( 9 downto  0);      
  Ctrl.MGT.MGT(116).DRP.en                            <=  reg_data(946)(12);                
  Ctrl.MGT.MGT(116).DRP.wr_data                       <=  reg_data(947)(31 downto 16);      
  Ctrl.MGT.MGT(116).TX_RESETS.reset                   <=  reg_data(948)( 0);                
  Ctrl.MGT.MGT(116).TX_RESETS.reset_pll_and_datapath  <=  reg_data(948)( 1);                
  Ctrl.MGT.MGT(116).TX_RESETS.reset_datapath          <=  reg_data(948)( 2);                
  Ctrl.MGT.MGT(116).TX_RESETS.reset_bufbypass         <=  reg_data(948)( 3);                
  Ctrl.MGT.MGT(116).RX_RESETS.reset                   <=  reg_data(949)( 0);                
  Ctrl.MGT.MGT(116).RX_RESETS.reset_pll_and_datapath  <=  reg_data(949)( 1);                
  Ctrl.MGT.MGT(116).RX_RESETS.reset_datapath          <=  reg_data(949)( 2);                
  Ctrl.MGT.MGT(116).RX_RESETS.reset_bufbypass         <=  reg_data(949)( 3);                
  Ctrl.MGT.MGT(117).DRP.wr_addr                       <=  reg_data(954)( 9 downto  0);      
  Ctrl.MGT.MGT(117).DRP.en                            <=  reg_data(954)(12);                
  Ctrl.MGT.MGT(117).DRP.wr_data                       <=  reg_data(955)(31 downto 16);      
  Ctrl.MGT.MGT(117).TX_RESETS.reset                   <=  reg_data(956)( 0);                
  Ctrl.MGT.MGT(117).TX_RESETS.reset_pll_and_datapath  <=  reg_data(956)( 1);                
  Ctrl.MGT.MGT(117).TX_RESETS.reset_datapath          <=  reg_data(956)( 2);                
  Ctrl.MGT.MGT(117).TX_RESETS.reset_bufbypass         <=  reg_data(956)( 3);                
  Ctrl.MGT.MGT(117).RX_RESETS.reset                   <=  reg_data(957)( 0);                
  Ctrl.MGT.MGT(117).RX_RESETS.reset_pll_and_datapath  <=  reg_data(957)( 1);                
  Ctrl.MGT.MGT(117).RX_RESETS.reset_datapath          <=  reg_data(957)( 2);                
  Ctrl.MGT.MGT(117).RX_RESETS.reset_bufbypass         <=  reg_data(957)( 3);                
  Ctrl.MGT.MGT(118).DRP.wr_addr                       <=  reg_data(962)( 9 downto  0);      
  Ctrl.MGT.MGT(118).DRP.en                            <=  reg_data(962)(12);                
  Ctrl.MGT.MGT(118).DRP.wr_data                       <=  reg_data(963)(31 downto 16);      
  Ctrl.MGT.MGT(118).TX_RESETS.reset                   <=  reg_data(964)( 0);                
  Ctrl.MGT.MGT(118).TX_RESETS.reset_pll_and_datapath  <=  reg_data(964)( 1);                
  Ctrl.MGT.MGT(118).TX_RESETS.reset_datapath          <=  reg_data(964)( 2);                
  Ctrl.MGT.MGT(118).TX_RESETS.reset_bufbypass         <=  reg_data(964)( 3);                
  Ctrl.MGT.MGT(118).RX_RESETS.reset                   <=  reg_data(965)( 0);                
  Ctrl.MGT.MGT(118).RX_RESETS.reset_pll_and_datapath  <=  reg_data(965)( 1);                
  Ctrl.MGT.MGT(118).RX_RESETS.reset_datapath          <=  reg_data(965)( 2);                
  Ctrl.MGT.MGT(118).RX_RESETS.reset_bufbypass         <=  reg_data(965)( 3);                
  Ctrl.MGT.MGT(119).DRP.wr_addr                       <=  reg_data(970)( 9 downto  0);      
  Ctrl.MGT.MGT(119).DRP.en                            <=  reg_data(970)(12);                
  Ctrl.MGT.MGT(119).DRP.wr_data                       <=  reg_data(971)(31 downto 16);      
  Ctrl.MGT.MGT(119).TX_RESETS.reset                   <=  reg_data(972)( 0);                
  Ctrl.MGT.MGT(119).TX_RESETS.reset_pll_and_datapath  <=  reg_data(972)( 1);                
  Ctrl.MGT.MGT(119).TX_RESETS.reset_datapath          <=  reg_data(972)( 2);                
  Ctrl.MGT.MGT(119).TX_RESETS.reset_bufbypass         <=  reg_data(972)( 3);                
  Ctrl.MGT.MGT(119).RX_RESETS.reset                   <=  reg_data(973)( 0);                
  Ctrl.MGT.MGT(119).RX_RESETS.reset_pll_and_datapath  <=  reg_data(973)( 1);                
  Ctrl.MGT.MGT(119).RX_RESETS.reset_datapath          <=  reg_data(973)( 2);                
  Ctrl.MGT.MGT(119).RX_RESETS.reset_bufbypass         <=  reg_data(973)( 3);                
  Ctrl.MGT.MGT(120).DRP.wr_addr                       <=  reg_data(978)( 9 downto  0);      
  Ctrl.MGT.MGT(120).DRP.en                            <=  reg_data(978)(12);                
  Ctrl.MGT.MGT(120).DRP.wr_data                       <=  reg_data(979)(31 downto 16);      
  Ctrl.MGT.MGT(120).TX_RESETS.reset                   <=  reg_data(980)( 0);                
  Ctrl.MGT.MGT(120).TX_RESETS.reset_pll_and_datapath  <=  reg_data(980)( 1);                
  Ctrl.MGT.MGT(120).TX_RESETS.reset_datapath          <=  reg_data(980)( 2);                
  Ctrl.MGT.MGT(120).TX_RESETS.reset_bufbypass         <=  reg_data(980)( 3);                
  Ctrl.MGT.MGT(120).RX_RESETS.reset                   <=  reg_data(981)( 0);                
  Ctrl.MGT.MGT(120).RX_RESETS.reset_pll_and_datapath  <=  reg_data(981)( 1);                
  Ctrl.MGT.MGT(120).RX_RESETS.reset_datapath          <=  reg_data(981)( 2);                
  Ctrl.MGT.MGT(120).RX_RESETS.reset_bufbypass         <=  reg_data(981)( 3);                
  Ctrl.MGT.MGT(121).DRP.wr_addr                       <=  reg_data(986)( 9 downto  0);      
  Ctrl.MGT.MGT(121).DRP.en                            <=  reg_data(986)(12);                
  Ctrl.MGT.MGT(121).DRP.wr_data                       <=  reg_data(987)(31 downto 16);      
  Ctrl.MGT.MGT(121).TX_RESETS.reset                   <=  reg_data(988)( 0);                
  Ctrl.MGT.MGT(121).TX_RESETS.reset_pll_and_datapath  <=  reg_data(988)( 1);                
  Ctrl.MGT.MGT(121).TX_RESETS.reset_datapath          <=  reg_data(988)( 2);                
  Ctrl.MGT.MGT(121).TX_RESETS.reset_bufbypass         <=  reg_data(988)( 3);                
  Ctrl.MGT.MGT(121).RX_RESETS.reset                   <=  reg_data(989)( 0);                
  Ctrl.MGT.MGT(121).RX_RESETS.reset_pll_and_datapath  <=  reg_data(989)( 1);                
  Ctrl.MGT.MGT(121).RX_RESETS.reset_datapath          <=  reg_data(989)( 2);                
  Ctrl.MGT.MGT(121).RX_RESETS.reset_bufbypass         <=  reg_data(989)( 3);                
  Ctrl.MGT.MGT(122).DRP.wr_addr                       <=  reg_data(994)( 9 downto  0);      
  Ctrl.MGT.MGT(122).DRP.en                            <=  reg_data(994)(12);                
  Ctrl.MGT.MGT(122).DRP.wr_data                       <=  reg_data(995)(31 downto 16);      
  Ctrl.MGT.MGT(122).TX_RESETS.reset                   <=  reg_data(996)( 0);                
  Ctrl.MGT.MGT(122).TX_RESETS.reset_pll_and_datapath  <=  reg_data(996)( 1);                
  Ctrl.MGT.MGT(122).TX_RESETS.reset_datapath          <=  reg_data(996)( 2);                
  Ctrl.MGT.MGT(122).TX_RESETS.reset_bufbypass         <=  reg_data(996)( 3);                
  Ctrl.MGT.MGT(122).RX_RESETS.reset                   <=  reg_data(997)( 0);                
  Ctrl.MGT.MGT(122).RX_RESETS.reset_pll_and_datapath  <=  reg_data(997)( 1);                
  Ctrl.MGT.MGT(122).RX_RESETS.reset_datapath          <=  reg_data(997)( 2);                
  Ctrl.MGT.MGT(122).RX_RESETS.reset_bufbypass         <=  reg_data(997)( 3);                
  Ctrl.MGT.MGT(123).DRP.wr_addr                       <=  reg_data(1002)( 9 downto  0);     
  Ctrl.MGT.MGT(123).DRP.en                            <=  reg_data(1002)(12);               
  Ctrl.MGT.MGT(123).DRP.wr_data                       <=  reg_data(1003)(31 downto 16);     
  Ctrl.MGT.MGT(123).TX_RESETS.reset                   <=  reg_data(1004)( 0);               
  Ctrl.MGT.MGT(123).TX_RESETS.reset_pll_and_datapath  <=  reg_data(1004)( 1);               
  Ctrl.MGT.MGT(123).TX_RESETS.reset_datapath          <=  reg_data(1004)( 2);               
  Ctrl.MGT.MGT(123).TX_RESETS.reset_bufbypass         <=  reg_data(1004)( 3);               
  Ctrl.MGT.MGT(123).RX_RESETS.reset                   <=  reg_data(1005)( 0);               
  Ctrl.MGT.MGT(123).RX_RESETS.reset_pll_and_datapath  <=  reg_data(1005)( 1);               
  Ctrl.MGT.MGT(123).RX_RESETS.reset_datapath          <=  reg_data(1005)( 2);               
  Ctrl.MGT.MGT(123).RX_RESETS.reset_bufbypass         <=  reg_data(1005)( 3);               
  Ctrl.MGT.MGT(124).DRP.wr_addr                       <=  reg_data(1010)( 9 downto  0);     
  Ctrl.MGT.MGT(124).DRP.en                            <=  reg_data(1010)(12);               
  Ctrl.MGT.MGT(124).DRP.wr_data                       <=  reg_data(1011)(31 downto 16);     
  Ctrl.MGT.MGT(124).TX_RESETS.reset                   <=  reg_data(1012)( 0);               
  Ctrl.MGT.MGT(124).TX_RESETS.reset_pll_and_datapath  <=  reg_data(1012)( 1);               
  Ctrl.MGT.MGT(124).TX_RESETS.reset_datapath          <=  reg_data(1012)( 2);               
  Ctrl.MGT.MGT(124).TX_RESETS.reset_bufbypass         <=  reg_data(1012)( 3);               
  Ctrl.MGT.MGT(124).RX_RESETS.reset                   <=  reg_data(1013)( 0);               
  Ctrl.MGT.MGT(124).RX_RESETS.reset_pll_and_datapath  <=  reg_data(1013)( 1);               
  Ctrl.MGT.MGT(124).RX_RESETS.reset_datapath          <=  reg_data(1013)( 2);               
  Ctrl.MGT.MGT(124).RX_RESETS.reset_bufbypass         <=  reg_data(1013)( 3);               
  Ctrl.MGT.MGT(125).DRP.wr_addr                       <=  reg_data(1018)( 9 downto  0);     
  Ctrl.MGT.MGT(125).DRP.en                            <=  reg_data(1018)(12);               
  Ctrl.MGT.MGT(125).DRP.wr_data                       <=  reg_data(1019)(31 downto 16);     
  Ctrl.MGT.MGT(125).TX_RESETS.reset                   <=  reg_data(1020)( 0);               
  Ctrl.MGT.MGT(125).TX_RESETS.reset_pll_and_datapath  <=  reg_data(1020)( 1);               
  Ctrl.MGT.MGT(125).TX_RESETS.reset_datapath          <=  reg_data(1020)( 2);               
  Ctrl.MGT.MGT(125).TX_RESETS.reset_bufbypass         <=  reg_data(1020)( 3);               
  Ctrl.MGT.MGT(125).RX_RESETS.reset                   <=  reg_data(1021)( 0);               
  Ctrl.MGT.MGT(125).RX_RESETS.reset_pll_and_datapath  <=  reg_data(1021)( 1);               
  Ctrl.MGT.MGT(125).RX_RESETS.reset_datapath          <=  reg_data(1021)( 2);               
  Ctrl.MGT.MGT(125).RX_RESETS.reset_bufbypass         <=  reg_data(1021)( 3);               
  Ctrl.MGT.MGT(126).DRP.wr_addr                       <=  reg_data(1026)( 9 downto  0);     
  Ctrl.MGT.MGT(126).DRP.en                            <=  reg_data(1026)(12);               
  Ctrl.MGT.MGT(126).DRP.wr_data                       <=  reg_data(1027)(31 downto 16);     
  Ctrl.MGT.MGT(126).TX_RESETS.reset                   <=  reg_data(1028)( 0);               
  Ctrl.MGT.MGT(126).TX_RESETS.reset_pll_and_datapath  <=  reg_data(1028)( 1);               
  Ctrl.MGT.MGT(126).TX_RESETS.reset_datapath          <=  reg_data(1028)( 2);               
  Ctrl.MGT.MGT(126).TX_RESETS.reset_bufbypass         <=  reg_data(1028)( 3);               
  Ctrl.MGT.MGT(126).RX_RESETS.reset                   <=  reg_data(1029)( 0);               
  Ctrl.MGT.MGT(126).RX_RESETS.reset_pll_and_datapath  <=  reg_data(1029)( 1);               
  Ctrl.MGT.MGT(126).RX_RESETS.reset_datapath          <=  reg_data(1029)( 2);               
  Ctrl.MGT.MGT(126).RX_RESETS.reset_bufbypass         <=  reg_data(1029)( 3);               
  Ctrl.MGT.MGT(127).DRP.wr_addr                       <=  reg_data(1034)( 9 downto  0);     
  Ctrl.MGT.MGT(127).DRP.en                            <=  reg_data(1034)(12);               
  Ctrl.MGT.MGT(127).DRP.wr_data                       <=  reg_data(1035)(31 downto 16);     
  Ctrl.MGT.MGT(127).TX_RESETS.reset                   <=  reg_data(1036)( 0);               
  Ctrl.MGT.MGT(127).TX_RESETS.reset_pll_and_datapath  <=  reg_data(1036)( 1);               
  Ctrl.MGT.MGT(127).TX_RESETS.reset_datapath          <=  reg_data(1036)( 2);               
  Ctrl.MGT.MGT(127).TX_RESETS.reset_bufbypass         <=  reg_data(1036)( 3);               
  Ctrl.MGT.MGT(127).RX_RESETS.reset                   <=  reg_data(1037)( 0);               
  Ctrl.MGT.MGT(127).RX_RESETS.reset_pll_and_datapath  <=  reg_data(1037)( 1);               
  Ctrl.MGT.MGT(127).RX_RESETS.reset_datapath          <=  reg_data(1037)( 2);               
  Ctrl.MGT.MGT(127).RX_RESETS.reset_bufbypass         <=  reg_data(1037)( 3);               


  reg_writes: process (clk_axi, reset_axi_n) is
  begin  -- process reg_writes
    if reset_axi_n = '0' then                 -- asynchronous reset (active low)
      reg_data( 1)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.CLOCKING.RESET_MMCM;
      reg_data(17)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).DRP.wr_en;
      reg_data(18)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).DRP.wr_addr;
      reg_data(18)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).DRP.en;
      reg_data(19)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).DRP.wr_data;
      reg_data(20)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).TX_RESETS.reset;
      reg_data(20)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).TX_RESETS.reset_pll_and_datapath;
      reg_data(20)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).TX_RESETS.reset_datapath;
      reg_data(20)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).TX_RESETS.reset_bufbypass;
      reg_data(21)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).RX_RESETS.reset;
      reg_data(21)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).RX_RESETS.reset_pll_and_datapath;
      reg_data(21)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).RX_RESETS.reset_datapath;
      reg_data(21)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(0).RX_RESETS.reset_bufbypass;
      reg_data(25)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).DRP.wr_en;
      reg_data(26)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).DRP.wr_addr;
      reg_data(26)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).DRP.en;
      reg_data(27)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).DRP.wr_data;
      reg_data(28)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).TX_RESETS.reset;
      reg_data(28)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).TX_RESETS.reset_pll_and_datapath;
      reg_data(28)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).TX_RESETS.reset_datapath;
      reg_data(28)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).TX_RESETS.reset_bufbypass;
      reg_data(29)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).RX_RESETS.reset;
      reg_data(29)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).RX_RESETS.reset_pll_and_datapath;
      reg_data(29)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).RX_RESETS.reset_datapath;
      reg_data(29)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(1).RX_RESETS.reset_bufbypass;
      reg_data(33)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).DRP.wr_en;
      reg_data(34)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).DRP.wr_addr;
      reg_data(34)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).DRP.en;
      reg_data(35)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).DRP.wr_data;
      reg_data(36)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).TX_RESETS.reset;
      reg_data(36)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).TX_RESETS.reset_pll_and_datapath;
      reg_data(36)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).TX_RESETS.reset_datapath;
      reg_data(36)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).TX_RESETS.reset_bufbypass;
      reg_data(37)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).RX_RESETS.reset;
      reg_data(37)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).RX_RESETS.reset_pll_and_datapath;
      reg_data(37)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).RX_RESETS.reset_datapath;
      reg_data(37)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(2).RX_RESETS.reset_bufbypass;
      reg_data(41)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).DRP.wr_en;
      reg_data(42)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).DRP.wr_addr;
      reg_data(42)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).DRP.en;
      reg_data(43)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).DRP.wr_data;
      reg_data(44)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).TX_RESETS.reset;
      reg_data(44)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).TX_RESETS.reset_pll_and_datapath;
      reg_data(44)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).TX_RESETS.reset_datapath;
      reg_data(44)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).TX_RESETS.reset_bufbypass;
      reg_data(45)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).RX_RESETS.reset;
      reg_data(45)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).RX_RESETS.reset_pll_and_datapath;
      reg_data(45)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).RX_RESETS.reset_datapath;
      reg_data(45)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(3).RX_RESETS.reset_bufbypass;
      reg_data(49)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).DRP.wr_en;
      reg_data(50)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).DRP.wr_addr;
      reg_data(50)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).DRP.en;
      reg_data(51)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).DRP.wr_data;
      reg_data(52)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).TX_RESETS.reset;
      reg_data(52)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).TX_RESETS.reset_pll_and_datapath;
      reg_data(52)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).TX_RESETS.reset_datapath;
      reg_data(52)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).TX_RESETS.reset_bufbypass;
      reg_data(53)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).RX_RESETS.reset;
      reg_data(53)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).RX_RESETS.reset_pll_and_datapath;
      reg_data(53)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).RX_RESETS.reset_datapath;
      reg_data(53)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(4).RX_RESETS.reset_bufbypass;
      reg_data(57)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).DRP.wr_en;
      reg_data(58)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).DRP.wr_addr;
      reg_data(58)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).DRP.en;
      reg_data(59)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).DRP.wr_data;
      reg_data(60)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).TX_RESETS.reset;
      reg_data(60)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).TX_RESETS.reset_pll_and_datapath;
      reg_data(60)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).TX_RESETS.reset_datapath;
      reg_data(60)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).TX_RESETS.reset_bufbypass;
      reg_data(61)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).RX_RESETS.reset;
      reg_data(61)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).RX_RESETS.reset_pll_and_datapath;
      reg_data(61)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).RX_RESETS.reset_datapath;
      reg_data(61)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(5).RX_RESETS.reset_bufbypass;
      reg_data(65)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).DRP.wr_en;
      reg_data(66)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).DRP.wr_addr;
      reg_data(66)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).DRP.en;
      reg_data(67)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).DRP.wr_data;
      reg_data(68)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).TX_RESETS.reset;
      reg_data(68)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).TX_RESETS.reset_pll_and_datapath;
      reg_data(68)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).TX_RESETS.reset_datapath;
      reg_data(68)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).TX_RESETS.reset_bufbypass;
      reg_data(69)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).RX_RESETS.reset;
      reg_data(69)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).RX_RESETS.reset_pll_and_datapath;
      reg_data(69)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).RX_RESETS.reset_datapath;
      reg_data(69)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(6).RX_RESETS.reset_bufbypass;
      reg_data(73)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).DRP.wr_en;
      reg_data(74)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).DRP.wr_addr;
      reg_data(74)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).DRP.en;
      reg_data(75)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).DRP.wr_data;
      reg_data(76)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).TX_RESETS.reset;
      reg_data(76)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).TX_RESETS.reset_pll_and_datapath;
      reg_data(76)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).TX_RESETS.reset_datapath;
      reg_data(76)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).TX_RESETS.reset_bufbypass;
      reg_data(77)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).RX_RESETS.reset;
      reg_data(77)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).RX_RESETS.reset_pll_and_datapath;
      reg_data(77)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).RX_RESETS.reset_datapath;
      reg_data(77)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(7).RX_RESETS.reset_bufbypass;
      reg_data(81)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).DRP.wr_en;
      reg_data(82)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).DRP.wr_addr;
      reg_data(82)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).DRP.en;
      reg_data(83)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).DRP.wr_data;
      reg_data(84)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).TX_RESETS.reset;
      reg_data(84)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).TX_RESETS.reset_pll_and_datapath;
      reg_data(84)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).TX_RESETS.reset_datapath;
      reg_data(84)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).TX_RESETS.reset_bufbypass;
      reg_data(85)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).RX_RESETS.reset;
      reg_data(85)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).RX_RESETS.reset_pll_and_datapath;
      reg_data(85)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).RX_RESETS.reset_datapath;
      reg_data(85)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(8).RX_RESETS.reset_bufbypass;
      reg_data(89)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).DRP.wr_en;
      reg_data(90)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).DRP.wr_addr;
      reg_data(90)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).DRP.en;
      reg_data(91)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).DRP.wr_data;
      reg_data(92)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).TX_RESETS.reset;
      reg_data(92)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).TX_RESETS.reset_pll_and_datapath;
      reg_data(92)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).TX_RESETS.reset_datapath;
      reg_data(92)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).TX_RESETS.reset_bufbypass;
      reg_data(93)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).RX_RESETS.reset;
      reg_data(93)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).RX_RESETS.reset_pll_and_datapath;
      reg_data(93)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).RX_RESETS.reset_datapath;
      reg_data(93)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(9).RX_RESETS.reset_bufbypass;
      reg_data(97)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).DRP.wr_en;
      reg_data(98)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).DRP.wr_addr;
      reg_data(98)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).DRP.en;
      reg_data(99)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).DRP.wr_data;
      reg_data(100)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).TX_RESETS.reset;
      reg_data(100)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).TX_RESETS.reset_pll_and_datapath;
      reg_data(100)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).TX_RESETS.reset_datapath;
      reg_data(100)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).TX_RESETS.reset_bufbypass;
      reg_data(101)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).RX_RESETS.reset;
      reg_data(101)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).RX_RESETS.reset_pll_and_datapath;
      reg_data(101)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).RX_RESETS.reset_datapath;
      reg_data(101)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(10).RX_RESETS.reset_bufbypass;
      reg_data(105)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).DRP.wr_en;
      reg_data(106)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).DRP.wr_addr;
      reg_data(106)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).DRP.en;
      reg_data(107)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).DRP.wr_data;
      reg_data(108)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).TX_RESETS.reset;
      reg_data(108)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).TX_RESETS.reset_pll_and_datapath;
      reg_data(108)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).TX_RESETS.reset_datapath;
      reg_data(108)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).TX_RESETS.reset_bufbypass;
      reg_data(109)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).RX_RESETS.reset;
      reg_data(109)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).RX_RESETS.reset_pll_and_datapath;
      reg_data(109)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).RX_RESETS.reset_datapath;
      reg_data(109)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(11).RX_RESETS.reset_bufbypass;
      reg_data(113)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).DRP.wr_en;
      reg_data(114)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).DRP.wr_addr;
      reg_data(114)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).DRP.en;
      reg_data(115)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).DRP.wr_data;
      reg_data(116)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).TX_RESETS.reset;
      reg_data(116)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).TX_RESETS.reset_pll_and_datapath;
      reg_data(116)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).TX_RESETS.reset_datapath;
      reg_data(116)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).TX_RESETS.reset_bufbypass;
      reg_data(117)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).RX_RESETS.reset;
      reg_data(117)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).RX_RESETS.reset_pll_and_datapath;
      reg_data(117)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).RX_RESETS.reset_datapath;
      reg_data(117)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(12).RX_RESETS.reset_bufbypass;
      reg_data(121)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).DRP.wr_en;
      reg_data(122)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).DRP.wr_addr;
      reg_data(122)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).DRP.en;
      reg_data(123)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).DRP.wr_data;
      reg_data(124)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).TX_RESETS.reset;
      reg_data(124)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).TX_RESETS.reset_pll_and_datapath;
      reg_data(124)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).TX_RESETS.reset_datapath;
      reg_data(124)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).TX_RESETS.reset_bufbypass;
      reg_data(125)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).RX_RESETS.reset;
      reg_data(125)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).RX_RESETS.reset_pll_and_datapath;
      reg_data(125)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).RX_RESETS.reset_datapath;
      reg_data(125)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(13).RX_RESETS.reset_bufbypass;
      reg_data(129)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).DRP.wr_en;
      reg_data(130)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).DRP.wr_addr;
      reg_data(130)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).DRP.en;
      reg_data(131)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).DRP.wr_data;
      reg_data(132)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).TX_RESETS.reset;
      reg_data(132)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).TX_RESETS.reset_pll_and_datapath;
      reg_data(132)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).TX_RESETS.reset_datapath;
      reg_data(132)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).TX_RESETS.reset_bufbypass;
      reg_data(133)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).RX_RESETS.reset;
      reg_data(133)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).RX_RESETS.reset_pll_and_datapath;
      reg_data(133)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).RX_RESETS.reset_datapath;
      reg_data(133)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(14).RX_RESETS.reset_bufbypass;
      reg_data(137)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).DRP.wr_en;
      reg_data(138)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).DRP.wr_addr;
      reg_data(138)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).DRP.en;
      reg_data(139)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).DRP.wr_data;
      reg_data(140)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).TX_RESETS.reset;
      reg_data(140)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).TX_RESETS.reset_pll_and_datapath;
      reg_data(140)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).TX_RESETS.reset_datapath;
      reg_data(140)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).TX_RESETS.reset_bufbypass;
      reg_data(141)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).RX_RESETS.reset;
      reg_data(141)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).RX_RESETS.reset_pll_and_datapath;
      reg_data(141)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).RX_RESETS.reset_datapath;
      reg_data(141)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(15).RX_RESETS.reset_bufbypass;
      reg_data(145)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).DRP.wr_en;
      reg_data(146)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).DRP.wr_addr;
      reg_data(146)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).DRP.en;
      reg_data(147)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).DRP.wr_data;
      reg_data(148)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).TX_RESETS.reset;
      reg_data(148)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).TX_RESETS.reset_pll_and_datapath;
      reg_data(148)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).TX_RESETS.reset_datapath;
      reg_data(148)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).TX_RESETS.reset_bufbypass;
      reg_data(149)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).RX_RESETS.reset;
      reg_data(149)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).RX_RESETS.reset_pll_and_datapath;
      reg_data(149)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).RX_RESETS.reset_datapath;
      reg_data(149)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(16).RX_RESETS.reset_bufbypass;
      reg_data(153)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).DRP.wr_en;
      reg_data(154)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).DRP.wr_addr;
      reg_data(154)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).DRP.en;
      reg_data(155)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).DRP.wr_data;
      reg_data(156)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).TX_RESETS.reset;
      reg_data(156)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).TX_RESETS.reset_pll_and_datapath;
      reg_data(156)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).TX_RESETS.reset_datapath;
      reg_data(156)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).TX_RESETS.reset_bufbypass;
      reg_data(157)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).RX_RESETS.reset;
      reg_data(157)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).RX_RESETS.reset_pll_and_datapath;
      reg_data(157)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).RX_RESETS.reset_datapath;
      reg_data(157)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(17).RX_RESETS.reset_bufbypass;
      reg_data(161)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).DRP.wr_en;
      reg_data(162)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).DRP.wr_addr;
      reg_data(162)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).DRP.en;
      reg_data(163)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).DRP.wr_data;
      reg_data(164)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).TX_RESETS.reset;
      reg_data(164)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).TX_RESETS.reset_pll_and_datapath;
      reg_data(164)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).TX_RESETS.reset_datapath;
      reg_data(164)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).TX_RESETS.reset_bufbypass;
      reg_data(165)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).RX_RESETS.reset;
      reg_data(165)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).RX_RESETS.reset_pll_and_datapath;
      reg_data(165)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).RX_RESETS.reset_datapath;
      reg_data(165)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(18).RX_RESETS.reset_bufbypass;
      reg_data(169)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).DRP.wr_en;
      reg_data(170)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).DRP.wr_addr;
      reg_data(170)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).DRP.en;
      reg_data(171)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).DRP.wr_data;
      reg_data(172)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).TX_RESETS.reset;
      reg_data(172)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).TX_RESETS.reset_pll_and_datapath;
      reg_data(172)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).TX_RESETS.reset_datapath;
      reg_data(172)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).TX_RESETS.reset_bufbypass;
      reg_data(173)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).RX_RESETS.reset;
      reg_data(173)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).RX_RESETS.reset_pll_and_datapath;
      reg_data(173)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).RX_RESETS.reset_datapath;
      reg_data(173)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(19).RX_RESETS.reset_bufbypass;
      reg_data(177)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).DRP.wr_en;
      reg_data(178)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).DRP.wr_addr;
      reg_data(178)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).DRP.en;
      reg_data(179)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).DRP.wr_data;
      reg_data(180)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).TX_RESETS.reset;
      reg_data(180)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).TX_RESETS.reset_pll_and_datapath;
      reg_data(180)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).TX_RESETS.reset_datapath;
      reg_data(180)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).TX_RESETS.reset_bufbypass;
      reg_data(181)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).RX_RESETS.reset;
      reg_data(181)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).RX_RESETS.reset_pll_and_datapath;
      reg_data(181)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).RX_RESETS.reset_datapath;
      reg_data(181)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(20).RX_RESETS.reset_bufbypass;
      reg_data(185)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).DRP.wr_en;
      reg_data(186)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).DRP.wr_addr;
      reg_data(186)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).DRP.en;
      reg_data(187)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).DRP.wr_data;
      reg_data(188)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).TX_RESETS.reset;
      reg_data(188)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).TX_RESETS.reset_pll_and_datapath;
      reg_data(188)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).TX_RESETS.reset_datapath;
      reg_data(188)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).TX_RESETS.reset_bufbypass;
      reg_data(189)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).RX_RESETS.reset;
      reg_data(189)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).RX_RESETS.reset_pll_and_datapath;
      reg_data(189)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).RX_RESETS.reset_datapath;
      reg_data(189)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(21).RX_RESETS.reset_bufbypass;
      reg_data(193)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).DRP.wr_en;
      reg_data(194)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).DRP.wr_addr;
      reg_data(194)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).DRP.en;
      reg_data(195)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).DRP.wr_data;
      reg_data(196)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).TX_RESETS.reset;
      reg_data(196)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).TX_RESETS.reset_pll_and_datapath;
      reg_data(196)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).TX_RESETS.reset_datapath;
      reg_data(196)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).TX_RESETS.reset_bufbypass;
      reg_data(197)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).RX_RESETS.reset;
      reg_data(197)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).RX_RESETS.reset_pll_and_datapath;
      reg_data(197)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).RX_RESETS.reset_datapath;
      reg_data(197)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(22).RX_RESETS.reset_bufbypass;
      reg_data(201)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).DRP.wr_en;
      reg_data(202)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).DRP.wr_addr;
      reg_data(202)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).DRP.en;
      reg_data(203)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).DRP.wr_data;
      reg_data(204)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).TX_RESETS.reset;
      reg_data(204)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).TX_RESETS.reset_pll_and_datapath;
      reg_data(204)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).TX_RESETS.reset_datapath;
      reg_data(204)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).TX_RESETS.reset_bufbypass;
      reg_data(205)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).RX_RESETS.reset;
      reg_data(205)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).RX_RESETS.reset_pll_and_datapath;
      reg_data(205)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).RX_RESETS.reset_datapath;
      reg_data(205)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(23).RX_RESETS.reset_bufbypass;
      reg_data(209)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).DRP.wr_en;
      reg_data(210)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).DRP.wr_addr;
      reg_data(210)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).DRP.en;
      reg_data(211)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).DRP.wr_data;
      reg_data(212)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).TX_RESETS.reset;
      reg_data(212)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).TX_RESETS.reset_pll_and_datapath;
      reg_data(212)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).TX_RESETS.reset_datapath;
      reg_data(212)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).TX_RESETS.reset_bufbypass;
      reg_data(213)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).RX_RESETS.reset;
      reg_data(213)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).RX_RESETS.reset_pll_and_datapath;
      reg_data(213)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).RX_RESETS.reset_datapath;
      reg_data(213)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(24).RX_RESETS.reset_bufbypass;
      reg_data(217)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).DRP.wr_en;
      reg_data(218)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).DRP.wr_addr;
      reg_data(218)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).DRP.en;
      reg_data(219)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).DRP.wr_data;
      reg_data(220)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).TX_RESETS.reset;
      reg_data(220)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).TX_RESETS.reset_pll_and_datapath;
      reg_data(220)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).TX_RESETS.reset_datapath;
      reg_data(220)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).TX_RESETS.reset_bufbypass;
      reg_data(221)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).RX_RESETS.reset;
      reg_data(221)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).RX_RESETS.reset_pll_and_datapath;
      reg_data(221)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).RX_RESETS.reset_datapath;
      reg_data(221)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(25).RX_RESETS.reset_bufbypass;
      reg_data(225)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).DRP.wr_en;
      reg_data(226)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).DRP.wr_addr;
      reg_data(226)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).DRP.en;
      reg_data(227)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).DRP.wr_data;
      reg_data(228)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).TX_RESETS.reset;
      reg_data(228)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).TX_RESETS.reset_pll_and_datapath;
      reg_data(228)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).TX_RESETS.reset_datapath;
      reg_data(228)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).TX_RESETS.reset_bufbypass;
      reg_data(229)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).RX_RESETS.reset;
      reg_data(229)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).RX_RESETS.reset_pll_and_datapath;
      reg_data(229)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).RX_RESETS.reset_datapath;
      reg_data(229)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(26).RX_RESETS.reset_bufbypass;
      reg_data(233)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).DRP.wr_en;
      reg_data(234)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).DRP.wr_addr;
      reg_data(234)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).DRP.en;
      reg_data(235)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).DRP.wr_data;
      reg_data(236)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).TX_RESETS.reset;
      reg_data(236)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).TX_RESETS.reset_pll_and_datapath;
      reg_data(236)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).TX_RESETS.reset_datapath;
      reg_data(236)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).TX_RESETS.reset_bufbypass;
      reg_data(237)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).RX_RESETS.reset;
      reg_data(237)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).RX_RESETS.reset_pll_and_datapath;
      reg_data(237)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).RX_RESETS.reset_datapath;
      reg_data(237)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(27).RX_RESETS.reset_bufbypass;
      reg_data(241)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).DRP.wr_en;
      reg_data(242)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).DRP.wr_addr;
      reg_data(242)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).DRP.en;
      reg_data(243)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).DRP.wr_data;
      reg_data(244)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).TX_RESETS.reset;
      reg_data(244)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).TX_RESETS.reset_pll_and_datapath;
      reg_data(244)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).TX_RESETS.reset_datapath;
      reg_data(244)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).TX_RESETS.reset_bufbypass;
      reg_data(245)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).RX_RESETS.reset;
      reg_data(245)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).RX_RESETS.reset_pll_and_datapath;
      reg_data(245)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).RX_RESETS.reset_datapath;
      reg_data(245)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(28).RX_RESETS.reset_bufbypass;
      reg_data(249)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).DRP.wr_en;
      reg_data(250)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).DRP.wr_addr;
      reg_data(250)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).DRP.en;
      reg_data(251)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).DRP.wr_data;
      reg_data(252)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).TX_RESETS.reset;
      reg_data(252)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).TX_RESETS.reset_pll_and_datapath;
      reg_data(252)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).TX_RESETS.reset_datapath;
      reg_data(252)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).TX_RESETS.reset_bufbypass;
      reg_data(253)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).RX_RESETS.reset;
      reg_data(253)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).RX_RESETS.reset_pll_and_datapath;
      reg_data(253)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).RX_RESETS.reset_datapath;
      reg_data(253)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(29).RX_RESETS.reset_bufbypass;
      reg_data(257)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).DRP.wr_en;
      reg_data(258)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).DRP.wr_addr;
      reg_data(258)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).DRP.en;
      reg_data(259)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).DRP.wr_data;
      reg_data(260)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).TX_RESETS.reset;
      reg_data(260)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).TX_RESETS.reset_pll_and_datapath;
      reg_data(260)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).TX_RESETS.reset_datapath;
      reg_data(260)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).TX_RESETS.reset_bufbypass;
      reg_data(261)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).RX_RESETS.reset;
      reg_data(261)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).RX_RESETS.reset_pll_and_datapath;
      reg_data(261)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).RX_RESETS.reset_datapath;
      reg_data(261)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(30).RX_RESETS.reset_bufbypass;
      reg_data(265)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).DRP.wr_en;
      reg_data(266)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).DRP.wr_addr;
      reg_data(266)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).DRP.en;
      reg_data(267)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).DRP.wr_data;
      reg_data(268)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).TX_RESETS.reset;
      reg_data(268)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).TX_RESETS.reset_pll_and_datapath;
      reg_data(268)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).TX_RESETS.reset_datapath;
      reg_data(268)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).TX_RESETS.reset_bufbypass;
      reg_data(269)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).RX_RESETS.reset;
      reg_data(269)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).RX_RESETS.reset_pll_and_datapath;
      reg_data(269)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).RX_RESETS.reset_datapath;
      reg_data(269)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(31).RX_RESETS.reset_bufbypass;
      reg_data(273)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).DRP.wr_en;
      reg_data(274)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).DRP.wr_addr;
      reg_data(274)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).DRP.en;
      reg_data(275)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).DRP.wr_data;
      reg_data(276)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).TX_RESETS.reset;
      reg_data(276)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).TX_RESETS.reset_pll_and_datapath;
      reg_data(276)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).TX_RESETS.reset_datapath;
      reg_data(276)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).TX_RESETS.reset_bufbypass;
      reg_data(277)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).RX_RESETS.reset;
      reg_data(277)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).RX_RESETS.reset_pll_and_datapath;
      reg_data(277)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).RX_RESETS.reset_datapath;
      reg_data(277)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(32).RX_RESETS.reset_bufbypass;
      reg_data(281)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).DRP.wr_en;
      reg_data(282)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).DRP.wr_addr;
      reg_data(282)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).DRP.en;
      reg_data(283)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).DRP.wr_data;
      reg_data(284)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).TX_RESETS.reset;
      reg_data(284)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).TX_RESETS.reset_pll_and_datapath;
      reg_data(284)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).TX_RESETS.reset_datapath;
      reg_data(284)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).TX_RESETS.reset_bufbypass;
      reg_data(285)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).RX_RESETS.reset;
      reg_data(285)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).RX_RESETS.reset_pll_and_datapath;
      reg_data(285)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).RX_RESETS.reset_datapath;
      reg_data(285)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(33).RX_RESETS.reset_bufbypass;
      reg_data(289)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).DRP.wr_en;
      reg_data(290)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).DRP.wr_addr;
      reg_data(290)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).DRP.en;
      reg_data(291)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).DRP.wr_data;
      reg_data(292)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).TX_RESETS.reset;
      reg_data(292)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).TX_RESETS.reset_pll_and_datapath;
      reg_data(292)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).TX_RESETS.reset_datapath;
      reg_data(292)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).TX_RESETS.reset_bufbypass;
      reg_data(293)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).RX_RESETS.reset;
      reg_data(293)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).RX_RESETS.reset_pll_and_datapath;
      reg_data(293)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).RX_RESETS.reset_datapath;
      reg_data(293)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(34).RX_RESETS.reset_bufbypass;
      reg_data(297)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).DRP.wr_en;
      reg_data(298)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).DRP.wr_addr;
      reg_data(298)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).DRP.en;
      reg_data(299)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).DRP.wr_data;
      reg_data(300)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).TX_RESETS.reset;
      reg_data(300)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).TX_RESETS.reset_pll_and_datapath;
      reg_data(300)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).TX_RESETS.reset_datapath;
      reg_data(300)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).TX_RESETS.reset_bufbypass;
      reg_data(301)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).RX_RESETS.reset;
      reg_data(301)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).RX_RESETS.reset_pll_and_datapath;
      reg_data(301)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).RX_RESETS.reset_datapath;
      reg_data(301)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(35).RX_RESETS.reset_bufbypass;
      reg_data(305)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).DRP.wr_en;
      reg_data(306)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).DRP.wr_addr;
      reg_data(306)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).DRP.en;
      reg_data(307)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).DRP.wr_data;
      reg_data(308)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).TX_RESETS.reset;
      reg_data(308)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).TX_RESETS.reset_pll_and_datapath;
      reg_data(308)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).TX_RESETS.reset_datapath;
      reg_data(308)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).TX_RESETS.reset_bufbypass;
      reg_data(309)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).RX_RESETS.reset;
      reg_data(309)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).RX_RESETS.reset_pll_and_datapath;
      reg_data(309)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).RX_RESETS.reset_datapath;
      reg_data(309)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(36).RX_RESETS.reset_bufbypass;
      reg_data(313)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).DRP.wr_en;
      reg_data(314)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).DRP.wr_addr;
      reg_data(314)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).DRP.en;
      reg_data(315)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).DRP.wr_data;
      reg_data(316)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).TX_RESETS.reset;
      reg_data(316)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).TX_RESETS.reset_pll_and_datapath;
      reg_data(316)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).TX_RESETS.reset_datapath;
      reg_data(316)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).TX_RESETS.reset_bufbypass;
      reg_data(317)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).RX_RESETS.reset;
      reg_data(317)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).RX_RESETS.reset_pll_and_datapath;
      reg_data(317)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).RX_RESETS.reset_datapath;
      reg_data(317)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(37).RX_RESETS.reset_bufbypass;
      reg_data(321)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).DRP.wr_en;
      reg_data(322)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).DRP.wr_addr;
      reg_data(322)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).DRP.en;
      reg_data(323)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).DRP.wr_data;
      reg_data(324)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).TX_RESETS.reset;
      reg_data(324)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).TX_RESETS.reset_pll_and_datapath;
      reg_data(324)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).TX_RESETS.reset_datapath;
      reg_data(324)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).TX_RESETS.reset_bufbypass;
      reg_data(325)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).RX_RESETS.reset;
      reg_data(325)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).RX_RESETS.reset_pll_and_datapath;
      reg_data(325)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).RX_RESETS.reset_datapath;
      reg_data(325)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(38).RX_RESETS.reset_bufbypass;
      reg_data(329)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).DRP.wr_en;
      reg_data(330)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).DRP.wr_addr;
      reg_data(330)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).DRP.en;
      reg_data(331)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).DRP.wr_data;
      reg_data(332)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).TX_RESETS.reset;
      reg_data(332)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).TX_RESETS.reset_pll_and_datapath;
      reg_data(332)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).TX_RESETS.reset_datapath;
      reg_data(332)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).TX_RESETS.reset_bufbypass;
      reg_data(333)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).RX_RESETS.reset;
      reg_data(333)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).RX_RESETS.reset_pll_and_datapath;
      reg_data(333)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).RX_RESETS.reset_datapath;
      reg_data(333)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(39).RX_RESETS.reset_bufbypass;
      reg_data(337)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).DRP.wr_en;
      reg_data(338)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).DRP.wr_addr;
      reg_data(338)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).DRP.en;
      reg_data(339)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).DRP.wr_data;
      reg_data(340)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).TX_RESETS.reset;
      reg_data(340)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).TX_RESETS.reset_pll_and_datapath;
      reg_data(340)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).TX_RESETS.reset_datapath;
      reg_data(340)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).TX_RESETS.reset_bufbypass;
      reg_data(341)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).RX_RESETS.reset;
      reg_data(341)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).RX_RESETS.reset_pll_and_datapath;
      reg_data(341)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).RX_RESETS.reset_datapath;
      reg_data(341)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(40).RX_RESETS.reset_bufbypass;
      reg_data(345)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).DRP.wr_en;
      reg_data(346)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).DRP.wr_addr;
      reg_data(346)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).DRP.en;
      reg_data(347)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).DRP.wr_data;
      reg_data(348)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).TX_RESETS.reset;
      reg_data(348)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).TX_RESETS.reset_pll_and_datapath;
      reg_data(348)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).TX_RESETS.reset_datapath;
      reg_data(348)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).TX_RESETS.reset_bufbypass;
      reg_data(349)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).RX_RESETS.reset;
      reg_data(349)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).RX_RESETS.reset_pll_and_datapath;
      reg_data(349)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).RX_RESETS.reset_datapath;
      reg_data(349)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(41).RX_RESETS.reset_bufbypass;
      reg_data(353)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).DRP.wr_en;
      reg_data(354)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).DRP.wr_addr;
      reg_data(354)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).DRP.en;
      reg_data(355)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).DRP.wr_data;
      reg_data(356)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).TX_RESETS.reset;
      reg_data(356)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).TX_RESETS.reset_pll_and_datapath;
      reg_data(356)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).TX_RESETS.reset_datapath;
      reg_data(356)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).TX_RESETS.reset_bufbypass;
      reg_data(357)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).RX_RESETS.reset;
      reg_data(357)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).RX_RESETS.reset_pll_and_datapath;
      reg_data(357)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).RX_RESETS.reset_datapath;
      reg_data(357)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(42).RX_RESETS.reset_bufbypass;
      reg_data(361)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).DRP.wr_en;
      reg_data(362)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).DRP.wr_addr;
      reg_data(362)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).DRP.en;
      reg_data(363)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).DRP.wr_data;
      reg_data(364)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).TX_RESETS.reset;
      reg_data(364)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).TX_RESETS.reset_pll_and_datapath;
      reg_data(364)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).TX_RESETS.reset_datapath;
      reg_data(364)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).TX_RESETS.reset_bufbypass;
      reg_data(365)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).RX_RESETS.reset;
      reg_data(365)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).RX_RESETS.reset_pll_and_datapath;
      reg_data(365)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).RX_RESETS.reset_datapath;
      reg_data(365)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(43).RX_RESETS.reset_bufbypass;
      reg_data(369)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).DRP.wr_en;
      reg_data(370)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).DRP.wr_addr;
      reg_data(370)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).DRP.en;
      reg_data(371)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).DRP.wr_data;
      reg_data(372)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).TX_RESETS.reset;
      reg_data(372)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).TX_RESETS.reset_pll_and_datapath;
      reg_data(372)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).TX_RESETS.reset_datapath;
      reg_data(372)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).TX_RESETS.reset_bufbypass;
      reg_data(373)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).RX_RESETS.reset;
      reg_data(373)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).RX_RESETS.reset_pll_and_datapath;
      reg_data(373)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).RX_RESETS.reset_datapath;
      reg_data(373)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(44).RX_RESETS.reset_bufbypass;
      reg_data(377)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).DRP.wr_en;
      reg_data(378)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).DRP.wr_addr;
      reg_data(378)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).DRP.en;
      reg_data(379)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).DRP.wr_data;
      reg_data(380)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).TX_RESETS.reset;
      reg_data(380)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).TX_RESETS.reset_pll_and_datapath;
      reg_data(380)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).TX_RESETS.reset_datapath;
      reg_data(380)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).TX_RESETS.reset_bufbypass;
      reg_data(381)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).RX_RESETS.reset;
      reg_data(381)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).RX_RESETS.reset_pll_and_datapath;
      reg_data(381)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).RX_RESETS.reset_datapath;
      reg_data(381)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(45).RX_RESETS.reset_bufbypass;
      reg_data(385)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).DRP.wr_en;
      reg_data(386)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).DRP.wr_addr;
      reg_data(386)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).DRP.en;
      reg_data(387)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).DRP.wr_data;
      reg_data(388)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).TX_RESETS.reset;
      reg_data(388)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).TX_RESETS.reset_pll_and_datapath;
      reg_data(388)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).TX_RESETS.reset_datapath;
      reg_data(388)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).TX_RESETS.reset_bufbypass;
      reg_data(389)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).RX_RESETS.reset;
      reg_data(389)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).RX_RESETS.reset_pll_and_datapath;
      reg_data(389)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).RX_RESETS.reset_datapath;
      reg_data(389)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(46).RX_RESETS.reset_bufbypass;
      reg_data(393)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).DRP.wr_en;
      reg_data(394)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).DRP.wr_addr;
      reg_data(394)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).DRP.en;
      reg_data(395)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).DRP.wr_data;
      reg_data(396)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).TX_RESETS.reset;
      reg_data(396)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).TX_RESETS.reset_pll_and_datapath;
      reg_data(396)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).TX_RESETS.reset_datapath;
      reg_data(396)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).TX_RESETS.reset_bufbypass;
      reg_data(397)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).RX_RESETS.reset;
      reg_data(397)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).RX_RESETS.reset_pll_and_datapath;
      reg_data(397)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).RX_RESETS.reset_datapath;
      reg_data(397)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(47).RX_RESETS.reset_bufbypass;
      reg_data(401)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).DRP.wr_en;
      reg_data(402)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).DRP.wr_addr;
      reg_data(402)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).DRP.en;
      reg_data(403)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).DRP.wr_data;
      reg_data(404)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).TX_RESETS.reset;
      reg_data(404)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).TX_RESETS.reset_pll_and_datapath;
      reg_data(404)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).TX_RESETS.reset_datapath;
      reg_data(404)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).TX_RESETS.reset_bufbypass;
      reg_data(405)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).RX_RESETS.reset;
      reg_data(405)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).RX_RESETS.reset_pll_and_datapath;
      reg_data(405)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).RX_RESETS.reset_datapath;
      reg_data(405)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(48).RX_RESETS.reset_bufbypass;
      reg_data(409)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).DRP.wr_en;
      reg_data(410)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).DRP.wr_addr;
      reg_data(410)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).DRP.en;
      reg_data(411)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).DRP.wr_data;
      reg_data(412)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).TX_RESETS.reset;
      reg_data(412)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).TX_RESETS.reset_pll_and_datapath;
      reg_data(412)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).TX_RESETS.reset_datapath;
      reg_data(412)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).TX_RESETS.reset_bufbypass;
      reg_data(413)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).RX_RESETS.reset;
      reg_data(413)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).RX_RESETS.reset_pll_and_datapath;
      reg_data(413)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).RX_RESETS.reset_datapath;
      reg_data(413)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(49).RX_RESETS.reset_bufbypass;
      reg_data(417)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).DRP.wr_en;
      reg_data(418)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).DRP.wr_addr;
      reg_data(418)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).DRP.en;
      reg_data(419)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).DRP.wr_data;
      reg_data(420)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).TX_RESETS.reset;
      reg_data(420)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).TX_RESETS.reset_pll_and_datapath;
      reg_data(420)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).TX_RESETS.reset_datapath;
      reg_data(420)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).TX_RESETS.reset_bufbypass;
      reg_data(421)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).RX_RESETS.reset;
      reg_data(421)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).RX_RESETS.reset_pll_and_datapath;
      reg_data(421)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).RX_RESETS.reset_datapath;
      reg_data(421)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(50).RX_RESETS.reset_bufbypass;
      reg_data(425)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).DRP.wr_en;
      reg_data(426)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).DRP.wr_addr;
      reg_data(426)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).DRP.en;
      reg_data(427)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).DRP.wr_data;
      reg_data(428)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).TX_RESETS.reset;
      reg_data(428)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).TX_RESETS.reset_pll_and_datapath;
      reg_data(428)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).TX_RESETS.reset_datapath;
      reg_data(428)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).TX_RESETS.reset_bufbypass;
      reg_data(429)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).RX_RESETS.reset;
      reg_data(429)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).RX_RESETS.reset_pll_and_datapath;
      reg_data(429)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).RX_RESETS.reset_datapath;
      reg_data(429)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(51).RX_RESETS.reset_bufbypass;
      reg_data(433)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).DRP.wr_en;
      reg_data(434)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).DRP.wr_addr;
      reg_data(434)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).DRP.en;
      reg_data(435)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).DRP.wr_data;
      reg_data(436)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).TX_RESETS.reset;
      reg_data(436)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).TX_RESETS.reset_pll_and_datapath;
      reg_data(436)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).TX_RESETS.reset_datapath;
      reg_data(436)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).TX_RESETS.reset_bufbypass;
      reg_data(437)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).RX_RESETS.reset;
      reg_data(437)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).RX_RESETS.reset_pll_and_datapath;
      reg_data(437)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).RX_RESETS.reset_datapath;
      reg_data(437)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(52).RX_RESETS.reset_bufbypass;
      reg_data(441)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).DRP.wr_en;
      reg_data(442)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).DRP.wr_addr;
      reg_data(442)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).DRP.en;
      reg_data(443)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).DRP.wr_data;
      reg_data(444)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).TX_RESETS.reset;
      reg_data(444)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).TX_RESETS.reset_pll_and_datapath;
      reg_data(444)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).TX_RESETS.reset_datapath;
      reg_data(444)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).TX_RESETS.reset_bufbypass;
      reg_data(445)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).RX_RESETS.reset;
      reg_data(445)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).RX_RESETS.reset_pll_and_datapath;
      reg_data(445)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).RX_RESETS.reset_datapath;
      reg_data(445)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(53).RX_RESETS.reset_bufbypass;
      reg_data(449)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).DRP.wr_en;
      reg_data(450)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).DRP.wr_addr;
      reg_data(450)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).DRP.en;
      reg_data(451)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).DRP.wr_data;
      reg_data(452)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).TX_RESETS.reset;
      reg_data(452)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).TX_RESETS.reset_pll_and_datapath;
      reg_data(452)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).TX_RESETS.reset_datapath;
      reg_data(452)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).TX_RESETS.reset_bufbypass;
      reg_data(453)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).RX_RESETS.reset;
      reg_data(453)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).RX_RESETS.reset_pll_and_datapath;
      reg_data(453)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).RX_RESETS.reset_datapath;
      reg_data(453)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(54).RX_RESETS.reset_bufbypass;
      reg_data(457)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).DRP.wr_en;
      reg_data(458)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).DRP.wr_addr;
      reg_data(458)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).DRP.en;
      reg_data(459)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).DRP.wr_data;
      reg_data(460)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).TX_RESETS.reset;
      reg_data(460)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).TX_RESETS.reset_pll_and_datapath;
      reg_data(460)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).TX_RESETS.reset_datapath;
      reg_data(460)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).TX_RESETS.reset_bufbypass;
      reg_data(461)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).RX_RESETS.reset;
      reg_data(461)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).RX_RESETS.reset_pll_and_datapath;
      reg_data(461)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).RX_RESETS.reset_datapath;
      reg_data(461)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(55).RX_RESETS.reset_bufbypass;
      reg_data(465)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).DRP.wr_en;
      reg_data(466)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).DRP.wr_addr;
      reg_data(466)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).DRP.en;
      reg_data(467)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).DRP.wr_data;
      reg_data(468)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).TX_RESETS.reset;
      reg_data(468)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).TX_RESETS.reset_pll_and_datapath;
      reg_data(468)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).TX_RESETS.reset_datapath;
      reg_data(468)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).TX_RESETS.reset_bufbypass;
      reg_data(469)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).RX_RESETS.reset;
      reg_data(469)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).RX_RESETS.reset_pll_and_datapath;
      reg_data(469)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).RX_RESETS.reset_datapath;
      reg_data(469)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(56).RX_RESETS.reset_bufbypass;
      reg_data(473)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).DRP.wr_en;
      reg_data(474)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).DRP.wr_addr;
      reg_data(474)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).DRP.en;
      reg_data(475)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).DRP.wr_data;
      reg_data(476)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).TX_RESETS.reset;
      reg_data(476)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).TX_RESETS.reset_pll_and_datapath;
      reg_data(476)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).TX_RESETS.reset_datapath;
      reg_data(476)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).TX_RESETS.reset_bufbypass;
      reg_data(477)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).RX_RESETS.reset;
      reg_data(477)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).RX_RESETS.reset_pll_and_datapath;
      reg_data(477)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).RX_RESETS.reset_datapath;
      reg_data(477)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(57).RX_RESETS.reset_bufbypass;
      reg_data(481)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).DRP.wr_en;
      reg_data(482)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).DRP.wr_addr;
      reg_data(482)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).DRP.en;
      reg_data(483)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).DRP.wr_data;
      reg_data(484)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).TX_RESETS.reset;
      reg_data(484)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).TX_RESETS.reset_pll_and_datapath;
      reg_data(484)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).TX_RESETS.reset_datapath;
      reg_data(484)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).TX_RESETS.reset_bufbypass;
      reg_data(485)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).RX_RESETS.reset;
      reg_data(485)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).RX_RESETS.reset_pll_and_datapath;
      reg_data(485)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).RX_RESETS.reset_datapath;
      reg_data(485)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(58).RX_RESETS.reset_bufbypass;
      reg_data(489)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).DRP.wr_en;
      reg_data(490)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).DRP.wr_addr;
      reg_data(490)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).DRP.en;
      reg_data(491)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).DRP.wr_data;
      reg_data(492)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).TX_RESETS.reset;
      reg_data(492)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).TX_RESETS.reset_pll_and_datapath;
      reg_data(492)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).TX_RESETS.reset_datapath;
      reg_data(492)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).TX_RESETS.reset_bufbypass;
      reg_data(493)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).RX_RESETS.reset;
      reg_data(493)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).RX_RESETS.reset_pll_and_datapath;
      reg_data(493)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).RX_RESETS.reset_datapath;
      reg_data(493)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(59).RX_RESETS.reset_bufbypass;
      reg_data(497)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).DRP.wr_en;
      reg_data(498)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).DRP.wr_addr;
      reg_data(498)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).DRP.en;
      reg_data(499)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).DRP.wr_data;
      reg_data(500)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).TX_RESETS.reset;
      reg_data(500)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).TX_RESETS.reset_pll_and_datapath;
      reg_data(500)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).TX_RESETS.reset_datapath;
      reg_data(500)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).TX_RESETS.reset_bufbypass;
      reg_data(501)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).RX_RESETS.reset;
      reg_data(501)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).RX_RESETS.reset_pll_and_datapath;
      reg_data(501)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).RX_RESETS.reset_datapath;
      reg_data(501)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(60).RX_RESETS.reset_bufbypass;
      reg_data(505)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).DRP.wr_en;
      reg_data(506)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).DRP.wr_addr;
      reg_data(506)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).DRP.en;
      reg_data(507)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).DRP.wr_data;
      reg_data(508)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).TX_RESETS.reset;
      reg_data(508)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).TX_RESETS.reset_pll_and_datapath;
      reg_data(508)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).TX_RESETS.reset_datapath;
      reg_data(508)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).TX_RESETS.reset_bufbypass;
      reg_data(509)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).RX_RESETS.reset;
      reg_data(509)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).RX_RESETS.reset_pll_and_datapath;
      reg_data(509)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).RX_RESETS.reset_datapath;
      reg_data(509)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(61).RX_RESETS.reset_bufbypass;
      reg_data(513)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).DRP.wr_en;
      reg_data(514)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).DRP.wr_addr;
      reg_data(514)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).DRP.en;
      reg_data(515)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).DRP.wr_data;
      reg_data(516)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).TX_RESETS.reset;
      reg_data(516)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).TX_RESETS.reset_pll_and_datapath;
      reg_data(516)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).TX_RESETS.reset_datapath;
      reg_data(516)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).TX_RESETS.reset_bufbypass;
      reg_data(517)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).RX_RESETS.reset;
      reg_data(517)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).RX_RESETS.reset_pll_and_datapath;
      reg_data(517)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).RX_RESETS.reset_datapath;
      reg_data(517)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(62).RX_RESETS.reset_bufbypass;
      reg_data(521)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).DRP.wr_en;
      reg_data(522)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).DRP.wr_addr;
      reg_data(522)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).DRP.en;
      reg_data(523)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).DRP.wr_data;
      reg_data(524)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).TX_RESETS.reset;
      reg_data(524)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).TX_RESETS.reset_pll_and_datapath;
      reg_data(524)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).TX_RESETS.reset_datapath;
      reg_data(524)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).TX_RESETS.reset_bufbypass;
      reg_data(525)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).RX_RESETS.reset;
      reg_data(525)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).RX_RESETS.reset_pll_and_datapath;
      reg_data(525)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).RX_RESETS.reset_datapath;
      reg_data(525)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(63).RX_RESETS.reset_bufbypass;
      reg_data(529)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).DRP.wr_en;
      reg_data(530)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).DRP.wr_addr;
      reg_data(530)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).DRP.en;
      reg_data(531)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).DRP.wr_data;
      reg_data(532)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).TX_RESETS.reset;
      reg_data(532)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).TX_RESETS.reset_pll_and_datapath;
      reg_data(532)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).TX_RESETS.reset_datapath;
      reg_data(532)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).TX_RESETS.reset_bufbypass;
      reg_data(533)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).RX_RESETS.reset;
      reg_data(533)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).RX_RESETS.reset_pll_and_datapath;
      reg_data(533)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).RX_RESETS.reset_datapath;
      reg_data(533)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(64).RX_RESETS.reset_bufbypass;
      reg_data(537)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).DRP.wr_en;
      reg_data(538)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).DRP.wr_addr;
      reg_data(538)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).DRP.en;
      reg_data(539)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).DRP.wr_data;
      reg_data(540)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).TX_RESETS.reset;
      reg_data(540)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).TX_RESETS.reset_pll_and_datapath;
      reg_data(540)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).TX_RESETS.reset_datapath;
      reg_data(540)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).TX_RESETS.reset_bufbypass;
      reg_data(541)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).RX_RESETS.reset;
      reg_data(541)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).RX_RESETS.reset_pll_and_datapath;
      reg_data(541)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).RX_RESETS.reset_datapath;
      reg_data(541)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(65).RX_RESETS.reset_bufbypass;
      reg_data(545)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).DRP.wr_en;
      reg_data(546)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).DRP.wr_addr;
      reg_data(546)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).DRP.en;
      reg_data(547)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).DRP.wr_data;
      reg_data(548)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).TX_RESETS.reset;
      reg_data(548)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).TX_RESETS.reset_pll_and_datapath;
      reg_data(548)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).TX_RESETS.reset_datapath;
      reg_data(548)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).TX_RESETS.reset_bufbypass;
      reg_data(549)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).RX_RESETS.reset;
      reg_data(549)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).RX_RESETS.reset_pll_and_datapath;
      reg_data(549)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).RX_RESETS.reset_datapath;
      reg_data(549)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(66).RX_RESETS.reset_bufbypass;
      reg_data(553)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).DRP.wr_en;
      reg_data(554)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).DRP.wr_addr;
      reg_data(554)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).DRP.en;
      reg_data(555)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).DRP.wr_data;
      reg_data(556)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).TX_RESETS.reset;
      reg_data(556)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).TX_RESETS.reset_pll_and_datapath;
      reg_data(556)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).TX_RESETS.reset_datapath;
      reg_data(556)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).TX_RESETS.reset_bufbypass;
      reg_data(557)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).RX_RESETS.reset;
      reg_data(557)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).RX_RESETS.reset_pll_and_datapath;
      reg_data(557)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).RX_RESETS.reset_datapath;
      reg_data(557)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(67).RX_RESETS.reset_bufbypass;
      reg_data(561)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).DRP.wr_en;
      reg_data(562)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).DRP.wr_addr;
      reg_data(562)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).DRP.en;
      reg_data(563)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).DRP.wr_data;
      reg_data(564)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).TX_RESETS.reset;
      reg_data(564)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).TX_RESETS.reset_pll_and_datapath;
      reg_data(564)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).TX_RESETS.reset_datapath;
      reg_data(564)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).TX_RESETS.reset_bufbypass;
      reg_data(565)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).RX_RESETS.reset;
      reg_data(565)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).RX_RESETS.reset_pll_and_datapath;
      reg_data(565)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).RX_RESETS.reset_datapath;
      reg_data(565)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(68).RX_RESETS.reset_bufbypass;
      reg_data(569)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).DRP.wr_en;
      reg_data(570)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).DRP.wr_addr;
      reg_data(570)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).DRP.en;
      reg_data(571)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).DRP.wr_data;
      reg_data(572)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).TX_RESETS.reset;
      reg_data(572)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).TX_RESETS.reset_pll_and_datapath;
      reg_data(572)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).TX_RESETS.reset_datapath;
      reg_data(572)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).TX_RESETS.reset_bufbypass;
      reg_data(573)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).RX_RESETS.reset;
      reg_data(573)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).RX_RESETS.reset_pll_and_datapath;
      reg_data(573)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).RX_RESETS.reset_datapath;
      reg_data(573)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(69).RX_RESETS.reset_bufbypass;
      reg_data(577)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).DRP.wr_en;
      reg_data(578)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).DRP.wr_addr;
      reg_data(578)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).DRP.en;
      reg_data(579)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).DRP.wr_data;
      reg_data(580)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).TX_RESETS.reset;
      reg_data(580)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).TX_RESETS.reset_pll_and_datapath;
      reg_data(580)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).TX_RESETS.reset_datapath;
      reg_data(580)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).TX_RESETS.reset_bufbypass;
      reg_data(581)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).RX_RESETS.reset;
      reg_data(581)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).RX_RESETS.reset_pll_and_datapath;
      reg_data(581)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).RX_RESETS.reset_datapath;
      reg_data(581)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(70).RX_RESETS.reset_bufbypass;
      reg_data(585)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).DRP.wr_en;
      reg_data(586)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).DRP.wr_addr;
      reg_data(586)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).DRP.en;
      reg_data(587)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).DRP.wr_data;
      reg_data(588)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).TX_RESETS.reset;
      reg_data(588)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).TX_RESETS.reset_pll_and_datapath;
      reg_data(588)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).TX_RESETS.reset_datapath;
      reg_data(588)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).TX_RESETS.reset_bufbypass;
      reg_data(589)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).RX_RESETS.reset;
      reg_data(589)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).RX_RESETS.reset_pll_and_datapath;
      reg_data(589)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).RX_RESETS.reset_datapath;
      reg_data(589)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(71).RX_RESETS.reset_bufbypass;
      reg_data(593)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).DRP.wr_en;
      reg_data(594)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).DRP.wr_addr;
      reg_data(594)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).DRP.en;
      reg_data(595)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).DRP.wr_data;
      reg_data(596)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).TX_RESETS.reset;
      reg_data(596)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).TX_RESETS.reset_pll_and_datapath;
      reg_data(596)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).TX_RESETS.reset_datapath;
      reg_data(596)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).TX_RESETS.reset_bufbypass;
      reg_data(597)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).RX_RESETS.reset;
      reg_data(597)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).RX_RESETS.reset_pll_and_datapath;
      reg_data(597)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).RX_RESETS.reset_datapath;
      reg_data(597)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(72).RX_RESETS.reset_bufbypass;
      reg_data(601)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).DRP.wr_en;
      reg_data(602)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).DRP.wr_addr;
      reg_data(602)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).DRP.en;
      reg_data(603)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).DRP.wr_data;
      reg_data(604)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).TX_RESETS.reset;
      reg_data(604)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).TX_RESETS.reset_pll_and_datapath;
      reg_data(604)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).TX_RESETS.reset_datapath;
      reg_data(604)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).TX_RESETS.reset_bufbypass;
      reg_data(605)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).RX_RESETS.reset;
      reg_data(605)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).RX_RESETS.reset_pll_and_datapath;
      reg_data(605)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).RX_RESETS.reset_datapath;
      reg_data(605)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(73).RX_RESETS.reset_bufbypass;
      reg_data(609)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).DRP.wr_en;
      reg_data(610)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).DRP.wr_addr;
      reg_data(610)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).DRP.en;
      reg_data(611)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).DRP.wr_data;
      reg_data(612)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).TX_RESETS.reset;
      reg_data(612)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).TX_RESETS.reset_pll_and_datapath;
      reg_data(612)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).TX_RESETS.reset_datapath;
      reg_data(612)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).TX_RESETS.reset_bufbypass;
      reg_data(613)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).RX_RESETS.reset;
      reg_data(613)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).RX_RESETS.reset_pll_and_datapath;
      reg_data(613)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).RX_RESETS.reset_datapath;
      reg_data(613)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(74).RX_RESETS.reset_bufbypass;
      reg_data(617)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).DRP.wr_en;
      reg_data(618)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).DRP.wr_addr;
      reg_data(618)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).DRP.en;
      reg_data(619)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).DRP.wr_data;
      reg_data(620)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).TX_RESETS.reset;
      reg_data(620)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).TX_RESETS.reset_pll_and_datapath;
      reg_data(620)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).TX_RESETS.reset_datapath;
      reg_data(620)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).TX_RESETS.reset_bufbypass;
      reg_data(621)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).RX_RESETS.reset;
      reg_data(621)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).RX_RESETS.reset_pll_and_datapath;
      reg_data(621)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).RX_RESETS.reset_datapath;
      reg_data(621)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(75).RX_RESETS.reset_bufbypass;
      reg_data(625)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).DRP.wr_en;
      reg_data(626)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).DRP.wr_addr;
      reg_data(626)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).DRP.en;
      reg_data(627)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).DRP.wr_data;
      reg_data(628)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).TX_RESETS.reset;
      reg_data(628)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).TX_RESETS.reset_pll_and_datapath;
      reg_data(628)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).TX_RESETS.reset_datapath;
      reg_data(628)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).TX_RESETS.reset_bufbypass;
      reg_data(629)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).RX_RESETS.reset;
      reg_data(629)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).RX_RESETS.reset_pll_and_datapath;
      reg_data(629)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).RX_RESETS.reset_datapath;
      reg_data(629)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(76).RX_RESETS.reset_bufbypass;
      reg_data(633)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).DRP.wr_en;
      reg_data(634)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).DRP.wr_addr;
      reg_data(634)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).DRP.en;
      reg_data(635)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).DRP.wr_data;
      reg_data(636)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).TX_RESETS.reset;
      reg_data(636)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).TX_RESETS.reset_pll_and_datapath;
      reg_data(636)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).TX_RESETS.reset_datapath;
      reg_data(636)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).TX_RESETS.reset_bufbypass;
      reg_data(637)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).RX_RESETS.reset;
      reg_data(637)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).RX_RESETS.reset_pll_and_datapath;
      reg_data(637)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).RX_RESETS.reset_datapath;
      reg_data(637)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(77).RX_RESETS.reset_bufbypass;
      reg_data(641)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).DRP.wr_en;
      reg_data(642)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).DRP.wr_addr;
      reg_data(642)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).DRP.en;
      reg_data(643)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).DRP.wr_data;
      reg_data(644)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).TX_RESETS.reset;
      reg_data(644)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).TX_RESETS.reset_pll_and_datapath;
      reg_data(644)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).TX_RESETS.reset_datapath;
      reg_data(644)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).TX_RESETS.reset_bufbypass;
      reg_data(645)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).RX_RESETS.reset;
      reg_data(645)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).RX_RESETS.reset_pll_and_datapath;
      reg_data(645)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).RX_RESETS.reset_datapath;
      reg_data(645)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(78).RX_RESETS.reset_bufbypass;
      reg_data(649)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).DRP.wr_en;
      reg_data(650)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).DRP.wr_addr;
      reg_data(650)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).DRP.en;
      reg_data(651)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).DRP.wr_data;
      reg_data(652)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).TX_RESETS.reset;
      reg_data(652)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).TX_RESETS.reset_pll_and_datapath;
      reg_data(652)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).TX_RESETS.reset_datapath;
      reg_data(652)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).TX_RESETS.reset_bufbypass;
      reg_data(653)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).RX_RESETS.reset;
      reg_data(653)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).RX_RESETS.reset_pll_and_datapath;
      reg_data(653)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).RX_RESETS.reset_datapath;
      reg_data(653)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(79).RX_RESETS.reset_bufbypass;
      reg_data(657)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).DRP.wr_en;
      reg_data(658)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).DRP.wr_addr;
      reg_data(658)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).DRP.en;
      reg_data(659)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).DRP.wr_data;
      reg_data(660)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).TX_RESETS.reset;
      reg_data(660)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).TX_RESETS.reset_pll_and_datapath;
      reg_data(660)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).TX_RESETS.reset_datapath;
      reg_data(660)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).TX_RESETS.reset_bufbypass;
      reg_data(661)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).RX_RESETS.reset;
      reg_data(661)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).RX_RESETS.reset_pll_and_datapath;
      reg_data(661)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).RX_RESETS.reset_datapath;
      reg_data(661)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(80).RX_RESETS.reset_bufbypass;
      reg_data(665)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).DRP.wr_en;
      reg_data(666)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).DRP.wr_addr;
      reg_data(666)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).DRP.en;
      reg_data(667)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).DRP.wr_data;
      reg_data(668)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).TX_RESETS.reset;
      reg_data(668)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).TX_RESETS.reset_pll_and_datapath;
      reg_data(668)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).TX_RESETS.reset_datapath;
      reg_data(668)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).TX_RESETS.reset_bufbypass;
      reg_data(669)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).RX_RESETS.reset;
      reg_data(669)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).RX_RESETS.reset_pll_and_datapath;
      reg_data(669)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).RX_RESETS.reset_datapath;
      reg_data(669)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(81).RX_RESETS.reset_bufbypass;
      reg_data(673)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).DRP.wr_en;
      reg_data(674)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).DRP.wr_addr;
      reg_data(674)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).DRP.en;
      reg_data(675)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).DRP.wr_data;
      reg_data(676)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).TX_RESETS.reset;
      reg_data(676)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).TX_RESETS.reset_pll_and_datapath;
      reg_data(676)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).TX_RESETS.reset_datapath;
      reg_data(676)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).TX_RESETS.reset_bufbypass;
      reg_data(677)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).RX_RESETS.reset;
      reg_data(677)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).RX_RESETS.reset_pll_and_datapath;
      reg_data(677)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).RX_RESETS.reset_datapath;
      reg_data(677)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(82).RX_RESETS.reset_bufbypass;
      reg_data(681)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).DRP.wr_en;
      reg_data(682)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).DRP.wr_addr;
      reg_data(682)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).DRP.en;
      reg_data(683)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).DRP.wr_data;
      reg_data(684)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).TX_RESETS.reset;
      reg_data(684)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).TX_RESETS.reset_pll_and_datapath;
      reg_data(684)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).TX_RESETS.reset_datapath;
      reg_data(684)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).TX_RESETS.reset_bufbypass;
      reg_data(685)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).RX_RESETS.reset;
      reg_data(685)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).RX_RESETS.reset_pll_and_datapath;
      reg_data(685)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).RX_RESETS.reset_datapath;
      reg_data(685)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(83).RX_RESETS.reset_bufbypass;
      reg_data(689)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).DRP.wr_en;
      reg_data(690)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).DRP.wr_addr;
      reg_data(690)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).DRP.en;
      reg_data(691)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).DRP.wr_data;
      reg_data(692)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).TX_RESETS.reset;
      reg_data(692)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).TX_RESETS.reset_pll_and_datapath;
      reg_data(692)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).TX_RESETS.reset_datapath;
      reg_data(692)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).TX_RESETS.reset_bufbypass;
      reg_data(693)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).RX_RESETS.reset;
      reg_data(693)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).RX_RESETS.reset_pll_and_datapath;
      reg_data(693)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).RX_RESETS.reset_datapath;
      reg_data(693)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(84).RX_RESETS.reset_bufbypass;
      reg_data(697)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).DRP.wr_en;
      reg_data(698)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).DRP.wr_addr;
      reg_data(698)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).DRP.en;
      reg_data(699)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).DRP.wr_data;
      reg_data(700)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).TX_RESETS.reset;
      reg_data(700)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).TX_RESETS.reset_pll_and_datapath;
      reg_data(700)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).TX_RESETS.reset_datapath;
      reg_data(700)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).TX_RESETS.reset_bufbypass;
      reg_data(701)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).RX_RESETS.reset;
      reg_data(701)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).RX_RESETS.reset_pll_and_datapath;
      reg_data(701)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).RX_RESETS.reset_datapath;
      reg_data(701)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(85).RX_RESETS.reset_bufbypass;
      reg_data(705)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).DRP.wr_en;
      reg_data(706)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).DRP.wr_addr;
      reg_data(706)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).DRP.en;
      reg_data(707)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).DRP.wr_data;
      reg_data(708)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).TX_RESETS.reset;
      reg_data(708)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).TX_RESETS.reset_pll_and_datapath;
      reg_data(708)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).TX_RESETS.reset_datapath;
      reg_data(708)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).TX_RESETS.reset_bufbypass;
      reg_data(709)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).RX_RESETS.reset;
      reg_data(709)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).RX_RESETS.reset_pll_and_datapath;
      reg_data(709)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).RX_RESETS.reset_datapath;
      reg_data(709)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(86).RX_RESETS.reset_bufbypass;
      reg_data(713)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).DRP.wr_en;
      reg_data(714)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).DRP.wr_addr;
      reg_data(714)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).DRP.en;
      reg_data(715)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).DRP.wr_data;
      reg_data(716)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).TX_RESETS.reset;
      reg_data(716)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).TX_RESETS.reset_pll_and_datapath;
      reg_data(716)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).TX_RESETS.reset_datapath;
      reg_data(716)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).TX_RESETS.reset_bufbypass;
      reg_data(717)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).RX_RESETS.reset;
      reg_data(717)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).RX_RESETS.reset_pll_and_datapath;
      reg_data(717)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).RX_RESETS.reset_datapath;
      reg_data(717)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(87).RX_RESETS.reset_bufbypass;
      reg_data(721)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).DRP.wr_en;
      reg_data(722)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).DRP.wr_addr;
      reg_data(722)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).DRP.en;
      reg_data(723)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).DRP.wr_data;
      reg_data(724)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).TX_RESETS.reset;
      reg_data(724)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).TX_RESETS.reset_pll_and_datapath;
      reg_data(724)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).TX_RESETS.reset_datapath;
      reg_data(724)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).TX_RESETS.reset_bufbypass;
      reg_data(725)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).RX_RESETS.reset;
      reg_data(725)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).RX_RESETS.reset_pll_and_datapath;
      reg_data(725)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).RX_RESETS.reset_datapath;
      reg_data(725)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(88).RX_RESETS.reset_bufbypass;
      reg_data(729)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).DRP.wr_en;
      reg_data(730)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).DRP.wr_addr;
      reg_data(730)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).DRP.en;
      reg_data(731)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).DRP.wr_data;
      reg_data(732)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).TX_RESETS.reset;
      reg_data(732)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).TX_RESETS.reset_pll_and_datapath;
      reg_data(732)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).TX_RESETS.reset_datapath;
      reg_data(732)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).TX_RESETS.reset_bufbypass;
      reg_data(733)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).RX_RESETS.reset;
      reg_data(733)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).RX_RESETS.reset_pll_and_datapath;
      reg_data(733)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).RX_RESETS.reset_datapath;
      reg_data(733)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(89).RX_RESETS.reset_bufbypass;
      reg_data(737)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).DRP.wr_en;
      reg_data(738)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).DRP.wr_addr;
      reg_data(738)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).DRP.en;
      reg_data(739)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).DRP.wr_data;
      reg_data(740)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).TX_RESETS.reset;
      reg_data(740)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).TX_RESETS.reset_pll_and_datapath;
      reg_data(740)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).TX_RESETS.reset_datapath;
      reg_data(740)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).TX_RESETS.reset_bufbypass;
      reg_data(741)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).RX_RESETS.reset;
      reg_data(741)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).RX_RESETS.reset_pll_and_datapath;
      reg_data(741)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).RX_RESETS.reset_datapath;
      reg_data(741)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(90).RX_RESETS.reset_bufbypass;
      reg_data(745)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).DRP.wr_en;
      reg_data(746)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).DRP.wr_addr;
      reg_data(746)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).DRP.en;
      reg_data(747)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).DRP.wr_data;
      reg_data(748)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).TX_RESETS.reset;
      reg_data(748)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).TX_RESETS.reset_pll_and_datapath;
      reg_data(748)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).TX_RESETS.reset_datapath;
      reg_data(748)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).TX_RESETS.reset_bufbypass;
      reg_data(749)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).RX_RESETS.reset;
      reg_data(749)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).RX_RESETS.reset_pll_and_datapath;
      reg_data(749)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).RX_RESETS.reset_datapath;
      reg_data(749)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(91).RX_RESETS.reset_bufbypass;
      reg_data(753)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).DRP.wr_en;
      reg_data(754)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).DRP.wr_addr;
      reg_data(754)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).DRP.en;
      reg_data(755)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).DRP.wr_data;
      reg_data(756)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).TX_RESETS.reset;
      reg_data(756)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).TX_RESETS.reset_pll_and_datapath;
      reg_data(756)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).TX_RESETS.reset_datapath;
      reg_data(756)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).TX_RESETS.reset_bufbypass;
      reg_data(757)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).RX_RESETS.reset;
      reg_data(757)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).RX_RESETS.reset_pll_and_datapath;
      reg_data(757)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).RX_RESETS.reset_datapath;
      reg_data(757)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(92).RX_RESETS.reset_bufbypass;
      reg_data(761)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).DRP.wr_en;
      reg_data(762)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).DRP.wr_addr;
      reg_data(762)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).DRP.en;
      reg_data(763)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).DRP.wr_data;
      reg_data(764)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).TX_RESETS.reset;
      reg_data(764)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).TX_RESETS.reset_pll_and_datapath;
      reg_data(764)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).TX_RESETS.reset_datapath;
      reg_data(764)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).TX_RESETS.reset_bufbypass;
      reg_data(765)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).RX_RESETS.reset;
      reg_data(765)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).RX_RESETS.reset_pll_and_datapath;
      reg_data(765)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).RX_RESETS.reset_datapath;
      reg_data(765)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(93).RX_RESETS.reset_bufbypass;
      reg_data(769)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).DRP.wr_en;
      reg_data(770)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).DRP.wr_addr;
      reg_data(770)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).DRP.en;
      reg_data(771)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).DRP.wr_data;
      reg_data(772)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).TX_RESETS.reset;
      reg_data(772)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).TX_RESETS.reset_pll_and_datapath;
      reg_data(772)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).TX_RESETS.reset_datapath;
      reg_data(772)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).TX_RESETS.reset_bufbypass;
      reg_data(773)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).RX_RESETS.reset;
      reg_data(773)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).RX_RESETS.reset_pll_and_datapath;
      reg_data(773)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).RX_RESETS.reset_datapath;
      reg_data(773)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(94).RX_RESETS.reset_bufbypass;
      reg_data(777)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).DRP.wr_en;
      reg_data(778)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).DRP.wr_addr;
      reg_data(778)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).DRP.en;
      reg_data(779)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).DRP.wr_data;
      reg_data(780)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).TX_RESETS.reset;
      reg_data(780)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).TX_RESETS.reset_pll_and_datapath;
      reg_data(780)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).TX_RESETS.reset_datapath;
      reg_data(780)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).TX_RESETS.reset_bufbypass;
      reg_data(781)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).RX_RESETS.reset;
      reg_data(781)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).RX_RESETS.reset_pll_and_datapath;
      reg_data(781)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).RX_RESETS.reset_datapath;
      reg_data(781)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(95).RX_RESETS.reset_bufbypass;
      reg_data(785)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).DRP.wr_en;
      reg_data(786)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).DRP.wr_addr;
      reg_data(786)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).DRP.en;
      reg_data(787)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).DRP.wr_data;
      reg_data(788)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).TX_RESETS.reset;
      reg_data(788)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).TX_RESETS.reset_pll_and_datapath;
      reg_data(788)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).TX_RESETS.reset_datapath;
      reg_data(788)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).TX_RESETS.reset_bufbypass;
      reg_data(789)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).RX_RESETS.reset;
      reg_data(789)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).RX_RESETS.reset_pll_and_datapath;
      reg_data(789)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).RX_RESETS.reset_datapath;
      reg_data(789)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(96).RX_RESETS.reset_bufbypass;
      reg_data(793)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).DRP.wr_en;
      reg_data(794)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).DRP.wr_addr;
      reg_data(794)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).DRP.en;
      reg_data(795)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).DRP.wr_data;
      reg_data(796)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).TX_RESETS.reset;
      reg_data(796)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).TX_RESETS.reset_pll_and_datapath;
      reg_data(796)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).TX_RESETS.reset_datapath;
      reg_data(796)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).TX_RESETS.reset_bufbypass;
      reg_data(797)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).RX_RESETS.reset;
      reg_data(797)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).RX_RESETS.reset_pll_and_datapath;
      reg_data(797)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).RX_RESETS.reset_datapath;
      reg_data(797)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(97).RX_RESETS.reset_bufbypass;
      reg_data(801)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).DRP.wr_en;
      reg_data(802)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).DRP.wr_addr;
      reg_data(802)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).DRP.en;
      reg_data(803)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).DRP.wr_data;
      reg_data(804)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).TX_RESETS.reset;
      reg_data(804)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).TX_RESETS.reset_pll_and_datapath;
      reg_data(804)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).TX_RESETS.reset_datapath;
      reg_data(804)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).TX_RESETS.reset_bufbypass;
      reg_data(805)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).RX_RESETS.reset;
      reg_data(805)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).RX_RESETS.reset_pll_and_datapath;
      reg_data(805)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).RX_RESETS.reset_datapath;
      reg_data(805)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(98).RX_RESETS.reset_bufbypass;
      reg_data(809)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).DRP.wr_en;
      reg_data(810)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).DRP.wr_addr;
      reg_data(810)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).DRP.en;
      reg_data(811)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).DRP.wr_data;
      reg_data(812)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).TX_RESETS.reset;
      reg_data(812)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).TX_RESETS.reset_pll_and_datapath;
      reg_data(812)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).TX_RESETS.reset_datapath;
      reg_data(812)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).TX_RESETS.reset_bufbypass;
      reg_data(813)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).RX_RESETS.reset;
      reg_data(813)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).RX_RESETS.reset_pll_and_datapath;
      reg_data(813)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).RX_RESETS.reset_datapath;
      reg_data(813)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(99).RX_RESETS.reset_bufbypass;
      reg_data(817)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).DRP.wr_en;
      reg_data(818)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).DRP.wr_addr;
      reg_data(818)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).DRP.en;
      reg_data(819)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).DRP.wr_data;
      reg_data(820)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).TX_RESETS.reset;
      reg_data(820)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).TX_RESETS.reset_pll_and_datapath;
      reg_data(820)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).TX_RESETS.reset_datapath;
      reg_data(820)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).TX_RESETS.reset_bufbypass;
      reg_data(821)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).RX_RESETS.reset;
      reg_data(821)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).RX_RESETS.reset_pll_and_datapath;
      reg_data(821)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).RX_RESETS.reset_datapath;
      reg_data(821)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(100).RX_RESETS.reset_bufbypass;
      reg_data(825)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).DRP.wr_en;
      reg_data(826)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).DRP.wr_addr;
      reg_data(826)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).DRP.en;
      reg_data(827)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).DRP.wr_data;
      reg_data(828)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).TX_RESETS.reset;
      reg_data(828)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).TX_RESETS.reset_pll_and_datapath;
      reg_data(828)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).TX_RESETS.reset_datapath;
      reg_data(828)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).TX_RESETS.reset_bufbypass;
      reg_data(829)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).RX_RESETS.reset;
      reg_data(829)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).RX_RESETS.reset_pll_and_datapath;
      reg_data(829)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).RX_RESETS.reset_datapath;
      reg_data(829)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(101).RX_RESETS.reset_bufbypass;
      reg_data(833)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).DRP.wr_en;
      reg_data(834)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).DRP.wr_addr;
      reg_data(834)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).DRP.en;
      reg_data(835)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).DRP.wr_data;
      reg_data(836)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).TX_RESETS.reset;
      reg_data(836)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).TX_RESETS.reset_pll_and_datapath;
      reg_data(836)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).TX_RESETS.reset_datapath;
      reg_data(836)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).TX_RESETS.reset_bufbypass;
      reg_data(837)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).RX_RESETS.reset;
      reg_data(837)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).RX_RESETS.reset_pll_and_datapath;
      reg_data(837)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).RX_RESETS.reset_datapath;
      reg_data(837)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(102).RX_RESETS.reset_bufbypass;
      reg_data(841)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).DRP.wr_en;
      reg_data(842)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).DRP.wr_addr;
      reg_data(842)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).DRP.en;
      reg_data(843)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).DRP.wr_data;
      reg_data(844)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).TX_RESETS.reset;
      reg_data(844)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).TX_RESETS.reset_pll_and_datapath;
      reg_data(844)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).TX_RESETS.reset_datapath;
      reg_data(844)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).TX_RESETS.reset_bufbypass;
      reg_data(845)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).RX_RESETS.reset;
      reg_data(845)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).RX_RESETS.reset_pll_and_datapath;
      reg_data(845)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).RX_RESETS.reset_datapath;
      reg_data(845)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(103).RX_RESETS.reset_bufbypass;
      reg_data(849)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).DRP.wr_en;
      reg_data(850)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).DRP.wr_addr;
      reg_data(850)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).DRP.en;
      reg_data(851)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).DRP.wr_data;
      reg_data(852)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).TX_RESETS.reset;
      reg_data(852)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).TX_RESETS.reset_pll_and_datapath;
      reg_data(852)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).TX_RESETS.reset_datapath;
      reg_data(852)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).TX_RESETS.reset_bufbypass;
      reg_data(853)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).RX_RESETS.reset;
      reg_data(853)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).RX_RESETS.reset_pll_and_datapath;
      reg_data(853)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).RX_RESETS.reset_datapath;
      reg_data(853)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(104).RX_RESETS.reset_bufbypass;
      reg_data(857)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).DRP.wr_en;
      reg_data(858)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).DRP.wr_addr;
      reg_data(858)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).DRP.en;
      reg_data(859)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).DRP.wr_data;
      reg_data(860)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).TX_RESETS.reset;
      reg_data(860)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).TX_RESETS.reset_pll_and_datapath;
      reg_data(860)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).TX_RESETS.reset_datapath;
      reg_data(860)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).TX_RESETS.reset_bufbypass;
      reg_data(861)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).RX_RESETS.reset;
      reg_data(861)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).RX_RESETS.reset_pll_and_datapath;
      reg_data(861)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).RX_RESETS.reset_datapath;
      reg_data(861)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(105).RX_RESETS.reset_bufbypass;
      reg_data(865)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).DRP.wr_en;
      reg_data(866)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).DRP.wr_addr;
      reg_data(866)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).DRP.en;
      reg_data(867)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).DRP.wr_data;
      reg_data(868)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).TX_RESETS.reset;
      reg_data(868)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).TX_RESETS.reset_pll_and_datapath;
      reg_data(868)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).TX_RESETS.reset_datapath;
      reg_data(868)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).TX_RESETS.reset_bufbypass;
      reg_data(869)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).RX_RESETS.reset;
      reg_data(869)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).RX_RESETS.reset_pll_and_datapath;
      reg_data(869)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).RX_RESETS.reset_datapath;
      reg_data(869)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(106).RX_RESETS.reset_bufbypass;
      reg_data(873)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).DRP.wr_en;
      reg_data(874)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).DRP.wr_addr;
      reg_data(874)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).DRP.en;
      reg_data(875)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).DRP.wr_data;
      reg_data(876)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).TX_RESETS.reset;
      reg_data(876)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).TX_RESETS.reset_pll_and_datapath;
      reg_data(876)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).TX_RESETS.reset_datapath;
      reg_data(876)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).TX_RESETS.reset_bufbypass;
      reg_data(877)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).RX_RESETS.reset;
      reg_data(877)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).RX_RESETS.reset_pll_and_datapath;
      reg_data(877)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).RX_RESETS.reset_datapath;
      reg_data(877)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(107).RX_RESETS.reset_bufbypass;
      reg_data(881)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).DRP.wr_en;
      reg_data(882)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).DRP.wr_addr;
      reg_data(882)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).DRP.en;
      reg_data(883)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).DRP.wr_data;
      reg_data(884)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).TX_RESETS.reset;
      reg_data(884)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).TX_RESETS.reset_pll_and_datapath;
      reg_data(884)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).TX_RESETS.reset_datapath;
      reg_data(884)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).TX_RESETS.reset_bufbypass;
      reg_data(885)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).RX_RESETS.reset;
      reg_data(885)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).RX_RESETS.reset_pll_and_datapath;
      reg_data(885)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).RX_RESETS.reset_datapath;
      reg_data(885)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(108).RX_RESETS.reset_bufbypass;
      reg_data(889)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).DRP.wr_en;
      reg_data(890)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).DRP.wr_addr;
      reg_data(890)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).DRP.en;
      reg_data(891)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).DRP.wr_data;
      reg_data(892)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).TX_RESETS.reset;
      reg_data(892)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).TX_RESETS.reset_pll_and_datapath;
      reg_data(892)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).TX_RESETS.reset_datapath;
      reg_data(892)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).TX_RESETS.reset_bufbypass;
      reg_data(893)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).RX_RESETS.reset;
      reg_data(893)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).RX_RESETS.reset_pll_and_datapath;
      reg_data(893)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).RX_RESETS.reset_datapath;
      reg_data(893)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(109).RX_RESETS.reset_bufbypass;
      reg_data(897)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).DRP.wr_en;
      reg_data(898)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).DRP.wr_addr;
      reg_data(898)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).DRP.en;
      reg_data(899)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).DRP.wr_data;
      reg_data(900)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).TX_RESETS.reset;
      reg_data(900)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).TX_RESETS.reset_pll_and_datapath;
      reg_data(900)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).TX_RESETS.reset_datapath;
      reg_data(900)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).TX_RESETS.reset_bufbypass;
      reg_data(901)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).RX_RESETS.reset;
      reg_data(901)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).RX_RESETS.reset_pll_and_datapath;
      reg_data(901)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).RX_RESETS.reset_datapath;
      reg_data(901)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(110).RX_RESETS.reset_bufbypass;
      reg_data(905)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).DRP.wr_en;
      reg_data(906)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).DRP.wr_addr;
      reg_data(906)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).DRP.en;
      reg_data(907)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).DRP.wr_data;
      reg_data(908)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).TX_RESETS.reset;
      reg_data(908)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).TX_RESETS.reset_pll_and_datapath;
      reg_data(908)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).TX_RESETS.reset_datapath;
      reg_data(908)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).TX_RESETS.reset_bufbypass;
      reg_data(909)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).RX_RESETS.reset;
      reg_data(909)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).RX_RESETS.reset_pll_and_datapath;
      reg_data(909)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).RX_RESETS.reset_datapath;
      reg_data(909)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(111).RX_RESETS.reset_bufbypass;
      reg_data(913)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).DRP.wr_en;
      reg_data(914)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).DRP.wr_addr;
      reg_data(914)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).DRP.en;
      reg_data(915)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).DRP.wr_data;
      reg_data(916)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).TX_RESETS.reset;
      reg_data(916)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).TX_RESETS.reset_pll_and_datapath;
      reg_data(916)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).TX_RESETS.reset_datapath;
      reg_data(916)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).TX_RESETS.reset_bufbypass;
      reg_data(917)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).RX_RESETS.reset;
      reg_data(917)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).RX_RESETS.reset_pll_and_datapath;
      reg_data(917)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).RX_RESETS.reset_datapath;
      reg_data(917)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(112).RX_RESETS.reset_bufbypass;
      reg_data(921)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).DRP.wr_en;
      reg_data(922)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).DRP.wr_addr;
      reg_data(922)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).DRP.en;
      reg_data(923)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).DRP.wr_data;
      reg_data(924)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).TX_RESETS.reset;
      reg_data(924)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).TX_RESETS.reset_pll_and_datapath;
      reg_data(924)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).TX_RESETS.reset_datapath;
      reg_data(924)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).TX_RESETS.reset_bufbypass;
      reg_data(925)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).RX_RESETS.reset;
      reg_data(925)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).RX_RESETS.reset_pll_and_datapath;
      reg_data(925)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).RX_RESETS.reset_datapath;
      reg_data(925)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(113).RX_RESETS.reset_bufbypass;
      reg_data(929)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).DRP.wr_en;
      reg_data(930)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).DRP.wr_addr;
      reg_data(930)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).DRP.en;
      reg_data(931)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).DRP.wr_data;
      reg_data(932)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).TX_RESETS.reset;
      reg_data(932)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).TX_RESETS.reset_pll_and_datapath;
      reg_data(932)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).TX_RESETS.reset_datapath;
      reg_data(932)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).TX_RESETS.reset_bufbypass;
      reg_data(933)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).RX_RESETS.reset;
      reg_data(933)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).RX_RESETS.reset_pll_and_datapath;
      reg_data(933)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).RX_RESETS.reset_datapath;
      reg_data(933)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(114).RX_RESETS.reset_bufbypass;
      reg_data(937)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).DRP.wr_en;
      reg_data(938)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).DRP.wr_addr;
      reg_data(938)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).DRP.en;
      reg_data(939)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).DRP.wr_data;
      reg_data(940)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).TX_RESETS.reset;
      reg_data(940)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).TX_RESETS.reset_pll_and_datapath;
      reg_data(940)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).TX_RESETS.reset_datapath;
      reg_data(940)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).TX_RESETS.reset_bufbypass;
      reg_data(941)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).RX_RESETS.reset;
      reg_data(941)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).RX_RESETS.reset_pll_and_datapath;
      reg_data(941)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).RX_RESETS.reset_datapath;
      reg_data(941)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(115).RX_RESETS.reset_bufbypass;
      reg_data(945)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).DRP.wr_en;
      reg_data(946)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).DRP.wr_addr;
      reg_data(946)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).DRP.en;
      reg_data(947)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).DRP.wr_data;
      reg_data(948)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).TX_RESETS.reset;
      reg_data(948)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).TX_RESETS.reset_pll_and_datapath;
      reg_data(948)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).TX_RESETS.reset_datapath;
      reg_data(948)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).TX_RESETS.reset_bufbypass;
      reg_data(949)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).RX_RESETS.reset;
      reg_data(949)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).RX_RESETS.reset_pll_and_datapath;
      reg_data(949)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).RX_RESETS.reset_datapath;
      reg_data(949)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(116).RX_RESETS.reset_bufbypass;
      reg_data(953)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).DRP.wr_en;
      reg_data(954)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).DRP.wr_addr;
      reg_data(954)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).DRP.en;
      reg_data(955)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).DRP.wr_data;
      reg_data(956)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).TX_RESETS.reset;
      reg_data(956)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).TX_RESETS.reset_pll_and_datapath;
      reg_data(956)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).TX_RESETS.reset_datapath;
      reg_data(956)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).TX_RESETS.reset_bufbypass;
      reg_data(957)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).RX_RESETS.reset;
      reg_data(957)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).RX_RESETS.reset_pll_and_datapath;
      reg_data(957)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).RX_RESETS.reset_datapath;
      reg_data(957)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(117).RX_RESETS.reset_bufbypass;
      reg_data(961)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).DRP.wr_en;
      reg_data(962)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).DRP.wr_addr;
      reg_data(962)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).DRP.en;
      reg_data(963)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).DRP.wr_data;
      reg_data(964)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).TX_RESETS.reset;
      reg_data(964)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).TX_RESETS.reset_pll_and_datapath;
      reg_data(964)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).TX_RESETS.reset_datapath;
      reg_data(964)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).TX_RESETS.reset_bufbypass;
      reg_data(965)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).RX_RESETS.reset;
      reg_data(965)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).RX_RESETS.reset_pll_and_datapath;
      reg_data(965)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).RX_RESETS.reset_datapath;
      reg_data(965)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(118).RX_RESETS.reset_bufbypass;
      reg_data(969)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).DRP.wr_en;
      reg_data(970)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).DRP.wr_addr;
      reg_data(970)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).DRP.en;
      reg_data(971)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).DRP.wr_data;
      reg_data(972)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).TX_RESETS.reset;
      reg_data(972)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).TX_RESETS.reset_pll_and_datapath;
      reg_data(972)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).TX_RESETS.reset_datapath;
      reg_data(972)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).TX_RESETS.reset_bufbypass;
      reg_data(973)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).RX_RESETS.reset;
      reg_data(973)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).RX_RESETS.reset_pll_and_datapath;
      reg_data(973)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).RX_RESETS.reset_datapath;
      reg_data(973)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(119).RX_RESETS.reset_bufbypass;
      reg_data(977)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).DRP.wr_en;
      reg_data(978)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).DRP.wr_addr;
      reg_data(978)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).DRP.en;
      reg_data(979)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).DRP.wr_data;
      reg_data(980)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).TX_RESETS.reset;
      reg_data(980)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).TX_RESETS.reset_pll_and_datapath;
      reg_data(980)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).TX_RESETS.reset_datapath;
      reg_data(980)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).TX_RESETS.reset_bufbypass;
      reg_data(981)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).RX_RESETS.reset;
      reg_data(981)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).RX_RESETS.reset_pll_and_datapath;
      reg_data(981)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).RX_RESETS.reset_datapath;
      reg_data(981)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(120).RX_RESETS.reset_bufbypass;
      reg_data(985)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).DRP.wr_en;
      reg_data(986)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).DRP.wr_addr;
      reg_data(986)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).DRP.en;
      reg_data(987)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).DRP.wr_data;
      reg_data(988)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).TX_RESETS.reset;
      reg_data(988)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).TX_RESETS.reset_pll_and_datapath;
      reg_data(988)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).TX_RESETS.reset_datapath;
      reg_data(988)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).TX_RESETS.reset_bufbypass;
      reg_data(989)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).RX_RESETS.reset;
      reg_data(989)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).RX_RESETS.reset_pll_and_datapath;
      reg_data(989)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).RX_RESETS.reset_datapath;
      reg_data(989)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(121).RX_RESETS.reset_bufbypass;
      reg_data(993)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).DRP.wr_en;
      reg_data(994)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).DRP.wr_addr;
      reg_data(994)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).DRP.en;
      reg_data(995)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).DRP.wr_data;
      reg_data(996)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).TX_RESETS.reset;
      reg_data(996)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).TX_RESETS.reset_pll_and_datapath;
      reg_data(996)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).TX_RESETS.reset_datapath;
      reg_data(996)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).TX_RESETS.reset_bufbypass;
      reg_data(997)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).RX_RESETS.reset;
      reg_data(997)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).RX_RESETS.reset_pll_and_datapath;
      reg_data(997)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).RX_RESETS.reset_datapath;
      reg_data(997)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(122).RX_RESETS.reset_bufbypass;
      reg_data(1001)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).DRP.wr_en;
      reg_data(1002)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).DRP.wr_addr;
      reg_data(1002)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).DRP.en;
      reg_data(1003)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).DRP.wr_data;
      reg_data(1004)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).TX_RESETS.reset;
      reg_data(1004)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).TX_RESETS.reset_pll_and_datapath;
      reg_data(1004)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).TX_RESETS.reset_datapath;
      reg_data(1004)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).TX_RESETS.reset_bufbypass;
      reg_data(1005)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).RX_RESETS.reset;
      reg_data(1005)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).RX_RESETS.reset_pll_and_datapath;
      reg_data(1005)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).RX_RESETS.reset_datapath;
      reg_data(1005)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(123).RX_RESETS.reset_bufbypass;
      reg_data(1009)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).DRP.wr_en;
      reg_data(1010)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).DRP.wr_addr;
      reg_data(1010)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).DRP.en;
      reg_data(1011)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).DRP.wr_data;
      reg_data(1012)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).TX_RESETS.reset;
      reg_data(1012)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).TX_RESETS.reset_pll_and_datapath;
      reg_data(1012)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).TX_RESETS.reset_datapath;
      reg_data(1012)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).TX_RESETS.reset_bufbypass;
      reg_data(1013)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).RX_RESETS.reset;
      reg_data(1013)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).RX_RESETS.reset_pll_and_datapath;
      reg_data(1013)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).RX_RESETS.reset_datapath;
      reg_data(1013)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(124).RX_RESETS.reset_bufbypass;
      reg_data(1017)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).DRP.wr_en;
      reg_data(1018)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).DRP.wr_addr;
      reg_data(1018)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).DRP.en;
      reg_data(1019)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).DRP.wr_data;
      reg_data(1020)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).TX_RESETS.reset;
      reg_data(1020)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).TX_RESETS.reset_pll_and_datapath;
      reg_data(1020)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).TX_RESETS.reset_datapath;
      reg_data(1020)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).TX_RESETS.reset_bufbypass;
      reg_data(1021)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).RX_RESETS.reset;
      reg_data(1021)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).RX_RESETS.reset_pll_and_datapath;
      reg_data(1021)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).RX_RESETS.reset_datapath;
      reg_data(1021)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(125).RX_RESETS.reset_bufbypass;
      reg_data(1025)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).DRP.wr_en;
      reg_data(1026)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).DRP.wr_addr;
      reg_data(1026)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).DRP.en;
      reg_data(1027)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).DRP.wr_data;
      reg_data(1028)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).TX_RESETS.reset;
      reg_data(1028)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).TX_RESETS.reset_pll_and_datapath;
      reg_data(1028)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).TX_RESETS.reset_datapath;
      reg_data(1028)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).TX_RESETS.reset_bufbypass;
      reg_data(1029)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).RX_RESETS.reset;
      reg_data(1029)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).RX_RESETS.reset_pll_and_datapath;
      reg_data(1029)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).RX_RESETS.reset_datapath;
      reg_data(1029)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(126).RX_RESETS.reset_bufbypass;
      reg_data(1033)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).DRP.wr_en;
      reg_data(1034)( 9 downto  0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).DRP.wr_addr;
      reg_data(1034)(12)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).DRP.en;
      reg_data(1035)(31 downto 16)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).DRP.wr_data;
      reg_data(1036)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).TX_RESETS.reset;
      reg_data(1036)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).TX_RESETS.reset_pll_and_datapath;
      reg_data(1036)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).TX_RESETS.reset_datapath;
      reg_data(1036)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).TX_RESETS.reset_bufbypass;
      reg_data(1037)( 0)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).RX_RESETS.reset;
      reg_data(1037)( 1)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).RX_RESETS.reset_pll_and_datapath;
      reg_data(1037)( 2)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).RX_RESETS.reset_datapath;
      reg_data(1037)( 3)  <= DEFAULT_CORE_HAL_CTRL_t.MGT.MGT(127).RX_RESETS.reset_bufbypass;

    elsif clk_axi'event and clk_axi = '1' then  -- rising clock edge
      Ctrl.MGT.MGT(0).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(1).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(2).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(3).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(4).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(5).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(6).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(7).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(8).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(9).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(10).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(11).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(12).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(13).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(14).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(15).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(16).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(17).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(18).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(19).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(20).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(21).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(22).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(23).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(24).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(25).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(26).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(27).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(28).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(29).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(30).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(31).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(32).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(33).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(34).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(35).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(36).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(37).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(38).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(39).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(40).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(41).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(42).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(43).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(44).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(45).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(46).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(47).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(48).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(49).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(50).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(51).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(52).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(53).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(54).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(55).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(56).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(57).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(58).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(59).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(60).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(61).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(62).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(63).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(64).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(65).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(66).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(67).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(68).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(69).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(70).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(71).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(72).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(73).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(74).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(75).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(76).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(77).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(78).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(79).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(80).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(81).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(82).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(83).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(84).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(85).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(86).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(87).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(88).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(89).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(90).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(91).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(92).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(93).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(94).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(95).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(96).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(97).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(98).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(99).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(100).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(101).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(102).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(103).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(104).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(105).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(106).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(107).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(108).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(109).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(110).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(111).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(112).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(113).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(114).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(115).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(116).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(117).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(118).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(119).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(120).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(121).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(122).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(123).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(124).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(125).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(126).DRP.wr_en <= '0';
      Ctrl.MGT.MGT(127).DRP.wr_en <= '0';
      

      
      if localWrEn = '1' then
        case to_integer(unsigned(localAddress(10 downto 0))) is
        when 1 => --0x1
          reg_data( 1)( 1)              <=  localWrData( 1);                --LHC MMCM: Set 1 to reset the MMCM
        when 17 => --0x11
          Ctrl.MGT.MGT(0).DRP.wr_en     <=  localWrData( 0);               
        when 18 => --0x12
          reg_data(18)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(18)(12)              <=  localWrData(12);                --DRP Enable
        when 19 => --0x13
          reg_data(19)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 20 => --0x14
          reg_data(20)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(20)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(20)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(20)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 21 => --0x15
          reg_data(21)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(21)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(21)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(21)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 25 => --0x19
          Ctrl.MGT.MGT(1).DRP.wr_en     <=  localWrData( 0);               
        when 26 => --0x1a
          reg_data(26)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(26)(12)              <=  localWrData(12);                --DRP Enable
        when 27 => --0x1b
          reg_data(27)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 28 => --0x1c
          reg_data(28)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(28)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(28)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(28)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 29 => --0x1d
          reg_data(29)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(29)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(29)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(29)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 33 => --0x21
          Ctrl.MGT.MGT(2).DRP.wr_en     <=  localWrData( 0);               
        when 34 => --0x22
          reg_data(34)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(34)(12)              <=  localWrData(12);                --DRP Enable
        when 35 => --0x23
          reg_data(35)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 36 => --0x24
          reg_data(36)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(36)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(36)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(36)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 37 => --0x25
          reg_data(37)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(37)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(37)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(37)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 41 => --0x29
          Ctrl.MGT.MGT(3).DRP.wr_en     <=  localWrData( 0);               
        when 42 => --0x2a
          reg_data(42)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(42)(12)              <=  localWrData(12);                --DRP Enable
        when 43 => --0x2b
          reg_data(43)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 44 => --0x2c
          reg_data(44)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(44)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(44)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(44)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 45 => --0x2d
          reg_data(45)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(45)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(45)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(45)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 49 => --0x31
          Ctrl.MGT.MGT(4).DRP.wr_en     <=  localWrData( 0);               
        when 50 => --0x32
          reg_data(50)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(50)(12)              <=  localWrData(12);                --DRP Enable
        when 51 => --0x33
          reg_data(51)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 52 => --0x34
          reg_data(52)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(52)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(52)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(52)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 53 => --0x35
          reg_data(53)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(53)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(53)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(53)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 57 => --0x39
          Ctrl.MGT.MGT(5).DRP.wr_en     <=  localWrData( 0);               
        when 58 => --0x3a
          reg_data(58)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(58)(12)              <=  localWrData(12);                --DRP Enable
        when 59 => --0x3b
          reg_data(59)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 60 => --0x3c
          reg_data(60)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(60)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(60)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(60)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 61 => --0x3d
          reg_data(61)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(61)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(61)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(61)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 65 => --0x41
          Ctrl.MGT.MGT(6).DRP.wr_en     <=  localWrData( 0);               
        when 66 => --0x42
          reg_data(66)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(66)(12)              <=  localWrData(12);                --DRP Enable
        when 67 => --0x43
          reg_data(67)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 68 => --0x44
          reg_data(68)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(68)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(68)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(68)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 69 => --0x45
          reg_data(69)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(69)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(69)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(69)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 73 => --0x49
          Ctrl.MGT.MGT(7).DRP.wr_en     <=  localWrData( 0);               
        when 74 => --0x4a
          reg_data(74)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(74)(12)              <=  localWrData(12);                --DRP Enable
        when 75 => --0x4b
          reg_data(75)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 76 => --0x4c
          reg_data(76)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(76)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(76)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(76)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 77 => --0x4d
          reg_data(77)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(77)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(77)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(77)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 81 => --0x51
          Ctrl.MGT.MGT(8).DRP.wr_en     <=  localWrData( 0);               
        when 82 => --0x52
          reg_data(82)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(82)(12)              <=  localWrData(12);                --DRP Enable
        when 83 => --0x53
          reg_data(83)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 84 => --0x54
          reg_data(84)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(84)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(84)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(84)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 85 => --0x55
          reg_data(85)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(85)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(85)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(85)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 89 => --0x59
          Ctrl.MGT.MGT(9).DRP.wr_en     <=  localWrData( 0);               
        when 90 => --0x5a
          reg_data(90)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(90)(12)              <=  localWrData(12);                --DRP Enable
        when 91 => --0x5b
          reg_data(91)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 92 => --0x5c
          reg_data(92)( 0)              <=  localWrData( 0);                --tx reset
          reg_data(92)( 1)              <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(92)( 2)              <=  localWrData( 2);                --tx reset_datapath
          reg_data(92)( 3)              <=  localWrData( 3);                --tx reset_bufbypass
        when 93 => --0x5d
          reg_data(93)( 0)              <=  localWrData( 0);                --rx reset
          reg_data(93)( 1)              <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(93)( 2)              <=  localWrData( 2);                --rx reset_datapath
          reg_data(93)( 3)              <=  localWrData( 3);                --rx reset_bufbypass
        when 97 => --0x61
          Ctrl.MGT.MGT(10).DRP.wr_en    <=  localWrData( 0);               
        when 98 => --0x62
          reg_data(98)( 9 downto  0)    <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(98)(12)              <=  localWrData(12);                --DRP Enable
        when 99 => --0x63
          reg_data(99)(31 downto 16)    <=  localWrData(31 downto 16);      --DRP Write Data
        when 100 => --0x64
          reg_data(100)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(100)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(100)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(100)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 101 => --0x65
          reg_data(101)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(101)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(101)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(101)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 105 => --0x69
          Ctrl.MGT.MGT(11).DRP.wr_en    <=  localWrData( 0);               
        when 106 => --0x6a
          reg_data(106)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(106)(12)             <=  localWrData(12);                --DRP Enable
        when 107 => --0x6b
          reg_data(107)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 108 => --0x6c
          reg_data(108)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(108)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(108)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(108)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 109 => --0x6d
          reg_data(109)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(109)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(109)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(109)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 113 => --0x71
          Ctrl.MGT.MGT(12).DRP.wr_en    <=  localWrData( 0);               
        when 114 => --0x72
          reg_data(114)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(114)(12)             <=  localWrData(12);                --DRP Enable
        when 115 => --0x73
          reg_data(115)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 116 => --0x74
          reg_data(116)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(116)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(116)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(116)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 117 => --0x75
          reg_data(117)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(117)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(117)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(117)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 121 => --0x79
          Ctrl.MGT.MGT(13).DRP.wr_en    <=  localWrData( 0);               
        when 122 => --0x7a
          reg_data(122)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(122)(12)             <=  localWrData(12);                --DRP Enable
        when 123 => --0x7b
          reg_data(123)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 124 => --0x7c
          reg_data(124)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(124)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(124)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(124)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 125 => --0x7d
          reg_data(125)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(125)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(125)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(125)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 129 => --0x81
          Ctrl.MGT.MGT(14).DRP.wr_en    <=  localWrData( 0);               
        when 130 => --0x82
          reg_data(130)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(130)(12)             <=  localWrData(12);                --DRP Enable
        when 131 => --0x83
          reg_data(131)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 132 => --0x84
          reg_data(132)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(132)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(132)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(132)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 133 => --0x85
          reg_data(133)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(133)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(133)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(133)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 137 => --0x89
          Ctrl.MGT.MGT(15).DRP.wr_en    <=  localWrData( 0);               
        when 138 => --0x8a
          reg_data(138)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(138)(12)             <=  localWrData(12);                --DRP Enable
        when 139 => --0x8b
          reg_data(139)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 140 => --0x8c
          reg_data(140)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(140)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(140)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(140)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 141 => --0x8d
          reg_data(141)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(141)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(141)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(141)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 145 => --0x91
          Ctrl.MGT.MGT(16).DRP.wr_en    <=  localWrData( 0);               
        when 146 => --0x92
          reg_data(146)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(146)(12)             <=  localWrData(12);                --DRP Enable
        when 147 => --0x93
          reg_data(147)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 148 => --0x94
          reg_data(148)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(148)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(148)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(148)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 149 => --0x95
          reg_data(149)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(149)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(149)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(149)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 153 => --0x99
          Ctrl.MGT.MGT(17).DRP.wr_en    <=  localWrData( 0);               
        when 154 => --0x9a
          reg_data(154)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(154)(12)             <=  localWrData(12);                --DRP Enable
        when 155 => --0x9b
          reg_data(155)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 156 => --0x9c
          reg_data(156)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(156)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(156)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(156)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 157 => --0x9d
          reg_data(157)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(157)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(157)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(157)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 161 => --0xa1
          Ctrl.MGT.MGT(18).DRP.wr_en    <=  localWrData( 0);               
        when 162 => --0xa2
          reg_data(162)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(162)(12)             <=  localWrData(12);                --DRP Enable
        when 163 => --0xa3
          reg_data(163)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 164 => --0xa4
          reg_data(164)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(164)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(164)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(164)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 165 => --0xa5
          reg_data(165)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(165)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(165)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(165)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 169 => --0xa9
          Ctrl.MGT.MGT(19).DRP.wr_en    <=  localWrData( 0);               
        when 170 => --0xaa
          reg_data(170)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(170)(12)             <=  localWrData(12);                --DRP Enable
        when 171 => --0xab
          reg_data(171)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 172 => --0xac
          reg_data(172)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(172)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(172)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(172)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 173 => --0xad
          reg_data(173)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(173)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(173)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(173)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 177 => --0xb1
          Ctrl.MGT.MGT(20).DRP.wr_en    <=  localWrData( 0);               
        when 178 => --0xb2
          reg_data(178)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(178)(12)             <=  localWrData(12);                --DRP Enable
        when 179 => --0xb3
          reg_data(179)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 180 => --0xb4
          reg_data(180)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(180)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(180)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(180)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 181 => --0xb5
          reg_data(181)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(181)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(181)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(181)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 185 => --0xb9
          Ctrl.MGT.MGT(21).DRP.wr_en    <=  localWrData( 0);               
        when 186 => --0xba
          reg_data(186)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(186)(12)             <=  localWrData(12);                --DRP Enable
        when 187 => --0xbb
          reg_data(187)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 188 => --0xbc
          reg_data(188)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(188)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(188)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(188)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 189 => --0xbd
          reg_data(189)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(189)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(189)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(189)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 193 => --0xc1
          Ctrl.MGT.MGT(22).DRP.wr_en    <=  localWrData( 0);               
        when 194 => --0xc2
          reg_data(194)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(194)(12)             <=  localWrData(12);                --DRP Enable
        when 195 => --0xc3
          reg_data(195)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 196 => --0xc4
          reg_data(196)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(196)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(196)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(196)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 197 => --0xc5
          reg_data(197)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(197)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(197)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(197)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 201 => --0xc9
          Ctrl.MGT.MGT(23).DRP.wr_en    <=  localWrData( 0);               
        when 202 => --0xca
          reg_data(202)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(202)(12)             <=  localWrData(12);                --DRP Enable
        when 203 => --0xcb
          reg_data(203)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 204 => --0xcc
          reg_data(204)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(204)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(204)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(204)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 205 => --0xcd
          reg_data(205)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(205)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(205)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(205)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 209 => --0xd1
          Ctrl.MGT.MGT(24).DRP.wr_en    <=  localWrData( 0);               
        when 210 => --0xd2
          reg_data(210)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(210)(12)             <=  localWrData(12);                --DRP Enable
        when 211 => --0xd3
          reg_data(211)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 212 => --0xd4
          reg_data(212)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(212)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(212)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(212)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 213 => --0xd5
          reg_data(213)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(213)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(213)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(213)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 217 => --0xd9
          Ctrl.MGT.MGT(25).DRP.wr_en    <=  localWrData( 0);               
        when 218 => --0xda
          reg_data(218)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(218)(12)             <=  localWrData(12);                --DRP Enable
        when 219 => --0xdb
          reg_data(219)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 220 => --0xdc
          reg_data(220)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(220)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(220)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(220)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 221 => --0xdd
          reg_data(221)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(221)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(221)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(221)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 225 => --0xe1
          Ctrl.MGT.MGT(26).DRP.wr_en    <=  localWrData( 0);               
        when 226 => --0xe2
          reg_data(226)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(226)(12)             <=  localWrData(12);                --DRP Enable
        when 227 => --0xe3
          reg_data(227)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 228 => --0xe4
          reg_data(228)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(228)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(228)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(228)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 229 => --0xe5
          reg_data(229)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(229)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(229)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(229)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 233 => --0xe9
          Ctrl.MGT.MGT(27).DRP.wr_en    <=  localWrData( 0);               
        when 234 => --0xea
          reg_data(234)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(234)(12)             <=  localWrData(12);                --DRP Enable
        when 235 => --0xeb
          reg_data(235)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 236 => --0xec
          reg_data(236)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(236)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(236)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(236)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 237 => --0xed
          reg_data(237)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(237)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(237)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(237)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 241 => --0xf1
          Ctrl.MGT.MGT(28).DRP.wr_en    <=  localWrData( 0);               
        when 242 => --0xf2
          reg_data(242)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(242)(12)             <=  localWrData(12);                --DRP Enable
        when 243 => --0xf3
          reg_data(243)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 244 => --0xf4
          reg_data(244)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(244)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(244)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(244)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 245 => --0xf5
          reg_data(245)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(245)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(245)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(245)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 249 => --0xf9
          Ctrl.MGT.MGT(29).DRP.wr_en    <=  localWrData( 0);               
        when 250 => --0xfa
          reg_data(250)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(250)(12)             <=  localWrData(12);                --DRP Enable
        when 251 => --0xfb
          reg_data(251)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 252 => --0xfc
          reg_data(252)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(252)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(252)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(252)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 253 => --0xfd
          reg_data(253)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(253)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(253)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(253)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 257 => --0x101
          Ctrl.MGT.MGT(30).DRP.wr_en    <=  localWrData( 0);               
        when 258 => --0x102
          reg_data(258)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(258)(12)             <=  localWrData(12);                --DRP Enable
        when 259 => --0x103
          reg_data(259)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 260 => --0x104
          reg_data(260)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(260)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(260)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(260)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 261 => --0x105
          reg_data(261)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(261)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(261)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(261)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 265 => --0x109
          Ctrl.MGT.MGT(31).DRP.wr_en    <=  localWrData( 0);               
        when 266 => --0x10a
          reg_data(266)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(266)(12)             <=  localWrData(12);                --DRP Enable
        when 267 => --0x10b
          reg_data(267)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 268 => --0x10c
          reg_data(268)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(268)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(268)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(268)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 269 => --0x10d
          reg_data(269)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(269)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(269)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(269)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 273 => --0x111
          Ctrl.MGT.MGT(32).DRP.wr_en    <=  localWrData( 0);               
        when 274 => --0x112
          reg_data(274)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(274)(12)             <=  localWrData(12);                --DRP Enable
        when 275 => --0x113
          reg_data(275)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 276 => --0x114
          reg_data(276)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(276)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(276)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(276)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 277 => --0x115
          reg_data(277)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(277)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(277)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(277)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 281 => --0x119
          Ctrl.MGT.MGT(33).DRP.wr_en    <=  localWrData( 0);               
        when 282 => --0x11a
          reg_data(282)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(282)(12)             <=  localWrData(12);                --DRP Enable
        when 283 => --0x11b
          reg_data(283)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 284 => --0x11c
          reg_data(284)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(284)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(284)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(284)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 285 => --0x11d
          reg_data(285)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(285)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(285)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(285)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 289 => --0x121
          Ctrl.MGT.MGT(34).DRP.wr_en    <=  localWrData( 0);               
        when 290 => --0x122
          reg_data(290)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(290)(12)             <=  localWrData(12);                --DRP Enable
        when 291 => --0x123
          reg_data(291)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 292 => --0x124
          reg_data(292)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(292)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(292)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(292)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 293 => --0x125
          reg_data(293)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(293)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(293)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(293)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 297 => --0x129
          Ctrl.MGT.MGT(35).DRP.wr_en    <=  localWrData( 0);               
        when 298 => --0x12a
          reg_data(298)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(298)(12)             <=  localWrData(12);                --DRP Enable
        when 299 => --0x12b
          reg_data(299)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 300 => --0x12c
          reg_data(300)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(300)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(300)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(300)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 301 => --0x12d
          reg_data(301)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(301)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(301)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(301)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 305 => --0x131
          Ctrl.MGT.MGT(36).DRP.wr_en    <=  localWrData( 0);               
        when 306 => --0x132
          reg_data(306)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(306)(12)             <=  localWrData(12);                --DRP Enable
        when 307 => --0x133
          reg_data(307)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 308 => --0x134
          reg_data(308)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(308)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(308)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(308)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 309 => --0x135
          reg_data(309)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(309)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(309)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(309)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 313 => --0x139
          Ctrl.MGT.MGT(37).DRP.wr_en    <=  localWrData( 0);               
        when 314 => --0x13a
          reg_data(314)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(314)(12)             <=  localWrData(12);                --DRP Enable
        when 315 => --0x13b
          reg_data(315)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 316 => --0x13c
          reg_data(316)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(316)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(316)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(316)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 317 => --0x13d
          reg_data(317)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(317)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(317)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(317)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 321 => --0x141
          Ctrl.MGT.MGT(38).DRP.wr_en    <=  localWrData( 0);               
        when 322 => --0x142
          reg_data(322)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(322)(12)             <=  localWrData(12);                --DRP Enable
        when 323 => --0x143
          reg_data(323)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 324 => --0x144
          reg_data(324)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(324)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(324)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(324)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 325 => --0x145
          reg_data(325)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(325)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(325)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(325)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 329 => --0x149
          Ctrl.MGT.MGT(39).DRP.wr_en    <=  localWrData( 0);               
        when 330 => --0x14a
          reg_data(330)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(330)(12)             <=  localWrData(12);                --DRP Enable
        when 331 => --0x14b
          reg_data(331)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 332 => --0x14c
          reg_data(332)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(332)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(332)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(332)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 333 => --0x14d
          reg_data(333)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(333)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(333)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(333)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 337 => --0x151
          Ctrl.MGT.MGT(40).DRP.wr_en    <=  localWrData( 0);               
        when 338 => --0x152
          reg_data(338)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(338)(12)             <=  localWrData(12);                --DRP Enable
        when 339 => --0x153
          reg_data(339)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 340 => --0x154
          reg_data(340)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(340)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(340)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(340)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 341 => --0x155
          reg_data(341)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(341)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(341)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(341)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 345 => --0x159
          Ctrl.MGT.MGT(41).DRP.wr_en    <=  localWrData( 0);               
        when 346 => --0x15a
          reg_data(346)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(346)(12)             <=  localWrData(12);                --DRP Enable
        when 347 => --0x15b
          reg_data(347)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 348 => --0x15c
          reg_data(348)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(348)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(348)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(348)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 349 => --0x15d
          reg_data(349)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(349)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(349)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(349)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 353 => --0x161
          Ctrl.MGT.MGT(42).DRP.wr_en    <=  localWrData( 0);               
        when 354 => --0x162
          reg_data(354)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(354)(12)             <=  localWrData(12);                --DRP Enable
        when 355 => --0x163
          reg_data(355)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 356 => --0x164
          reg_data(356)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(356)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(356)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(356)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 357 => --0x165
          reg_data(357)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(357)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(357)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(357)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 361 => --0x169
          Ctrl.MGT.MGT(43).DRP.wr_en    <=  localWrData( 0);               
        when 362 => --0x16a
          reg_data(362)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(362)(12)             <=  localWrData(12);                --DRP Enable
        when 363 => --0x16b
          reg_data(363)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 364 => --0x16c
          reg_data(364)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(364)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(364)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(364)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 365 => --0x16d
          reg_data(365)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(365)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(365)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(365)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 369 => --0x171
          Ctrl.MGT.MGT(44).DRP.wr_en    <=  localWrData( 0);               
        when 370 => --0x172
          reg_data(370)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(370)(12)             <=  localWrData(12);                --DRP Enable
        when 371 => --0x173
          reg_data(371)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 372 => --0x174
          reg_data(372)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(372)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(372)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(372)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 373 => --0x175
          reg_data(373)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(373)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(373)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(373)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 377 => --0x179
          Ctrl.MGT.MGT(45).DRP.wr_en    <=  localWrData( 0);               
        when 378 => --0x17a
          reg_data(378)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(378)(12)             <=  localWrData(12);                --DRP Enable
        when 379 => --0x17b
          reg_data(379)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 380 => --0x17c
          reg_data(380)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(380)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(380)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(380)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 381 => --0x17d
          reg_data(381)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(381)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(381)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(381)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 385 => --0x181
          Ctrl.MGT.MGT(46).DRP.wr_en    <=  localWrData( 0);               
        when 386 => --0x182
          reg_data(386)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(386)(12)             <=  localWrData(12);                --DRP Enable
        when 387 => --0x183
          reg_data(387)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 388 => --0x184
          reg_data(388)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(388)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(388)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(388)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 389 => --0x185
          reg_data(389)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(389)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(389)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(389)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 393 => --0x189
          Ctrl.MGT.MGT(47).DRP.wr_en    <=  localWrData( 0);               
        when 394 => --0x18a
          reg_data(394)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(394)(12)             <=  localWrData(12);                --DRP Enable
        when 395 => --0x18b
          reg_data(395)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 396 => --0x18c
          reg_data(396)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(396)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(396)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(396)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 397 => --0x18d
          reg_data(397)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(397)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(397)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(397)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 401 => --0x191
          Ctrl.MGT.MGT(48).DRP.wr_en    <=  localWrData( 0);               
        when 402 => --0x192
          reg_data(402)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(402)(12)             <=  localWrData(12);                --DRP Enable
        when 403 => --0x193
          reg_data(403)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 404 => --0x194
          reg_data(404)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(404)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(404)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(404)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 405 => --0x195
          reg_data(405)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(405)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(405)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(405)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 409 => --0x199
          Ctrl.MGT.MGT(49).DRP.wr_en    <=  localWrData( 0);               
        when 410 => --0x19a
          reg_data(410)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(410)(12)             <=  localWrData(12);                --DRP Enable
        when 411 => --0x19b
          reg_data(411)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 412 => --0x19c
          reg_data(412)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(412)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(412)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(412)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 413 => --0x19d
          reg_data(413)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(413)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(413)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(413)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 417 => --0x1a1
          Ctrl.MGT.MGT(50).DRP.wr_en    <=  localWrData( 0);               
        when 418 => --0x1a2
          reg_data(418)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(418)(12)             <=  localWrData(12);                --DRP Enable
        when 419 => --0x1a3
          reg_data(419)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 420 => --0x1a4
          reg_data(420)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(420)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(420)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(420)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 421 => --0x1a5
          reg_data(421)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(421)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(421)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(421)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 425 => --0x1a9
          Ctrl.MGT.MGT(51).DRP.wr_en    <=  localWrData( 0);               
        when 426 => --0x1aa
          reg_data(426)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(426)(12)             <=  localWrData(12);                --DRP Enable
        when 427 => --0x1ab
          reg_data(427)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 428 => --0x1ac
          reg_data(428)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(428)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(428)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(428)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 429 => --0x1ad
          reg_data(429)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(429)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(429)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(429)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 433 => --0x1b1
          Ctrl.MGT.MGT(52).DRP.wr_en    <=  localWrData( 0);               
        when 434 => --0x1b2
          reg_data(434)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(434)(12)             <=  localWrData(12);                --DRP Enable
        when 435 => --0x1b3
          reg_data(435)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 436 => --0x1b4
          reg_data(436)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(436)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(436)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(436)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 437 => --0x1b5
          reg_data(437)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(437)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(437)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(437)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 441 => --0x1b9
          Ctrl.MGT.MGT(53).DRP.wr_en    <=  localWrData( 0);               
        when 442 => --0x1ba
          reg_data(442)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(442)(12)             <=  localWrData(12);                --DRP Enable
        when 443 => --0x1bb
          reg_data(443)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 444 => --0x1bc
          reg_data(444)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(444)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(444)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(444)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 445 => --0x1bd
          reg_data(445)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(445)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(445)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(445)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 449 => --0x1c1
          Ctrl.MGT.MGT(54).DRP.wr_en    <=  localWrData( 0);               
        when 450 => --0x1c2
          reg_data(450)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(450)(12)             <=  localWrData(12);                --DRP Enable
        when 451 => --0x1c3
          reg_data(451)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 452 => --0x1c4
          reg_data(452)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(452)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(452)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(452)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 453 => --0x1c5
          reg_data(453)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(453)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(453)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(453)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 457 => --0x1c9
          Ctrl.MGT.MGT(55).DRP.wr_en    <=  localWrData( 0);               
        when 458 => --0x1ca
          reg_data(458)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(458)(12)             <=  localWrData(12);                --DRP Enable
        when 459 => --0x1cb
          reg_data(459)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 460 => --0x1cc
          reg_data(460)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(460)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(460)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(460)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 461 => --0x1cd
          reg_data(461)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(461)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(461)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(461)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 465 => --0x1d1
          Ctrl.MGT.MGT(56).DRP.wr_en    <=  localWrData( 0);               
        when 466 => --0x1d2
          reg_data(466)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(466)(12)             <=  localWrData(12);                --DRP Enable
        when 467 => --0x1d3
          reg_data(467)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 468 => --0x1d4
          reg_data(468)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(468)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(468)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(468)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 469 => --0x1d5
          reg_data(469)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(469)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(469)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(469)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 473 => --0x1d9
          Ctrl.MGT.MGT(57).DRP.wr_en    <=  localWrData( 0);               
        when 474 => --0x1da
          reg_data(474)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(474)(12)             <=  localWrData(12);                --DRP Enable
        when 475 => --0x1db
          reg_data(475)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 476 => --0x1dc
          reg_data(476)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(476)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(476)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(476)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 477 => --0x1dd
          reg_data(477)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(477)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(477)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(477)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 481 => --0x1e1
          Ctrl.MGT.MGT(58).DRP.wr_en    <=  localWrData( 0);               
        when 482 => --0x1e2
          reg_data(482)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(482)(12)             <=  localWrData(12);                --DRP Enable
        when 483 => --0x1e3
          reg_data(483)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 484 => --0x1e4
          reg_data(484)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(484)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(484)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(484)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 485 => --0x1e5
          reg_data(485)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(485)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(485)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(485)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 489 => --0x1e9
          Ctrl.MGT.MGT(59).DRP.wr_en    <=  localWrData( 0);               
        when 490 => --0x1ea
          reg_data(490)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(490)(12)             <=  localWrData(12);                --DRP Enable
        when 491 => --0x1eb
          reg_data(491)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 492 => --0x1ec
          reg_data(492)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(492)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(492)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(492)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 493 => --0x1ed
          reg_data(493)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(493)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(493)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(493)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 497 => --0x1f1
          Ctrl.MGT.MGT(60).DRP.wr_en    <=  localWrData( 0);               
        when 498 => --0x1f2
          reg_data(498)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(498)(12)             <=  localWrData(12);                --DRP Enable
        when 499 => --0x1f3
          reg_data(499)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 500 => --0x1f4
          reg_data(500)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(500)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(500)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(500)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 501 => --0x1f5
          reg_data(501)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(501)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(501)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(501)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 505 => --0x1f9
          Ctrl.MGT.MGT(61).DRP.wr_en    <=  localWrData( 0);               
        when 506 => --0x1fa
          reg_data(506)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(506)(12)             <=  localWrData(12);                --DRP Enable
        when 507 => --0x1fb
          reg_data(507)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 508 => --0x1fc
          reg_data(508)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(508)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(508)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(508)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 509 => --0x1fd
          reg_data(509)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(509)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(509)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(509)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 513 => --0x201
          Ctrl.MGT.MGT(62).DRP.wr_en    <=  localWrData( 0);               
        when 514 => --0x202
          reg_data(514)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(514)(12)             <=  localWrData(12);                --DRP Enable
        when 515 => --0x203
          reg_data(515)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 516 => --0x204
          reg_data(516)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(516)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(516)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(516)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 517 => --0x205
          reg_data(517)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(517)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(517)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(517)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 521 => --0x209
          Ctrl.MGT.MGT(63).DRP.wr_en    <=  localWrData( 0);               
        when 522 => --0x20a
          reg_data(522)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(522)(12)             <=  localWrData(12);                --DRP Enable
        when 523 => --0x20b
          reg_data(523)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 524 => --0x20c
          reg_data(524)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(524)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(524)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(524)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 525 => --0x20d
          reg_data(525)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(525)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(525)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(525)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 529 => --0x211
          Ctrl.MGT.MGT(64).DRP.wr_en    <=  localWrData( 0);               
        when 530 => --0x212
          reg_data(530)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(530)(12)             <=  localWrData(12);                --DRP Enable
        when 531 => --0x213
          reg_data(531)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 532 => --0x214
          reg_data(532)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(532)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(532)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(532)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 533 => --0x215
          reg_data(533)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(533)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(533)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(533)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 537 => --0x219
          Ctrl.MGT.MGT(65).DRP.wr_en    <=  localWrData( 0);               
        when 538 => --0x21a
          reg_data(538)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(538)(12)             <=  localWrData(12);                --DRP Enable
        when 539 => --0x21b
          reg_data(539)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 540 => --0x21c
          reg_data(540)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(540)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(540)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(540)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 541 => --0x21d
          reg_data(541)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(541)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(541)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(541)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 545 => --0x221
          Ctrl.MGT.MGT(66).DRP.wr_en    <=  localWrData( 0);               
        when 546 => --0x222
          reg_data(546)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(546)(12)             <=  localWrData(12);                --DRP Enable
        when 547 => --0x223
          reg_data(547)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 548 => --0x224
          reg_data(548)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(548)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(548)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(548)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 549 => --0x225
          reg_data(549)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(549)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(549)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(549)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 553 => --0x229
          Ctrl.MGT.MGT(67).DRP.wr_en    <=  localWrData( 0);               
        when 554 => --0x22a
          reg_data(554)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(554)(12)             <=  localWrData(12);                --DRP Enable
        when 555 => --0x22b
          reg_data(555)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 556 => --0x22c
          reg_data(556)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(556)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(556)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(556)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 557 => --0x22d
          reg_data(557)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(557)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(557)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(557)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 561 => --0x231
          Ctrl.MGT.MGT(68).DRP.wr_en    <=  localWrData( 0);               
        when 562 => --0x232
          reg_data(562)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(562)(12)             <=  localWrData(12);                --DRP Enable
        when 563 => --0x233
          reg_data(563)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 564 => --0x234
          reg_data(564)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(564)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(564)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(564)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 565 => --0x235
          reg_data(565)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(565)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(565)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(565)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 569 => --0x239
          Ctrl.MGT.MGT(69).DRP.wr_en    <=  localWrData( 0);               
        when 570 => --0x23a
          reg_data(570)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(570)(12)             <=  localWrData(12);                --DRP Enable
        when 571 => --0x23b
          reg_data(571)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 572 => --0x23c
          reg_data(572)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(572)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(572)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(572)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 573 => --0x23d
          reg_data(573)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(573)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(573)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(573)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 577 => --0x241
          Ctrl.MGT.MGT(70).DRP.wr_en    <=  localWrData( 0);               
        when 578 => --0x242
          reg_data(578)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(578)(12)             <=  localWrData(12);                --DRP Enable
        when 579 => --0x243
          reg_data(579)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 580 => --0x244
          reg_data(580)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(580)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(580)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(580)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 581 => --0x245
          reg_data(581)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(581)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(581)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(581)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 585 => --0x249
          Ctrl.MGT.MGT(71).DRP.wr_en    <=  localWrData( 0);               
        when 586 => --0x24a
          reg_data(586)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(586)(12)             <=  localWrData(12);                --DRP Enable
        when 587 => --0x24b
          reg_data(587)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 588 => --0x24c
          reg_data(588)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(588)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(588)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(588)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 589 => --0x24d
          reg_data(589)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(589)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(589)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(589)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 593 => --0x251
          Ctrl.MGT.MGT(72).DRP.wr_en    <=  localWrData( 0);               
        when 594 => --0x252
          reg_data(594)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(594)(12)             <=  localWrData(12);                --DRP Enable
        when 595 => --0x253
          reg_data(595)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 596 => --0x254
          reg_data(596)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(596)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(596)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(596)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 597 => --0x255
          reg_data(597)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(597)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(597)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(597)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 601 => --0x259
          Ctrl.MGT.MGT(73).DRP.wr_en    <=  localWrData( 0);               
        when 602 => --0x25a
          reg_data(602)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(602)(12)             <=  localWrData(12);                --DRP Enable
        when 603 => --0x25b
          reg_data(603)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 604 => --0x25c
          reg_data(604)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(604)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(604)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(604)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 605 => --0x25d
          reg_data(605)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(605)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(605)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(605)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 609 => --0x261
          Ctrl.MGT.MGT(74).DRP.wr_en    <=  localWrData( 0);               
        when 610 => --0x262
          reg_data(610)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(610)(12)             <=  localWrData(12);                --DRP Enable
        when 611 => --0x263
          reg_data(611)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 612 => --0x264
          reg_data(612)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(612)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(612)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(612)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 613 => --0x265
          reg_data(613)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(613)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(613)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(613)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 617 => --0x269
          Ctrl.MGT.MGT(75).DRP.wr_en    <=  localWrData( 0);               
        when 618 => --0x26a
          reg_data(618)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(618)(12)             <=  localWrData(12);                --DRP Enable
        when 619 => --0x26b
          reg_data(619)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 620 => --0x26c
          reg_data(620)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(620)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(620)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(620)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 621 => --0x26d
          reg_data(621)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(621)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(621)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(621)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 625 => --0x271
          Ctrl.MGT.MGT(76).DRP.wr_en    <=  localWrData( 0);               
        when 626 => --0x272
          reg_data(626)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(626)(12)             <=  localWrData(12);                --DRP Enable
        when 627 => --0x273
          reg_data(627)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 628 => --0x274
          reg_data(628)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(628)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(628)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(628)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 629 => --0x275
          reg_data(629)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(629)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(629)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(629)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 633 => --0x279
          Ctrl.MGT.MGT(77).DRP.wr_en    <=  localWrData( 0);               
        when 634 => --0x27a
          reg_data(634)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(634)(12)             <=  localWrData(12);                --DRP Enable
        when 635 => --0x27b
          reg_data(635)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 636 => --0x27c
          reg_data(636)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(636)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(636)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(636)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 637 => --0x27d
          reg_data(637)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(637)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(637)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(637)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 641 => --0x281
          Ctrl.MGT.MGT(78).DRP.wr_en    <=  localWrData( 0);               
        when 642 => --0x282
          reg_data(642)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(642)(12)             <=  localWrData(12);                --DRP Enable
        when 643 => --0x283
          reg_data(643)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 644 => --0x284
          reg_data(644)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(644)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(644)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(644)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 645 => --0x285
          reg_data(645)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(645)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(645)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(645)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 649 => --0x289
          Ctrl.MGT.MGT(79).DRP.wr_en    <=  localWrData( 0);               
        when 650 => --0x28a
          reg_data(650)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(650)(12)             <=  localWrData(12);                --DRP Enable
        when 651 => --0x28b
          reg_data(651)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 652 => --0x28c
          reg_data(652)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(652)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(652)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(652)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 653 => --0x28d
          reg_data(653)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(653)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(653)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(653)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 657 => --0x291
          Ctrl.MGT.MGT(80).DRP.wr_en    <=  localWrData( 0);               
        when 658 => --0x292
          reg_data(658)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(658)(12)             <=  localWrData(12);                --DRP Enable
        when 659 => --0x293
          reg_data(659)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 660 => --0x294
          reg_data(660)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(660)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(660)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(660)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 661 => --0x295
          reg_data(661)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(661)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(661)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(661)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 665 => --0x299
          Ctrl.MGT.MGT(81).DRP.wr_en    <=  localWrData( 0);               
        when 666 => --0x29a
          reg_data(666)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(666)(12)             <=  localWrData(12);                --DRP Enable
        when 667 => --0x29b
          reg_data(667)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 668 => --0x29c
          reg_data(668)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(668)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(668)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(668)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 669 => --0x29d
          reg_data(669)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(669)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(669)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(669)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 673 => --0x2a1
          Ctrl.MGT.MGT(82).DRP.wr_en    <=  localWrData( 0);               
        when 674 => --0x2a2
          reg_data(674)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(674)(12)             <=  localWrData(12);                --DRP Enable
        when 675 => --0x2a3
          reg_data(675)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 676 => --0x2a4
          reg_data(676)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(676)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(676)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(676)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 677 => --0x2a5
          reg_data(677)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(677)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(677)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(677)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 681 => --0x2a9
          Ctrl.MGT.MGT(83).DRP.wr_en    <=  localWrData( 0);               
        when 682 => --0x2aa
          reg_data(682)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(682)(12)             <=  localWrData(12);                --DRP Enable
        when 683 => --0x2ab
          reg_data(683)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 684 => --0x2ac
          reg_data(684)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(684)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(684)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(684)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 685 => --0x2ad
          reg_data(685)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(685)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(685)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(685)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 689 => --0x2b1
          Ctrl.MGT.MGT(84).DRP.wr_en    <=  localWrData( 0);               
        when 690 => --0x2b2
          reg_data(690)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(690)(12)             <=  localWrData(12);                --DRP Enable
        when 691 => --0x2b3
          reg_data(691)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 692 => --0x2b4
          reg_data(692)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(692)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(692)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(692)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 693 => --0x2b5
          reg_data(693)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(693)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(693)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(693)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 697 => --0x2b9
          Ctrl.MGT.MGT(85).DRP.wr_en    <=  localWrData( 0);               
        when 698 => --0x2ba
          reg_data(698)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(698)(12)             <=  localWrData(12);                --DRP Enable
        when 699 => --0x2bb
          reg_data(699)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 700 => --0x2bc
          reg_data(700)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(700)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(700)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(700)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 701 => --0x2bd
          reg_data(701)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(701)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(701)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(701)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 705 => --0x2c1
          Ctrl.MGT.MGT(86).DRP.wr_en    <=  localWrData( 0);               
        when 706 => --0x2c2
          reg_data(706)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(706)(12)             <=  localWrData(12);                --DRP Enable
        when 707 => --0x2c3
          reg_data(707)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 708 => --0x2c4
          reg_data(708)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(708)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(708)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(708)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 709 => --0x2c5
          reg_data(709)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(709)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(709)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(709)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 713 => --0x2c9
          Ctrl.MGT.MGT(87).DRP.wr_en    <=  localWrData( 0);               
        when 714 => --0x2ca
          reg_data(714)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(714)(12)             <=  localWrData(12);                --DRP Enable
        when 715 => --0x2cb
          reg_data(715)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 716 => --0x2cc
          reg_data(716)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(716)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(716)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(716)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 717 => --0x2cd
          reg_data(717)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(717)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(717)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(717)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 721 => --0x2d1
          Ctrl.MGT.MGT(88).DRP.wr_en    <=  localWrData( 0);               
        when 722 => --0x2d2
          reg_data(722)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(722)(12)             <=  localWrData(12);                --DRP Enable
        when 723 => --0x2d3
          reg_data(723)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 724 => --0x2d4
          reg_data(724)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(724)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(724)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(724)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 725 => --0x2d5
          reg_data(725)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(725)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(725)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(725)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 729 => --0x2d9
          Ctrl.MGT.MGT(89).DRP.wr_en    <=  localWrData( 0);               
        when 730 => --0x2da
          reg_data(730)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(730)(12)             <=  localWrData(12);                --DRP Enable
        when 731 => --0x2db
          reg_data(731)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 732 => --0x2dc
          reg_data(732)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(732)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(732)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(732)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 733 => --0x2dd
          reg_data(733)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(733)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(733)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(733)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 737 => --0x2e1
          Ctrl.MGT.MGT(90).DRP.wr_en    <=  localWrData( 0);               
        when 738 => --0x2e2
          reg_data(738)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(738)(12)             <=  localWrData(12);                --DRP Enable
        when 739 => --0x2e3
          reg_data(739)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 740 => --0x2e4
          reg_data(740)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(740)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(740)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(740)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 741 => --0x2e5
          reg_data(741)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(741)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(741)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(741)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 745 => --0x2e9
          Ctrl.MGT.MGT(91).DRP.wr_en    <=  localWrData( 0);               
        when 746 => --0x2ea
          reg_data(746)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(746)(12)             <=  localWrData(12);                --DRP Enable
        when 747 => --0x2eb
          reg_data(747)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 748 => --0x2ec
          reg_data(748)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(748)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(748)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(748)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 749 => --0x2ed
          reg_data(749)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(749)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(749)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(749)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 753 => --0x2f1
          Ctrl.MGT.MGT(92).DRP.wr_en    <=  localWrData( 0);               
        when 754 => --0x2f2
          reg_data(754)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(754)(12)             <=  localWrData(12);                --DRP Enable
        when 755 => --0x2f3
          reg_data(755)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 756 => --0x2f4
          reg_data(756)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(756)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(756)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(756)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 757 => --0x2f5
          reg_data(757)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(757)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(757)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(757)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 761 => --0x2f9
          Ctrl.MGT.MGT(93).DRP.wr_en    <=  localWrData( 0);               
        when 762 => --0x2fa
          reg_data(762)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(762)(12)             <=  localWrData(12);                --DRP Enable
        when 763 => --0x2fb
          reg_data(763)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 764 => --0x2fc
          reg_data(764)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(764)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(764)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(764)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 765 => --0x2fd
          reg_data(765)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(765)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(765)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(765)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 769 => --0x301
          Ctrl.MGT.MGT(94).DRP.wr_en    <=  localWrData( 0);               
        when 770 => --0x302
          reg_data(770)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(770)(12)             <=  localWrData(12);                --DRP Enable
        when 771 => --0x303
          reg_data(771)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 772 => --0x304
          reg_data(772)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(772)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(772)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(772)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 773 => --0x305
          reg_data(773)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(773)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(773)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(773)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 777 => --0x309
          Ctrl.MGT.MGT(95).DRP.wr_en    <=  localWrData( 0);               
        when 778 => --0x30a
          reg_data(778)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(778)(12)             <=  localWrData(12);                --DRP Enable
        when 779 => --0x30b
          reg_data(779)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 780 => --0x30c
          reg_data(780)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(780)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(780)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(780)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 781 => --0x30d
          reg_data(781)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(781)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(781)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(781)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 785 => --0x311
          Ctrl.MGT.MGT(96).DRP.wr_en    <=  localWrData( 0);               
        when 786 => --0x312
          reg_data(786)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(786)(12)             <=  localWrData(12);                --DRP Enable
        when 787 => --0x313
          reg_data(787)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 788 => --0x314
          reg_data(788)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(788)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(788)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(788)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 789 => --0x315
          reg_data(789)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(789)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(789)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(789)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 793 => --0x319
          Ctrl.MGT.MGT(97).DRP.wr_en    <=  localWrData( 0);               
        when 794 => --0x31a
          reg_data(794)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(794)(12)             <=  localWrData(12);                --DRP Enable
        when 795 => --0x31b
          reg_data(795)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 796 => --0x31c
          reg_data(796)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(796)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(796)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(796)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 797 => --0x31d
          reg_data(797)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(797)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(797)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(797)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 801 => --0x321
          Ctrl.MGT.MGT(98).DRP.wr_en    <=  localWrData( 0);               
        when 802 => --0x322
          reg_data(802)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(802)(12)             <=  localWrData(12);                --DRP Enable
        when 803 => --0x323
          reg_data(803)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 804 => --0x324
          reg_data(804)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(804)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(804)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(804)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 805 => --0x325
          reg_data(805)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(805)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(805)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(805)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 809 => --0x329
          Ctrl.MGT.MGT(99).DRP.wr_en    <=  localWrData( 0);               
        when 810 => --0x32a
          reg_data(810)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(810)(12)             <=  localWrData(12);                --DRP Enable
        when 811 => --0x32b
          reg_data(811)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 812 => --0x32c
          reg_data(812)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(812)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(812)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(812)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 813 => --0x32d
          reg_data(813)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(813)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(813)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(813)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 817 => --0x331
          Ctrl.MGT.MGT(100).DRP.wr_en   <=  localWrData( 0);               
        when 818 => --0x332
          reg_data(818)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(818)(12)             <=  localWrData(12);                --DRP Enable
        when 819 => --0x333
          reg_data(819)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 820 => --0x334
          reg_data(820)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(820)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(820)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(820)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 821 => --0x335
          reg_data(821)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(821)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(821)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(821)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 825 => --0x339
          Ctrl.MGT.MGT(101).DRP.wr_en   <=  localWrData( 0);               
        when 826 => --0x33a
          reg_data(826)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(826)(12)             <=  localWrData(12);                --DRP Enable
        when 827 => --0x33b
          reg_data(827)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 828 => --0x33c
          reg_data(828)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(828)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(828)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(828)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 829 => --0x33d
          reg_data(829)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(829)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(829)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(829)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 833 => --0x341
          Ctrl.MGT.MGT(102).DRP.wr_en   <=  localWrData( 0);               
        when 834 => --0x342
          reg_data(834)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(834)(12)             <=  localWrData(12);                --DRP Enable
        when 835 => --0x343
          reg_data(835)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 836 => --0x344
          reg_data(836)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(836)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(836)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(836)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 837 => --0x345
          reg_data(837)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(837)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(837)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(837)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 841 => --0x349
          Ctrl.MGT.MGT(103).DRP.wr_en   <=  localWrData( 0);               
        when 842 => --0x34a
          reg_data(842)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(842)(12)             <=  localWrData(12);                --DRP Enable
        when 843 => --0x34b
          reg_data(843)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 844 => --0x34c
          reg_data(844)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(844)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(844)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(844)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 845 => --0x34d
          reg_data(845)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(845)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(845)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(845)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 849 => --0x351
          Ctrl.MGT.MGT(104).DRP.wr_en   <=  localWrData( 0);               
        when 850 => --0x352
          reg_data(850)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(850)(12)             <=  localWrData(12);                --DRP Enable
        when 851 => --0x353
          reg_data(851)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 852 => --0x354
          reg_data(852)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(852)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(852)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(852)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 853 => --0x355
          reg_data(853)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(853)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(853)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(853)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 857 => --0x359
          Ctrl.MGT.MGT(105).DRP.wr_en   <=  localWrData( 0);               
        when 858 => --0x35a
          reg_data(858)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(858)(12)             <=  localWrData(12);                --DRP Enable
        when 859 => --0x35b
          reg_data(859)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 860 => --0x35c
          reg_data(860)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(860)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(860)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(860)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 861 => --0x35d
          reg_data(861)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(861)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(861)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(861)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 865 => --0x361
          Ctrl.MGT.MGT(106).DRP.wr_en   <=  localWrData( 0);               
        when 866 => --0x362
          reg_data(866)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(866)(12)             <=  localWrData(12);                --DRP Enable
        when 867 => --0x363
          reg_data(867)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 868 => --0x364
          reg_data(868)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(868)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(868)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(868)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 869 => --0x365
          reg_data(869)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(869)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(869)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(869)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 873 => --0x369
          Ctrl.MGT.MGT(107).DRP.wr_en   <=  localWrData( 0);               
        when 874 => --0x36a
          reg_data(874)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(874)(12)             <=  localWrData(12);                --DRP Enable
        when 875 => --0x36b
          reg_data(875)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 876 => --0x36c
          reg_data(876)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(876)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(876)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(876)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 877 => --0x36d
          reg_data(877)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(877)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(877)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(877)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 881 => --0x371
          Ctrl.MGT.MGT(108).DRP.wr_en   <=  localWrData( 0);               
        when 882 => --0x372
          reg_data(882)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(882)(12)             <=  localWrData(12);                --DRP Enable
        when 883 => --0x373
          reg_data(883)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 884 => --0x374
          reg_data(884)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(884)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(884)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(884)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 885 => --0x375
          reg_data(885)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(885)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(885)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(885)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 889 => --0x379
          Ctrl.MGT.MGT(109).DRP.wr_en   <=  localWrData( 0);               
        when 890 => --0x37a
          reg_data(890)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(890)(12)             <=  localWrData(12);                --DRP Enable
        when 891 => --0x37b
          reg_data(891)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 892 => --0x37c
          reg_data(892)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(892)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(892)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(892)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 893 => --0x37d
          reg_data(893)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(893)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(893)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(893)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 897 => --0x381
          Ctrl.MGT.MGT(110).DRP.wr_en   <=  localWrData( 0);               
        when 898 => --0x382
          reg_data(898)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(898)(12)             <=  localWrData(12);                --DRP Enable
        when 899 => --0x383
          reg_data(899)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 900 => --0x384
          reg_data(900)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(900)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(900)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(900)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 901 => --0x385
          reg_data(901)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(901)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(901)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(901)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 905 => --0x389
          Ctrl.MGT.MGT(111).DRP.wr_en   <=  localWrData( 0);               
        when 906 => --0x38a
          reg_data(906)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(906)(12)             <=  localWrData(12);                --DRP Enable
        when 907 => --0x38b
          reg_data(907)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 908 => --0x38c
          reg_data(908)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(908)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(908)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(908)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 909 => --0x38d
          reg_data(909)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(909)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(909)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(909)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 913 => --0x391
          Ctrl.MGT.MGT(112).DRP.wr_en   <=  localWrData( 0);               
        when 914 => --0x392
          reg_data(914)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(914)(12)             <=  localWrData(12);                --DRP Enable
        when 915 => --0x393
          reg_data(915)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 916 => --0x394
          reg_data(916)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(916)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(916)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(916)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 917 => --0x395
          reg_data(917)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(917)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(917)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(917)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 921 => --0x399
          Ctrl.MGT.MGT(113).DRP.wr_en   <=  localWrData( 0);               
        when 922 => --0x39a
          reg_data(922)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(922)(12)             <=  localWrData(12);                --DRP Enable
        when 923 => --0x39b
          reg_data(923)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 924 => --0x39c
          reg_data(924)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(924)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(924)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(924)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 925 => --0x39d
          reg_data(925)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(925)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(925)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(925)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 929 => --0x3a1
          Ctrl.MGT.MGT(114).DRP.wr_en   <=  localWrData( 0);               
        when 930 => --0x3a2
          reg_data(930)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(930)(12)             <=  localWrData(12);                --DRP Enable
        when 931 => --0x3a3
          reg_data(931)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 932 => --0x3a4
          reg_data(932)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(932)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(932)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(932)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 933 => --0x3a5
          reg_data(933)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(933)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(933)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(933)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 937 => --0x3a9
          Ctrl.MGT.MGT(115).DRP.wr_en   <=  localWrData( 0);               
        when 938 => --0x3aa
          reg_data(938)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(938)(12)             <=  localWrData(12);                --DRP Enable
        when 939 => --0x3ab
          reg_data(939)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 940 => --0x3ac
          reg_data(940)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(940)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(940)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(940)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 941 => --0x3ad
          reg_data(941)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(941)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(941)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(941)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 945 => --0x3b1
          Ctrl.MGT.MGT(116).DRP.wr_en   <=  localWrData( 0);               
        when 946 => --0x3b2
          reg_data(946)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(946)(12)             <=  localWrData(12);                --DRP Enable
        when 947 => --0x3b3
          reg_data(947)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 948 => --0x3b4
          reg_data(948)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(948)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(948)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(948)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 949 => --0x3b5
          reg_data(949)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(949)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(949)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(949)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 953 => --0x3b9
          Ctrl.MGT.MGT(117).DRP.wr_en   <=  localWrData( 0);               
        when 954 => --0x3ba
          reg_data(954)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(954)(12)             <=  localWrData(12);                --DRP Enable
        when 955 => --0x3bb
          reg_data(955)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 956 => --0x3bc
          reg_data(956)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(956)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(956)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(956)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 957 => --0x3bd
          reg_data(957)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(957)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(957)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(957)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 961 => --0x3c1
          Ctrl.MGT.MGT(118).DRP.wr_en   <=  localWrData( 0);               
        when 962 => --0x3c2
          reg_data(962)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(962)(12)             <=  localWrData(12);                --DRP Enable
        when 963 => --0x3c3
          reg_data(963)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 964 => --0x3c4
          reg_data(964)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(964)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(964)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(964)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 965 => --0x3c5
          reg_data(965)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(965)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(965)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(965)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 969 => --0x3c9
          Ctrl.MGT.MGT(119).DRP.wr_en   <=  localWrData( 0);               
        when 970 => --0x3ca
          reg_data(970)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(970)(12)             <=  localWrData(12);                --DRP Enable
        when 971 => --0x3cb
          reg_data(971)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 972 => --0x3cc
          reg_data(972)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(972)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(972)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(972)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 973 => --0x3cd
          reg_data(973)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(973)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(973)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(973)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 977 => --0x3d1
          Ctrl.MGT.MGT(120).DRP.wr_en   <=  localWrData( 0);               
        when 978 => --0x3d2
          reg_data(978)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(978)(12)             <=  localWrData(12);                --DRP Enable
        when 979 => --0x3d3
          reg_data(979)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 980 => --0x3d4
          reg_data(980)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(980)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(980)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(980)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 981 => --0x3d5
          reg_data(981)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(981)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(981)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(981)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 985 => --0x3d9
          Ctrl.MGT.MGT(121).DRP.wr_en   <=  localWrData( 0);               
        when 986 => --0x3da
          reg_data(986)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(986)(12)             <=  localWrData(12);                --DRP Enable
        when 987 => --0x3db
          reg_data(987)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 988 => --0x3dc
          reg_data(988)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(988)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(988)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(988)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 989 => --0x3dd
          reg_data(989)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(989)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(989)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(989)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 993 => --0x3e1
          Ctrl.MGT.MGT(122).DRP.wr_en   <=  localWrData( 0);               
        when 994 => --0x3e2
          reg_data(994)( 9 downto  0)   <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(994)(12)             <=  localWrData(12);                --DRP Enable
        when 995 => --0x3e3
          reg_data(995)(31 downto 16)   <=  localWrData(31 downto 16);      --DRP Write Data
        when 996 => --0x3e4
          reg_data(996)( 0)             <=  localWrData( 0);                --tx reset
          reg_data(996)( 1)             <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(996)( 2)             <=  localWrData( 2);                --tx reset_datapath
          reg_data(996)( 3)             <=  localWrData( 3);                --tx reset_bufbypass
        when 997 => --0x3e5
          reg_data(997)( 0)             <=  localWrData( 0);                --rx reset
          reg_data(997)( 1)             <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(997)( 2)             <=  localWrData( 2);                --rx reset_datapath
          reg_data(997)( 3)             <=  localWrData( 3);                --rx reset_bufbypass
        when 1001 => --0x3e9
          Ctrl.MGT.MGT(123).DRP.wr_en   <=  localWrData( 0);               
        when 1002 => --0x3ea
          reg_data(1002)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(1002)(12)            <=  localWrData(12);                --DRP Enable
        when 1003 => --0x3eb
          reg_data(1003)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 1004 => --0x3ec
          reg_data(1004)( 0)            <=  localWrData( 0);                --tx reset
          reg_data(1004)( 1)            <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(1004)( 2)            <=  localWrData( 2);                --tx reset_datapath
          reg_data(1004)( 3)            <=  localWrData( 3);                --tx reset_bufbypass
        when 1005 => --0x3ed
          reg_data(1005)( 0)            <=  localWrData( 0);                --rx reset
          reg_data(1005)( 1)            <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(1005)( 2)            <=  localWrData( 2);                --rx reset_datapath
          reg_data(1005)( 3)            <=  localWrData( 3);                --rx reset_bufbypass
        when 1009 => --0x3f1
          Ctrl.MGT.MGT(124).DRP.wr_en   <=  localWrData( 0);               
        when 1010 => --0x3f2
          reg_data(1010)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(1010)(12)            <=  localWrData(12);                --DRP Enable
        when 1011 => --0x3f3
          reg_data(1011)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 1012 => --0x3f4
          reg_data(1012)( 0)            <=  localWrData( 0);                --tx reset
          reg_data(1012)( 1)            <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(1012)( 2)            <=  localWrData( 2);                --tx reset_datapath
          reg_data(1012)( 3)            <=  localWrData( 3);                --tx reset_bufbypass
        when 1013 => --0x3f5
          reg_data(1013)( 0)            <=  localWrData( 0);                --rx reset
          reg_data(1013)( 1)            <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(1013)( 2)            <=  localWrData( 2);                --rx reset_datapath
          reg_data(1013)( 3)            <=  localWrData( 3);                --rx reset_bufbypass
        when 1017 => --0x3f9
          Ctrl.MGT.MGT(125).DRP.wr_en   <=  localWrData( 0);               
        when 1018 => --0x3fa
          reg_data(1018)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(1018)(12)            <=  localWrData(12);                --DRP Enable
        when 1019 => --0x3fb
          reg_data(1019)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 1020 => --0x3fc
          reg_data(1020)( 0)            <=  localWrData( 0);                --tx reset
          reg_data(1020)( 1)            <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(1020)( 2)            <=  localWrData( 2);                --tx reset_datapath
          reg_data(1020)( 3)            <=  localWrData( 3);                --tx reset_bufbypass
        when 1021 => --0x3fd
          reg_data(1021)( 0)            <=  localWrData( 0);                --rx reset
          reg_data(1021)( 1)            <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(1021)( 2)            <=  localWrData( 2);                --rx reset_datapath
          reg_data(1021)( 3)            <=  localWrData( 3);                --rx reset_bufbypass
        when 1025 => --0x401
          Ctrl.MGT.MGT(126).DRP.wr_en   <=  localWrData( 0);               
        when 1026 => --0x402
          reg_data(1026)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(1026)(12)            <=  localWrData(12);                --DRP Enable
        when 1027 => --0x403
          reg_data(1027)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 1028 => --0x404
          reg_data(1028)( 0)            <=  localWrData( 0);                --tx reset
          reg_data(1028)( 1)            <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(1028)( 2)            <=  localWrData( 2);                --tx reset_datapath
          reg_data(1028)( 3)            <=  localWrData( 3);                --tx reset_bufbypass
        when 1029 => --0x405
          reg_data(1029)( 0)            <=  localWrData( 0);                --rx reset
          reg_data(1029)( 1)            <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(1029)( 2)            <=  localWrData( 2);                --rx reset_datapath
          reg_data(1029)( 3)            <=  localWrData( 3);                --rx reset_bufbypass
        when 1033 => --0x409
          Ctrl.MGT.MGT(127).DRP.wr_en   <=  localWrData( 0);               
        when 1034 => --0x40a
          reg_data(1034)( 9 downto  0)  <=  localWrData( 9 downto  0);      --DRP Address
          reg_data(1034)(12)            <=  localWrData(12);                --DRP Enable
        when 1035 => --0x40b
          reg_data(1035)(31 downto 16)  <=  localWrData(31 downto 16);      --DRP Write Data
        when 1036 => --0x40c
          reg_data(1036)( 0)            <=  localWrData( 0);                --tx reset
          reg_data(1036)( 1)            <=  localWrData( 1);                --tx reset_pll_and_datapath
          reg_data(1036)( 2)            <=  localWrData( 2);                --tx reset_datapath
          reg_data(1036)( 3)            <=  localWrData( 3);                --tx reset_bufbypass
        when 1037 => --0x40d
          reg_data(1037)( 0)            <=  localWrData( 0);                --rx reset
          reg_data(1037)( 1)            <=  localWrData( 1);                --rx reset_pll_and_datapath
          reg_data(1037)( 2)            <=  localWrData( 2);                --rx reset_datapath
          reg_data(1037)( 3)            <=  localWrData( 3);                --rx reset_bufbypass

          when others => null;
        end case;
      end if;
    end if;
  end process reg_writes;







  
end architecture behavioral;