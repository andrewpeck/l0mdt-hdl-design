This file was auto-generated by YML2HDL tool.
https://gitlab.com/tcpaiva/yml2hdl
2022-03-16 16:47:19

R   MPL_SUPER_ACTIONS_CTRL_t:
E      RESET: logic
E      ENABLE: logic
E      DISABLE: logic
E      FREEZE: logic

R   MPL_SUPER_CONFIGS_CTRL_t:
E      THREADS: logic['4 - 1', 0]
E      INPUT_EN: logic
E      OUTPUT_EN: logic
E      FLUSH_MEM_RESET: logic

R   MPL_SUPER_STATUS_MON_t:
E      ENABLED: logic
E      READY: logic
E      FREEZED: logic
E      ERROR: logic['8 - 1', 0]

R   MPL_SUPER_MON_t:
E      STATUS: MPL_SUPER_STATUS_MON_t
R         MPL_SUPER_STATUS_MON_t:
E            ENABLED: logic
E            READY: logic
E            FREEZED: logic
E            ERROR: logic['8 - 1', 0]

R   MPL_SUPER_CTRL_t:
E      ACTIONS: MPL_SUPER_ACTIONS_CTRL_t
R         MPL_SUPER_ACTIONS_CTRL_t:
E            RESET: logic
E            ENABLE: logic
E            DISABLE: logic
E            FREEZE: logic
E      CONFIGS: MPL_SUPER_CONFIGS_CTRL_t
R         MPL_SUPER_CONFIGS_CTRL_t:
E            THREADS: logic['4 - 1', 0]
E            INPUT_EN: logic
E            OUTPUT_EN: logic
E            FLUSH_MEM_RESET: logic

R   MPL_PL_MEM_PL_MEM_SIGNALS_MON_t:
E      rd_rdy: logic
E      freeze_ena: logic

R   MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t:
E      wr_req: logic
E      wr_ack: logic
E      rd_req: logic
E      rd_ack: logic
E      flush_req: logic
E      freeze_req: logic
E      mem_sel: logic['3 - 1', 0]

R   MPL_PL_MEM_PL_MEM_wr_data_CTRL_t:
E      wr_data_0: logic['32 - 1', 0]
E      wr_data_1: logic['32 - 1', 0]
E      wr_data_2: logic['32 - 1', 0]
E      wr_data_3: logic['32 - 1', 0]
E      wr_data_4: logic['20 - 1', 0]

R   MPL_PL_MEM_PL_MEM_rd_data_MON_t:
E      rd_data_0: logic['32 - 1', 0]
E      rd_data_1: logic['32 - 1', 0]
E      rd_data_2: logic['32 - 1', 0]
E      rd_data_3: logic['32 - 1', 0]
E      rd_data_4: logic['20 - 1', 0]

R   MPL_PL_MEM_PL_MEM_MON_t:
E      SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_MON_t
R         MPL_PL_MEM_PL_MEM_SIGNALS_MON_t:
E            rd_rdy: logic
E            freeze_ena: logic
E      rd_data: MPL_PL_MEM_PL_MEM_rd_data_MON_t
R         MPL_PL_MEM_PL_MEM_rd_data_MON_t:
E            rd_data_0: logic['32 - 1', 0]
E            rd_data_1: logic['32 - 1', 0]
E            rd_data_2: logic['32 - 1', 0]
E            rd_data_3: logic['32 - 1', 0]
E            rd_data_4: logic['20 - 1', 0]

A   MPL_PL_MEM_PL_MEM_MON_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_MON_t
R      MPL_PL_MEM_PL_MEM_MON_t:
E         SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_MON_t
R            MPL_PL_MEM_PL_MEM_SIGNALS_MON_t:
E               rd_rdy: logic
E               freeze_ena: logic
E         rd_data: MPL_PL_MEM_PL_MEM_rd_data_MON_t
R            MPL_PL_MEM_PL_MEM_rd_data_MON_t:
E               rd_data_0: logic['32 - 1', 0]
E               rd_data_1: logic['32 - 1', 0]
E               rd_data_2: logic['32 - 1', 0]
E               rd_data_3: logic['32 - 1', 0]
E               rd_data_4: logic['20 - 1', 0]

R   MPL_PL_MEM_PL_MEM_CTRL_t:
E      SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t
R         MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t:
E            wr_req: logic
E            wr_ack: logic
E            rd_req: logic
E            rd_ack: logic
E            flush_req: logic
E            freeze_req: logic
E            mem_sel: logic['3 - 1', 0]
E      wr_addr: logic['12 - 1', 0]
E      rd_addr: logic['12 - 1', 0]
E      wr_data: MPL_PL_MEM_PL_MEM_wr_data_CTRL_t
R         MPL_PL_MEM_PL_MEM_wr_data_CTRL_t:
E            wr_data_0: logic['32 - 1', 0]
E            wr_data_1: logic['32 - 1', 0]
E            wr_data_2: logic['32 - 1', 0]
E            wr_data_3: logic['32 - 1', 0]
E            wr_data_4: logic['20 - 1', 0]

A   MPL_PL_MEM_PL_MEM_CTRL_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_CTRL_t
R      MPL_PL_MEM_PL_MEM_CTRL_t:
E         SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t
R            MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t:
E               wr_req: logic
E               wr_ack: logic
E               rd_req: logic
E               rd_ack: logic
E               flush_req: logic
E               freeze_req: logic
E               mem_sel: logic['3 - 1', 0]
E         wr_addr: logic['12 - 1', 0]
E         rd_addr: logic['12 - 1', 0]
E         wr_data: MPL_PL_MEM_PL_MEM_wr_data_CTRL_t
R            MPL_PL_MEM_PL_MEM_wr_data_CTRL_t:
E               wr_data_0: logic['32 - 1', 0]
E               wr_data_1: logic['32 - 1', 0]
E               wr_data_2: logic['32 - 1', 0]
E               wr_data_3: logic['32 - 1', 0]
E               wr_data_4: logic['20 - 1', 0]

R   MPL_PL_MEM_MON_t:
E      PL_MEM: MPL_PL_MEM_PL_MEM_MON_t_ARRAY
A         MPL_PL_MEM_PL_MEM_MON_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_MON_t
R            MPL_PL_MEM_PL_MEM_MON_t:
E               SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_MON_t
R                  MPL_PL_MEM_PL_MEM_SIGNALS_MON_t:
E                     rd_rdy: logic
E                     freeze_ena: logic
E               rd_data: MPL_PL_MEM_PL_MEM_rd_data_MON_t
R                  MPL_PL_MEM_PL_MEM_rd_data_MON_t:
E                     rd_data_0: logic['32 - 1', 0]
E                     rd_data_1: logic['32 - 1', 0]
E                     rd_data_2: logic['32 - 1', 0]
E                     rd_data_3: logic['32 - 1', 0]
E                     rd_data_4: logic['20 - 1', 0]

R   MPL_PL_MEM_CTRL_t:
E      PL_MEM: MPL_PL_MEM_PL_MEM_CTRL_t_ARRAY
A         MPL_PL_MEM_PL_MEM_CTRL_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_CTRL_t
R            MPL_PL_MEM_PL_MEM_CTRL_t:
E               SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t
R                  MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t:
E                     wr_req: logic
E                     wr_ack: logic
E                     rd_req: logic
E                     rd_ack: logic
E                     flush_req: logic
E                     freeze_req: logic
E                     mem_sel: logic['3 - 1', 0]
E               wr_addr: logic['12 - 1', 0]
E               rd_addr: logic['12 - 1', 0]
E               wr_data: MPL_PL_MEM_PL_MEM_wr_data_CTRL_t
R                  MPL_PL_MEM_PL_MEM_wr_data_CTRL_t:
E                     wr_data_0: logic['32 - 1', 0]
E                     wr_data_1: logic['32 - 1', 0]
E                     wr_data_2: logic['32 - 1', 0]
E                     wr_data_3: logic['32 - 1', 0]
E                     wr_data_4: logic['20 - 1', 0]

R   MPL_MON_t:
E      SUPER: MPL_SUPER_MON_t
R         MPL_SUPER_MON_t:
E            STATUS: MPL_SUPER_STATUS_MON_t
R               MPL_SUPER_STATUS_MON_t:
E                  ENABLED: logic
E                  READY: logic
E                  FREEZED: logic
E                  ERROR: logic['8 - 1', 0]
E      PL_MEM: MPL_PL_MEM_MON_t
R         MPL_PL_MEM_MON_t:
E            PL_MEM: MPL_PL_MEM_PL_MEM_MON_t_ARRAY
A               MPL_PL_MEM_PL_MEM_MON_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_MON_t
R                  MPL_PL_MEM_PL_MEM_MON_t:
E                     SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_MON_t
R                        MPL_PL_MEM_PL_MEM_SIGNALS_MON_t:
E                           rd_rdy: logic
E                           freeze_ena: logic
E                     rd_data: MPL_PL_MEM_PL_MEM_rd_data_MON_t
R                        MPL_PL_MEM_PL_MEM_rd_data_MON_t:
E                           rd_data_0: logic['32 - 1', 0]
E                           rd_data_1: logic['32 - 1', 0]
E                           rd_data_2: logic['32 - 1', 0]
E                           rd_data_3: logic['32 - 1', 0]
E                           rd_data_4: logic['20 - 1', 0]

R   MPL_CTRL_t:
E      SUPER: MPL_SUPER_CTRL_t
R         MPL_SUPER_CTRL_t:
E            ACTIONS: MPL_SUPER_ACTIONS_CTRL_t
R               MPL_SUPER_ACTIONS_CTRL_t:
E                  RESET: logic
E                  ENABLE: logic
E                  DISABLE: logic
E                  FREEZE: logic
E            CONFIGS: MPL_SUPER_CONFIGS_CTRL_t
R               MPL_SUPER_CONFIGS_CTRL_t:
E                  THREADS: logic['4 - 1', 0]
E                  INPUT_EN: logic
E                  OUTPUT_EN: logic
E                  FLUSH_MEM_RESET: logic
E      PL_MEM: MPL_PL_MEM_CTRL_t
R         MPL_PL_MEM_CTRL_t:
E            PL_MEM: MPL_PL_MEM_PL_MEM_CTRL_t_ARRAY
A               MPL_PL_MEM_PL_MEM_CTRL_t_ARRAY: array['5 -1', 0] MPL_PL_MEM_PL_MEM_CTRL_t
R                  MPL_PL_MEM_PL_MEM_CTRL_t:
E                     SIGNALS: MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t
R                        MPL_PL_MEM_PL_MEM_SIGNALS_CTRL_t:
E                           wr_req: logic
E                           wr_ack: logic
E                           rd_req: logic
E                           rd_ack: logic
E                           flush_req: logic
E                           freeze_req: logic
E                           mem_sel: logic['3 - 1', 0]
E                     wr_addr: logic['12 - 1', 0]
E                     rd_addr: logic['12 - 1', 0]
E                     wr_data: MPL_PL_MEM_PL_MEM_wr_data_CTRL_t
R                        MPL_PL_MEM_PL_MEM_wr_data_CTRL_t:
E                           wr_data_0: logic['32 - 1', 0]
E                           wr_data_1: logic['32 - 1', 0]
E                           wr_data_2: logic['32 - 1', 0]
E                           wr_data_3: logic['32 - 1', 0]
E                           wr_data_4: logic['20 - 1', 0]
