// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl

`ifndef HEG_CTRL_SVH
`define HEG_CTRL_SVH

`include <common_ieee_pkg.svh>


  typedef struct packed {
    logic  RESET;
    logic  ENABLE;
    logic  DISABLE;
    logic  FREEZE;
  } HEG_SUPER_ACTIONS_CTRL_t;

  typedef struct packed {
    logic  INPUT_EN;
    logic  OUTPUT_EN;
    logic  FLUSH_MEM_RESET;
  } HEG_SUPER_CONFIGS_CTRL_t;

  typedef struct packed {
    logic  ENABLED;
    logic  READY;
    logic  ERROR;
  } HEG_SUPER_STATUS_MON_t;

  typedef struct packed {
    logic [32-1:0] SLC_PROC;
    logic [32-1:0] HIT_PROC;
    logic [32-1:0] HIT_OK;
    logic [32-1:0] ERROR;
  } HEG_SUPER_COUNTERS_MON_t;

  typedef struct packed {
    HEG_SUPER_STATUS_MON_t   STATUS;
    HEG_SUPER_COUNTERS_MON_t   COUNTERS;
  } HEG_SUPER_MON_t;

  typedef struct packed {
    HEG_SUPER_ACTIONS_CTRL_t   ACTIONS;
    HEG_SUPER_CONFIGS_CTRL_t   CONFIGS;
  } HEG_SUPER_CTRL_t;

  typedef struct packed {
    logic  rd_rdy;
    logic  freeze_ena;
  } HEG_CTRL_ROI_TC_SIGNALS_MON_t;

  typedef struct packed {
    logic  wr_req;
    logic  wr_ack;
    logic  rd_req;
    logic  rd_ack;
    logic  flush_req;
    logic  freeze_req;
    logic [3-1:0] mem_sel;
  } HEG_CTRL_ROI_TC_SIGNALS_CTRL_t;

  typedef struct packed {
    logic [32-1:0] wr_data_0;
    logic [6-1:0] wr_data_1;
  } HEG_CTRL_ROI_TC_wr_data_CTRL_t;

  typedef struct packed {
    logic [6-1:0] rd_data_1;
    logic [32-1:0] rd_data_0;
  } HEG_CTRL_ROI_TC_rd_data_MON_t;

  typedef struct packed {
    HEG_CTRL_ROI_TC_SIGNALS_MON_t   SIGNALS;
    HEG_CTRL_ROI_TC_rd_data_MON_t   rd_data;
  } HEG_CTRL_ROI_TC_MON_t;

  typedef struct packed {
    HEG_CTRL_ROI_TC_SIGNALS_CTRL_t   SIGNALS;
    logic [10-1:0] wr_addr;
    logic [10-1:0] rd_addr;
    HEG_CTRL_ROI_TC_wr_data_CTRL_t   wr_data;
  } HEG_CTRL_ROI_TC_CTRL_t;

  typedef struct packed {
    HEG_CTRL_ROI_TC_MON_t   ROI_TC;
  } HEG_CTRL_MON_t;

  typedef struct packed {
    HEG_CTRL_ROI_TC_CTRL_t   ROI_TC;
  } HEG_CTRL_CTRL_t;

  typedef struct packed {
    logic  RESET;
    logic  ENABLE;
    logic  DISABLE;
    logic  FREEZE;
  } HEG_HP_HP_ACTIONS_CTRL_t;

  typedef struct packed {
    logic  INPUT_EN;
    logic  OUTPUT_EN;
    logic  FLUSH_MEM_RESET;
  } HEG_HP_HP_CONFIGS_CTRL_t;

  typedef struct packed {
    logic  rd_rdy;
    logic  freeze_ena;
  } HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t;

  typedef struct packed {
    logic  wr_req;
    logic  wr_ack;
    logic  rd_req;
    logic  rd_ack;
    logic  flush_req;
    logic  freeze_req;
    logic [3-1:0] mem_sel;
  } HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t;

  typedef struct packed {
    logic [9-1:0] wr_data_0;
  } HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t;

  typedef struct packed {
    logic [9-1:0] rd_data_0;
  } HEG_HP_HP_MDT_DT2R_rd_data_MON_t;

  typedef struct packed {
    HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t   SIGNALS;
    HEG_HP_HP_MDT_DT2R_rd_data_MON_t   rd_data;
  } HEG_HP_HP_MDT_DT2R_MON_t;

  typedef struct packed {
    HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t   SIGNALS;
    logic [10-1:0] wr_addr;
    logic [10-1:0] rd_addr;
    HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t   wr_data;
  } HEG_HP_HP_MDT_DT2R_CTRL_t;

  typedef struct packed {
    HEG_HP_HP_MDT_DT2R_MON_t   MDT_DT2R;
  } HEG_HP_HP_MON_t;

  typedef HEG_HP_HP_MON_t  [6-1:0] HEG_HP_HP_MON_t_ARRAY;

  typedef struct packed {
    HEG_HP_HP_ACTIONS_CTRL_t   ACTIONS;
    HEG_HP_HP_CONFIGS_CTRL_t   CONFIGS;
    HEG_HP_HP_MDT_DT2R_CTRL_t   MDT_DT2R;
  } HEG_HP_HP_CTRL_t;

  typedef HEG_HP_HP_CTRL_t  [6-1:0] HEG_HP_HP_CTRL_t_ARRAY;

  typedef struct packed {
    HEG_HP_HP_MON_t_ARRAY   HP;
  } HEG_HP_MON_t;

  typedef struct packed {
    HEG_HP_HP_CTRL_t_ARRAY   HP;
  } HEG_HP_CTRL_t;

  typedef struct packed {
    HEG_SUPER_MON_t   SUPER;
    HEG_CTRL_MON_t   CTRL;
    HEG_HP_MON_t   HP;
  } HEG_MON_t;

  typedef struct packed {
    HEG_SUPER_CTRL_t   SUPER;
    HEG_CTRL_CTRL_t   CTRL;
    HEG_HP_CTRL_t   HP;
  } HEG_CTRL_t;



`endif // HEG_CTRL_SVH
