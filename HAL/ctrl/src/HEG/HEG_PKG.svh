// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl
// 2022-03-14 23:33:52

`ifndef HEG_PKG_SVH
`define HEG_PKG_SVH


`include <common_ieee_pkg.svh>

package HEG_PKG;

   typedef struct HEG_SUPER_ACTIONS_CTRL_t {
      logic RESET;
      logic ENABLE;
      logic DISABLE;
      logic FREEZE;
   };

   typedef struct HEG_SUPER_CONFIGS_CTRL_t {
      logic INPUT_EN;
      logic OUTPUT_EN;
      logic FLUSH_MEM_RESET;
   };

   typedef struct HEG_SUPER_STATUS_MON_t {
      logic ENABLED;
      logic READY;
      logic ERROR;
   };

   typedef struct HEG_SUPER_COUNTERS_MON_t {
      logic SLC_PROC[32-1:0];
      logic HIT_PROC[32-1:0];
      logic HIT_OK[32-1:0];
      logic ERROR[32-1:0];
   };

   typedef struct HEG_SUPER_MON_t {
      HEG_SUPER_STATUS_MON_t STATUS;
      HEG_SUPER_COUNTERS_MON_t COUNTERS;
   };

   typedef struct HEG_SUPER_CTRL_t {
      HEG_SUPER_ACTIONS_CTRL_t ACTIONS;
      HEG_SUPER_CONFIGS_CTRL_t CONFIGS;
   };

   typedef struct HEG_CTRL_ROI_TC_SIGNALS_MON_t {
      logic rd_rdy;
      logic freeze_ena;
   };

   typedef struct HEG_CTRL_ROI_TC_SIGNALS_CTRL_t {
      logic wr_req;
      logic wr_ack;
      logic rd_req;
      logic rd_ack;
      logic flush_req;
      logic freeze_req;
      logic mem_sel[3-1:0];
   };

   typedef struct HEG_CTRL_ROI_TC_wr_data_CTRL_t {
      logic wr_data_0[32-1:0];
      logic wr_data_1[6-1:0];
   };

   typedef struct HEG_CTRL_ROI_TC_rd_data_MON_t {
      logic rd_data_1[6-1:0];
      logic rd_data_0[32-1:0];
   };

   typedef struct HEG_CTRL_ROI_TC_MON_t {
      HEG_CTRL_ROI_TC_SIGNALS_MON_t SIGNALS;
      HEG_CTRL_ROI_TC_rd_data_MON_t rd_data;
   };

   typedef struct HEG_CTRL_ROI_TC_CTRL_t {
      HEG_CTRL_ROI_TC_SIGNALS_CTRL_t SIGNALS;
      logic wr_addr[10-1:0];
      logic rd_addr[10-1:0];
      HEG_CTRL_ROI_TC_wr_data_CTRL_t wr_data;
   };

   typedef struct HEG_CTRL_MON_t {
      HEG_CTRL_ROI_TC_MON_t ROI_TC;
   };

   typedef struct HEG_CTRL_CTRL_t {
      HEG_CTRL_ROI_TC_CTRL_t ROI_TC;
   };

   typedef struct HEG_HP_HP_ACTIONS_CTRL_t {
      logic RESET;
      logic ENABLE;
      logic DISABLE;
      logic FREEZE;
   };

   typedef struct HEG_HP_HP_CONFIGS_CTRL_t {
      logic INPUT_EN;
      logic OUTPUT_EN;
      logic FLUSH_MEM_RESET;
   };

   typedef struct HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t {
      logic rd_rdy;
      logic freeze_ena;
   };

   typedef struct HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t {
      logic wr_req;
      logic wr_ack;
      logic rd_req;
      logic rd_ack;
      logic flush_req;
      logic freeze_req;
      logic mem_sel[3-1:0];
   };

   typedef struct HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t {
      logic wr_data_0[9-1:0];
   };

   typedef struct HEG_HP_HP_MDT_DT2R_rd_data_MON_t {
      logic rd_data_0[9-1:0];
   };

   typedef struct HEG_HP_HP_MDT_DT2R_MON_t {
      HEG_HP_HP_MDT_DT2R_SIGNALS_MON_t SIGNALS;
      HEG_HP_HP_MDT_DT2R_rd_data_MON_t rd_data;
   };

   typedef struct HEG_HP_HP_MDT_DT2R_CTRL_t {
      HEG_HP_HP_MDT_DT2R_SIGNALS_CTRL_t SIGNALS;
      logic wr_addr[10-1:0];
      logic rd_addr[10-1:0];
      HEG_HP_HP_MDT_DT2R_wr_data_CTRL_t wr_data;
   };

   typedef struct HEG_HP_HP_MON_t {
      HEG_HP_HP_MDT_DT2R_MON_t MDT_DT2R;
   };

   typedef HEG_HP_HP_MON_t HEG_HP_HP_MON_t_ARRAY[6-1:0];

   typedef struct HEG_HP_HP_CTRL_t {
      HEG_HP_HP_ACTIONS_CTRL_t ACTIONS;
      HEG_HP_HP_CONFIGS_CTRL_t CONFIGS;
      HEG_HP_HP_MDT_DT2R_CTRL_t MDT_DT2R;
   };

   typedef HEG_HP_HP_CTRL_t HEG_HP_HP_CTRL_t_ARRAY[6-1:0];

   typedef struct HEG_HP_MON_t {
      HEG_HP_HP_MON_t_ARRAY HP;
   };

   typedef struct HEG_HP_CTRL_t {
      HEG_HP_HP_CTRL_t_ARRAY HP;
   };

   typedef struct HEG_MON_t {
      HEG_SUPER_MON_t SUPER;
      HEG_CTRL_MON_t CTRL;
      HEG_HP_MON_t HP;
   };

   typedef struct HEG_CTRL_t {
      HEG_SUPER_CTRL_t SUPER;
      HEG_CTRL_CTRL_t CTRL;
      HEG_HP_CTRL_t HP;
   };

endpackage : HEG_PKG

`endif // HEG_PKG_SVH
