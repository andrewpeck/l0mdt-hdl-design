This file was auto-generated by YML2HDL tool.
https://gitlab.com/tcpaiva/yml2hdl
2022-03-09 14:36:45

R   SL2MDT_header_rt:
E      h_reserved: logic['SL2MDT_HEADER_H_RESERVED_LEN-1', 0]
E      tcoverflow: logic
E      nmtc_sl: unsigned['SL2MDT_HEADER_NMTC_SL_LEN-1', 0]
E      nmtc_mdt: unsigned['SL2MDT_HEADER_NMTC_MDT_LEN-1', 0]
E      nslc: unsigned['SL2MDT_HEADER_NSLC_SLC_LEN-1', 0]
E      bcid: unsigned['SL2MDT_HEADER_BCID_LEN-1', 0]

R   SL2MDT_trailer_rt:
E      t_reserved: logic['SL2MDT_TRAILER_T_RESERVED_LEN-1', 0]
E      crc: logic['SL2MDT_TRAILER_CRC_LEN-1', 0]
E      fiberid: unsigned['SL2MDT_TRAILER_FIBERID_LEN-1', 0]
E      slid: unsigned['SL2MDT_TRAILER_SLID_LEN-1', 0]
E      comma: logic['SL2MDT_TRAILER_COMMA_LEN-1', 0]

R   SL2MDT_slc_common_rt:
E      header: SL2MDT_header_rt
R         SL2MDT_header_rt:
E            h_reserved: logic['SL2MDT_HEADER_H_RESERVED_LEN-1', 0]
E            tcoverflow: logic
E            nmtc_sl: unsigned['SL2MDT_HEADER_NMTC_SL_LEN-1', 0]
E            nmtc_mdt: unsigned['SL2MDT_HEADER_NMTC_MDT_LEN-1', 0]
E            nslc: unsigned['SL2MDT_HEADER_NSLC_SLC_LEN-1', 0]
E            bcid: unsigned['SL2MDT_HEADER_BCID_LEN-1', 0]
E      slcid: unsigned['SL2MDT_SLC_COMMON_SLCID_LEN-1', 0]
E      tcsent: logic
E      poseta: signed['SL2MDT_SLC_COMMON_POSETA_LEN-1', 0]
E      posphi: unsigned['SL2MDT_SLC_COMMON_POSPHI_LEN-1', 0]
E      SL2MDT_pt: unsigned['SL2MDT_SLC_COMMON_SL_PT_LEN-1', 0]
E      SL2MDT_ptthresh: unsigned['SL2MDT_SLC_COMMON_SL_PTTHRESH_LEN-1', 0]
E      SL2MDT_charge: logic
E      cointype: logic['SL2MDT_SLC_COMMON_COINTYPE_LEN-1', 0]
E      trailer: SL2MDT_trailer_rt
R         SL2MDT_trailer_rt:
E            t_reserved: logic['SL2MDT_TRAILER_T_RESERVED_LEN-1', 0]
E            crc: logic['SL2MDT_TRAILER_CRC_LEN-1', 0]
E            fiberid: unsigned['SL2MDT_TRAILER_FIBERID_LEN-1', 0]
E            slid: unsigned['SL2MDT_TRAILER_SLID_LEN-1', 0]
E            comma: logic['SL2MDT_TRAILER_COMMA_LEN-1', 0]

R   SL2MDT_slc_endcap_rt:
E      e_reserved: logic['SL2MDT_SLC_ENDCAP_E_RESERVED_LEN-1', 0]
E      nswseg_mon: logic
E      nswseg_angdtheta: signed['SL2MDT_SLC_ENDCAP_NSWSEG_ANGDTHETA_LEN-1', 0]
E      nswseg_posphi: unsigned['SL2MDT_SLC_ENDCAP_NSWSEG_POSPHI_LEN-1', 0]
E      nswseg_poseta: unsigned['SL2MDT_SLC_ENDCAP_NSWSEG_POSETA_LEN-1', 0]
E      seg_angdphi: signed['SL2MDT_SLC_ENDCAP_SEG_ANGDPHI_LEN-1', 0]
E      seg_angdtheta: signed['SL2MDT_SLC_ENDCAP_SEG_ANGDTHETA_LEN-1', 0]

R   SL2MDT_slc_barrel_rt:
E      b_reserved: logic['SL2MDT_SLC_BARREL_B_RESERVED_LEN-1', 0]
E      rpc3_posz: signed['SL2MDT_SLC_BARREL_RPC3_POSZ_LEN-1', 0]
E      rpc2_posz: signed['SL2MDT_SLC_BARREL_RPC2_POSZ_LEN-1', 0]
E      rpc1_posz: signed['SL2MDT_SLC_BARREL_RPC1_POSZ_LEN-1', 0]
E      rpc0_posz: signed['SL2MDT_SLC_BARREL_RPC0_POSZ_LEN-1', 0]

R   SL2MDT_slc_rx_rt:
E      data_valid: logic
E      common: SL2MDT_slc_common_rt
R         SL2MDT_slc_common_rt:
E            header: SL2MDT_header_rt
R               SL2MDT_header_rt:
E                  h_reserved: logic['SL2MDT_HEADER_H_RESERVED_LEN-1', 0]
E                  tcoverflow: logic
E                  nmtc_sl: unsigned['SL2MDT_HEADER_NMTC_SL_LEN-1', 0]
E                  nmtc_mdt: unsigned['SL2MDT_HEADER_NMTC_MDT_LEN-1', 0]
E                  nslc: unsigned['SL2MDT_HEADER_NSLC_SLC_LEN-1', 0]
E                  bcid: unsigned['SL2MDT_HEADER_BCID_LEN-1', 0]
E            slcid: unsigned['SL2MDT_SLC_COMMON_SLCID_LEN-1', 0]
E            tcsent: logic
E            poseta: signed['SL2MDT_SLC_COMMON_POSETA_LEN-1', 0]
E            posphi: unsigned['SL2MDT_SLC_COMMON_POSPHI_LEN-1', 0]
E            SL2MDT_pt: unsigned['SL2MDT_SLC_COMMON_SL_PT_LEN-1', 0]
E            SL2MDT_ptthresh: unsigned['SL2MDT_SLC_COMMON_SL_PTTHRESH_LEN-1', 0]
E            SL2MDT_charge: logic
E            cointype: logic['SL2MDT_SLC_COMMON_COINTYPE_LEN-1', 0]
E            trailer: SL2MDT_trailer_rt
R               SL2MDT_trailer_rt:
E                  t_reserved: logic['SL2MDT_TRAILER_T_RESERVED_LEN-1', 0]
E                  crc: logic['SL2MDT_TRAILER_CRC_LEN-1', 0]
E                  fiberid: unsigned['SL2MDT_TRAILER_FIBERID_LEN-1', 0]
E                  slid: unsigned['SL2MDT_TRAILER_SLID_LEN-1', 0]
E                  comma: logic['SL2MDT_TRAILER_COMMA_LEN-1', 0]
E      specific: logic['SL2MDT_SLC_RX_SPECIFIC_LEN-1', 0]

A   SL2MDT_slc_rx_bus: array[open] SL2MDT_slc_rx_rt
R      SL2MDT_slc_rx_rt:
E         data_valid: logic
E         common: SL2MDT_slc_common_rt
R            SL2MDT_slc_common_rt:
E               header: SL2MDT_header_rt
R                  SL2MDT_header_rt:
E                     h_reserved: logic['SL2MDT_HEADER_H_RESERVED_LEN-1', 0]
E                     tcoverflow: logic
E                     nmtc_sl: unsigned['SL2MDT_HEADER_NMTC_SL_LEN-1', 0]
E                     nmtc_mdt: unsigned['SL2MDT_HEADER_NMTC_MDT_LEN-1', 0]
E                     nslc: unsigned['SL2MDT_HEADER_NSLC_SLC_LEN-1', 0]
E                     bcid: unsigned['SL2MDT_HEADER_BCID_LEN-1', 0]
E               slcid: unsigned['SL2MDT_SLC_COMMON_SLCID_LEN-1', 0]
E               tcsent: logic
E               poseta: signed['SL2MDT_SLC_COMMON_POSETA_LEN-1', 0]
E               posphi: unsigned['SL2MDT_SLC_COMMON_POSPHI_LEN-1', 0]
E               SL2MDT_pt: unsigned['SL2MDT_SLC_COMMON_SL_PT_LEN-1', 0]
E               SL2MDT_ptthresh: unsigned['SL2MDT_SLC_COMMON_SL_PTTHRESH_LEN-1', 0]
E               SL2MDT_charge: logic
E               cointype: logic['SL2MDT_SLC_COMMON_COINTYPE_LEN-1', 0]
E               trailer: SL2MDT_trailer_rt
R                  SL2MDT_trailer_rt:
E                     t_reserved: logic['SL2MDT_TRAILER_T_RESERVED_LEN-1', 0]
E                     crc: logic['SL2MDT_TRAILER_CRC_LEN-1', 0]
E                     fiberid: unsigned['SL2MDT_TRAILER_FIBERID_LEN-1', 0]
E                     slid: unsigned['SL2MDT_TRAILER_SLID_LEN-1', 0]
E                     comma: logic['SL2MDT_TRAILER_COMMA_LEN-1', 0]
E         specific: logic['SL2MDT_SLC_RX_SPECIFIC_LEN-1', 0]

A   SL2MDT_slc_endcap_bus: array[open] SL2MDT_slc_endcap_rt
R      SL2MDT_slc_endcap_rt:
E         e_reserved: logic['SL2MDT_SLC_ENDCAP_E_RESERVED_LEN-1', 0]
E         nswseg_mon: logic
E         nswseg_angdtheta: signed['SL2MDT_SLC_ENDCAP_NSWSEG_ANGDTHETA_LEN-1', 0]
E         nswseg_posphi: unsigned['SL2MDT_SLC_ENDCAP_NSWSEG_POSPHI_LEN-1', 0]
E         nswseg_poseta: unsigned['SL2MDT_SLC_ENDCAP_NSWSEG_POSETA_LEN-1', 0]
E         seg_angdphi: signed['SL2MDT_SLC_ENDCAP_SEG_ANGDPHI_LEN-1', 0]
E         seg_angdtheta: signed['SL2MDT_SLC_ENDCAP_SEG_ANGDTHETA_LEN-1', 0]

R   SL2MDT_slc_muid_rt:
E      slcid: unsigned['SL2MDT_SLC_COMMON_SLCID_LEN-1', 0]
E      slid: unsigned['SL2MDT_TRAILER_SLID_LEN-1', 0]
E      bcid: unsigned['SL2MDT_HEADER_BCID_LEN-1', 0]

R   vec_mdtid_rt:
E      chamber_id: unsigned['SL2MDT_VEC_MDTID_CHAMBER_ID_LEN-1', 0]
E      chamber_ieta: unsigned['SL2MDT_VEC_MDTID_CHAMBER_IETA_LEN-1', 0]

R   sl2mdt_mtc2sl_rt:
E      data_valid: logic
E      common: slc_common_rt
R         slc_common_rt:
E            header: sl_header_rt
R               sl_header_rt:
E                  h_reserved: logic['SL_HEADER_H_RESERVED_LEN-1', 0]
E                  tcoverflow: logic
E                  nmtc_sl: unsigned['SL_HEADER_NMTC_SL_LEN-1', 0]
E                  nmtc_mdt: unsigned['SL_HEADER_NMTC_MDT_LEN-1', 0]
E                  nslc: unsigned['SL_HEADER_NSLC_LEN-1', 0]
E                  bcid: unsigned['SL_HEADER_BCID_LEN-1', 0]
E            slcid: unsigned['SLC_COMMON_SLCID_LEN-1', 0]
E            tcsent: logic
E            poseta: signed['SLC_COMMON_POSETA_LEN-1', 0]
E            posphi: unsigned['SLC_COMMON_POSPHI_LEN-1', 0]
E            sl_pt: unsigned['SLC_COMMON_SL_PT_LEN-1', 0]
E            sl_ptthresh: unsigned['SLC_COMMON_SL_PTTHRESH_LEN-1', 0]
E            sl_charge: logic
E            cointype: logic['SLC_COMMON_COINTYPE_LEN-1', 0]
E            trailer: sl_trailer_rt
R               sl_trailer_rt:
E                  t_reserved: logic['SL_TRAILER_T_RESERVED_LEN-1', 0]
E                  crc: logic['SL_TRAILER_CRC_LEN-1', 0]
E                  fiberid: unsigned['SL_TRAILER_FIBERID_LEN-1', 0]
E                  slid: unsigned['SL_TRAILER_SLID_LEN-1', 0]
E                  comma: logic['SL_TRAILER_COMMA_LEN-1', 0]
E      mdt_eta: signed['PTCALC2MTC_MDT_ETA_LEN-1', 0]
E      mdt_pt: unsigned['PTCALC2MTC_MDT_PT_LEN-1', 0]
E      mdt_ptthresh: unsigned['PTCALC2MTC_MDT_PTTHRESH_LEN-1', 0]
E      mdt_charge: logic
E      mdt_procflags: logic['SL2MDT_MTC2SL_MDT_PROCFLAGS_LEN-1', 0]
E      mdt_nsegments: unsigned['PTCALC2MTC_MDT_NSEGMENTS_LEN-1', 0]
E      mdt_quality: logic['PTCALC2MTC_MDT_QUALITY_LEN-1', 0]
E      m_reserved: logic['SL2MDT_MTC2SL_M_RESERVED_LEN-1', 0]

A   sl2mdt_mtc_out_bus: array[open] sl2mdt_mtc2sl_rt
R      sl2mdt_mtc2sl_rt:
E         data_valid: logic
E         common: slc_common_rt
R            slc_common_rt:
E               header: sl_header_rt
R                  sl_header_rt:
E                     h_reserved: logic['SL_HEADER_H_RESERVED_LEN-1', 0]
E                     tcoverflow: logic
E                     nmtc_sl: unsigned['SL_HEADER_NMTC_SL_LEN-1', 0]
E                     nmtc_mdt: unsigned['SL_HEADER_NMTC_MDT_LEN-1', 0]
E                     nslc: unsigned['SL_HEADER_NSLC_LEN-1', 0]
E                     bcid: unsigned['SL_HEADER_BCID_LEN-1', 0]
E               slcid: unsigned['SLC_COMMON_SLCID_LEN-1', 0]
E               tcsent: logic
E               poseta: signed['SLC_COMMON_POSETA_LEN-1', 0]
E               posphi: unsigned['SLC_COMMON_POSPHI_LEN-1', 0]
E               sl_pt: unsigned['SLC_COMMON_SL_PT_LEN-1', 0]
E               sl_ptthresh: unsigned['SLC_COMMON_SL_PTTHRESH_LEN-1', 0]
E               sl_charge: logic
E               cointype: logic['SLC_COMMON_COINTYPE_LEN-1', 0]
E               trailer: sl_trailer_rt
R                  sl_trailer_rt:
E                     t_reserved: logic['SL_TRAILER_T_RESERVED_LEN-1', 0]
E                     crc: logic['SL_TRAILER_CRC_LEN-1', 0]
E                     fiberid: unsigned['SL_TRAILER_FIBERID_LEN-1', 0]
E                     slid: unsigned['SL_TRAILER_SLID_LEN-1', 0]
E                     comma: logic['SL_TRAILER_COMMA_LEN-1', 0]
E         mdt_eta: signed['PTCALC2MTC_MDT_ETA_LEN-1', 0]
E         mdt_pt: unsigned['PTCALC2MTC_MDT_PT_LEN-1', 0]
E         mdt_ptthresh: unsigned['PTCALC2MTC_MDT_PTTHRESH_LEN-1', 0]
E         mdt_charge: logic
E         mdt_procflags: logic['SL2MDT_MTC2SL_MDT_PROCFLAGS_LEN-1', 0]
E         mdt_nsegments: unsigned['PTCALC2MTC_MDT_NSEGMENTS_LEN-1', 0]
E         mdt_quality: logic['PTCALC2MTC_MDT_QUALITY_LEN-1', 0]
E         m_reserved: logic['SL2MDT_MTC2SL_M_RESERVED_LEN-1', 0]
