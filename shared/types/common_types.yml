__config__:
    basic_convert_functions : off
    packages:
      shared_lib:
        - common_ieee_pkg
        - l0mdt_constants_pkg
        - l0mdt_dataformats_pkg
        - common_constants_pkg

#############################################################
# L0MDT CONTROL TYPES
#############################################################  

l0mdt_control:
  clk       : { type: logic}
  rst       : { type: logic}
  bx        : { type: logic}

l0mdt_ttc:
  bcr       : { type: logic}
  ocr       : { type: logic}
  ecr       : { type: logic}
  l0a       : { type: logic}
  l1a       : { type: logic}

#############################################################
# INTERFACES TYPES
#############################################################

# -----------------------------------------------------------
#       Sector Logic Rx interface ouytput signal types
# -----------------------------------------------------------

# # slc_muid
# slc_muid:
#   slcid:          {type: unsigned , length: SLC_SLCID_LEN }
#   slid:           {type: unsigned , length: SLC_SLID_LEN}
#   bcid:           {type: unsigned , length: BCID_LEN}

# # slc chambers
# slc_chid:
#   mdt_inn:           {type: unsigned , length: SLC_CHAMBER_LEN}
#   mdt_mid:           {type: unsigned , length: SLC_CHAMBER_LEN}
#   mdt_out:           {type: unsigned , length: SLC_CHAMBER_LEN}
#   mdt_ext:           {type: unsigned , length: SLC_CHAMBER_LEN}

# # slc common
# slc_common:
#   tcid:           { type: logic , length: SLC_TCID_LEN }
#   tcsent:         { type: logic , length: SLC_TCSENT_LEN }
#   pos_eta:        { type: signed , length: SLC_POS_ETA_LEN}
#   pos_phi:        { type: unsigned , length: SLC_POS_PHI_LEN}
#   rpc_pt:         { type: logic , length: SLC_RPC_PT_LEN}
#   pt_th:          { type: logic , length: SLC_PT_TH_LEN}
#   charge:         { type: logic , length: SLC_CHARGE_LEN }

# # slc specific barrel
# slc_barrel:
#   spare_bits:     {type: logic , length: SLC_B_SPARE_LEN}
#   coin_type:      {type: logic , length: SLC_COIN_TYPE_LEN}
#   z_rpc0:         {type: signed , length: SLC_Z_RPC_LEN}
#   z_rpc1:         {type: signed , length: SLC_Z_RPC_LEN}
#   z_rpc2:         {type: signed , length: SLC_Z_RPC_LEN}
#   z_rpc3:         {type: signed , length: SLC_Z_RPC_LEN}

# # slc specific endcap
# slc_endcap:
#   spare_bits:         { type: logic , length: SLC_E_SPARE_LEN }
#   r:                  { type: unsigned , length: SLC_R_LEN }
#   angle_wrt_phi:      { type: signed , length: SLC_ANGLE_WRT_PHI_LEN }
#   angle_wrt_eta:      { type: signed , length: SLC_ANGLE_WRT_ETA_LEN }
#   nsw_eta:            { type: unsigned , length: SLC_NSW_ETA_LEN}
#   nsw_phi:            { type: unsigned , length: SLC_NSW_PHI_LEN}
#   nsw_angle_wrt_eta:  { type: signed , length: SLC_NSW_ANGLE_WRT_ETA_LEN }
#   nsw_monitor:        { type: logic }

# # slc rx data
# slc_rx_data:
#   muid:         {type: slc_muid}
#   chambers:     {type: slc_chid}
#   common:       {type: slc_common}
#   specific:     {type: logic , length: SLC_SPECIFIC_LEN , comment: can be either slc_barrel_vt or slc_endcap_vt}
#   data_valid:   {type: logic}

slc_rx_data_: {array: open , type: slc_rx_data , _: off }

# -----------------------------------------------------------
#   MDT tdc, pullmux & TAR
# -----------------------------------------------------------
# #TDC
# mdt_tdc:
#   ch: { type: logic , length: MDT_TDC_CH_LEN }
#   mode: { type: logic , length: MDT_TDC_MODE_LEN }
#   coarse: { type: unsigned , length: MDT_TDC_COARSE_LEN }
#   fine: { type: unsigned , length: MDT_TDC_FINE_LEN }
#   pw: { type: unsigned , length: MDT_TDC_PW_LEN }
# # mdt pullmux
# mdt_polmux:
#   fiberID: { type: logic , length: MDT_FIBER_LEN }
#   muxID: { type: logic , length: MDT_MUXCH_LEN }
#   tdc: {type: mdt_tdc}
#   data_valid: {type: logic}

mdt_polmux_: {array: open , type: mdt_polmux , _: off }

# # mdt tar
# tar2hps:
#   tube        : { type: unsigned , length: MDT_TUBE_LEN }
#   layer       : { type: unsigned , length: MDT_LAYER_LEN }
#   chamber_id  : { type: unsigned , length: SLC_CHAMBER_LEN}
#   time        : { type: unsigned , length: MDT_TIME_LEN }
#   data_valid  : { type: logic}

tar2hps_      : {array: open , type: tar2hps , _: off}

#############################################################
# INTERBLOCK TYPES
#############################################################

# -----------------------------------------------------------
#       UCM : Muon candidate manager output signal types
# -----------------------------------------------------------

# -----------------------------------------------------------
# slc ucm2hps specific
# barrel
ucm_csf_barrel:
  mbar        : { type: unsigned , length: UCM_MBAR_LEN }
  z           : { type: unsigned , length: UCM_Z_ROI_LEN }

ucm_csf_endcap:
  mbar        : { type: unsigned , length: UCM_MBAR_LEN }
  R           : { type: unsigned , length: UCM_R_ROI_LEN }

# ucm_csf_seed:
#   muid          : { type: slc_muid}
#   mbar          : { type: unsigned , length: UCM_MBAR_LEN }
#   pos           : { type: unsigned , length: UCM_Z_ROI_LEN }
#   chamber_id    : { type: logic , length: SLC_CHAMBER_LEN }
#   data_valid    : { type: logic}

# ucm_csf_seed_a: {array: open , type: ucm_csf_seed}

# UCM2HPS_SPECIFIC_LEN: { qualifier: constant , type: integer , value: 22 }

# ucm_csf_barrel_at: {array: open , type: ucm_csf_barrel}

# slc ucm2hps id
# ucm2hps_id:
#   # bcid          : { type: unsigned , length: BCID_LEN}
#   # muid          : { type: slc_muid }
#   data_valid    : { type: logic }
# # slc ucm2hps

ucm2hps:
  # id            : { type: ucm2hps_id}
  muid          : { type: slc_muid }
  specific      : { type: logic , length: UCM2HPS_SPECIFIC_LEN}
  chamber_id    : { type: logic , length: SLC_CHAMBER_LEN }
  data_valid    : { type: logic}

ucm2hps_        : {array: open , type: ucm2hps , _: off }

# ucm2hps_maxhps  : {array: MAX_NUM_HPS , type: ucm2hps }
# ucm2hps_a       : {array: open , type: ucm2hps_ , _: off }

# -----------------------------------------------------------
#       HEG 2 SF
# -----------------------------------------------------------
# CSF
hp_hit_data:
  local_y     : { type: unsigned , length: MDT_LOCAL_Y_LEN }
  local_x     : { type: unsigned , length: MDT_LOCAL_X_LEN }
  radius      : { type: unsigned , length: MDT_RADIUS_LEN }
  multilayer  : { type: logic }
  data_valid  : { type: logic }

hp_hit_data_a : {array: open, type: hp_hit_data}
# -----------------------------------------------------------
# sf 2 pt
# -----------------------------------------------------------

# sf_seg_data_barrel:
#   pos        : { type: signed, length: SF_SEG_POS_LEN }
#   angle      : { type: signed, length: SF_SEG_ANG_LEN }
#   quality    : { type: logic}

# sf_seg_data_endcap:
#   pos        : { type: unsigned, length: SF_SEG_POS_LEN }
#   angle      : { type: signed, length: SF_SEG_ANG_LEN }
#   quality    : { type: logic}

# sf2pt :
#   data        : {type : logic , length : SF_SEG_DATA_LEN}
#   muid        : { type: slc_muid}
#   chamber_id  : { type: logic , length: SLC_CHAMBER_LEN }
#   data_valid  : { type : logic}

sf2pt   : { type : logic , length : SF_SEG_DATA_LEN}

sf2pt_  : { array: open , type : sf2pt , _ : off}

# sf2pt_a : { array: open , type : sf2pt_ , _: off}

# -----------------------------------------------------------
# slc ucm pipeline
# -----------------------------------------------------------

# ucm2pl:
#   muid          : { type : slc_muid}
#   chambers      : { type : slc_chid}
#   common        : { type : slc_common}
#   specific      : { type : logic , length: SLC_SPECIFIC_LEN}
#   process_ch    : { type : logic , length: 4}
#   processed     : { type : logic }
#   data_valid    : { type : logic }

# PIPELINE_LEN    : { qualifier: constant , type: integer , value: 133 }

ucm2pl_    : {array: open , type: ucm2pl , _ : off }

# #pl 2 pt
# pl2pt:
#   data_valid : { type : logic }
#   muid       : { type : slc_muid}
#   phimod     : { type : signed, length: SLC_PT_PHIMOD_LEN}
#   charge     : { type : logic}

pl2pt_    : {array: open , type: pl2pt , _ : off}

# pl2mtc:
#   muid          : { type : slc_muid}
#   chambers      : { type : slc_chid}
#   common        : { type : slc_common}
#   specific      : { type : logic , length: SLC_SPECIFIC_LEN}
#   process_ch    : { type : logic , length: 4}
#   processed     : { type : logic }
#   data_valid    : { type : logic }

pl2mtc_    : {array: open , type: pl2mtc, _ : off }

# -----------------------------------------------------------
# TF 2 MTC
# -----------------------------------------------------------

# mtc_tf:
#   data_valid : { type : logic }
#   muid       : { type : slc_muid}
#   eta        : { type : signed, length: MTC_ETA_LEN}
#   pt         : { type : unsigned, length: MTC_PT_LEN}
#   pt_thr     : { type : logic, length: MTC_PTTHR_LEN}
#   charge     : { type : logic}
#   nseg       : { type : unsigned, length: MTC_NSEG_LEN}
#   quality    : { type : logic, length: MTC_QUALITY_LEN}

tf2mtc_    : {array: open , type: tf2mtc , _ : off }

# -----------------------------------------------------------
# MTC out
# -----------------------------------------------------------

mtc_out_    : {array: open , type: mtc_out , _ : off }

mtc2nsp_    : {array: open , type: mtc2nsp , _ : off }

# -----------------------------------------------------------
# MTC out
# -----------------------------------------------------------
felix_stream:
  muid          : { type : slc_muid}
  common        : { type : slc_common}
  data_valid : { type : logic }

felix_stream_ : {array: open , type: felix_stream , _ : off }