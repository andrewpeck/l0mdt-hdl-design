////////////////////////////////////////////////////////////////////////////////
//
// MdtGeoConstants
// Copyright (C) University of California, Irvine
// Created by
// Alexander Armstrong (alarmstr@cern.ch)
// on Aug 5th, 2017
//
// Class for ...
////////////////////////////////////////////////////////////////////////////////

#ifndef MDTGEOCONSTANTS_H_INCLUDED
#define MDTGEOCONSTANTS_H_INCLUDED

#include <cmath>
#include <map>
#include <string>
#include <vector>

#include "PhaseIIMuonTriggerNtuple/MuonFixedId.h"
#include "PhaseIIMuonTriggerNtuple/MuonTriggerNtTools.h"
#include "TVector3.h"

const static float BARREL_ETA     = 1.05;
const static float TRANSITION_ETA = 1.35;
const static float ENDCAP_ETA     = 2.4;
const static float FORWARD_ETA    = 2.7;
const static float VFORWARD_ETA   = 3.4;
const float TDC_UNIT              = 0.78125;  // ns

const float SMALL_SEC_DPHI = 0.3016235;
const float LARGE_SEC_DPHI = 0.483776;

const unsigned int MAX_CHAMBER_IETA = 8;
const unsigned int MAX_SECTOR       = 16;
// FIXME : BIR found to have 24 different layer Y' values.
//         BIR1, BIR2/4/5, and BIR6 all have different tube111Y.
//         Keeping all for now until issue is resolved.
//         Should be kept to 16 layers max.
const unsigned int MAX_STATION_LAYER = 24;

const double CSC_MAX_DISTANCE_AVG = 200.0;

static std::map<std::string, int> MDT_WINDOW_SIZE = {  // width in number of tubes
    {"BIL", 3}, {"BIS", 3}, {"BIR", 3}, {"BIM", 3}, {"BML", 3}, {"BMS", 3}, {"BMF", 3}, {"BMG", 3}, {"BOL", 3},
    {"BOS", 3}, {"BOF", 3}, {"BOG", 3}, {"BME", 0}, {"BMR", 0}, {"BOE", 0}, {"BOR", 0}, {"BEE", 0}, {"EEL", 0},
    {"EES", 0}, {"EIL", 0}, {"EIS", 0}, {"EML", 6}, {"EMS", 6}, {"EOL", 6}, {"EOS", 6}};

static std::map<int, const float> MDT_SECTOR_PHI = {{1, 0.},         {2, 0.392699},   {3, 0.785398},   {4, 1.178097},
                                                    {5, 1.570796},   {6, 1.963495},   {7, 2.356194},   {8, 2.748894},
                                                    {9, 3.141593},   {10, -2.748894}, {11, -2.356194}, {12, -1.963495},
                                                    {13, -1.570796}, {14, -1.178097}, {15, -0.785398}, {16, -0.392699}};

static std::map<int, std::map<std::string, const float> > MDT_STATION_RHO = {
    // NOTE: Not accurately defined yet.
    // Currently using distance from beam axis given in
    // MDT Paramter Book Draft 3 (Nov 28, 2007).
    // Special sectors (11-15) use same values from
    // most similar default sector.
    {1, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {2, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}},
    {3, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {4, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}},
    {5, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {6, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}},
    {7, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {8, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}},
    {9, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {10, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}},
    {11, {{"BIM", 4600}, {"BIR", 6056}, {"BML", 7139}, {"BOL", 9500}}},
    {12, {{"BIS", 4600}, {"BMF", 8095}, {"BMG", 8095}, {"BOF", 10569}, {"BOG", 10569}}},
    {13, {{"BIL", 4949}, {"BML", 7139}, {"BOL", 9500}}},
    {14, {{"BIS", 4600}, {"BMF", 8095}, {"BMG", 8095}, {"BOF", 10569}, {"BOG", 10569}}},
    {15, {{"BIM", 4600}, {"BIR", 6056}, {"BML", 7139}, {"BOL", 9500}}},
    {16, {{"BIS", 4600}, {"BMS", 8095}, {"BOS", 10569}}}};
static std::map<int, std::map<std::string, std::vector<float> > > MDT_STATION_Z = {
    // Map of sector number, station name, -> vector of z-positions of each
    // eta-numbered-station
    //
    // Currently using z-value given in MDT Paramter Book version R (Draft
    // 03) (Nov 27, 2007).
    // BMG/BMF use same values
    // BEE values don't seem to always match MDT hits in ntuple
    // BOG have an extra "ghost" station at +Z so the indices line up
    {1,
     {{"BIL", {-5470, -4550, -3450, -2350, -1250, -330, 330, 1250, 2350, 3450, 4550, 5470}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -870, 150, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -870, 150, 2330, 4510, 6210, 8390, 10570}}}},
    {2,
     {{"BIS", {-6810, -5710, -4790, -3870, -2950, -2030, -1110, -10, 10, 1110, 2030, 2950, 3870, 4790, 5710, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -10, 10, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {3,
     {{"BIL", {-5470, -4550, -3450, -2350, -1250, -330, 330, 1250, 2350, 3450, 4550, 5470}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -390, 150, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -870, 150, 2330, 4510, 6210, 8390, 10570}}}},
    {4,
     {{"BIS", {-6810, -5710, -4790, -3870, -2950, -2030, -1110, -10, 10, 1110, 2030, 2950, 3870, 4790, 5710, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -10, 10, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {5,
     {{"BIL", {-5470, -4550, -3450, -2350, -1250, -330, 330, 1250, 2350, 3450, 4550, 5470}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -390, 390, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -3050, -1590, 390, 2330, 4510, 6210, 8390, 10570}}}},
    {6,
     {{"BIS", {-6810, -5710, -4790, -3870, -2950, -2030, -1110, -10, 10, 1110, 2030, 2950, 3870, 4790, 5710, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -10, 10, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {7,
     {{"BIL", {-5470, -4550, -3450, -2350, -1250, -510, 510, 1250, 2350, 3450, 4550, 5470}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -870, 870, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -870, 870, 2330, 4510, 6210, 8390, 10570}}}},
    {8,
     {{"BIS", {-6810, -5890, -4970, -4050, -3130, -2030, -1110, -10, 10, 1110, 2030, 3130, 4050, 4970, 5890, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -730, 730, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {9,
     {{"BIL", {-5470, -4550, -3450, -2350, -1250, -560, 560, 1250, 2350, 3450, 4550, 5470}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -630, 870, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -630, 870, 2330, 4510, 6210, 8390, 10570}}}},
    {10,
     {{"BIS", {-6810, -5890, -4970, -4050, -3130, -2030, -1110, -10, 10, 1110, 2030, 3130, 4050, 4970, 5890, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -10, 10, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {11,
     {{"BIM", {-5470, -4370, -3270, -2170, -1070, 1070, 2170, 3270, 4370, 5470}},
      {"BIR", {-6110, -5357, -4004, -2890, -1956, -565, 565, 1956, 2890, 4004, 5357, 6110}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -630, 630, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -630, 630, 2330, 4510, 6210, 8390, 10570}}}},
    {12,
     {{"BIS", {-6810, -5890, -4970, -4050, -3130, -2030, -1110, -10, 10, 1110, 2030, 3130, 4050, 4970, 5890, 6810}},
      {"BMF", {-7280, -4060, -625, 625, 4060, 7280}},
      {"BMG", {-7280, -4060, -625, 625, 4060, 7280}},
      {"BOF", {-10026, -7279.2, -4054.6, -625.7, 625.7, 4054.6, 7279.2, 10026}},
      {"BOG",
       {-11472.0, -8771.4, -6027.3, -2820.7, /*-608.2,*/ 2820.7, 6027.3, 8771.4, 11472.0,
        /*99999*/}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {13,
     {{"BIL", {-5470, -4370, -3450, -2350, -1250, -150, 330, 1250, 2350, 3450, 4370, 5470}},
      {"BML", {-7690, -6470, -3550, -1850, -150, 390, 1850, 3550, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -3790, -2330, -150, 630, 2330, 3790, 6210, 8390, 10570}}}},
    {14,
     {{"BIS", {-6810, -5890, -4970, -4050, -3130, -2030, -1110, -10, 10, 1110, 2030, 3130, 4050, 4970, 5890, 6810}},
      {"BMF", {-7280, -4060, -625, 625, 4060, 7280}},
      {"BMG", {-7280, -4060, -625, 625, 4060, 7280}},
      {"BOF", {-10026, -7279.2, -4054.6, -625.7, 625.7, 4054.6, 7279.2, 10026}},
      {"BOG",
       {-11472.0, -8771.4, -6027.3, -2820.7, /*-608.2,*/ 2820.7, 6027.3, 8771.4, 11472.0,
        /* 99999*/}},
      {"BEE", {-10350, -8890, 8890, 10350}}}},
    {15,
     {{"BIM", {-5470, -4370, -3270, -2170, -1070, 1070, 2170, 3270, 4370, 5470}},
      {"BIR", {-6110, -5357, -4004, -2890, -1956, -565, 565, 1956, 2890, 4004, 5357, 6110}},
      {"BML", {-7690, -6470, -5250, -3550, -1850, -630, 630, 1850, 3550, 5250, 6470, 7690}},
      {"BOL", {-10570, -8390, -6210, -4510, -2330, -630, 630, 2330, 4510, 6210, 8390, 10570}}}},
    {16,
     {{"BIS", {-6810, -5890, -4970, -4050, -3130, -2030, -1110, -10, 10, 1110, 2030, 3130, 4050, 4970, 5890, 6810}},
      {"BMS", {-7905, -6925, -5140, -3680, -1850, -150, 150, 1850, 3680, 5140, 6925, 7905}},
      {"BOS", {-10910, -8730, -6550, -4370, -2190, -10, 10, 2190, 4370, 6550, 8730, 10910}},
      {"BEE", {-10350, -8890, 8890, 10350}}}}};
static std::map<std::string, const float> MDT_TUBE_LENGTH = {
    {"BIL", 2671.5}, {"BML", 3551.5}, {"BOL", 4961.5}, {"BIS", 1671.5}, {"BMS", 3071.5}, {"BOS", 3773.3},
    {"BIM", 2671.5}, {"BIR", 2671.5}, {"BMF", 3071.5}, {"BMG", 3071.5}, {"BOF", 3773.3}, {"BOG", 3773.3},
};

static std::map<int, std::map<std::string, std::vector<unsigned> > > MDT_STATION_NTUBE = {
    // Number of tubes per chamber varies by sector, layer, and chamber.
    // BEE values possibly dubious
    // BMG/BMF use same values
    {1,
     {{"BIL", {36, 30, 36, 30, 36, 30, /*0*/ 30, 36, 30, 36, 30, 36}},
      {"BML", {48, 40, 40, 56, 56, 32, /*0*/ 56, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 48, /*0*/ 72, 72, 56, 72, 72, 56}}}},
    {2,
     {{"BIS", {16, 36, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 36, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 72, /*0*/ 72, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {3,
     {{"BIL", {36, 30, 36, 30, 36, 30, /*0*/ 30, 36, 30, 36, 30, 36}},
      {"BML", {48, 40, 40, 56, 56, 48, /*0*/ 56, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 48, /*0*/ 72, 72, 56, 72, 72, 56}}}},
    {4,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 72, /*0*/ 72, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {5,
     {{"BIL", {36, 30, 36, 36, 36, 30, /*0*/ 30, 36, 36, 36, 30, 36}},
      {"BML", {48, 40, 40, 56, 56, 48, /*0*/ 48, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 48, 48, /*0*/ 64, 72, 56, 72, 72, 56}}}},
    {6,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 72, /*0*/ 72, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {7,
     {{"BIL", {30, 30, 36, 30, 36, 24, /*0*/ 24, 36, 30, 36, 30, 30}},
      {"BML", {48, 40, 40, 56, 56, 32, /*0*/ 32, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 48, /*0*/ 48, 72, 56, 72, 72, 56}}}},
    {8,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 48, /*0*/ 48, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {9,
     {{"BIL", {36, 30, 36, 30, 36, 30, /*0*/ 30, 36, 30, 36, 30, 36}},
      {"BML", {48, 40, 40, 56, 56, 40, /*0*/ 32, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 56, /*0*/ 48, 72, 56, 72, 72, 56}}}},
    {10,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 72, /*0*/ 72, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {11,
     {{"BIM", {36, 36, 36, 36, 36, /*0*/ 36, 36, 36, 36, 36}},
      {"BIRA", {36, 21, 27, 33, 27, 24, /*0*/ 24, 27, 33, 27, 21, 36}},  // depends on multilayer, special case
      {"BIRB", {36, 24, 30, 33, 30, 30, /*0*/ 30, 30, 33, 30, 24, 36}},  // depends on multilayer, special case
      {"BML", {48, 40, 40, 56, 56, 40, /*0*/ 40, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 56, /*0*/ 56, 72, 56, 72, 72, 56}}}},
    {12,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMF", {48, 64, 72, /*0*/ 72, 64, 48}},
      {"BMG", {48, 64, 72, /*0*/ 72, 64, 48}},
      {"BOF", {40, 48, 64, 72, /*0*/ 72, 64, 48, 40}},
      {"BOG", {40, 40, 40, 40, 40, /*0*/ 40, 40, 40, 40, 40}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {13,
     {{"BIL", {30, 30, 30, 30, 36, 36, /*0*/ 30, 36, 30, 30, 30, 30}},
      {"BML", {48, 40, 40, 56, 56, 56, /*0*/ 48, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 48, 48, 72, /*0*/ 56, 48, 48, 72, 72, 56}}}},
    {14,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMF", {48, 64, 72, /*0*/ 72, 64, 48}},
      {"BMG", {48, 64, 72, /*0*/ 72, 64, 48}},
      {"BOF", {40, 48, 64, 72, /*0*/ 72, 64, 48, 40}},
      {"BOG", {40, 40, 40, 40, 40, /*0*/ 40, 40, 40, 40, 40}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}},
    {15,
     {{"BIM", {36, 36, 36, 36, 36, /*0*/ 36, 36, 36, 36, 36}},
      {"BIRA", {36, 21, 27, 33, 27, 24, /*0*/ 24, 27, 33, 27, 21, 36}},  // depends on multilayer, special case
      {"BIRB", {36, 24, 30, 33, 30, 30, /*0*/ 30, 30, 33, 30, 24, 36}},  // depends on multilayer, special case
      {"BML", {48, 40, 40, 56, 56, 40, /*0*/ 40, 56, 56, 40, 40, 48}},
      {"BOL", {56, 72, 72, 56, 72, 56, /*0*/ 56, 72, 56, 72, 72, 56}}}},
    {16,
     {{"BIS", {16, 30, 30, 30, 30, 30, 30, 36, /*0*/ 36, 30, 30, 30, 30, 30, 30, 16}},
      {"BMS", {48, 32, 48, 48, 48, 56, /*0*/ 56, 48, 48, 48, 32, 48}},
      {"BOS", {64, 72, 72, 72, 72, 72, /*0*/ 72, 72, 72, 72, 72, 64}},
      {"BEE", {48, 48, /*0*/ 48, 48}}}}};

const std::map<std::string, std::map<int, std::map<int, float> > > ETA_DIR_CORRECTION = {
    {"BIL", {{-9, {{20, -0.0179}, {15, -0.0609}, {10, -0.0856}, {5, 0}, {0, 0}}}}},
    {"BIR", {{-9, {{20, -0.0200}, {15, -0.0659}, {10, -0.0888}, {5, 0}, {0, 0}}}}},
    {"BIS", {{-9, {{20, -0.0233}, {15, -0.0655}, {10, -0.0908}, {5, 0}, {0, 0}}}}},
    {"BMF", {{-9, {{20, -0}, {15, -0.0032}, {10, -0.0040}, {5, 0}, {0, 0}}}}},
    {"BMG", {{-9, {{20, -0}, {15, -0.0032}, {10, -0.0040}, {5, 0}, {0, 0}}}}},
    {"BML", {{-9, {{20, -0}, {15, -0.0022}, {10, -0}, {5, 0}, {0, 0}}}}},
    {"BMS", {{-9, {{20, -0}, {15, -0.0040}, {10, -0.0041}, {5, 0}, {0, 0}}}}},
    {"BOL",
     {{-9, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-2, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-1, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {0, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {1, {{20, 0.0065}, {15, 0}, {10, 0.0290}, {5, 0}, {0, 0}}},
      {2, {{20, 0.0105}, {15, 0}, {10, 0.0700}, {5, 0}, {0, 0}}},
      {3, {{20, 0.0038}, {15, 0}, {10, 0.0110}, {5, 0}, {0, 0}}},
      {4, {{20, 0.0037}, {15, 0}, {10, 0.0134}, {5, 0}, {0, 0}}},
      {5, {{20, 0.0032}, {15, 0}, {10, 0.0105}, {5, 0}, {0, 0}}}}},
    {"BOS",
     {{-9, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-2, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-1, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {0, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {1, {{20, 0.0108}, {15, 0}, {10, 0.0572}, {5, 0}, {0, 0}}},
      {2, {{20, 0.0059}, {15, 0}, {10, 0.0601}, {5, 0}, {0, 0}}},
      {3, {{20, 0.0036}, {15, 0}, {10, 0.0101}, {5, 0}, {0, 0}}},
      {4, {{20, 0.0034}, {15, 0}, {10, 0.0064}, {5, 0}, {0, 0}}},
      {5, {{20, 0.0027}, {15, 0}, {10, 0.0046}, {5, 0}, {0, 0}}}}},
    {"EOS",
     {{6, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {7, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {8, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}},
    {"EOL",
     {{6, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {7, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {8, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}}};

const std::map<std::string, std::map<int, std::map<int, float> > > ETA_POS_CORRECTION = {
    {"BIL", {{-9, {{20, 0.0072}, {15, 0.0245}, {10, 0.0407}, {5, 0}, {0, 0}}}}},
    {"BIR", {{-9, {{20, 0.0021}, {15, 0.0082}, {10, 0.0128}, {5, 0}, {0, 0}}}}},
    {"BIS", {{-9, {{20, 0.0120}, {15, 0.0345}, {10, 0.0555}, {5, 0}, {0, 0}}}}},
    {"BMF", {{-9, {{20, 0.0016}, {15, 0.0067}, {10, 0.0095}, {5, 0}, {0, 0}}}}},
    {"BMG", {{-9, {{20, 0.0016}, {15, 0.0067}, {10, 0.0095}, {5, 0}, {0, 0}}}}},
    {"BML", {{-9, {{20, 0.0031}, {15, 0.0134}, {10, 0.0203}, {5, 0}, {0, 0}}}}},
    {"BMS", {{-9, {{20, 0.0016}, {15, 0.0068}, {10, 0.0102}, {5, 0}, {0, 0}}}}},
    {"BOL",
     {{-9, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-2, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-1, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {0, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {1, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {2, {{20, 0.0018}, {15, 0}, {10, 0.0107}, {5, 0}, {0, 0}}},
      {3, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {4, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {5, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}},
    {"BOS",
     {{-9, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-2, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {-1, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {0, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {1, {{20, 0}, {15, 0}, {10, 0.0020}, {5, 0}, {0, 0}}},
      {2, {{20, 0.0013}, {15, 0}, {10, 0.0125}, {5, 0}, {0, 0}}},
      {3, {{20, 0}, {15, 0}, {10, 0.0010}, {5, 0}, {0, 0}}},
      {4, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {5, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}},
    {"EOS",
     {{6, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {7, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {8, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}},
    {"EOL",
     {{6, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {7, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}},
      {8, {{20, 0}, {15, 0}, {10, 0}, {5, 0}, {0, 0}}}}}};

const float TGC_SHIFT_THETA_CORRECTION = 0.0;
const float RPC_SHIFT_THETA_CORRECTION = 0.0;

static const std::map<std::string, float> MDT_STATION_SPACER_HEIGHT = {
    // values taken from parameter book.  In mm
    {"BIS", 6.5}, {"BIL", 170}, {"BIM", 170}, {"BIR", 170}, {"BMS", 170},
    {"BML", 317}, {"BMF", 170}, {"BMG", 170},  // copied BMF
    {"BOS", 317}, {"BOL", 317}, {"BOF", 317}, {"BOG", 317}, {"BEE", 0},
    {"EMS", 170}, {"EML", 170}, {"EOS", 170}, {"EOL", 170}};

static const std::map<std::string, std::vector<float> > MDT_STATION_CHAMBER_HEIGHT = {
    // indexed in station eta (BIS has 2 heights)
    // values taken from parameter book.  In mm
    {"BIS", {284.07, 284.07, 284.07, 284.07, 284.07, 284.07, 284.07, 143.5}},
    {"BIL", {416.07, 416.07, 416.07, 416.07, 416.07, 416.07}},
    {"BIM", {416.07, 416.07, 416.07, 416.07, 416.07}},
    {"BIR", {416.07, 416.07, 416.07, 416.07, 416.07, 416.07}},
    {"BMS", {364.04, 364.04, 364.04, 364.04, 364.04, 364.04}},
    {"BML", {511.04, 511.04, 511.04, 511.04, 511.04, 511.04}},
    {"BMF", {364.04, 364.04, 364.04}},
    {"BMG", {364.04, 364.04, 364.04}},  // copied BMF
    {"BOS", {511.04, 511.04, 511.04, 511.04, 511.04, 511.04}},
    {"BOL", {511.04, 511.04, 511.04, 511.04, 511.04, 511.04}},
    {"BOF", {511.04, 511.04, 511.04, 511.04}},  // only has 1,3,5,7
    {"BOG", {511.04, 511.04, 511.04, 511.04, 511.04}},
    {"BEE", {169.53, 169.53}},
    // TODO
    {"EMS", {0}},
    {"EML", {0}},
    {"EOS", {0}},
    {"EOL", {0}}};

static const std::map<std::string, std::vector<int> > MDT_STATION_NMULTILAYERS = {
    {"BIS", {2, 2, 2, 2, 2, 2, 2, 1}},
    {"BIL", {2, 2, 2, 2, 2, 2}},
    {"BIM", {2, 2, 2, 2, 2}},
    {"BIR", {2, 2, 2, 2, 2, 2}},
    {"BMS", {2, 2, 2, 2, 2, 2}},
    {"BML", {2, 2, 2, 2, 2, 2}},
    {"BMF", {2, 2, 2}},
    {"BMG", {2, 2, 2}},  // copied BMF
    {"BOS", {2, 2, 2, 2, 2, 2}},
    {"BOL", {2, 2, 2, 2, 2, 2}},
    {"BOF", {2, 2, 2, 2, 2, 2, 2}},
    {"BOG", {2, 2, 2, 2, 2, 2, 2, 2, 2}},
    {"BEE", {1, 1}},
    // TODO
    {"EMS", {0}},
    {"EML", {0}},
    {"EOS", {0}},
    {"EOL", {0}},
};

static const std::map<std::string, unsigned> MDT_STATION_NLAYERS_PER_MULTILAYER = {
    // values taken from parameter book. BIS.8 is an exception with 3 layers/ML
    {"BIS", 4}, {"BIL", 4}, {"BIM", 4}, {"BIR", 4}, {"BMS", 3}, {"BML", 3}, {"BMF", 3}, {"BMG", 3},  // copied BMF
    {"BOS", 3}, {"BOL", 3}, {"BOF", 3}, {"BOG", 3}, {"BEE", 4}, {"EMS", 3}, {"EML", 3}, {"EOS", 3},
    {"EOL", 3}, {"EIS", 3}, {"EIL", 3}, {"EES", 3}, {"EEL", 3}};

static const std::map<std::string, std::vector<int> > MDT_STATION_ETA_INDICES = {
    {"BIL", {1, 2, 3, 4, 5, 6}},
    {"BIS", {1, 2, 3, 4, 5, 6, 7, 8}},
    {"BIM", {1, 2, 3, 4, 5}},
    {"BIR", {1, 2, 3, 4, 5, 6}},
    {"BML", {1, 2, 3, 4, 5, 6}},
    {"BMS", {1, 2, 3, 4, 5, 6}},
    {"BMG", {2, 4, 6}},
    {"BMF", {1, 2, 3}},
    {"BOL", {1, 2, 3, 4, 5, 6}},
    {"BOS", {1, 2, 3, 4, 5, 6}},
    {"BOF", {1, 3, 5, 7}},
    {"BOG", {0, 1, 2, 3, 4}},
    {"BEE", {1, 2}},
    {"EEL", {1, 2}},
    {"EES", {1, 2}},
    {"EIL", {1, 2, 3, 4, 5}},
    {"EIS", {1, 2}},
    {"EML", {1, 2, 3, 4, 5}},
    {"EMS", {1, 2, 3, 4, 5}},
    {"EOL", {1, 2, 3, 4, 5, 6}},
    {"EOS", {1, 2, 3, 4, 5, 6}},
};

static const std::map<std::string, std::vector<int> > MDT_STATION_SECTORS = {
    {"BIL", {1, 3, 5, 7, 9, 13}},
    {"BIS", {2, 4, 6, 8, 10, 12, 14, 16}},
    {"BIM", {11, 15}},
    {"BIR", {11, 15}},
    {"BML", {1, 3, 5, 7, 9, 11, 13, 15}},
    {"BMS", {2, 4, 6, 8, 10, 16}},
    {"BMF", {12, 14}},
    {"BOL", {1, 3, 5, 7, 9, 11, 13, 15}},
    {"BOS", {2, 4, 6, 8, 10, 16}},
    {"BOF", {12, 14}},
    {"BOG", {12, 14}},
    {"BEE", {2, 4, 6, 8, 10, 12, 14, 16}},
    {"EEL", {1, 3, 5, 7, 9, 11, 13, 15}},
    {"EES", {2, 4, 6, 8, 10, 12, 14, 16}},
    {"EIL", {1, 3, 5, 7, 9, 11, 13, 15}},  // Eta station 5 only covers sectors 1 & 9
    {"EIS", {2, 4, 6, 8, 10, 12, 14, 16}},
    {"EML", {1, 3, 5, 7, 9, 11, 13, 15}},
    {"EMS", {2, 4, 6, 8, 10, 12, 14, 16}},
    {"EOL", {1, 3, 5, 7, 9, 11, 13, 15}},
    {"EOS", {2, 4, 6, 8, 10, 12, 14, 16}},
};

static const std::map<std::string, std::pair<float, float> > MDT_STATION_LOCAL_ORIGIN = {
    // defined as the min(|z|)-15 [mm] and min(|R|)-15[mm] over all tubes in
    // a
    // chamber
    {"BEE1A02", {8779, 4360.25}},
    {"BEE1A04", {8779, 4360.25}},
    {"BEE1A06", {8779, 4360.25}},
    {"BEE1A08", {8779, 4360.25}},
    {"BEE1A10", {8779, 4360.25}},
    {"BEE1A12", {8779, 4360.25}},
    {"BEE1A14", {8779, 4360.25}},
    {"BEE1A16", {8779, 4360.25}},
    {"BEE1C02", {-8794.02, 4360.25}},
    {"BEE1C04", {-8794.02, 4360.25}},
    {"BEE1C06", {-8794.02, 4360.25}},
    {"BEE1C08", {-8794.02, 4360.25}},
    {"BEE1C10", {-8794.02, 4360.25}},
    {"BEE1C12", {-8794.02, 4360.25}},
    {"BEE1C14", {-8794.02, 4360.25}},
    {"BEE1C16", {-8794.02, 4360.25}},
    {"BEE2A02", {10239, 4360.25}},
    {"BEE2A04", {10239, 4360.25}},
    {"BEE2A06", {10239, 4360.25}},
    {"BEE2A08", {10239, 4360.25}},
    {"BEE2A10", {10239, 4360.25}},
    {"BEE2A12", {10239, 4360.25}},
    {"BEE2A14", {10239, 4360.25}},
    {"BEE2A16", {10239, 4360.25}},
    {"BEE2C02", {-10254, 4360.25}},
    {"BEE2C04", {-10254, 4360.25}},
    {"BEE2C06", {-10254, 4360.25}},
    {"BEE2C08", {-10254, 4360.25}},
    {"BEE2C10", {-10254, 4360.25}},
    {"BEE2C12", {-10254, 4360.25}},
    {"BEE2C14", {-10254, 4360.25}},
    {"BEE2C16", {-10254, 4360.25}},
    {"BIL1A01", {330, 4755.93}},
    {"BIL1A03", {330, 4755.93}},
    {"BIL1A05", {330, 4755.93}},
    {"BIL1A07", {510, 4755.93}},
    {"BIL1A09", {560, 5271.93}},
    {"BIL1A13", {330, 4755.93}},
    {"BIL1C01", {-345.017, 4755.93}},
    {"BIL1C03", {-345.017, 4755.93}},
    {"BIL1C05", {-345.017, 4755.93}},
    {"BIL1C07", {-525.018, 4755.93}},
    {"BIL1C09", {-575.018, 5271.93}},
    {"BIL1C13", {-165.018, 4755.93}},
    {"BIL2A01", {1250, 4755.93}},
    {"BIL2A03", {1250, 4755.93}},
    {"BIL2A05", {1250, 4755.93}},
    {"BIL2A07", {1250, 4755.93}},
    {"BIL2A09", {1250, 4755.93}},
    {"BIL2A13", {1250, 4755.93}},
    {"BIL2C01", {-1265.02, 4755.93}},
    {"BIL2C03", {-1265.02, 4755.93}},
    {"BIL2C05", {-1265.02, 4755.93}},
    {"BIL2C07", {-1265.02, 4755.93}},
    {"BIL2C09", {-1265.02, 4755.93}},
    {"BIL2C13", {-1265.02, 4755.93}},
    {"BIL3A01", {2350, 4755.93}},
    {"BIL3A03", {2350, 4755.93}},
    {"BIL3A05", {2350, 4755.93}},
    {"BIL3A07", {2350, 4755.93}},
    {"BIL3A09", {2350, 4755.93}},
    {"BIL3A13", {2350, 4755.93}},
    {"BIL3C01", {-2365.02, 4755.93}},
    {"BIL3C03", {-2365.02, 4755.93}},
    {"BIL3C05", {-2365.02, 4755.93}},
    {"BIL3C07", {-2365.02, 4755.93}},
    {"BIL3C09", {-2365.02, 4755.93}},
    {"BIL3C13", {-2365.02, 4755.93}},
    {"BIL4A01", {3450, 4755.93}},
    {"BIL4A03", {3450, 4755.93}},
    {"BIL4A05", {3450, 4755.93}},
    {"BIL4A07", {3450, 4755.93}},
    {"BIL4A09", {3450, 4755.93}},
    {"BIL4A13", {3450, 4755.93}},
    {"BIL4C01", {-3465.02, 4755.93}},
    {"BIL4C03", {-3465.02, 4755.93}},
    {"BIL4C05", {-3465.02, 4755.93}},
    {"BIL4C07", {-3465.02, 4755.93}},
    {"BIL4C09", {-3465.02, 4755.93}},
    {"BIL4C13", {-3465.02, 4755.93}},
    {"BIL5A01", {4550, 4755.93}},
    {"BIL5A03", {4550, 4755.93}},
    {"BIL5A05", {4550, 4755.93}},
    {"BIL5A07", {4550, 4755.93}},
    {"BIL5A09", {4550, 4755.93}},
    {"BIL5A13", {4370, 4755.93}},
    {"BIL5C01", {-4565.02, 4755.93}},
    {"BIL5C03", {-4565.02, 4755.93}},
    {"BIL5C05", {-4565.02, 4755.93}},
    {"BIL5C07", {-4565.02, 4755.93}},
    {"BIL5C09", {-4565.02, 4755.93}},
    {"BIL5C13", {-4385.02, 4755.93}},
    {"BIL6A01", {5470, 4755.93}},
    {"BIL6A03", {5470, 4755.93}},
    {"BIL6A05", {5470, 4755.93}},
    {"BIL6A07", {5470, 4755.93}},
    {"BIL6A09", {5470, 4755.93}},
    {"BIL6A13", {5470, 4755.93}},
    {"BIL6C01", {-5485.02, 4755.93}},
    {"BIL6C03", {-5485.02, 4755.93}},
    {"BIL6C05", {-5485.02, 4755.93}},
    {"BIL6C07", {-5485.02, 4755.93}},
    {"BIL6C09", {-5485.02, 4755.93}},
    {"BIL6C13", {-5485.02, 4755.93}},
    {"BIM1A11", {1070, 5210.68}},
    {"BIM1A15", {1070, 5210.68}},
    {"BIM1C11", {-1085.02, 5210.68}},
    {"BIM1C15", {-1085.02, 5210.68}},
    {"BIM2A11", {2170, 5210.68}},
    {"BIM2A15", {2170, 5210.68}},
    {"BIM2C11", {-2185.02, 5210.68}},
    {"BIM2C15", {-2185.02, 5210.68}},
    {"BIM3A11", {3270, 5210.68}},
    {"BIM3A15", {3270, 5210.68}},
    {"BIM3C11", {-3285.02, 5210.68}},
    {"BIM3C15", {-3285.02, 5210.68}},
    {"BIM4A11", {4370, 5210.68}},
    {"BIM4A15", {4370, 5210.68}},
    {"BIM4C11", {-4385.02, 5210.68}},
    {"BIM4C15", {-4385.02, 5210.68}},
    {"BIM5A11", {5470, 5210.68}},
    {"BIM5A15", {5470, 5210.68}},
    {"BIM5C11", {-5485.02, 5210.68}},
    {"BIM5C15", {-5485.02, 5210.68}},
    // bir1 set by hand z=565
    {"BIR1A11", {565, 5939.12}},
    {"BIR1A15", {565, 5939.12}},
    {"BIR1C11", {-565, 5939.12}},
    {"BIR1C15", {-565, 5939.12}},
    {"BIR2A11", {2000, 5977.15}},
    {"BIR2A15", {2000, 5977.15}},
    {"BIR2C11", {-2015.02, 5977.15}},
    {"BIR2C15", {-2015.02, 5977.15}},
    {"BIR3A11", {2920, 5956.38}},
    {"BIR3A15", {2920, 5956.38}},
    {"BIR3C11", {-2935.02, 5956.38}},
    {"BIR3C15", {-2935.02, 5956.38}},
    {"BIR4A11", {4030.1, 5977.15}},
    {"BIR4A15", {4030.1, 5977.15}},
    {"BIR4C11", {-4045.12, 5977.15}},
    {"BIR4C15", {-4045.12, 5977.15}},
    {"BIR5A11", {5410, 5977.15}},
    {"BIR5A15", {5410, 5977.15}},
    {"BIR5C11", {-5425.02, 5977.15}},
    {"BIR5C15", {-5425.02, 5977.15}},
    {"BIR6A11", {6160, 5956.38}},
    {"BIR6A15", {6160, 5956.38}},
    {"BIR6C11", {-6175.02, 5956.38}},
    {"BIR6C15", {-6175.02, 5956.38}},
    {"BIS1A02", {10, 4438.7}},
    {"BIS1A04", {10, 4438.7}},
    {"BIS1A06", {10, 4438.7}},
    {"BIS1A08", {10, 4438.7}},
    {"BIS1A10", {10, 4453.7}},
    {"BIS1A12", {10, 4438.7}},
    {"BIS1A14", {10, 4438.7}},
    {"BIS1A16", {10, 4453.7}},
    {"BIS1C02", {-25.0175, 4438.7}},
    {"BIS1C04", {-25.0175, 4438.7}},
    {"BIS1C06", {-25.0175, 4438.7}},
    {"BIS1C08", {-25.0175, 4438.7}},
    {"BIS1C10", {-25.0175, 4453.7}},
    {"BIS1C12", {-25.0175, 4438.7}},
    {"BIS1C14", {-25.0175, 4438.7}},
    {"BIS1C16", {-25.0175, 4453.7}},
    {"BIS2A02", {1110, 4438.7}},
    {"BIS2A04", {1110, 4438.7}},
    {"BIS2A06", {1110, 4438.7}},
    {"BIS2A08", {1110, 4438.7}},
    {"BIS2A10", {1110, 4453.7}},
    {"BIS2A12", {1110, 4438.7}},
    {"BIS2A14", {1110, 4438.7}},
    {"BIS2A16", {1110, 4453.7}},
    {"BIS2C02", {-1125.02, 4438.7}},
    {"BIS2C04", {-1125.02, 4438.7}},
    {"BIS2C06", {-1125.02, 4438.7}},
    {"BIS2C08", {-1125.02, 4438.7}},
    {"BIS2C10", {-1125.02, 4453.7}},
    {"BIS2C12", {-1125.02, 4438.7}},
    {"BIS2C14", {-1125.02, 4438.7}},
    {"BIS2C16", {-1125.02, 4453.7}},
    {"BIS3A02", {2030, 4438.7}},
    {"BIS3A04", {2030, 4438.7}},
    {"BIS3A06", {2030, 4438.7}},
    {"BIS3A08", {2030, 4438.7}},
    {"BIS3A10", {2030, 4453.7}},
    {"BIS3A12", {2030, 4438.7}},
    {"BIS3A14", {2030, 4438.7}},
    {"BIS3A16", {2030, 4453.7}},
    {"BIS3C02", {-2045.02, 4438.7}},
    {"BIS3C04", {-2045.02, 4438.7}},
    {"BIS3C06", {-2045.02, 4438.7}},
    {"BIS3C08", {-2045.02, 4438.7}},
    {"BIS3C10", {-2045.02, 4453.7}},
    {"BIS3C12", {-2045.02, 4438.7}},
    {"BIS3C14", {-2045.02, 4438.7}},
    {"BIS3C16", {-2045.02, 4453.7}},
    {"BIS4A02", {2950, 4438.7}},
    {"BIS4A04", {2950, 4438.7}},
    {"BIS4A06", {2950, 4438.7}},
    {"BIS4A08", {3130, 4438.7}},
    {"BIS4A10", {3130, 4453.7}},
    {"BIS4A12", {3130, 4438.7}},
    {"BIS4A14", {3130, 4438.7}},
    {"BIS4A16", {3130, 4453.7}},
    {"BIS4C02", {-2965.02, 4438.7}},
    {"BIS4C04", {-2965.02, 4438.7}},
    {"BIS4C06", {-2965.02, 4438.7}},
    {"BIS4C08", {-3145.02, 4438.7}},
    {"BIS4C10", {-3145.02, 4453.7}},
    {"BIS4C12", {-3145.02, 4438.7}},
    {"BIS4C14", {-3145.02, 4438.7}},
    {"BIS4C16", {-3145.02, 4453.7}},
    {"BIS5A02", {3870, 4438.7}},
    {"BIS5A04", {3870, 4438.7}},
    {"BIS5A06", {3870, 4438.7}},
    {"BIS5A08", {4050, 4438.7}},
    {"BIS5A10", {4050, 4453.7}},
    {"BIS5A12", {4050, 4438.7}},
    {"BIS5A14", {4050, 4438.7}},
    {"BIS5A16", {4050, 4453.7}},
    {"BIS5C02", {-3885.02, 4438.7}},
    {"BIS5C04", {-3885.02, 4438.7}},
    {"BIS5C06", {-3885.02, 4438.7}},
    {"BIS5C08", {-4065.02, 4438.7}},
    {"BIS5C10", {-4065.02, 4453.7}},
    {"BIS5C12", {-4065.02, 4438.7}},
    {"BIS5C14", {-4065.02, 4438.7}},
    {"BIS5C16", {-4065.02, 4453.7}},
    {"BIS6A02", {4790, 4438.7}},
    {"BIS6A04", {4790, 4438.7}},
    {"BIS6A06", {4790, 4438.7}},
    {"BIS6A08", {4970, 4438.7}},
    {"BIS6A10", {4970, 4453.7}},
    {"BIS6A12", {4970, 4438.7}},
    {"BIS6A14", {4970, 4438.7}},
    {"BIS6A16", {4970, 4453.7}},
    {"BIS6C02", {-4805.02, 4438.7}},
    {"BIS6C04", {-4805.02, 4438.7}},
    {"BIS6C06", {-4805.02, 4438.7}},
    {"BIS6C08", {-4985.02, 4438.7}},
    {"BIS6C10", {-4985.02, 4453.7}},
    {"BIS6C12", {-4985.02, 4438.7}},
    {"BIS6C14", {-4985.02, 4438.7}},
    {"BIS6C16", {-4985.02, 4453.7}},
    {"BIS7A02", {5710, 4438.7}},
    {"BIS7A04", {5710, 4438.7}},
    {"BIS7A06", {5710, 4438.7}},
    {"BIS7A08", {5890, 4438.7}},
    {"BIS7A10", {5890, 4453.7}},
    {"BIS7A12", {5890, 4438.7}},
    {"BIS7A14", {5890, 4438.7}},
    {"BIS7A16", {5890, 4453.7}},
    {"BIS7C02", {-5725.02, 4438.7}},
    {"BIS7C04", {-5725.02, 4438.7}},
    {"BIS7C06", {-5725.02, 4438.7}},
    {"BIS7C08", {-5905.02, 4438.7}},
    {"BIS7C10", {-5905.02, 4453.7}},
    {"BIS7C12", {-5905.02, 4438.7}},
    {"BIS7C14", {-5905.02, 4438.7}},
    {"BIS7C16", {-5905.02, 4453.7}},
    {"BIS8A02", {6810, 4579.41}},
    {"BIS8A04", {6810, 4579.41}},
    {"BIS8A06", {6810, 4579.41}},
    {"BIS8A08", {6810, 4579.41}},
    {"BIS8A10", {6810, 4594.41}},
    {"BIS8A12", {6810, 4579.41}},
    {"BIS8A14", {6810, 4579.41}},
    {"BIS8A16", {6810, 4594.41}},
    {"BIS8C02", {-6825.02, 4579.41}},
    {"BIS8C04", {-6825.02, 4579.41}},
    {"BIS8C06", {-6825.02, 4579.41}},
    {"BIS8C08", {-6825.02, 4579.41}},
    {"BIS8C10", {-6825.02, 4594.41}},
    {"BIS8C12", {-6825.02, 4579.41}},
    {"BIS8C14", {-6825.02, 4579.41}},
    {"BIS8C16", {-6825.02, 4594.41}},
    {"BMF1A12", {625, 7927.96}},
    {"BMF1A14", {625, 7927.96}},
    {"BMF1C12", {-625, 7927.96}},
    {"BMF1C14", {-625, 7927.96}},
    {"BMF2A12", {4060, 7927.96}},
    {"BMF2A14", {4060, 7927.96}},
    {"BMF2C12", {-4060, 7927.96}},
    {"BMF2C14", {-4060, 7927.96}},
    {"BMF3A12", {7280, 7927.96}},
    {"BMF3A14", {7280, 7927.96}},
    {"BMF3C12", {-7280, 7927.96}},
    {"BMF3C14", {-7280, 7927.96}},
    // copied BMF to BMG - is this OK?
    {"BMG2A12", {625, 7927.96}},
    {"BMG2A14", {625, 7927.96}},
    {"BMG2C12", {-625, 7927.96}},
    {"BMG2C14", {-625, 7927.96}},
    {"BMG4A12", {4060, 7927.96}},
    {"BMG4A14", {4060, 7927.96}},
    {"BMG4C12", {-4060, 7927.96}},
    {"BMG4C14", {-4060, 7927.96}},
    {"BMG6A12", {7280, 7927.96}},
    {"BMG6A14", {7280, 7927.96}},
    {"BMG6C12", {-7280, 7927.96}},
    {"BMG6C14", {-7280, 7927.96}},
    {"BML1A01", {150, 6898.46}},
    {"BML1A03", {150, 6898.46}},
    {"BML1A05", {390, 6898.46}},
    {"BML1A07", {870, 6898.46}},
    {"BML1A09", {870, 6898.46}},
    {"BML1A11", {630, 6898.46}},
    {"BML1A13", {390, 6898.46}},
    {"BML1A15", {630, 6898.46}},
    {"BML1C01", {-870, 6898.46}},
    {"BML1C03", {-390, 6898.46}},
    {"BML1C05", {-390, 6898.46}},
    {"BML1C07", {-870, 6898.46}},
    {"BML1C09", {-630, 6898.46}},
    {"BML1C11", {-630, 6898.46}},
    {"BML1C13", {-150, 6898.46}},
    {"BML1C15", {-630, 6898.46}},
    {"BML2A01", {1850, 6898.46}},
    {"BML2A03", {1850, 6898.46}},
    {"BML2A05", {1850, 6898.46}},
    {"BML2A07", {1850, 6898.46}},
    {"BML2A09", {1850, 6898.46}},
    {"BML2A11", {1850, 6898.46}},
    {"BML2A13", {1850, 6898.46}},
    {"BML2A15", {1850, 6898.46}},
    {"BML2C01", {-1850, 6898.46}},
    {"BML2C03", {-1850, 6898.46}},
    {"BML2C05", {-1850, 6898.46}},
    {"BML2C07", {-1850, 6898.46}},
    {"BML2C09", {-1850, 6898.46}},
    {"BML2C11", {-1850, 6898.46}},
    {"BML2C13", {-1850, 6898.46}},
    {"BML2C15", {-1850, 6898.46}},
    {"BML3A01", {3550, 6898.46}},
    {"BML3A03", {3550, 6898.46}},
    {"BML3A05", {3550, 6898.46}},
    {"BML3A07", {3550, 6898.46}},
    {"BML3A09", {3550, 6898.46}},
    {"BML3A11", {3550, 6898.46}},
    {"BML3A13", {3550, 6898.46}},
    {"BML3A15", {3550, 6898.46}},
    {"BML3C01", {-3550, 6898.46}},
    {"BML3C03", {-3550, 6898.46}},
    {"BML3C05", {-3550, 6898.46}},
    {"BML3C07", {-3550, 6898.46}},
    {"BML3C09", {-3550, 6898.46}},
    {"BML3C11", {-3550, 6898.46}},
    {"BML3C13", {-3550, 6898.46}},
    {"BML3C15", {-3550, 6898.46}},
    {"BML4A01", {5250, 6898.46}},
    {"BML4A03", {5250, 6898.46}},
    {"BML4A05", {5250, 6898.46}},
    {"BML4A07", {5250, 6898.46}},
    {"BML4A09", {5250, 6898.46}},
    {"BML4A11", {5250, 6898.46}},
    {"BML4A13", {6470, 6898.46}},
    {"BML4A15", {5250, 6898.46}},
    {"BML4C01", {-5250, 6898.46}},
    {"BML4C03", {-5250, 6898.46}},
    {"BML4C05", {-5250, 6898.46}},
    {"BML4C07", {-5250, 6898.46}},
    {"BML4C09", {-5250, 6898.46}},
    {"BML4C11", {-5250, 6898.46}},
    {"BML4C13", {-6470, 6898.46}},
    {"BML4C15", {-5250, 6898.46}},
    {"BML5A01", {6470, 6898.46}},
    {"BML5A03", {6470, 6898.46}},
    {"BML5A05", {6470, 6898.46}},
    {"BML5A07", {6470, 6898.46}},
    {"BML5A09", {6470, 6898.46}},
    {"BML5A11", {6470, 6898.46}},
    {"BML5A13", {7690, 6898.46}},
    {"BML5A15", {6470, 6898.46}},
    {"BML5C01", {-6470, 6898.46}},
    {"BML5C03", {-6470, 6898.46}},
    {"BML5C05", {-6470, 6898.46}},
    {"BML5C07", {-6470, 6898.46}},
    {"BML5C09", {-6470, 6898.46}},
    {"BML5C11", {-6470, 6898.46}},
    {"BML5C13", {-7690, 6898.46}},
    {"BML5C15", {-6470, 6898.46}},
    {"BML6A01", {7690, 6898.46}},
    {"BML6A03", {7690, 6898.46}},
    {"BML6A05", {7690, 6898.46}},
    {"BML6A07", {7690, 6898.46}},
    {"BML6A09", {7690, 6898.46}},
    {"BML6A11", {7690, 6898.46}},
    {"BML6A13", {7690, 6898.46}},  // added by hand, check??
    {"BML6A15", {7690, 6898.46}},
    {"BML6C01", {-7690, 6898.46}},
    {"BML6C03", {-7690, 6898.46}},
    {"BML6C05", {-7690, 6898.46}},
    {"BML6C07", {-7690, 6898.46}},
    {"BML6C09", {-7690, 6898.46}},
    {"BML6C11", {-7690, 6898.46}},
    {"BML6C13", {-7690, 6898.46}},  // added by hand, check??
    {"BML6C15", {-7690, 6898.46}},
    {"BMS1A02", {150, 7927.96}},
    {"BMS1A04", {150, 7927.96}},
    {"BMS1A06", {150, 7927.96}},
    {"BMS1A08", {150, 7927.96}},
    {"BMS1A10", {150, 7927.96}},
    {"BMS1A16", {150, 7927.96}},
    {"BMS1C02", {-150, 7927.96}},
    {"BMS1C04", {-150, 7927.96}},
    {"BMS1C06", {-150, 7927.96}},
    {"BMS1C08", {-150, 7927.96}},
    {"BMS1C10", {-150, 7927.96}},
    {"BMS1C16", {-150, 7927.96}},
    {"BMS2A02", {1850, 7927.96}},
    {"BMS2A04", {1850, 7927.96}},
    {"BMS2A06", {1850, 7927.96}},
    {"BMS2A08", {1850, 7927.96}},
    {"BMS2A10", {1850, 7927.96}},
    {"BMS2A16", {1850, 7927.96}},
    {"BMS2C02", {-1850, 7927.96}},
    {"BMS2C04", {-1850, 7927.96}},
    {"BMS2C06", {-1850, 7927.96}},
    {"BMS2C08", {-1850, 7927.96}},
    {"BMS2C10", {-1850, 7927.96}},
    {"BMS2C16", {-1850, 7927.96}},
    {"BMS3A02", {3680, 7927.96}},
    {"BMS3A04", {3680, 7927.96}},
    {"BMS3A06", {3680, 7927.96}},
    {"BMS3A08", {3680, 7927.96}},
    {"BMS3A10", {3680, 7927.96}},
    {"BMS3A16", {3680, 7927.96}},
    {"BMS3C02", {-3680, 7927.96}},
    {"BMS3C04", {-3680, 7927.96}},
    {"BMS3C06", {-3680, 7927.96}},
    {"BMS3C08", {-3680, 7927.96}},
    {"BMS3C10", {-3680, 7927.96}},
    {"BMS3C16", {-3680, 7927.96}},
    {"BMS4A02", {5140, 7927.96}},
    {"BMS4A04", {5140, 7927.96}},
    {"BMS4A06", {5140, 7927.96}},
    {"BMS4A08", {5140, 7927.96}},
    {"BMS4A10", {5140, 7927.96}},
    {"BMS4A16", {5140, 7927.96}},
    {"BMS4C02", {-5140, 7927.96}},
    {"BMS4C04", {-5140, 7927.96}},
    {"BMS4C06", {-5140, 7927.96}},
    {"BMS4C08", {-5140, 7927.96}},
    {"BMS4C10", {-5140, 7927.96}},
    {"BMS4C16", {-5140, 7927.96}},
    {"BMS5A02", {6925, 7927.96}},
    {"BMS5A04", {6925, 7927.96}},
    {"BMS5A06", {6925, 7927.96}},
    {"BMS5A08", {6925, 7927.96}},
    {"BMS5A10", {6925, 7927.96}},
    {"BMS5A16", {6925, 7927.96}},
    {"BMS5C02", {-6925, 7927.96}},
    {"BMS5C04", {-6925, 7927.96}},
    {"BMS5C06", {-6925, 7927.96}},
    {"BMS5C08", {-6925, 7927.96}},
    {"BMS5C10", {-6925, 7927.96}},
    {"BMS5C16", {-6925, 7927.96}},
    {"BMS6A02", {7905, 7927.96}},
    {"BMS6A04", {7905, 7927.96}},
    {"BMS6A06", {7905, 7927.96}},
    {"BMS6A08", {7905, 7927.96}},
    {"BMS6A10", {7905, 7927.96}},
    {"BMS6A16", {7905, 7927.96}},
    {"BMS6C02", {-7905, 7927.96}},
    {"BMS6C04", {-7905, 7927.96}},
    {"BMS6C06", {-7905, 7927.96}},
    {"BMS6C08", {-7905, 7927.96}},
    {"BMS6C10", {-7905, 7927.96}},
    {"BMS6C16", {-7905, 7927.96}},
    {"BOF1A12", {625.7, 10434.5}},
    {"BOF1A14", {625.7, 10434.5}},
    {"BOF1C12", {-625.7, 10434.5}},
    {"BOF1C14", {-625.7, 10434.5}},
    {"BOF3A12", {4054.6, 10434.5}},
    {"BOF3A14", {4054.6, 10434.5}},
    {"BOF3C12", {-4054.6, 10434.5}},
    {"BOF3C14", {-4054.6, 10434.5}},
    {"BOF5A12", {7279.2, 10434.5}},
    {"BOF5A14", {7279.2, 10434.5}},
    {"BOF5C12", {-7279.2, 10434.5}},
    {"BOF5C14", {-7279.2, 10434.5}},
    {"BOF7A12", {10026, 10434.5}},
    {"BOF7A14", {10026, 10434.5}},
    {"BOF7C12", {-10026, 10434.5}},
    {"BOF7C14", {-10026, 10434.5}},
    {"BOG0B12", {-578.21, 10434.5}},
    {"BOG0B14", {-578.21, 10434.5}},
    {"BOG1A12", {2820.7, 10434.5}},
    {"BOG1A14", {2820.7, 10434.5}},
    {"BOG1C12", {-2817.7, 10434.5}},
    {"BOG1C14", {-2820.7, 10434.5}},
    {"BOG2A12", {6027.5, 10434.5}},
    {"BOG2A14", {6027.3, 10434.5}},
    {"BOG2C12", {-6024.3, 10434.5}},
    {"BOG2C14", {-6027.3, 10434.5}},
    {"BOG3A12", {8771.4, 10434.5}},
    {"BOG3A14", {8771.4, 10434.5}},
    {"BOG3C12", {-8771.4, 10434.5}},
    {"BOG3C14", {-8771.4, 10434.5}},
    {"BOG4A12", {11472, 10434.5}},
    {"BOG4A14", {11472, 10434.5}},
    {"BOG4C12", {-11472, 10434.5}},
    {"BOG4C14", {-11472, 10434.5}},
    {"BOL1A01", {150, 9259.46}},
    {"BOL1A03", {150, 9259.46}},
    {"BOL1A05", {390, 9259.46}},
    {"BOL1A07", {870, 9259.46}},
    {"BOL1A09", {870, 9259.46}},
    {"BOL1A11", {630, 9259.46}},
    {"BOL1A13", {630, 9259.46}},
    {"BOL1A15", {630, 9259.46}},
    {"BOL1C01", {-870, 9259.46}},
    {"BOL1C03", {-870, 9259.46}},
    {"BOL1C05", {-1590, 9259.46}},
    {"BOL1C07", {-870, 9259.46}},
    {"BOL1C09", {-630, 9259.46}},
    {"BOL1C11", {-630, 9259.46}},
    {"BOL1C13", {-150, 9259.46}},
    {"BOL1C15", {-630, 9259.46}},
    {"BOL2A01", {2330, 9259.46}},
    {"BOL2A03", {2330, 9259.46}},
    {"BOL2A05", {2330, 9259.46}},
    {"BOL2A07", {2330, 9259.46}},
    {"BOL2A09", {2330, 9259.46}},
    {"BOL2A11", {2330, 9259.46}},
    {"BOL2A13", {2330, 9259.46}},
    {"BOL2A15", {2330, 9259.46}},
    {"BOL2C01", {-2330, 9259.46}},
    {"BOL2C03", {-2330, 9259.46}},
    {"BOL2C05", {-3050, 9259.46}},
    {"BOL2C07", {-2330, 9259.46}},
    {"BOL2C09", {-2330, 9259.46}},
    {"BOL2C11", {-2330, 9259.46}},
    {"BOL2C13", {-2330, 9259.46}},
    {"BOL2C15", {-2330, 9259.46}},
    {"BOL3A01", {4510, 9259.46}},
    {"BOL3A03", {4510, 9259.46}},
    {"BOL3A05", {4510, 9259.46}},
    {"BOL3A07", {4510, 9259.46}},
    {"BOL3A09", {4510, 9259.46}},
    {"BOL3A11", {4510, 9259.46}},
    {"BOL3A13", {3790, 9259.46}},
    {"BOL3A15", {4510, 9259.46}},
    {"BOL3C01", {-4510, 9259.46}},
    {"BOL3C03", {-4510, 9259.46}},
    {"BOL3C05", {-4510, 9259.46}},
    {"BOL3C07", {-4510, 9259.46}},
    {"BOL3C09", {-4510, 9259.46}},
    {"BOL3C11", {-4510, 9259.46}},
    {"BOL3C13", {-3790, 9259.46}},
    {"BOL3C15", {-4510, 9259.46}},
    {"BOL4A01", {6210, 9259.46}},
    {"BOL4A03", {6210, 9259.46}},
    {"BOL4A05", {6210, 9259.46}},
    {"BOL4A07", {6210, 9259.46}},
    {"BOL4A09", {6210, 9259.46}},
    {"BOL4A11", {6210, 9259.46}},
    {"BOL4A13", {6250, 9259.46}},
    {"BOL4A15", {6210, 9259.46}},
    {"BOL4C01", {-6210, 9259.46}},
    {"BOL4C03", {-6210, 9259.46}},
    {"BOL4C05", {-6210, 9259.46}},
    {"BOL4C07", {-6210, 9259.46}},
    {"BOL4C09", {-6210, 9259.46}},
    {"BOL4C11", {-6210, 9259.46}},
    {"BOL4C13", {-6250, 9259.46}},
    {"BOL4C15", {-6210, 9259.46}},
    {"BOL5A01", {8390, 9259.46}},
    {"BOL5A03", {8390, 9259.46}},
    {"BOL5A05", {8390, 9259.46}},
    {"BOL5A07", {8390, 9259.46}},
    {"BOL5A09", {8390, 9259.46}},
    {"BOL5A11", {8390, 9259.46}},
    {"BOL5A13", {8430, 9259.46}},
    {"BOL5A15", {8390, 9259.46}},
    {"BOL5C01", {-8390, 9259.46}},
    {"BOL5C03", {-8390, 9259.46}},
    {"BOL5C05", {-8390, 9259.46}},
    {"BOL5C07", {-8390, 9259.46}},
    {"BOL5C09", {-8390, 9259.46}},
    {"BOL5C11", {-8390, 9259.46}},
    {"BOL5C13", {-8430, 9259.46}},
    {"BOL5C15", {-8390, 9259.46}},
    {"BOL6A01", {10570, 9259.46}},
    {"BOL6A03", {10570, 9259.46}},
    {"BOL6A05", {10570, 9259.46}},
    {"BOL6A07", {10570, 9259.46}},
    {"BOL6A09", {10570, 9259.46}},
    {"BOL6A11", {10570, 9259.46}},
    {"BOL6A13", {10610, 9259.46}},
    {"BOL6A15", {10570, 9259.46}},
    {"BOL6C01", {-10570, 9259.46}},
    {"BOL6C03", {-10570, 9259.46}},
    {"BOL6C05", {-10570, 9259.46}},
    {"BOL6C07", {-10570, 9259.46}},
    {"BOL6C09", {-10570, 9259.46}},
    {"BOL6C11", {-10570, 9259.46}},
    {"BOL6C13", {-10610, 9259.46}},
    {"BOL6C15", {-10570, 9259.46}},
    {"BOS1A02", {10, 10328.5}},
    {"BOS1A04", {10, 10328.5}},
    {"BOS1A06", {10, 10328.5}},
    {"BOS1A08", {730, 10328.5}},
    {"BOS1A10", {10, 10328.5}},
    {"BOS1A16", {10, 10328.5}},
    {"BOS1C02", {-9.99988, 10328.5}},
    {"BOS1C04", {-9.99988, 10328.5}},
    {"BOS1C06", {-9.99988, 10328.5}},
    {"BOS1C08", {-730, 10328.5}},
    {"BOS1C10", {-9.99988, 10328.5}},
    {"BOS1C16", {-9.99988, 10328.5}},
    {"BOS2A02", {2190, 10328.5}},
    {"BOS2A04", {2190, 10328.5}},
    {"BOS2A06", {2190, 10328.5}},
    {"BOS2A08", {2190, 10328.5}},
    {"BOS2A10", {2190, 10328.5}},
    {"BOS2A16", {2190, 10328.5}},
    {"BOS2C02", {-2190, 10328.5}},
    {"BOS2C04", {-2190, 10328.5}},
    {"BOS2C06", {-2190, 10328.5}},
    {"BOS2C08", {-2190, 10328.5}},
    {"BOS2C10", {-2190, 10328.5}},
    {"BOS2C16", {-2190, 10328.5}},
    {"BOS3A02", {4370, 10328.5}},
    {"BOS3A04", {4370, 10328.5}},
    {"BOS3A06", {4370, 10328.5}},
    {"BOS3A08", {4370, 10328.5}},
    {"BOS3A10", {4370, 10328.5}},
    {"BOS3A16", {4370, 10328.5}},
    {"BOS3C02", {-4370, 10328.5}},
    {"BOS3C04", {-4370, 10328.5}},
    {"BOS3C06", {-4370, 10328.5}},
    {"BOS3C08", {-4370, 10328.5}},
    {"BOS3C10", {-4370, 10328.5}},
    {"BOS3C16", {-4370, 10328.5}},
    {"BOS4A02", {6550, 10328.5}},
    {"BOS4A04", {6550, 10328.5}},
    {"BOS4A06", {6550, 10328.5}},
    {"BOS4A08", {6550, 10328.5}},
    {"BOS4A10", {6550, 10328.5}},
    {"BOS4A16", {6550, 10328.5}},
    {"BOS4C02", {-6550, 10328.5}},
    {"BOS4C04", {-6550, 10328.5}},
    {"BOS4C06", {-6550, 10328.5}},
    {"BOS4C08", {-6550, 10328.5}},
    {"BOS4C10", {-6550, 10328.5}},
    {"BOS4C16", {-6550, 10328.5}},
    {"BOS5A02", {8730, 10328.5}},
    {"BOS5A04", {8730, 10328.5}},
    {"BOS5A06", {8730, 10328.5}},
    {"BOS5A08", {8730, 10328.5}},
    {"BOS5A10", {8730, 10328.5}},
    {"BOS5A16", {8730, 10328.5}},
    {"BOS5C02", {-8730, 10328.5}},
    {"BOS5C04", {-8730, 10328.5}},
    {"BOS5C06", {-8730, 10328.5}},
    {"BOS5C08", {-8730, 10328.5}},
    {"BOS5C10", {-8730, 10328.5}},
    {"BOS5C16", {-8730, 10328.5}},
    {"BOS6A02", {10910, 10328.5}},
    {"BOS6A04", {10910, 10328.5}},
    {"BOS6A06", {10910, 10328.5}},
    {"BOS6A08", {10910, 10328.5}},
    {"BOS6A10", {10910, 10328.5}},
    {"BOS6A16", {10910, 10328.5}},
    {"BOS6C02", {-10910, 10328.5}},
    {"BOS6C04", {-10910, 10328.5}},
    {"BOS6C06", {-10910, 10328.5}},
    {"BOS6C08", {-10910, 10328.5}},
    {"BOS6C10", {-10910, 10328.5}},
    {"BOS6C16", {-10910, 10328.5}},
    {"EEL1A01", {11180, 6513}},
    {"EEL1A03", {11180, 6513}},
    {"EEL1A05", {10676, 6718}},
    {"EEL1A07", {11180, 6513}},
    {"EEL1A09", {11180, 6513}},
    {"EEL1A11", {11180, 6513}},
    {"EEL1A13", {11180, 6513}},
    {"EEL1A15", {11180, 6513}},
    {"EEL1C01", {-11180, 6513}},
    {"EEL1C03", {-11180, 6513}},
    {"EEL1C05", {-10676, 6718}},
    {"EEL1C07", {-11180, 6513}},
    {"EEL1C09", {-11180, 6513}},
    {"EEL1C11", {-11180, 6513}},
    {"EEL1C13", {-11180, 6513}},
    {"EEL1C15", {-11180, 6513}},
    {"EEL2A01", {11180, 7749.7}},
    {"EEL2A03", {11180, 7749.7}},
    {"EEL2A07", {11180, 7749.7}},
    {"EEL2A09", {11180, 7749.7}},
    {"EEL2A11", {11180, 7749.7}},
    {"EEL2A13", {11180, 7749.7}},
    {"EEL2A15", {11180, 7749.7}},
    {"EEL2C01", {-11180, 7749.7}},
    {"EEL2C03", {-11180, 7749.7}},
    {"EEL2C07", {-11180, 7749.7}},
    {"EEL2C09", {-11180, 7749.7}},
    {"EEL2C11", {-11180, 7749.7}},
    {"EEL2C13", {-11180, 7749.7}},
    {"EEL2C15", {-11180, 7749.7}},
    {"EES1A02", {10134, 5893}},
    {"EES1A04", {10134, 5893}},
    {"EES1A06", {10134, 5893}},
    {"EES1A08", {10134, 5893}},
    {"EES1A10", {10134, 5893}},
    {"EES1A12", {10134, 5893}},
    {"EES1A14", {10134, 5893}},
    {"EES1A16", {10134, 5893}},
    {"EES1C02", {-10134, 5893}},
    {"EES1C04", {-10134, 5893}},
    {"EES1C06", {-10134, 5893}},
    {"EES1C08", {-10134, 5893}},
    {"EES1C10", {-10134, 5893}},
    {"EES1C12", {-10134, 5893}},
    {"EES1C14", {-10134, 5893}},
    {"EES1C16", {-10134, 5893}},
    {"EES2A02", {10134, 7370}},
    {"EES2A04", {10134, 7370}},
    {"EES2A06", {10134, 7370}},
    {"EES2A08", {10134, 7370}},
    {"EES2A10", {10134, 7370}},
    {"EES2A12", {10134, 7370}},
    {"EES2A14", {10134, 7370}},
    {"EES2A16", {10134, 7370}},
    {"EES2C02", {-10134, 7370}},
    {"EES2C04", {-10134, 7370}},
    {"EES2C06", {-10134, 7370}},
    {"EES2C08", {-10134, 7370}},
    {"EES2C10", {-10134, 7370}},
    {"EES2C12", {-10134, 7370}},
    {"EES2C14", {-10134, 7370}},
    {"EES2C16", {-10134, 7370}},
    {"EIL1A01", {7506.48, 2076}},
    {"EIL1A03", {7506.48, 2076}},
    {"EIL1A05", {7506.48, 2076}},
    {"EIL1A07", {7506.48, 2076}},
    {"EIL1A09", {7506.48, 2076}},
    {"EIL1A11", {7506.48, 2076}},
    {"EIL1A13", {7506.48, 2076}},
    {"EIL1A15", {7506.48, 2076}},
    {"EIL1C01", {-7506.48, 2076}},
    {"EIL1C03", {-7506.48, 2076}},
    {"EIL1C05", {-7506.48, 2076}},
    {"EIL1C07", {-7506.48, 2076}},
    {"EIL1C09", {-7506.48, 2076}},
    {"EIL1C11", {-7506.48, 2076}},
    {"EIL1C13", {-7506.48, 2076}},
    {"EIL1C15", {-7506.48, 2076}},
    {"EIL2A01", {7506.48, 3191}},
    {"EIL2A03", {7506.48, 3191}},
    {"EIL2A05", {7506.48, 3191}},
    {"EIL2A07", {7506.48, 3191}},
    {"EIL2A09", {7506.48, 3191}},
    {"EIL2A11", {7506.48, 3191}},
    {"EIL2A13", {7506.48, 3191}},
    {"EIL2A15", {7506.48, 3191}},
    {"EIL2C01", {-7506.48, 3191}},
    {"EIL2C03", {-7506.48, 3191}},
    {"EIL2C05", {-7506.48, 3191}},
    {"EIL2C07", {-7506.48, 3191}},
    {"EIL2C09", {-7506.48, 3191}},
    {"EIL2C11", {-7506.48, 3191}},
    {"EIL2C13", {-7506.48, 3191}},
    {"EIL2C15", {-7506.48, 3191}},
    {"EIL3A01", {7506.48, 4272.3}},
    {"EIL3A03", {7506.48, 4272.3}},
    {"EIL3A05", {7506.48, 4272.3}},
    {"EIL3A07", {7506.48, 4272.3}},
    {"EIL3A09", {7506.48, 4272.3}},
    {"EIL3A11", {7506.48, 4275.47}},
    {"EIL3A13", {7506.48, 4272.3}},
    {"EIL3A15", {7506.48, 4275.47}},
    {"EIL3C01", {-7506.48, 4272.3}},
    {"EIL3C03", {-7506.48, 4272.3}},
    {"EIL3C05", {-7506.48, 4272.3}},
    {"EIL3C07", {-7506.48, 4272.3}},
    {"EIL3C09", {-7506.48, 4272.3}},
    {"EIL3C11", {-7506.48, 4275.47}},
    {"EIL3C13", {-7506.48, 4272.3}},
    {"EIL3C15", {-7506.48, 4275.47}},
    {"EIL4A01", {7472.98, 4720}},
    {"EIL4A03", {7472.98, 4720}},
    {"EIL4A05", {7472.98, 4720}},
    {"EIL4A07", {7472.98, 4732.92}},
    {"EIL4A09", {7472.98, 4720}},
    {"EIL4A11", {7472.98, 5118.59}},
    {"EIL4A13", {7472.98, 4720}},
    {"EIL4A15", {7472.98, 5118.59}},
    {"EIL4C01", {-7472.98, 4720}},
    {"EIL4C03", {-7472.98, 4720}},
    {"EIL4C05", {-7472.98, 4720}},
    {"EIL4C07", {-7472.98, 4732.92}},
    {"EIL4C09", {-7472.98, 4720}},
    {"EIL4C11", {-7472.98, 5118.59}},
    {"EIL4C13", {-7472.98, 4720}},
    {"EIL4C15", {-7472.98, 5118.59}},
    {"EIL5A01", {7472.98, 5080.4}},
    {"EIL5A09", {7472.98, 5080.4}},
    {"EIL5C01", {-7472.98, 5080.4}},
    {"EIL5C09", {-7472.98, 5080.4}},
    {"EIS1A02", {7092.48, 2076}},
    {"EIS1A04", {7092.48, 2076}},
    {"EIS1A06", {7092.48, 2076}},
    {"EIS1A08", {7092.48, 2076}},
    {"EIS1A10", {7092.48, 2076}},
    {"EIS1A12", {7092.48, 2076}},
    {"EIS1A14", {7092.48, 2076}},
    {"EIS1A16", {7092.48, 2076}},
    {"EIS1C02", {-7092.48, 2076}},
    {"EIS1C04", {-7092.48, 2076}},
    {"EIS1C06", {-7092.48, 2076}},
    {"EIS1C08", {-7092.48, 2076}},
    {"EIS1C10", {-7092.48, 2076}},
    {"EIS1C12", {-7092.48, 2076}},
    {"EIS1C14", {-7092.48, 2076}},
    {"EIS1C16", {-7092.48, 2076}},
    {"EIS2A02", {7092.48, 3371}},
    {"EIS2A04", {7092.48, 3371}},
    {"EIS2A06", {7092.48, 3371}},
    {"EIS2A08", {7092.48, 3371}},
    {"EIS2A10", {7092.48, 3371}},
    {"EIS2A12", {7092.48, 3371}},
    {"EIS2A14", {7092.48, 3371}},
    {"EIS2A16", {7092.48, 3371}},
    {"EIS2C02", {-7092.48, 3371}},
    {"EIS2C04", {-7092.48, 3371}},
    {"EIS2C06", {-7092.48, 3371}},
    {"EIS2C08", {-7092.48, 3371}},
    {"EIS2C10", {-7092.48, 3371}},
    {"EIS2C12", {-7092.48, 3371}},
    {"EIS2C14", {-7092.48, 3371}},
    {"EIS2C16", {-7092.48, 3371}},
    {"EML1A01", {14127.5, 1770}},
    {"EML1A03", {14127.5, 1770}},
    {"EML1A05", {14127.5, 1770}},
    {"EML1A07", {14127.5, 1770}},
    {"EML1A09", {14127.5, 1770}},
    {"EML1A11", {14127.5, 1770}},
    {"EML1A13", {14127.5, 1770}},
    {"EML1A15", {14127.5, 1770}},
    {"EML1C01", {-14127.5, 1770}},
    {"EML1C03", {-14127.5, 1770}},
    {"EML1C05", {-14127.5, 1770}},
    {"EML1C07", {-14127.5, 1770}},
    {"EML1C09", {-14127.5, 1770}},
    {"EML1C11", {-14127.5, 1770}},
    {"EML1C13", {-14127.5, 1770}},
    {"EML1C15", {-14127.5, 1770}},
    {"EML2A01", {14127.5, 3485}},
    {"EML2A03", {14127.5, 3485}},
    {"EML2A05", {14127.5, 3485}},
    {"EML2A07", {14127.5, 3485}},
    {"EML2A09", {14127.5, 3485}},
    {"EML2A11", {14127.5, 3485}},
    {"EML2A13", {14127.5, 3485}},
    {"EML2A15", {14127.5, 3485}},
    {"EML2C01", {-14127.5, 3485}},
    {"EML2C03", {-14127.5, 3485}},
    {"EML2C05", {-14127.5, 3485}},
    {"EML2C07", {-14127.5, 3485}},
    {"EML2C09", {-14127.5, 3485}},
    {"EML2C11", {-14127.5, 3485}},
    {"EML2C13", {-14127.5, 3485}},
    {"EML2C15", {-14127.5, 3485}},
    {"EML3A01", {14127.5, 5440}},
    {"EML3A03", {14127.5, 5440}},
    {"EML3A05", {14127.5, 5440}},
    {"EML3A07", {14127.5, 5440}},
    {"EML3A09", {14127.5, 5440}},
    {"EML3A11", {14127.5, 5440}},
    {"EML3A13", {14127.5, 5440}},
    {"EML3A15", {14127.5, 5440}},
    {"EML3C01", {-14127.5, 5440}},
    {"EML3C03", {-14127.5, 5440}},
    {"EML3C05", {-14127.5, 5440}},
    {"EML3C07", {-14127.5, 5440}},
    {"EML3C09", {-14127.5, 5440}},
    {"EML3C11", {-14127.5, 5440}},
    {"EML3C13", {-14127.5, 5440}},
    {"EML3C15", {-14127.5, 5440}},
    {"EML4A01", {14127.5, 7395}},
    {"EML4A03", {14127.5, 7395}},
    {"EML4A05", {14127.5, 7395}},
    {"EML4A07", {14127.5, 7395}},
    {"EML4A09", {14127.5, 7395}},
    {"EML4A11", {14127.5, 7395}},
    {"EML4A13", {14127.5, 7395}},
    {"EML4A15", {14127.5, 7395}},
    {"EML4C01", {-14127.5, 7395}},
    {"EML4C03", {-14127.5, 7395}},
    {"EML4C05", {-14127.5, 7395}},
    {"EML4C07", {-14127.5, 7395}},
    {"EML4C09", {-14127.5, 7395}},
    {"EML4C11", {-14127.5, 7395}},
    {"EML4C13", {-14127.5, 7395}},
    {"EML4C15", {-14127.5, 7395}},
    {"EML5A01", {14127.5, 9350}},
    {"EML5A03", {14127.5, 9350}},
    {"EML5A05", {14127.5, 9350}},
    {"EML5A07", {14127.5, 9350}},
    {"EML5A09", {14127.5, 9350}},
    {"EML5A11", {14127.5, 9350}},
    {"EML5A13", {14127.5, 9350}},
    {"EML5A15", {14127.5, 9350}},
    {"EML5C01", {-14127.5, 9350}},
    {"EML5C03", {-14127.5, 9350}},
    {"EML5C05", {-14127.5, 9350}},
    {"EML5C07", {-14127.5, 9350}},
    {"EML5C09", {-14127.5, 9350}},
    {"EML5C11", {-14127.5, 9350}},
    {"EML5C13", {-14127.5, 9350}},
    {"EML5C15", {-14127.5, 9350}},
    {"EMS1A02", {13711.5, 1770}},
    {"EMS1A04", {13711.5, 1770}},
    {"EMS1A06", {13711.5, 1770}},
    {"EMS1A08", {13711.5, 1770}},
    {"EMS1A10", {13711.5, 1770}},
    {"EMS1A12", {13711.5, 1770}},
    {"EMS1A14", {13711.5, 1770}},
    {"EMS1A16", {13711.5, 1770}},
    {"EMS1C02", {-13711.5, 1770}},
    {"EMS1C04", {-13711.5, 1770}},
    {"EMS1C06", {-13711.5, 1770}},
    {"EMS1C08", {-13711.5, 1770}},
    {"EMS1C10", {-13711.5, 1770}},
    {"EMS1C12", {-13711.5, 1770}},
    {"EMS1C14", {-13711.5, 1770}},
    {"EMS1C16", {-13711.5, 1770}},
    {"EMS2A02", {13711.5, 3725}},
    {"EMS2A04", {13711.5, 3725}},
    {"EMS2A06", {13711.5, 3725}},
    {"EMS2A08", {13711.5, 3725}},
    {"EMS2A10", {13711.5, 3725}},
    {"EMS2A12", {13711.5, 3725}},
    {"EMS2A14", {13711.5, 3725}},
    {"EMS2A16", {13711.5, 3725}},
    {"EMS2C02", {-13711.5, 3725}},
    {"EMS2C04", {-13711.5, 3725}},
    {"EMS2C06", {-13711.5, 3725}},
    {"EMS2C08", {-13711.5, 3725}},
    {"EMS2C10", {-13711.5, 3725}},
    {"EMS2C12", {-13711.5, 3725}},
    {"EMS2C14", {-13711.5, 3725}},
    {"EMS2C16", {-13711.5, 3725}},
    {"EMS3A02", {13711.5, 5680}},
    {"EMS3A04", {13711.5, 5680}},
    {"EMS3A06", {13711.5, 5680}},
    {"EMS3A08", {13711.5, 5680}},
    {"EMS3A10", {13711.5, 5680}},
    {"EMS3A12", {13711.5, 5680}},
    {"EMS3A14", {13711.5, 5680}},
    {"EMS3A16", {13711.5, 5680}},
    {"EMS3C02", {-13711.5, 5680}},
    {"EMS3C04", {-13711.5, 5680}},
    {"EMS3C06", {-13711.5, 5680}},
    {"EMS3C08", {-13711.5, 5680}},
    {"EMS3C10", {-13711.5, 5680}},
    {"EMS3C12", {-13711.5, 5680}},
    {"EMS3C14", {-13711.5, 5680}},
    {"EMS3C16", {-13711.5, 5680}},
    {"EMS4A02", {13711.5, 7635}},
    {"EMS4A04", {13711.5, 7635}},
    {"EMS4A06", {13711.5, 7635}},
    {"EMS4A08", {13711.5, 7635}},
    {"EMS4A10", {13711.5, 7635}},
    {"EMS4A12", {13711.5, 7635}},
    {"EMS4A14", {13711.5, 7635}},
    {"EMS4A16", {13711.5, 7635}},
    {"EMS4C02", {-13711.5, 7635}},
    {"EMS4C04", {-13711.5, 7635}},
    {"EMS4C06", {-13711.5, 7635}},
    {"EMS4C08", {-13711.5, 7635}},
    {"EMS4C10", {-13711.5, 7635}},
    {"EMS4C12", {-13711.5, 7635}},
    {"EMS4C14", {-13711.5, 7635}},
    {"EMS4C16", {-13711.5, 7635}},
    {"EMS5A02", {13711.5, 9590}},
    {"EMS5A04", {13711.5, 9590}},
    {"EMS5A06", {13711.5, 9590}},
    {"EMS5A08", {13711.5, 9590}},
    {"EMS5A10", {13711.5, 9590}},
    {"EMS5A12", {13711.5, 9590}},
    {"EMS5A14", {13711.5, 9590}},
    {"EMS5A16", {13711.5, 9590}},
    {"EMS5C02", {-13711.5, 9590}},
    {"EMS5C04", {-13711.5, 9590}},
    {"EMS5C06", {-13711.5, 9590}},
    {"EMS5C08", {-13711.5, 9590}},
    {"EMS5C10", {-13711.5, 9590}},
    {"EMS5C12", {-13711.5, 9590}},
    {"EMS5C14", {-13711.5, 9590}},
    {"EMS5C16", {-13711.5, 9590}},
    {"EOL1A01", {21257.5, 2770}},
    {"EOL1A03", {21257.5, 2770}},
    {"EOL1A05", {21257.5, 2770}},
    {"EOL1A07", {21257.5, 2770}},
    {"EOL1A09", {21257.5, 2770}},
    {"EOL1A11", {21257.5, 2770}},
    {"EOL1A13", {21257.5, 2770}},
    {"EOL1A15", {21257.5, 2770}},
    {"EOL1C01", {-21257.5, 2770}},
    {"EOL1C03", {-21257.5, 2770}},
    {"EOL1C05", {-21257.5, 2770}},
    {"EOL1C07", {-21257.5, 2770}},
    {"EOL1C09", {-21257.5, 2770}},
    {"EOL1C11", {-21257.5, 2770}},
    {"EOL1C13", {-21257.5, 2770}},
    {"EOL1C15", {-21257.5, 2770}},
    {"EOL2A01", {21257.5, 4485}},
    {"EOL2A03", {21257.5, 4485}},
    {"EOL2A05", {21257.5, 4485}},
    {"EOL2A07", {21257.5, 4485}},
    {"EOL2A09", {21257.5, 4485}},
    {"EOL2A11", {21257.5, 4485}},
    {"EOL2A13", {21257.5, 4485}},
    {"EOL2A15", {21257.5, 4485}},
    {"EOL2C01", {-21257.5, 4485}},
    {"EOL2C03", {-21257.5, 4485}},
    {"EOL2C05", {-21257.5, 4485}},
    {"EOL2C07", {-21257.5, 4485}},
    {"EOL2C09", {-21257.5, 4485}},
    {"EOL2C11", {-21257.5, 4485}},
    {"EOL2C13", {-21257.5, 4485}},
    {"EOL2C15", {-21257.5, 4485}},
    {"EOL3A01", {21257.5, 6200}},
    {"EOL3A03", {21257.5, 6200}},
    {"EOL3A05", {21257.5, 6200}},
    {"EOL3A07", {21257.5, 6200}},
    {"EOL3A09", {21257.5, 6200}},
    {"EOL3A11", {21257.5, 6200}},
    {"EOL3A13", {21257.5, 6200}},
    {"EOL3A15", {21257.5, 6200}},
    {"EOL3C01", {-21257.5, 6200}},
    {"EOL3C03", {-21257.5, 6200}},
    {"EOL3C05", {-21257.5, 6200}},
    {"EOL3C07", {-21257.5, 6200}},
    {"EOL3C09", {-21257.5, 6200}},
    {"EOL3C11", {-21257.5, 6200}},
    {"EOL3C13", {-21257.5, 6200}},
    {"EOL3C15", {-21257.5, 6200}},
    {"EOL4A01", {21257.5, 7675}},
    {"EOL4A03", {21257.5, 7675}},
    {"EOL4A05", {21257.5, 7675}},
    {"EOL4A07", {21257.5, 7675}},
    {"EOL4A09", {21257.5, 7675}},
    {"EOL4A11", {21257.5, 7675}},
    {"EOL4A13", {21257.5, 7675}},
    {"EOL4A15", {21257.5, 7675}},
    {"EOL4C01", {-21257.5, 7675}},
    {"EOL4C03", {-21257.5, 7675}},
    {"EOL4C05", {-21257.5, 7675}},
    {"EOL4C07", {-21257.5, 7675}},
    {"EOL4C09", {-21257.5, 7675}},
    {"EOL4C11", {-21257.5, 7675}},
    {"EOL4C13", {-21257.5, 7675}},
    {"EOL4C15", {-21257.5, 7675}},
    {"EOL5A01", {21257.5, 9150}},
    {"EOL5A03", {21257.5, 9150}},
    {"EOL5A05", {21257.5, 9150}},
    {"EOL5A07", {21257.5, 9150}},
    {"EOL5A09", {21257.5, 9150}},
    {"EOL5A11", {21257.5, 9150}},
    {"EOL5A13", {21257.5, 9150}},
    {"EOL5A15", {21257.5, 9150}},
    {"EOL5C01", {-21257.5, 9150}},
    {"EOL5C03", {-21257.5, 9150}},
    {"EOL5C05", {-21257.5, 9150}},
    {"EOL5C07", {-21257.5, 9150}},
    {"EOL5C09", {-21257.5, 9150}},
    {"EOL5C11", {-21257.5, 9150}},
    {"EOL5C13", {-21257.5, 9150}},
    {"EOL5C15", {-21257.5, 9150}},
    {"EOL6A01", {21257.5, 10625}},
    {"EOL6A03", {21257.5, 10625}},
    {"EOL6A05", {21257.5, 10625}},
    {"EOL6A07", {21257.5, 10625}},
    {"EOL6A09", {21257.5, 10625}},
    {"EOL6A11", {21257.5, 10625}},
    {"EOL6A13", {21257.5, 10625}},
    {"EOL6A15", {21257.5, 10625}},
    {"EOL6C01", {-21257.5, 10625}},
    {"EOL6C03", {-21257.5, 10625}},
    {"EOL6C05", {-21257.5, 10625}},
    {"EOL6C07", {-21257.5, 10625}},
    {"EOL6C09", {-21257.5, 10625}},
    {"EOL6C11", {-21257.5, 10625}},
    {"EOL6C13", {-21257.5, 10625}},
    {"EOL6C15", {-21257.5, 10625}},
    {"EOS1A02", {21673.5, 2770}},
    {"EOS1A04", {21673.5, 2770}},
    {"EOS1A06", {21673.5, 2770}},
    {"EOS1A08", {21673.5, 2770}},
    {"EOS1A10", {21673.5, 2770}},
    {"EOS1A12", {21673.5, 2770}},
    {"EOS1A14", {21673.5, 2770}},
    {"EOS1A16", {21673.5, 2770}},
    {"EOS1C02", {-21673.5, 2770}},
    {"EOS1C04", {-21673.5, 2770}},
    {"EOS1C06", {-21673.5, 2770}},
    {"EOS1C08", {-21673.5, 2770}},
    {"EOS1C10", {-21673.5, 2770}},
    {"EOS1C12", {-21673.5, 2770}},
    {"EOS1C14", {-21673.5, 2770}},
    {"EOS1C16", {-21673.5, 2770}},
    {"EOS2A02", {21673.5, 4485}},
    {"EOS2A04", {21673.5, 4485}},
    {"EOS2A06", {21673.5, 4485}},
    {"EOS2A08", {21673.5, 4485}},
    {"EOS2A10", {21673.5, 4485}},
    {"EOS2A12", {21673.5, 4485}},
    {"EOS2A14", {21673.5, 4485}},
    {"EOS2A16", {21673.5, 4485}},
    {"EOS2C02", {-21673.5, 4485}},
    {"EOS2C04", {-21673.5, 4485}},
    {"EOS2C06", {-21673.5, 4485}},
    {"EOS2C08", {-21673.5, 4485}},
    {"EOS2C10", {-21673.5, 4485}},
    {"EOS2C12", {-21673.5, 4485}},
    {"EOS2C14", {-21673.5, 4485}},
    {"EOS2C16", {-21673.5, 4485}},
    {"EOS3A02", {21673.5, 6200}},
    {"EOS3A04", {21673.5, 6200}},
    {"EOS3A06", {21673.5, 6200}},
    {"EOS3A08", {21673.5, 6200}},
    {"EOS3A10", {21673.5, 6200}},
    {"EOS3A12", {21673.5, 6200}},
    {"EOS3A14", {21673.5, 6200}},
    {"EOS3A16", {21673.5, 6200}},
    {"EOS3C02", {-21673.5, 6200}},
    {"EOS3C04", {-21673.5, 6200}},
    {"EOS3C06", {-21673.5, 6200}},
    {"EOS3C08", {-21673.5, 6200}},
    {"EOS3C10", {-21673.5, 6200}},
    {"EOS3C12", {-21673.5, 6200}},
    {"EOS3C14", {-21673.5, 6200}},
    {"EOS3C16", {-21673.5, 6200}},
    {"EOS4A02", {21673.5, 7915}},
    {"EOS4A04", {21673.5, 7915}},
    {"EOS4A06", {21673.5, 7915}},
    {"EOS4A08", {21673.5, 7915}},
    {"EOS4A10", {21673.5, 7915}},
    {"EOS4A12", {21673.5, 7915}},
    {"EOS4A14", {21673.5, 7915}},
    {"EOS4A16", {21673.5, 7915}},
    {"EOS4C02", {-21673.5, 7915}},
    {"EOS4C04", {-21673.5, 7915}},
    {"EOS4C06", {-21673.5, 7915}},
    {"EOS4C08", {-21673.5, 7915}},
    {"EOS4C10", {-21673.5, 7915}},
    {"EOS4C12", {-21673.5, 7915}},
    {"EOS4C14", {-21673.5, 7915}},
    {"EOS4C16", {-21673.5, 7915}},
    {"EOS5A02", {21673.5, 9390}},
    {"EOS5A04", {21673.5, 9390}},
    {"EOS5A06", {21673.5, 9390}},
    {"EOS5A08", {21673.5, 9390}},
    {"EOS5A10", {21673.5, 9390}},
    {"EOS5A12", {21673.5, 9390}},
    {"EOS5A14", {21673.5, 9390}},
    {"EOS5A16", {21673.5, 9390}},
    {"EOS5C02", {-21673.5, 9390}},
    {"EOS5C04", {-21673.5, 9390}},
    {"EOS5C06", {-21673.5, 9390}},
    {"EOS5C08", {-21673.5, 9390}},
    {"EOS5C10", {-21673.5, 9390}},
    {"EOS5C12", {-21673.5, 9390}},
    {"EOS5C14", {-21673.5, 9390}},
    {"EOS5C16", {-21673.5, 9390}},
    {"EOS6A02", {21673.5, 10865}},
    {"EOS6A04", {21673.5, 10865}},
    {"EOS6A06", {21673.5, 10865}},
    {"EOS6A08", {21673.5, 10865}},
    {"EOS6A10", {21673.5, 10865}},
    {"EOS6A12", {21673.5, 10865}},
    {"EOS6A14", {21673.5, 10865}},
    {"EOS6A16", {21673.5, 10865}},
    {"EOS6C02", {-21673.5, 10865}},
    {"EOS6C04", {-21673.5, 10865}},
    {"EOS6C06", {-21673.5, 10865}},
    {"EOS6C08", {-21673.5, 10865}},
    {"EOS6C10", {-21673.5, 10865}},
    {"EOS6C12", {-21673.5, 10865}},
    {"EOS6C14", {-21673.5, 10865}},
    {"EOS6C16", {-21673.5, 10865}}};

static const std::map<std::string, float> TGC_WHEEL_Z = {{"M1", 13271.5}, {"M2", 14600.5}, {"M3", 15020.5}};

static const std::map<std::string, float> MDT_WHEEL_Z = {{"EMS", 13878.55},
                                                         {"EML", 14294.55},
                                                         {"EOS", 21840.55},
                                                         {"EOL", 21424.55}};

///< average reference positions (along rho in barrel and z in endcap) to be
///< used for the calculating the sagitta for pT param these values are grabbed
///< from the MDT geo ntuple
static const std::map<std::string, float> AVG_REF_MDT_POS = {
    {"BIL", 4948.9791}, {"BIS", 4549.9990}, {"BML", 7138.9983}, {"BMS", 8094.9983}, {"BOL", 9499.9982},
    {"BOS", 10568.998}, {"BIR", 6030.9089}, {"BIM", 5402.7391}, {"BMF", 8094.9983}, {"BOF", 10674.999},
    {"BOG", 10698.126}, {"BEE", 4399.2642}, {"EIL", 7675.029},  {"EIS", 7261.0288}, {"EEL", 11323.024},
    {"EES", 10277.023}, {"EML", 14294.539}, {"EMS", 13878.538}, {"EOL", 21424.539}, {"EOS", 21840.537},
    {"CSS", 7332.000},  {"CSL", 7682.500}};

static const float MDT_TUBE_WIDTH    = 29.970;
static const float MDT_TUBE_PITCH    = 30.035;
static const float sMDT_TUBE_PITCH   = 15.099;
static const float MDT_TUBE_RADIUS   = 15.025;
static const float DELTA_TUBE_LAYERS = 26.0111;

// TO-DO
// - position of every chamber
// - position of every tube
// - update sector phi for each station

inline float getSectorCenterPhi(int sector) {
  if (sector > 16)
    sector -= 16;
  else if (sector < 1)
    sector += 16;

  // Method 1: Hard-Coded values
  return MDT_SECTOR_PHI.at(sector);

  /*
  //Method 2: Assume evenly spaced sector centers
  const float PI = atan(1)*4;
  float sectorCenterPhi = -10;
  if(sector>=10 && sector<=16){
      sectorCenterPhi = (sector-17)*2*PI/16.0;
  }
  else if(sector>=1 && sector<=9){
      sectorCenterPhi = (sector-1)*2*PI/16.0;
  }
  return sectorCenterPhi;
  */
}

inline float phiFromSectorCenter(int mdt_sector, float phi) {
  // positive dPhi -> RoI is further clockwise than sector center
  TVector3 sectorCenter;
  sectorCenter.SetPtEtaPhi(1, 0, getSectorCenterPhi(mdt_sector));
  TVector3 Phi;
  Phi.SetPtEtaPhi(1, 0, phi);
  return Phi.DeltaPhi(sectorCenter);
}

inline float phiFromSectorEdge(int mdt_sector, float phi) {
  // positive dPhi -> phi is closer to center
  TVector3 sectorCenter;
  sectorCenter.SetPtEtaPhi(1, 0, getSectorCenterPhi(mdt_sector));
  TVector3 Phi;
  Phi.SetPtEtaPhi(1, 0, phi);
  float dPhi     = fabs(Phi.DeltaPhi(sectorCenter));
  float phi_edge = mdt_sector % 2 == 0 ? SMALL_SEC_DPHI / 2.0 : LARGE_SEC_DPHI / 2.0;
  return phi_edge - dPhi;
}
inline int getMdtSectorFromPhi(float phi) {
  const double PI = atan(1) * 4;
  // Numbers found with MdtGeoHandler::GetSectorPhiRange
  for (uint i = 0; i < 16; ++i) {
    // Get MDT sector from counter
    int sector = 9;
    if (i <= 6)
      sector = i + 10;
    else if (i <= 14)
      sector = i - 6;
    // dPhi of small and large sectors
    // where cutoff is in the middle of the
    // overlap region between sectors
    float starting_phi = -PI + LARGE_SEC_DPHI / 2.0;
    // Get phi range for sector
    uint nSmall = 0, nLarge = 0;
    float low = 0, high = 0;
    if (i % 2 == 0) {
      nSmall = i / 2;
      nLarge = i / 2;
      high   = starting_phi + (nSmall + 1) * SMALL_SEC_DPHI + nLarge * LARGE_SEC_DPHI;
    } else {
      nSmall = (i + 1) / 2;
      nLarge = (i - 1) / 2;
      high   = starting_phi + nSmall * SMALL_SEC_DPHI + (nLarge + 1) * LARGE_SEC_DPHI;
    }
    low = starting_phi + nSmall * SMALL_SEC_DPHI + nLarge * LARGE_SEC_DPHI;
    if (i == 0 && phi < low)
      return 9;
    else if (low <= phi && phi < high)
      return sector;
  }
  std::cout << "WARNING (getMdtSectorFromPhi) phi outside of range: " << phi << ". Returning -1." << std::endl;
  // Uniform division option
  // if      ( -1.0*PI/16.0 < phi && phi <   1.0*PI/16.0) return  1;
  // else if (  1.0*PI/16.0 < phi && phi <   3.0*PI/16.0) return  2;
  // else if (  3.0*PI/16.0 < phi && phi <   5.0*PI/16.0) return  3;
  // else if (  5.0*PI/16.0 < phi && phi <   7.0*PI/16.0) return  4;
  // else if (  7.0*PI/16.0 < phi && phi <   9.0*PI/16.0) return  5;
  // else if (  9.0*PI/16.0 < phi && phi <  11.0*PI/16.0) return  6;
  // else if ( 11.0*PI/16.0 < phi && phi <  13.0*PI/16.0) return  7;
  // else if ( 13.0*PI/16.0 < phi && phi <  15.0*PI/16.0) return  8;
  // else if ( 15.0*PI/16.0 < phi && phi <  16.0*PI/16.0) return  9;
  // else if (-16.0*PI/16.0 < phi && phi < -15.0*PI/16.0) return  9;
  // else if (-15.0*PI/16.0 < phi && phi < -13.0*PI/16.0) return 10;
  // else if (-13.0*PI/16.0 < phi && phi < -11.0*PI/16.0) return 11;
  // else if (-11.0*PI/16.0 < phi && phi <  -9.0*PI/16.0) return 12;
  // else if ( -9.0*PI/16.0 < phi && phi <  -7.0*PI/16.0) return 13;
  // else if ( -7.0*PI/16.0 < phi && phi <  -5.0*PI/16.0) return 14;
  // else if ( -5.0*PI/16.0 < phi && phi <  -3.0*PI/16.0) return 15;
  // else if ( -3.0*PI/16.0 < phi && phi <  -1.0*PI/16.0) return 16;
  // else std::cout << "ERROR: phi = " << phi*(16.0/PI) << "pi/16 is out of
  // range. Returning sector = -1." << std::endl;
  return -1;
}

inline TVector3 getSectorCenterVector(TVector3 vec) {
  float dTheta          = 0;
  float sectorCenterPhi = getSectorCenterPhi(getMdtSectorFromPhi(vec.Phi()));
  dTheta                = fabs(vec.Phi() - sectorCenterPhi);
  vec.SetPerp(vec.Perp() * cos(dTheta));
  vec.SetPhi(sectorCenterPhi);
  return vec;
}

inline unsigned getTubeNumberPerStation(MuonCalib::MuonFixedId id) {
  if (id.stationNameString()[0] == 'E') {
    std::cout << "WARNING: Tube number translation not implemented for endcap" << std::endl;
    return 0;
  }
  std::string stn_name;
  if (id.stationNameString() == "BIR") {
    if (id.mdtMultilayer() == 1) {
      stn_name = "BIRA";
    } else if (id.mdtMultilayer() == 2) {
      stn_name = "BIRB";
    }
  } else {
    stn_name = id.stationNameString();
  }

  int sector                          = TrigNtup::getMdtPhiSector(id.stationNameString(), id.phi());
  const std::vector<unsigned>& ntubes = MDT_STATION_NTUBE[sector][stn_name];

  int delta      = (id.eta() > 0) ? 1 : -1;
  unsigned index = ntubes.size() / 2;
  if (id.eta() < 0) {
    index += delta;
    if (ntubes.size() < 2 * unsigned(abs(id.eta()))) {
      std::cout << "WARNING: Station (" << id.stationNameString() << sector << ") eta (" << id.eta()
                << ") out of expected range (" << ntubes.size() / 2 << "), cannot translate tube number" << std::endl;
      return 0;
    }
  }
  unsigned endpoint = index + delta * (abs(id.eta()) - 1);
  unsigned tubeno   = 0;
  for (; index != endpoint; index += delta) {
    if (index < ntubes.size())
      tubeno += ntubes.at(index);
  }
  return tubeno + id.mdtTubeIndex();  // mdTubeIndex counts from 0
}

inline std::string getchamberFullName(std::string stationName, double z, int sector, double r) {
  char side      = (z < 0.) ? 'C' : 'A';
  int etaStation = 0;

  std::string chamberFullName = Form("%s%d%c%02d", stationName.data(), etaStation + 1, side, sector);

  if (stationName[0] == 'B') {
    try {
      while (fabs(MDT_STATION_LOCAL_ORIGIN.at(chamberFullName).first) < fabs(z)) {
        etaStation++;
        chamberFullName = Form("%s%d%c%02d", stationName.data(), etaStation + 1, side, sector);
      }
    } catch (const std::out_of_range&) {
      // bypass and continue if out of range...
      // cout << "caught out of range" << endl;
    }
  } else if (stationName[0] == 'E') {
    try {
      while (fabs(MDT_STATION_LOCAL_ORIGIN.at(chamberFullName).second) < r) {
        etaStation++;
        chamberFullName = Form("%s%d%c%02d", stationName.data(), etaStation + 1, side, sector);
      }
    } catch (const std::out_of_range&) {
      // bypass and continue if out of range...
      // cout << "caught out of range" << endl;
    }
  } else {
    std::cout << "misformed station name: " << stationName << std::endl;
  }
  if (etaStation == 0)
    ++etaStation;
  if (stationName == "BIL" && etaStation == 1) {  // resolve overlapping BIL1*09 ambiguity
    if (r > 5270.)
      etaStation = 1;
    else
      etaStation = 2;
  }
  chamberFullName = Form("%s%d%c%02d", stationName.data(), etaStation, side, sector);
  return chamberFullName;
}

inline double digitize(double orig, double multiplier) {
  return round(orig * multiplier) / multiplier;
}

inline double digitize_fl(double orig, double multiplier) {
  return floor(orig * multiplier) / multiplier;
}

inline std::vector<std::string> getChambersInSector(int sector, TrigNtup::TECHNOLOGY tech) {
  std::vector<std::string> chambers;
  // TODO add endcaps
  if (tech != TrigNtup::RPC)
    return chambers;
  std::map<std::string, const float>& sectormap = MDT_STATION_RHO[sector];
  for (auto it = sectormap.begin(); it != sectormap.end(); ++it) {
    chambers.push_back(it->first);
  }
  return chambers;
}

inline bool CrossingBorder(std::string chamber) {
  if (chamber == "BIL2A09" or chamber == "BIL2C09" or chamber == "BIL3A09" or chamber == "BIL3C09" or
      chamber == "BIL4A09" or chamber == "BIL4C09" or chamber == "BIL5A09" or chamber == "BIL5C09" or
      chamber == "BIL6A09" or chamber == "BIL6C09")
    return true;
  return false;
}

inline bool GoodRoI(std::vector<bool> rois) {
  if (rois.size() != 4)
    return false;
  if (rois[0] and rois[3])
    return true;
  int sum = 0;
  for (bool roi : rois) {
    sum += roi;
  }
  if (sum == 3)
    return true;
  return false;
}

inline bool isBarrel(std::string stationName) {
  if (stationName[0] == 'B')
    return true;
  else
    return false;
}

inline bool isEndcap(std::string stationName) {
  if (stationName[0] == 'E')
    return true;
  else
    return false;
}

#endif  // MDTGEOCONSTANTS_H_INCLUDED
