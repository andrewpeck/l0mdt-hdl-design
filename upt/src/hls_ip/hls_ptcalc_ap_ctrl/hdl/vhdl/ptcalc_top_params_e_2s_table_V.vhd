-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity ptcalc_top_params_e_2s_table_V_rom is 
    generic(
             DWIDTH     : integer := 23; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 172
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of ptcalc_top_params_e_2s_table_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11111111100010101100010", 1 => "00000000000011000100111", 
    2 => "00000001001100100101001", 3 => "11111111111001101101001", 
    4 to 11=> "00000000000000000000000", 12 => "11111111110101100100110", 
    13 => "00000000000010100110001", 14 => "00000000100001100101011", 
    15 => "11111111111001011010101", 16 to 19=> "00000000000000000000000", 
    20 => "00000011000001010110111", 21 => "11111111101001001000001", 
    22 => "11111000000100010111111", 23 => "00000000111000100000100", 
    24 => "00000000010100110101011", 25 => "11111111111101101100001", 
    26 => "11111111010001011101011", 27 => "00000000000110101010111", 
    28 => "11111100010011010000111", 29 => "00000000001000000100011", 
    30 => "00000110000001010010011", 31 => "11111111110010001100101", 
    32 => "11111010100000001100101", 33 => "00000000001001001001001", 
    34 => "00001000001001100000011", 35 => "11111111110100100010111", 
    36 => "00001001001010101011010", 37 => "11111111010000011011010", 
    38 => "11110100110101110010101", 39 => "00000000111010001000001", 
    40 => "11111110011011011000100", 41 => "11111111110010111011100", 
    42 => "00000010000011000011001", 43 => "00000000001110000110010", 
    44 => "11111100100011001001100", 45 => "00000000000000111101001", 
    46 => "00000011100010111101001", 47 => "00000000000001100100000", 
    48 => "11111100011010101100110", 49 => "00000000100110101110100", 
    50 => "00000011110011110000101", 51 => "11111111010101111000111", 
    52 => "11111101011100100001011", 53 => "11111111100111101100110", 
    54 => "00000010101001010001010", 55 => "00000000011001010111011", 
    56 => "11111000101111111011100", 57 => "00000000010001100100000", 
    58 => "00000111011011011101110", 59 => "11111111101100110001000", 
    60 => "00000000011011000000011", 61 => "11111111111100011100010", 
    62 => "11111110010100001101100", 63 => "00000000001010110000111", 
    64 => "00000001110100110000000", 65 => "00000000001100010010100", 
    66 => "11110111110001111011110", 67 => "11111111001000100111111", 
    68 => "00000001110100111110010", 69 => "11111111110111001100110", 
    70 => "11111110000000110000010", 71 => "00000000010101000000101", 
    72 => "11111111000000111001010", 73 => "00000000000001101010010", 
    74 => "00000001010101111100110", 75 => "11111111111111110111011", 
    76 => "00000001111111111001000", 77 => "11111111110111111000111", 
    78 => "11111001111000000001100", 79 => "00000000010110111111010", 
    80 to 83=> "00000000000000000000000", 84 => "11111101111100001110111", 
    85 => "00000000000011000110001", 86 => "00000010110011010011101", 
    87 => "11111111111101100110101", 88 => "00000010000011011001000", 
    89 => "11111111111010100111011", 90 => "11111101101011000000010", 
    91 => "00000000000111100100000", 92 => "11111100010000111110001", 
    93 => "00000000000000000011011", 94 => "00000100101101011000111", 
    95 => "00000000000010001011100", 96 => "11111110101100011000000", 
    97 => "00000000010111100110000", 98 => "00000000110010001011000", 
    99 => "11111111101001011111001", 100 => "01000110100010001100000", 
    101 => "11111101001010100011000", 102 => "10011111010101000000101", 
    103 => "00000011110110010010000", 104 => "11111010010101100110111", 
    105 => "11111111111100110110001", 106 => "00000101111010000111000", 
    107 => "00000000000111010111000", 108 => "11111100100010110100010", 
    109 => "11111111110001010000010", 110 => "00000011001000111111101", 
    111 => "00000000001101011001100", 112 => "11010011010001101100110", 
    113 => "00000000101111000100011", 114 => "00101110101100110110101", 
    115 => "11111111010010011000111", 116 => "11111000100001101111110", 
    117 => "00000000010100100101101", 118 => "00000110111011000101101", 
    119 => "11111111101100000011111", 120 => "11111111111001010000000", 
    121 => "00000000000000110101101", 122 => "00000000111100101100000", 
    123 => "11111111111101000001001", 124 => "00000001010101111011101", 
    125 => "00000000001001000010111", 126 => "11111010000100101000100", 
    127 => "11111111011000000100010", 128 to 131=> "00000000000000000000000", 
    132 => "11111111001000111100101", 133 => "00000000000010010001011", 
    134 => "00000010001001011011101", 135 => "11111111111101001110001", 
    136 => "11111100110010001101110", 137 => "00000000010000011000011", 
    138 => "00000111101101011000101", 139 => "11111111010111101101000", 
    140 => "11111101011011111011011", 141 => "11111111111100000010110", 
    142 => "00000100000011110000010", 143 => "00000000001000010110000", 
    144 => "11111101010000010110100", 145 => "11111111111110100110011", 
    146 => "00000101000000110010001", 147 => "00000000000100001000010", 
    148 => "11111011101110001110011", 149 => "11111111111011100001001", 
    150 => "00000101101111101110100", 151 => "00000000000111110111110", 
    152 => "11110111011111010000100", 153 => "00000000000011010100100", 
    154 => "00001001101110101111100", 155 => "11111111111010101011101", 
    156 => "11111101010010111001111", 157 => "11111111110011110110011", 
    158 => "00000010100010111101111", 159 => "00000000010000011111000", 
    160 => "11011000101011001001000", 161 => "00000010110110111010010", 
    162 => "00101011001101101010110", 163 => "11111100110111111101000", 
    164 => "11111110111010010101101", 165 => "11111111011010110100001", 
    166 => "00000000111011010011010", 167 => "00000000101000110111101", 
    168 => "11111001111101011011011", 169 => "11111111110101001011001", 
    170 => "00000100100000101000011", 171 => "00000000010000001100011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity ptcalc_top_params_e_2s_table_V is
    generic (
        DataWidth : INTEGER := 23;
        AddressRange : INTEGER := 172;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of ptcalc_top_params_e_2s_table_V is
    component ptcalc_top_params_e_2s_table_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    ptcalc_top_params_e_2s_table_V_rom_U :  component ptcalc_top_params_e_2s_table_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


