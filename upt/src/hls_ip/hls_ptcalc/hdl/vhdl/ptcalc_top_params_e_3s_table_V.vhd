-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity ptcalc_top_params_e_3s_table_V_rom is 
    generic(
             DWIDTH     : integer := 21; 
             AWIDTH     : integer := 7; 
             MEM_SIZE    : integer := 120
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of ptcalc_top_params_e_3s_table_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "111111101110110011110", 1 => "000000000001100010011", 
    2 => "000000110011100100100", 3 => "111111111010100100011", 
    4 => "111100111001110111110", 5 => "000000100111110100010", 
    6 => "001110101010010110100", 7 => "111101000011101010110", 
    8 => "000000110100111001101", 9 => "111111111100101111100", 
    10 => "111100011001100011000", 11 => "000000010010001111110", 
    12 => "111111110011010111110", 13 => "111111111101001100011", 
    14 => "000000111110011000101", 15 => "000000001101110111010", 
    16 to 19=> "000000000000000000000", 20 => "111110111101100010000", 
    21 => "000000000010101011010", 22 => "000011011101111000001", 
    23 => "111111111001010110000", 24 => "111111000100011000011", 
    25 => "000000000110011010010", 26 => "000010101101111000100", 
    27 => "111111101101110010110", 28 => "111111101100010110101", 
    29 => "000000000100101010011", 30 => "000001110000001000010", 
    31 => "111111110011111111011", 32 => "000000111111100111100", 
    33 => "111111101000110011111", 34 => "111101101010000000001", 
    35 => "000000110111110000010", 36 => "111100111000101000100", 
    37 => "000000000100101010110", 38 => "000110110011111110001", 
    39 => "111111110110100001001", 40 to 43=> "000000000000000000000", 
    44 => "111101110011111000010", 45 => "000000001011100011110", 
    46 => "000100010101100000100", 47 => "111111101001111001011", 
    48 => "000000101000101001010", 49 => "000000000001110100100", 
    50 => "111110111000010011111", 51 => "111111111101011100011", 
    52 => "111111001011010101001", 53 => "111111110100010010111", 
    54 => "000001010101110100010", 55 => "000000010011000100100", 
    56 => "110100000111101100100", 57 => "000000011101101101000", 
    58 => "010010001000010101011", 59 => "111111010011010000111", 
    60 => "111010000011010011100", 61 => "000000010110000100110", 
    62 => "000111111001101001000", 63 => "111111100010101000000", 
    64 => "000010101111101000111", 65 => "111111100010001100001", 
    66 => "111101000001000101110", 67 => "000000100011011110011", 
    68 => "000000101000001001000", 69 => "000000000010010000111", 
    70 => "111110110100010000110", 71 => "111111111101100011111", 
    72 => "111111100110010100110", 73 => "111111111010110111010", 
    74 => "000000100000011011001", 75 => "000000000110011111000", 
    76 => "110110101110001100111", 77 => "000000011110101000001", 
    78 => "001010101110011010000", 79 => "111111011101000000001", 
    80 to 83=> "000000000000000000000", 84 => "111000110100000111111", 
    85 => "000000011101001110001", 86 => "001000000110010011110", 
    87 => "111111011111001110010", 88 => "101011101001110010001", 
    89 => "000100101100011011100", 90 => "010101011110100110101", 
    91 => "111010111010110100000", 92 => "101000101011110000010", 
    93 => "000000101110000010000", 94 => "011001001110110111001", 
    95 => "111111001110110010101", 96 => "111100101010101110110", 
    97 => "000001010011110011001", 98 => "000011001111111010011", 
    99 => "111110100111000111101", 100 to 103=> "000000000000000000000", 
    104 => "111000010101111011000", 105 => "000001000001000111001", 
    106 => "001000010110101010100", 107 => "111110111001010110000", 
    108 => "110101011111111001111", 109 => "000000010010110000001", 
    110 => "001010100110001010111", 111 => "111111101101100111110", 
    112 => "000110100011000011101", 113 => "111110110100100010010", 
    114 => "111001010010010011100", 115 => "000001001110001100101", 
    116 => "110110101010110100111", 117 => "000000011100010010001", 
    118 => "001001001010110101111", 119 => "111111100100001010100" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity ptcalc_top_params_e_3s_table_V is
    generic (
        DataWidth : INTEGER := 21;
        AddressRange : INTEGER := 120;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of ptcalc_top_params_e_3s_table_V is
    component ptcalc_top_params_e_3s_table_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    ptcalc_top_params_e_3s_table_V_rom_U :  component ptcalc_top_params_e_3s_table_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


