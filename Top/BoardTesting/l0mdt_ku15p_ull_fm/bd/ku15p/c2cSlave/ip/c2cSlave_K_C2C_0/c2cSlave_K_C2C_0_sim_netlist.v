// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
// Date        : Mon Feb 27 09:32:42 2023
// Host        : atlas126a running 64-bit openSUSE Tumbleweed
// Command     : write_verilog -force -mode funcsim -rename_top c2cSlave_K_C2C_0 -prefix
//               c2cSlave_K_C2C_0_ c2cSlave_K_C2CB_0_sim_netlist.v
// Design      : c2cSlave_K_C2CB_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcku15p-ffva1760-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "c2cSlave_K_C2CB_0,axi_chip2chip_v5_0_9,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_9,Vivado 2020.2" *) 
(* NotValidForBitStream *)
module c2cSlave_K_C2C_0
   (m_aclk,
    m_aresetn,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    m_axi_lite_aclk,
    m_axi_lite_awaddr,
    m_axi_lite_awprot,
    m_axi_lite_awvalid,
    m_axi_lite_awready,
    m_axi_lite_wdata,
    m_axi_lite_wstrb,
    m_axi_lite_wvalid,
    m_axi_lite_wready,
    m_axi_lite_bresp,
    m_axi_lite_bvalid,
    m_axi_lite_bready,
    m_axi_lite_araddr,
    m_axi_lite_arprot,
    m_axi_lite_arvalid,
    m_axi_lite_arready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_rvalid,
    m_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aclk, ASSOCIATED_BUSIF m_axi, ASSOCIATED_RESET m_aresetn, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, INSERT_VIP 0" *) input m_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWADDR" *) output [31:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWLEN" *) output [7:0]m_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWSIZE" *) output [2:0]m_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWBURST" *) output [1:0]m_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWREADY" *) input m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WDATA" *) output [31:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WSTRB" *) output [3:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WREADY" *) input m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BRESP" *) input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BREADY" *) output m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARADDR" *) output [31:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARLEN" *) output [7:0]m_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARSIZE" *) output [2:0]m_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARBURST" *) output [1:0]m_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARREADY" *) input m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RDATA" *) input [31:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RRESP" *) input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_clk50Mhz, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_lite_aclk, ASSOCIATED_BUSIF m_axi_lite, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, INSERT_VIP 0" *) input m_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWADDR" *) output [31:0]m_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWPROT" *) output [1:0]m_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWVALID" *) output m_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWREADY" *) input m_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WDATA" *) output [31:0]m_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WSTRB" *) output [3:0]m_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WVALID" *) output m_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WREADY" *) input m_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BRESP" *) input [1:0]m_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BVALID" *) input m_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BREADY" *) output m_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARADDR" *) output [31:0]m_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARPROT" *) output [1:0]m_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARVALID" *) output m_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARREADY" *) input m_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RDATA" *) input [31:0]m_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RRESP" *) input [1:0]m_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RVALID" *) input m_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [1:0]\^m_axi_arsize ;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [1:0]\^m_axi_awsize ;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire m_axi_lite_aclk;
  wire [31:0]m_axi_lite_araddr;
  wire [1:0]m_axi_lite_arprot;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire [31:0]m_axi_lite_awaddr;
  wire [1:0]m_axi_lite_awprot;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire [31:0]m_axi_lite_wdata;
  wire m_axi_lite_wready;
  wire [3:0]m_axi_lite_wstrb;
  wire m_axi_lite_wvalid;
  wire [31:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire NLW_inst_axi_c2c_config_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_link_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  assign axi_c2c_config_error_out = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1:0] = \^m_axi_arsize [1:0];
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1:0] = \^m_axi_awsize [1:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "45" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "kintexuplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "2" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "0" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  c2cSlave_K_C2C_0_axi_chip2chip_v5_0_9 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(NLW_inst_axi_c2c_config_error_out_UNCONNECTED),
        .axi_c2c_link_error_out(NLW_inst_axi_c2c_link_error_out_UNCONNECTED),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_c2c_s2m_intr_out(NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(m_aclk),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(m_aresetn),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize({NLW_inst_m_axi_arsize_UNCONNECTED[2],\^m_axi_arsize }),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize({NLW_inst_m_axi_awsize_UNCONNECTED[2],\^m_axi_awsize }),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(1'b0),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .m_axi_lite_araddr(m_axi_lite_araddr),
        .m_axi_lite_arprot(m_axi_lite_arprot),
        .m_axi_lite_arready(m_axi_lite_arready),
        .m_axi_lite_arvalid(m_axi_lite_arvalid),
        .m_axi_lite_awaddr(m_axi_lite_awaddr),
        .m_axi_lite_awprot(m_axi_lite_awprot),
        .m_axi_lite_awready(m_axi_lite_awready),
        .m_axi_lite_awvalid(m_axi_lite_awvalid),
        .m_axi_lite_bready(m_axi_lite_bready),
        .m_axi_lite_bresp(m_axi_lite_bresp),
        .m_axi_lite_bvalid(m_axi_lite_bvalid),
        .m_axi_lite_rdata(m_axi_lite_rdata),
        .m_axi_lite_rready(m_axi_lite_rready),
        .m_axi_lite_rresp(m_axi_lite_rresp),
        .m_axi_lite_rvalid(m_axi_lite_rvalid),
        .m_axi_lite_wdata(m_axi_lite_wdata),
        .m_axi_lite_wready(m_axi_lite_wready),
        .m_axi_lite_wstrb(m_axi_lite_wstrb),
        .m_axi_lite_wvalid(m_axi_lite_wvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rid(1'b0),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_aclk(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* REG_OUTPUT = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) (* VERSION = "0" *) 
(* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* SIM_ASSERT_CHK = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2C_0_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

module c2cSlave_K_C2C_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_20
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_28
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_39
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_29
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_40
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_43
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_30
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_41
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2_34
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2_45
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2C_0_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* P_COMMON_CLOCK = "0" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) 
(* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) (* dont_touch = "true" *) 
(* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "36" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "36" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [35:0]din;
  wire [35:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[35:1] = \^dout [35:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "18432" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "36" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "36" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[35:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "3" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "768" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2C_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2C_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* PE_THRESH_ADJ = "8" *) 
(* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) (* PF_THRESH_ADJ = "126" *) 
(* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) (* PROG_EMPTY_THRESH = "10" *) 
(* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) (* RD_DC_WIDTH_EXT = "9" *) 
(* RD_LATENCY = "2" *) (* RD_MODE = "1" *) (* RD_PNTR_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) (* READ_MODE_LL = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) 
(* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) (* WR_PNTR_WIDTH = "8" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec_35 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_36 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec_37 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_38 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_39 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  c2cSlave_K_C2C_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_40 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_41 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_42 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_43 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_44 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2_45 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "37" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "38" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_pf_ic_rc.ram_empty_i_reg (\gen_fwft.count_rst ),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "18432" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "36" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "36" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [35:0]din;
  wire [35:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [35:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[35:1] = \^dout [35:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "36" *) 
  (* BYTE_WRITE_WIDTH_B = "36" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "34" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "35" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "18432" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "36" *) 
  (* P_MIN_WIDTH_DATA_A = "36" *) 
  (* P_MIN_WIDTH_DATA_B = "36" *) 
  (* P_MIN_WIDTH_DATA_ECC = "36" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "36" *) 
  (* P_WIDTH_COL_WRITE_B = "36" *) 
  (* READ_DATA_WIDTH_A = "36" *) 
  (* READ_DATA_WIDTH_B = "36" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "36" *) 
  (* WRITE_DATA_WIDTH_B = "36" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[35:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [35:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_pf_ic_rc.ram_empty_i_reg (\gen_fwft.count_rst ),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "768" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_17 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec_18 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_19 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_20 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_21 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_22 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_23 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2C_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec_24 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_25 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec_26 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_27 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn_28 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  c2cSlave_K_C2C_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_29 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_30 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2C_0_xpm_fifo_reg_bit_31 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized0_32 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized1_33 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_counter_updn__parameterized2_34 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

module c2cSlave_K_C2C_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_21
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_31
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_42
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

module c2cSlave_K_C2C_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec_18
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec_24
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec_26
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec_35
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec_37
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_1
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_17
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_19
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_25
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_27
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_36
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_38
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized0_7
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2C_0_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

module c2cSlave_K_C2C_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[8] ;
  wire [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    \count_value_i[1]_i_1__4 
       (.I0(ram_empty_i),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[8] ;
  wire [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    \count_value_i[1]_i_1__4 
       (.I0(ram_empty_i),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2C_0_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2C_0_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* P_ECC_MODE = "no_ecc" *) 
(* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) (* P_MAX_DEPTH_DATA = "256" *) 
(* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) (* P_MIN_WIDTH_DATA = "45" *) 
(* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) (* P_MIN_WIDTH_DATA_ECC = "45" *) 
(* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) (* P_NUM_COLS_WRITE_A = "1" *) 
(* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) (* P_NUM_ROWS_READ_B = "1" *) 
(* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) (* P_SDP_WRITE_MODE = "no" *) 
(* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) (* P_WIDTH_ADDR_READ_B = "8" *) 
(* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) (* P_WIDTH_COL_WRITE_A = "45" *) 
(* P_WIDTH_COL_WRITE_B = "45" *) (* READ_DATA_WIDTH_A = "45" *) (* READ_DATA_WIDTH_B = "45" *) 
(* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) (* READ_RESET_VALUE_A = "0" *) 
(* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) (* RST_MODE_B = "SYNC" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) (* USE_MEM_INIT = "0" *) 
(* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) (* WRITE_MODE_A = "2" *) 
(* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) (* rstb_loop_iter = "48" *) 
module c2cSlave_K_C2C_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:6]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "37" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "37" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "37" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:6],doutb[37:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "36" *) (* BYTE_WRITE_WIDTH_B = "36" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "18432" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "36" *) (* P_MIN_WIDTH_DATA_A = "36" *) (* P_MIN_WIDTH_DATA_B = "36" *) 
(* P_MIN_WIDTH_DATA_ECC = "36" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "36" *) (* P_WIDTH_COL_WRITE_B = "36" *) (* READ_DATA_WIDTH_A = "36" *) 
(* READ_DATA_WIDTH_B = "36" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "36" *) (* WRITE_DATA_WIDTH_B = "36" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "36" *) 
(* rstb_loop_iter = "36" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [35:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [35:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [35:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [35:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [35:0]dina;
  wire [35:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [1:1]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[35:1] = \^doutb [35:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p3_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "34" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p3_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "34" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "18432" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "34" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [15:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [15:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [1:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [1:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DINADIN(dina[16:1]),
        .DINBDIN(dina[32:17]),
        .DINPADINP(dina[34:33]),
        .DINPBDINP({1'b1,dina[35]}),
        .DOUTADOUT(\^doutb [16:1]),
        .DOUTBDOUT(\^doutb [32:17]),
        .DOUTPADOUTP(\^doutb [34:33]),
        .DOUTPBDOUTP({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [1],\^doutb [35]}),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* READ_DATA_WIDTH_A = "3" *) 
(* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) (* WRITE_DATA_WIDTH_B = "3" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "4" *) 
(* rstb_loop_iter = "4" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.doutb_reg ;
  wire \gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [2]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED [1:0]),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED [1:0]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module c2cSlave_K_C2C_0_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED [1:0]),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED [1:0]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2020.2"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
Smodsvllcvd6MuPfdHlFmvR8p+Pe7f/pUBu/EPfJ2zZ5ctuddGasm68DT7c1GLZh6gDWLRVWzeFo
7fcCmPmHOg==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
s2mDZJeKjJsKFE8Xp2XRbJCl6T2FNVLRNeAmU/UqqR05MWC75Dr4jE6br+1fqFRpw3qEraDZBccO
2KWWAdJBHQOh1fufTlMCJJJEIWl4RL3bkCRsGDbIquWw0kVLdFyOEx6Lt14PvUyTuHVmV8wLyqrH
yrV4YPFXV6ypwrcRjr8=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
x+7/agT4n/d9u1QQInxgxce2jZanNSpIonCHAMN9TwcrlJrdb8ZfXZRtPg5W5uDzAYwFlpOMaH7J
K0bU2N1bJd5SulzzWFr2xmwWwHkajiQbUTVM/qR72fbwtXA37wmHeH5Tj2maA3ysmVCEOBf+PzRU
Skp4HmB39p3hznf7ivb9O+sIfUNHxZBRzkiGh0ybjA8gVC3hy9NdrtQe0RHj+KDnauKeW/7F5h28
Wru9E7eo717pSBIWiXC0+XEYHLyZH8UN1U/iAvPNkpqEn4OvzptabgKAiRn6ijsrWWhVztYbGXt2
qOtTlmttFPVT2ywiD8/sG81mWcXtkBnjurP1Bw==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
a+uyg/DogHrar2B20X0VgKpDYxx8u5tU3WA15lXV858Y9HTfE/D5Ryjp0R5g+o4hU/5agZ7PQugj
+Mvi/rKN+IHrEnVKSjN5RJGFUfDKEXQdedEiVI1lKvTljh6/DbxkqYVn8yzilcIXSBDhoq5uXOcx
Mwmzc2s6rW0NV5Q8EbxCcgTrGYzpifzEoYV0jTlScpaPkDqnEcq5FfdczU1m49BoU+M4J77FaKjN
pv9iayEPhHjY2K5BE74HpvcRAZiQ5f6Gm3FLXXd/9cLd2FDmDBtno+HFPjWV03VK9Wa3oqggUaWc
2+IraP0j0iYXzF9j3MybI+65W/eukw9H5L3ICg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
pIB9TJIKMKujbrZdwkCbRqImY/XmmtgVYJYP8sQJB8aidnWCgifLnFKwPxN8+uM6n92XDeuSl2uf
spMy7uFl+uyL+JqlCjJUGfHM+H03Wu2cccoisOYpY+XRV9nieltHFTy8wDgpVV0w3KMf+UV1TZtt
4ztD5z48R4BbG/Ue0sk=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Vn0eykMtydiA29PmAvGfWqzU/OcR9L9ZRcvug6TYIDc7Wxv5/GyVdGrNdRktD0f9KubgBa0urkHZ
OVAc1qpm7pKiLBUVlFacwXaioX9Q1FD1SAxilHWB5ltYgZegy2ez2lryio4r3lIYsEXOpFFCfoTj
JjvYIAKkVicZbUdPFn9Cw7BgtAyIBox5+wMxN4Woz2ieR6XD0tXW5bIK6OUZiDKv6cMDmQ7o/QLx
ki3QAGoSbICwuLgoE01RbtjZTocaCLZT+wrDC/IcJB+d70CbAiRE5s6cmmTsX/12AcCznkVRMaTv
CR0SNb0Ps+0ZVYz9aKP8giXb5qLYBT0vftbPPg==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Yt83c3DmqkpWc1KPkPbqmHqaLoT3qlzJzC6nkvkkrCh8yH/Ym2KZkrIxp3XDJeaAtDhQXBkh650y
O3wUe60ck9zvA8HWGhS5BPgIw9rnangrhcvzCScfI0OfwQ6h5ZsgVFFGvkBnBgniaJ4N2G3Zujop
aYKZKOok233c5nuk6znEO/qIaPnWVPy2jruPlSPfu+7OpnFaiOVBJx+VJC4YR2E6xdvjMTM4vPrQ
/etKY/AYxfvM028Lxnt9Xc+CVCVOYyV5dT4unPuM89uabGBKMCLWKBA9mKxBmXNUT2MSjOds3Dut
JQa6ypo8M2SEm2GGxI67ytaHq3pYFSh7UBopoA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
rWZCM2OLTdFeNt3/3w1nV8cDE8ru50QBdnwQU2vQ/RCdITRg6R67t+HHT+nMg7iJ9FgoAWWbslZP
nNrhWQS1A/eoyQsI+cbuwUT7rIPRLBRpJIXKI5TnO0alZwYyePXXbSzmnbSbbxoRhXVgbY4MQ2gT
8KcbIZfsV8RKXGHsAbt8vPQSHgOXcZFD4+w2IU/VGk/KAnGsIVvTUcijNi7Q7vBbI8ceiHiKg55T
nv14J6fhUXK2vndlaXvQ7Uoqcxdpu2PDWj9CiInYu5QBGzJWoMPwzfLfxB+Am5azcUDCf8FUy4IO
oArsrBt5MXGK/KRLLr4vcSvW+yOxJzfrZPG8Mw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2020_08", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
SP+xNpp1Ho2r2B0A7yOizrsTj3eBYEq/2auUnNB7Pjs4H7cFrz5pVVFE+c9sc68Oe7YL/0e2v/jK
M9zSnmOQjteVTNuriozBDU8b7ZbRl2EIwBoHjxxr3APjuHMe7B00kUieij2E3nkqNJFL0VhqMYz8
1rSTpPERO5jBUCzhjyi1cdOHrQNzt2kVY0SgJDtNz6oN07397z0su0vaN0DNs6qAu5DF5mGIdPdP
vD4c7qy0B0wcB0NQPx5Gxr+54OL3AKN3BsuWEOCrY2vztdCtXoep3lXDB3fw1rOXfb0ELNDv2CtF
a8UzUmODOsTlTsU5nvL0uTLS58RWaxXYE14rnQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 510256)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
