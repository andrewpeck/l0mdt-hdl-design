// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.2 (lin64) Build 3064766 Wed Nov 18 09:12:47 MST 2020
// Date        : Mon Feb 27 09:32:44 2023
// Host        : atlas126a running 64-bit openSUSE Tumbleweed
// Command     : write_verilog -force -mode funcsim
//               /home/iwsatlas1/dcieri/Work/MDT-fw/l0mdt-hdl-design/Top/BoardTesting/l0mdt_ku15p_ull_fm/bd/ku15p/c2cSlave/ip/c2cSlave_K_C2CB_0/c2cSlave_K_C2CB_0_sim_netlist.v
// Design      : c2cSlave_K_C2CB_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xcku15p-ffva1760-2-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "c2cSlave_K_C2CB_0,axi_chip2chip_v5_0_9,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_chip2chip_v5_0_9,Vivado 2020.2" *) 
(* NotValidForBitStream *)
module c2cSlave_K_C2CB_0
   (m_aclk,
    m_aresetn,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    axi_c2c_s2m_intr_in,
    axi_c2c_m2s_intr_out,
    axi_c2c_phy_clk,
    axi_c2c_aurora_channel_up,
    axi_c2c_aurora_tx_tready,
    axi_c2c_aurora_tx_tdata,
    axi_c2c_aurora_tx_tvalid,
    axi_c2c_aurora_rx_tdata,
    axi_c2c_aurora_rx_tvalid,
    aurora_do_cc,
    aurora_pma_init_in,
    aurora_init_clk,
    aurora_pma_init_out,
    aurora_mmcm_not_locked,
    aurora_reset_pb,
    axi_c2c_config_error_out,
    axi_c2c_link_status_out,
    axi_c2c_multi_bit_error_out,
    m_axi_lite_aclk,
    m_axi_lite_awaddr,
    m_axi_lite_awprot,
    m_axi_lite_awvalid,
    m_axi_lite_awready,
    m_axi_lite_wdata,
    m_axi_lite_wstrb,
    m_axi_lite_wvalid,
    m_axi_lite_wready,
    m_axi_lite_bresp,
    m_axi_lite_bvalid,
    m_axi_lite_bready,
    m_axi_lite_araddr,
    m_axi_lite_arprot,
    m_axi_lite_arvalid,
    m_axi_lite_arready,
    m_axi_lite_rdata,
    m_axi_lite_rresp,
    m_axi_lite_rvalid,
    m_axi_lite_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aclk, ASSOCIATED_BUSIF m_axi, ASSOCIATED_RESET m_aresetn, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, INSERT_VIP 0" *) input m_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_aresetn, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWADDR" *) output [31:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWLEN" *) output [7:0]m_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWSIZE" *) output [2:0]m_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWBURST" *) output [1:0]m_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi AWREADY" *) input m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WDATA" *) output [31:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WSTRB" *) output [3:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi WREADY" *) input m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BRESP" *) input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi BREADY" *) output m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARADDR" *) output [31:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARLEN" *) output [7:0]m_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARSIZE" *) output [2:0]m_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARBURST" *) output [1:0]m_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi ARREADY" *) input m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RDATA" *) input [31:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RRESP" *) input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi, NUM_READ_OUTSTANDING 16, NUM_WRITE_OUTSTANDING 16, DATA_WIDTH 32, PROTOCOL AXI4, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_rready;
  input [3:0]axi_c2c_s2m_intr_in;
  output [3:0]axi_c2c_m2s_intr_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 axi_c2c_phy_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME axi_c2c_phy_clk, ASSOCIATED_BUSIF AXIS_TX:AXIS_RX, ASSOCIATED_RESET aurora_reset_pb, FREQ_HZ 78125000, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, INSERT_VIP 0" *) input axi_c2c_phy_clk;
  input axi_c2c_aurora_channel_up;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TREADY" *) input axi_c2c_aurora_tx_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TDATA" *) output [63:0]axi_c2c_aurora_tx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_TX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_TX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) output axi_c2c_aurora_tx_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TDATA" *) input [63:0]axi_c2c_aurora_rx_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 AXIS_RX TVALID" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AXIS_RX, TDATA_NUM_BYTES 8, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 0, HAS_TREADY 0, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 0, FREQ_HZ 78125000, PHASE 0, CLK_DOMAIN c2cSlave_K_C2C_PHY_0_user_clk_out, LAYERED_METADATA undef, INSERT_VIP 0" *) input axi_c2c_aurora_rx_tvalid;
  output aurora_do_cc;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_IN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_IN, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_pma_init_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 INIT_CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INIT_CLK, ASSOCIATED_RESET aurora_pma_init_out, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_clk50Mhz, INSERT_VIP 0" *) input aurora_init_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_PMA_INIT_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_PMA_INIT_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_pma_init_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_MMCM_NOT_LOCKED RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_MMCM_NOT_LOCKED, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input aurora_mmcm_not_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AURORA_RST_OUT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AURORA_RST_OUT, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output aurora_reset_pb;
  output axi_c2c_config_error_out;
  output axi_c2c_link_status_out;
  output axi_c2c_multi_bit_error_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axi_lite_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_lite_aclk, ASSOCIATED_BUSIF m_axi_lite, FREQ_HZ 50000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, INSERT_VIP 0" *) input m_axi_lite_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWADDR" *) output [31:0]m_axi_lite_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWPROT" *) output [1:0]m_axi_lite_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWVALID" *) output m_axi_lite_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite AWREADY" *) input m_axi_lite_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WDATA" *) output [31:0]m_axi_lite_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WSTRB" *) output [3:0]m_axi_lite_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WVALID" *) output m_axi_lite_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite WREADY" *) input m_axi_lite_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BRESP" *) input [1:0]m_axi_lite_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BVALID" *) input m_axi_lite_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite BREADY" *) output m_axi_lite_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARADDR" *) output [31:0]m_axi_lite_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARPROT" *) output [1:0]m_axi_lite_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARVALID" *) output m_axi_lite_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite ARREADY" *) input m_axi_lite_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RDATA" *) input [31:0]m_axi_lite_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RRESP" *) input [1:0]m_axi_lite_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RVALID" *) input m_axi_lite_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_axi_lite RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axi_lite, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 50000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN c2cSlave_AXI_CLK, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output m_axi_lite_rready;

  wire \<const0> ;
  wire aurora_do_cc;
  wire aurora_init_clk;
  wire aurora_mmcm_not_locked;
  wire aurora_pma_init_in;
  wire aurora_pma_init_out;
  wire aurora_reset_pb;
  wire axi_c2c_aurora_channel_up;
  wire [63:0]axi_c2c_aurora_rx_tdata;
  wire axi_c2c_aurora_rx_tvalid;
  wire [63:0]\^axi_c2c_aurora_tx_tdata ;
  wire axi_c2c_aurora_tx_tready;
  wire axi_c2c_aurora_tx_tvalid;
  wire axi_c2c_link_status_out;
  wire [3:0]axi_c2c_m2s_intr_out;
  wire axi_c2c_multi_bit_error_out;
  wire axi_c2c_phy_clk;
  wire [3:0]axi_c2c_s2m_intr_in;
  wire m_aclk;
  wire m_aresetn;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [7:0]m_axi_arlen;
  wire m_axi_arready;
  wire [1:0]\^m_axi_arsize ;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [7:0]m_axi_awlen;
  wire m_axi_awready;
  wire [1:0]\^m_axi_awsize ;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire m_axi_lite_aclk;
  wire [31:0]m_axi_lite_araddr;
  wire [1:0]m_axi_lite_arprot;
  wire m_axi_lite_arready;
  wire m_axi_lite_arvalid;
  wire [31:0]m_axi_lite_awaddr;
  wire [1:0]m_axi_lite_awprot;
  wire m_axi_lite_awready;
  wire m_axi_lite_awvalid;
  wire m_axi_lite_bready;
  wire [1:0]m_axi_lite_bresp;
  wire m_axi_lite_bvalid;
  wire [31:0]m_axi_lite_rdata;
  wire m_axi_lite_rready;
  wire [1:0]m_axi_lite_rresp;
  wire m_axi_lite_rvalid;
  wire [31:0]m_axi_lite_wdata;
  wire m_axi_lite_wready;
  wire [3:0]m_axi_lite_wstrb;
  wire m_axi_lite_wvalid;
  wire [31:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [31:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [3:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire NLW_inst_axi_c2c_config_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_link_error_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED;
  wire NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED;
  wire NLW_inst_m_aclk_out_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_arready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_awready_UNCONNECTED;
  wire NLW_inst_s_axi_lite_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_lite_wready_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire [62:62]NLW_inst_axi_c2c_aurora_tx_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED;
  wire [27:0]NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [2:2]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_bresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_lite_rdata_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_lite_rresp_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;

  assign axi_c2c_aurora_tx_tdata[63] = \^axi_c2c_aurora_tx_tdata [63];
  assign axi_c2c_aurora_tx_tdata[62] = \<const0> ;
  assign axi_c2c_aurora_tx_tdata[61:0] = \^axi_c2c_aurora_tx_tdata [61:0];
  assign axi_c2c_config_error_out = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1:0] = \^m_axi_arsize [1:0];
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1:0] = \^m_axi_awsize [1:0];
  GND GND
       (.G(\<const0> ));
  (* ADDR_MUX_RATIO = "1" *) 
  (* ADDR_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* AFIFO_DATA_SIZE = "45" *) 
  (* AFIFO_DATA_SIZE_M2 = "1" *) 
  (* AFIFO_DATA_SIZE_M3 = "0" *) 
  (* AFIFO_DATA_SIZE_M4 = "1" *) 
  (* AFIFO_TIE_WIDTH = "1" *) 
  (* AFIFO_WIDTH = "45" *) 
  (* AR_CH_FC = "128" *) 
  (* AR_CH_FIFO_DEPTH = "256" *) 
  (* AR_CH_PTR_WIDTH = "8" *) 
  (* AWB_FC_WIDTH = "2" *) 
  (* AW_CH_FC = "128" *) 
  (* AW_CH_FIFO_DEPTH = "256" *) 
  (* AW_CH_PTR_WIDTH = "8" *) 
  (* AXILITE_WIDTH = "20" *) 
  (* BFIFO_DATA_SIZE = "3" *) 
  (* BFIFO_WIDTH = "3" *) 
  (* BR_CH_FC = "128" *) 
  (* BR_CH_FIFO_DEPTH = "256" *) 
  (* BR_CH_PTR_WIDTH = "8" *) 
  (* C_AURORA_WIDTH = "64" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_BRST_WIDTH = "2" *) 
  (* C_AXI_BUS_TYPE = "0" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LITE_ADDR_WIDTH = "32" *) 
  (* C_AXI_LITE_DATA_WIDTH = "32" *) 
  (* C_AXI_LITE_PROT_WIDTH = "2" *) 
  (* C_AXI_LITE_RESP_WIDTH = "2" *) 
  (* C_AXI_LITE_STB_WIDTH = "4" *) 
  (* C_AXI_RESP_WIDTH = "2" *) 
  (* C_AXI_SIZE_WIDTH = "3" *) 
  (* C_AXI_SIZE_WIDTH_INTERNAL = "2" *) 
  (* C_AXI_STB_WIDTH = "4" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_DISABLE_CLK_SHIFT = "0" *) 
  (* C_DISABLE_DESKEW = "0" *) 
  (* C_ECC_ENABLE = "1" *) 
  (* C_EN_AXI_LINK_HNDLR = "0" *) 
  (* C_EN_LEGACY_MODE = "0" *) 
  (* C_FAMILY = "kintexuplus" *) 
  (* C_FIFO_DEPTH_LH = "256" *) 
  (* C_INCLUDE_AXILITE = "2" *) 
  (* C_INSTANCE = "axi_c2c" *) 
  (* C_INTERFACE_MODE = "0" *) 
  (* C_INTERFACE_TYPE = "2" *) 
  (* C_INTERRUPT_WIDTH = "4" *) 
  (* C_MASTER_FPGA = "0" *) 
  (* C_NUM_OF_IO = "58" *) 
  (* C_PHY_SELECT = "1" *) 
  (* C_RD_CNTR_WIDTH = "8" *) 
  (* C_SELECTIO_DDR = "0" *) 
  (* C_SELECTIO_PHY_CLK = "100" *) 
  (* C_SELECTIO_WIDTH = "28" *) 
  (* C_SIMULATION = "0" *) 
  (* C_SYNC_STAGE = "3" *) 
  (* C_USE_DIFF_CLK = "0" *) 
  (* C_USE_DIFF_IO = "0" *) 
  (* C_WIDTH_CONVERSION = "1" *) 
  (* C_WR_CNTR_WIDTH = "8" *) 
  (* DATA_MUX_RATIO = "1" *) 
  (* DATA_MUX_RATIO_ID_WID_0_TO_12 = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* EN_ECC = "1" *) 
  (* PHY_CTRL_WIDTH = "3" *) 
  (* PHY_DATA_WIDTH = "64" *) 
  (* RB_FC_WIDTH = "3" *) 
  (* RFIFO_DATA_SIZE = "36" *) 
  (* RFIFO_DATA_SIZE_M2 = "0" *) 
  (* RFIFO_DATA_SIZE_M3 = "0" *) 
  (* RFIFO_DATA_SIZE_M4 = "0" *) 
  (* RFIFO_TIE_WIDTH = "1" *) 
  (* RFIFO_WIDTH = "36" *) 
  (* TDM_ID_WIDTH = "2" *) 
  (* TDM_VAL_BITS = "1" *) 
  (* WFIFO_DATA_SIZE = "38" *) 
  (* WFIFO_DATA_SIZE_M2 = "0" *) 
  (* WFIFO_DATA_SIZE_M3 = "2" *) 
  (* WFIFO_DATA_SIZE_M4 = "2" *) 
  (* WFIFO_TIE_WIDTH = "1" *) 
  (* WFIFO_WIDTH = "38" *) 
  (* is_du_within_envelope = "true" *) 
  c2cSlave_K_C2CB_0_axi_chip2chip_v5_0_9 inst
       (.aurora_do_cc(aurora_do_cc),
        .aurora_init_clk(aurora_init_clk),
        .aurora_mmcm_not_locked(aurora_mmcm_not_locked),
        .aurora_pma_init_in(aurora_pma_init_in),
        .aurora_pma_init_out(aurora_pma_init_out),
        .aurora_reset_pb(aurora_reset_pb),
        .axi_c2c_aurora_channel_up(axi_c2c_aurora_channel_up),
        .axi_c2c_aurora_rx_tdata(axi_c2c_aurora_rx_tdata),
        .axi_c2c_aurora_rx_tvalid(axi_c2c_aurora_rx_tvalid),
        .axi_c2c_aurora_tx_tdata(\^axi_c2c_aurora_tx_tdata ),
        .axi_c2c_aurora_tx_tready(axi_c2c_aurora_tx_tready),
        .axi_c2c_aurora_tx_tvalid(axi_c2c_aurora_tx_tvalid),
        .axi_c2c_config_error_out(NLW_inst_axi_c2c_config_error_out_UNCONNECTED),
        .axi_c2c_link_error_out(NLW_inst_axi_c2c_link_error_out_UNCONNECTED),
        .axi_c2c_link_status_out(axi_c2c_link_status_out),
        .axi_c2c_lnk_hndlr_in_progress(NLW_inst_axi_c2c_lnk_hndlr_in_progress_UNCONNECTED),
        .axi_c2c_m2s_intr_in({1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_m2s_intr_out(axi_c2c_m2s_intr_out),
        .axi_c2c_multi_bit_error_out(axi_c2c_multi_bit_error_out),
        .axi_c2c_phy_clk(axi_c2c_phy_clk),
        .axi_c2c_s2m_intr_in(axi_c2c_s2m_intr_in),
        .axi_c2c_s2m_intr_out(NLW_inst_axi_c2c_s2m_intr_out_UNCONNECTED[3:0]),
        .axi_c2c_selio_rx_clk_in(1'b0),
        .axi_c2c_selio_rx_data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_clk_in_n(1'b0),
        .axi_c2c_selio_rx_diff_clk_in_p(1'b0),
        .axi_c2c_selio_rx_diff_data_in_n({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_rx_diff_data_in_p({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_c2c_selio_tx_clk_out(NLW_inst_axi_c2c_selio_tx_clk_out_UNCONNECTED),
        .axi_c2c_selio_tx_data_out(NLW_inst_axi_c2c_selio_tx_data_out_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_clk_out_n(NLW_inst_axi_c2c_selio_tx_diff_clk_out_n_UNCONNECTED),
        .axi_c2c_selio_tx_diff_clk_out_p(NLW_inst_axi_c2c_selio_tx_diff_clk_out_p_UNCONNECTED),
        .axi_c2c_selio_tx_diff_data_out_n(NLW_inst_axi_c2c_selio_tx_diff_data_out_n_UNCONNECTED[27:0]),
        .axi_c2c_selio_tx_diff_data_out_p(NLW_inst_axi_c2c_selio_tx_diff_data_out_p_UNCONNECTED[27:0]),
        .idelay_ref_clk(1'b0),
        .m_aclk(m_aclk),
        .m_aclk_out(NLW_inst_m_aclk_out_UNCONNECTED),
        .m_aresetn(m_aresetn),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize({NLW_inst_m_axi_arsize_UNCONNECTED[2],\^m_axi_arsize }),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize({NLW_inst_m_axi_awsize_UNCONNECTED[2],\^m_axi_awsize }),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(1'b0),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_lite_aclk(m_axi_lite_aclk),
        .m_axi_lite_araddr(m_axi_lite_araddr),
        .m_axi_lite_arprot(m_axi_lite_arprot),
        .m_axi_lite_arready(m_axi_lite_arready),
        .m_axi_lite_arvalid(m_axi_lite_arvalid),
        .m_axi_lite_awaddr(m_axi_lite_awaddr),
        .m_axi_lite_awprot(m_axi_lite_awprot),
        .m_axi_lite_awready(m_axi_lite_awready),
        .m_axi_lite_awvalid(m_axi_lite_awvalid),
        .m_axi_lite_bready(m_axi_lite_bready),
        .m_axi_lite_bresp(m_axi_lite_bresp),
        .m_axi_lite_bvalid(m_axi_lite_bvalid),
        .m_axi_lite_rdata(m_axi_lite_rdata),
        .m_axi_lite_rready(m_axi_lite_rready),
        .m_axi_lite_rresp(m_axi_lite_rresp),
        .m_axi_lite_rvalid(m_axi_lite_rvalid),
        .m_axi_lite_wdata(m_axi_lite_wdata),
        .m_axi_lite_wready(m_axi_lite_wready),
        .m_axi_lite_wstrb(m_axi_lite_wstrb),
        .m_axi_lite_wvalid(m_axi_lite_wvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rid(1'b0),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_aclk(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_lite_aclk(1'b0),
        .s_axi_lite_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_arprot({1'b0,1'b0}),
        .s_axi_lite_arready(NLW_inst_s_axi_lite_arready_UNCONNECTED),
        .s_axi_lite_arvalid(1'b0),
        .s_axi_lite_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_awprot({1'b0,1'b0}),
        .s_axi_lite_awready(NLW_inst_s_axi_lite_awready_UNCONNECTED),
        .s_axi_lite_awvalid(1'b0),
        .s_axi_lite_bready(1'b0),
        .s_axi_lite_bresp(NLW_inst_s_axi_lite_bresp_UNCONNECTED[1:0]),
        .s_axi_lite_bvalid(NLW_inst_s_axi_lite_bvalid_UNCONNECTED),
        .s_axi_lite_rdata(NLW_inst_s_axi_lite_rdata_UNCONNECTED[31:0]),
        .s_axi_lite_rready(1'b0),
        .s_axi_lite_rresp(NLW_inst_s_axi_lite_rresp_UNCONNECTED[1:0]),
        .s_axi_lite_rvalid(NLW_inst_s_axi_lite_rvalid_UNCONNECTED),
        .s_axi_lite_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wready(NLW_inst_s_axi_lite_wready_UNCONNECTED),
        .s_axi_lite_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_lite_wvalid(1'b0),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [7:0]src_in_bin;
  input dest_clk;
  output [7:0]dest_out_bin;

  wire [7:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [7:0]\dest_graysync_ff[2] ;
  wire [6:0]\^dest_out_bin ;
  wire [6:0]gray_enc;
  wire src_clk;
  wire [7:0]src_in_bin;

  assign dest_out_bin[7] = \dest_graysync_ff[2] [7];
  assign dest_out_bin[6:0] = \^dest_out_bin [6:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\^dest_out_bin [2]),
        .I2(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [2]),
        .O(\^dest_out_bin [1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [6]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .I5(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [6]),
        .I4(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[7]),
        .Q(async_path[7]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0__3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[4] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[4] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [5]),
        .I2(\dest_graysync_ff[4] [7]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .I5(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [7]),
        .I4(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__10
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__11
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__12
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__7
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__8
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__9
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [8:0]src_in_bin;
  input dest_clk;
  output [8:0]dest_out_bin;

  wire [8:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [8:0]\dest_graysync_ff[2] ;
  wire [7:0]\^dest_out_bin ;
  wire [7:0]gray_enc;
  wire src_clk;
  wire [8:0]src_in_bin;

  assign dest_out_bin[8] = \dest_graysync_ff[2] [8];
  assign dest_out_bin[7:0] = \^dest_out_bin [7:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\^dest_out_bin [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [3]),
        .O(\^dest_out_bin [2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [5]),
        .I2(\dest_graysync_ff[2] [7]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .I5(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [7]),
        .I4(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[8]),
        .Q(async_path[8]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized2__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[4] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[4] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [5]),
        .Q(\dest_graysync_ff[3] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [6]),
        .Q(\dest_graysync_ff[3] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [7]),
        .Q(\dest_graysync_ff[3] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [8]),
        .Q(\dest_graysync_ff[3] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [9]),
        .Q(\dest_graysync_ff[3] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [5]),
        .Q(\dest_graysync_ff[4] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [6]),
        .Q(\dest_graysync_ff[4] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [7]),
        .Q(\dest_graysync_ff[4] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [8]),
        .Q(\dest_graysync_ff[4] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [9]),
        .Q(\dest_graysync_ff[4] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[4] [4]),
        .I1(\dest_graysync_ff[4] [6]),
        .I2(\dest_graysync_ff[4] [8]),
        .I3(\dest_graysync_ff[4] [9]),
        .I4(\dest_graysync_ff[4] [7]),
        .I5(\dest_graysync_ff[4] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[4] [5]),
        .I1(\dest_graysync_ff[4] [7]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [8]),
        .I4(\dest_graysync_ff[4] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[4] [6]),
        .I1(\dest_graysync_ff[4] [8]),
        .I2(\dest_graysync_ff[4] [9]),
        .I3(\dest_graysync_ff[4] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[4] [7]),
        .I1(\dest_graysync_ff[4] [9]),
        .I2(\dest_graysync_ff[4] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[4] [8]),
        .I1(\dest_graysync_ff[4] [9]),
        .O(\^dest_out_bin [8]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized3
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "10" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized3__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [9:0]src_in_bin;
  input dest_clk;
  output [9:0]dest_out_bin;

  wire [9:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [9:0]\dest_graysync_ff[2] ;
  wire [8:0]\^dest_out_bin ;
  wire [8:0]gray_enc;
  wire src_clk;
  wire [9:0]src_in_bin;

  assign dest_out_bin[9] = \dest_graysync_ff[2] [9];
  assign dest_out_bin[8:0] = \^dest_out_bin [8:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[6]),
        .Q(\dest_graysync_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[7]),
        .Q(\dest_graysync_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[8]),
        .Q(\dest_graysync_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[9]),
        .Q(\dest_graysync_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [6]),
        .Q(\dest_graysync_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [7]),
        .Q(\dest_graysync_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [8]),
        .Q(\dest_graysync_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [9]),
        .Q(\dest_graysync_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [5]),
        .Q(\dest_graysync_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [6]),
        .Q(\dest_graysync_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [7]),
        .Q(\dest_graysync_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [8]),
        .Q(\dest_graysync_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [9]),
        .Q(\dest_graysync_ff[2] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\^dest_out_bin [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\^dest_out_bin [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\^dest_out_bin [4]),
        .O(\^dest_out_bin [3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[2] [4]),
        .I1(\dest_graysync_ff[2] [6]),
        .I2(\dest_graysync_ff[2] [8]),
        .I3(\dest_graysync_ff[2] [9]),
        .I4(\dest_graysync_ff[2] [7]),
        .I5(\dest_graysync_ff[2] [5]),
        .O(\^dest_out_bin [4]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[5]_INST_0 
       (.I0(\dest_graysync_ff[2] [5]),
        .I1(\dest_graysync_ff[2] [7]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [8]),
        .I4(\dest_graysync_ff[2] [6]),
        .O(\^dest_out_bin [5]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[6]_INST_0 
       (.I0(\dest_graysync_ff[2] [6]),
        .I1(\dest_graysync_ff[2] [8]),
        .I2(\dest_graysync_ff[2] [9]),
        .I3(\dest_graysync_ff[2] [7]),
        .O(\^dest_out_bin [6]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[7]_INST_0 
       (.I0(\dest_graysync_ff[2] [7]),
        .I1(\dest_graysync_ff[2] [9]),
        .I2(\dest_graysync_ff[2] [8]),
        .O(\^dest_out_bin [7]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[8]_INST_0 
       (.I0(\dest_graysync_ff[2] [8]),
        .I1(\dest_graysync_ff[2] [9]),
        .O(\^dest_out_bin [8]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[5]_i_1 
       (.I0(src_in_bin[6]),
        .I1(src_in_bin[5]),
        .O(gray_enc[5]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[6]_i_1 
       (.I0(src_in_bin[7]),
        .I1(src_in_bin[6]),
        .O(gray_enc[6]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[7]_i_1 
       (.I0(src_in_bin[8]),
        .I1(src_in_bin[7]),
        .O(gray_enc[7]));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[8]_i_1 
       (.I0(src_in_bin[9]),
        .I1(src_in_bin[8]),
        .O(gray_enc[8]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[5]),
        .Q(async_path[5]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[6]),
        .Q(async_path[6]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[7]),
        .Q(async_path[7]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[8]),
        .Q(async_path[8]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[9]),
        .Q(async_path[9]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [3:0]src_in_bin;
  input dest_clk;
  output [3:0]dest_out_bin;

  wire [3:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [3:0]\dest_graysync_ff[2] ;
  wire [2:0]\^dest_out_bin ;
  wire [2:0]gray_enc;
  wire src_clk;
  wire [3:0]src_in_bin;

  assign dest_out_bin[3] = \dest_graysync_ff[2] [3];
  assign dest_out_bin[2:0] = \^dest_out_bin [2:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [3]),
        .I3(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[3]),
        .Q(async_path[3]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "5" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized5__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[3] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[4] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[4] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [0]),
        .Q(\dest_graysync_ff[3] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [1]),
        .Q(\dest_graysync_ff[3] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [2]),
        .Q(\dest_graysync_ff[3] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [3]),
        .Q(\dest_graysync_ff[3] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[3][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[2] [4]),
        .Q(\dest_graysync_ff[3] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [0]),
        .Q(\dest_graysync_ff[4] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [1]),
        .Q(\dest_graysync_ff[4] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [2]),
        .Q(\dest_graysync_ff[4] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [3]),
        .Q(\dest_graysync_ff[4] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[4][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[3] [4]),
        .Q(\dest_graysync_ff[4] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[4] [0]),
        .I1(\dest_graysync_ff[4] [2]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [3]),
        .I4(\dest_graysync_ff[4] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[4] [1]),
        .I1(\dest_graysync_ff[4] [3]),
        .I2(\dest_graysync_ff[4] [4]),
        .I3(\dest_graysync_ff[4] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[4] [2]),
        .I1(\dest_graysync_ff[4] [4]),
        .I2(\dest_graysync_ff[4] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[4] [3]),
        .I1(\dest_graysync_ff[4] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized6__2
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[2] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[2] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [0]),
        .Q(\dest_graysync_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [1]),
        .Q(\dest_graysync_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [2]),
        .Q(\dest_graysync_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [3]),
        .Q(\dest_graysync_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[1] [4]),
        .Q(\dest_graysync_ff[2] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[2] [0]),
        .I1(\dest_graysync_ff[2] [2]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [3]),
        .I4(\dest_graysync_ff[2] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[2] [1]),
        .I1(\dest_graysync_ff[2] [3]),
        .I2(\dest_graysync_ff[2] [4]),
        .I3(\dest_graysync_ff[2] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[2] [2]),
        .I1(\dest_graysync_ff[2] [4]),
        .I2(\dest_graysync_ff[2] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[2] [3]),
        .I1(\dest_graysync_ff[2] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__14
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__15
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__16
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__17
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__18
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__19
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__20
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__21
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__22
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__23
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__24
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__25
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "3" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__26
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [2:0]syncstages_ff;

  assign dest_rst = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_20
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_28
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_39
   (Q,
    src_in_bin,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]DI;
  wire [1:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [1:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin));
  LUT4 #(
    .INIT(16'h9669)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(DI),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [1]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .O(S[0]));
  (* HLUTNM = "lutpair1" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_50
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_58
   (Q,
    D,
    \count_value_i_reg[1]_0 ,
    src_in_bin,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    rd_en,
    \grdc.rd_data_count_i_reg[2] ,
    \grdc.rd_data_count_i_reg[2]_0 ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]D;
  output \count_value_i_reg[1]_0 ;
  output [0:0]src_in_bin;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_1 ;
  input rd_en;
  input [2:0]\grdc.rd_data_count_i_reg[2] ;
  input [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [1:0]\count_value_i_reg[1]_1 ;
  wire \gen_fwft.count_en ;
  wire [2:0]\grdc.rd_data_count_i_reg[2] ;
  wire [2:0]\grdc.rd_data_count_i_reg[2]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_1 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_1 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_1 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_1 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_1 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT4 #(
    .INIT(16'h2DD2)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .O(src_in_bin));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \grdc.rd_data_count_i[2]_i_1 
       (.I0(\count_value_i_reg[1]_0 ),
        .I1(\grdc.rd_data_count_i_reg[2] [2]),
        .I2(\grdc.rd_data_count_i_reg[2]_0 [2]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I4(Q[1]),
        .I5(\grdc.rd_data_count_i_reg[2] [1]),
        .O(D));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \grdc.rd_data_count_i[4]_i_4 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2]_0 [1]),
        .I2(\grdc.rd_data_count_i_reg[2] [1]),
        .I3(\grdc.rd_data_count_i_reg[2]_0 [0]),
        .I4(Q[0]),
        .I5(\grdc.rd_data_count_i_reg[2] [0]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn_9
   (Q,
    src_in_bin,
    DI,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \src_gray_ff_reg[0] ,
    SR,
    rd_clk);
  output [1:0]Q;
  output [0:0]src_in_bin;
  output [1:0]DI;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input [0:0]\src_gray_ff_reg[0] ;
  input [0:0]SR;
  input rd_clk;

  wire [1:0]DI;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [0:0]\src_gray_ff_reg[0] ;
  wire [0:0]src_in_bin;

  LUT5 #(
    .INIT(32'h696A9999)) 
    \count_value_i[0]_i_1__2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h9855)) 
    \count_value_i[1]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'h9A9AAAAAA6A666A6)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(src_in_bin));
  LUT2 #(
    .INIT(4'hB)) 
    \grdc.rd_data_count_i[7]_i_8 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[1]));
  LUT2 #(
    .INIT(4'h6)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[0] ),
        .O(DI[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_22
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_29
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_32
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_40
   (Q,
    enb,
    DI,
    \count_value_i_reg[7]_0 ,
    D,
    S,
    src_in_bin,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[8] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ,
    \count_value_i_reg[8]_0 ,
    rd_clk);
  output [7:0]Q;
  output enb;
  output [0:0]DI;
  output [0:0]\count_value_i_reg[7]_0 ;
  output [7:0]D;
  output [4:0]S;
  output [7:0]src_in_bin;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]\grdc.rd_data_count_i_reg[8] ;
  input [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  input \count_value_i_reg[8]_0 ;
  input rd_clk;

  wire [7:0]D;
  wire [0:0]DI;
  wire [7:0]Q;
  wire [4:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[8]_0 ;
  wire \count_value_i_reg_n_0_[8] ;
  wire enb;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire [7:0]\grdc.rd_data_count_i_reg[8] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [7:0]src_in_bin;
  wire [7:7]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hABAA5455)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(enb),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(enb),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBFBBAFB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I3(Q[5]),
        .I4(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[5]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[4]),
        .I3(Q[6]),
        .O(src_in_bin[5]));
  LUT3 #(
    .INIT(8'hE1)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_10_n_0 ),
        .I2(Q[5]),
        .O(src_in_bin[4]));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .I5(Q[4]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .O(src_in_bin[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hABAA5455)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(Q[6]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[5]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[4]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[2]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [7]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] [0]),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8_n_0 }),
        .O(D),
        .S({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_11_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_12_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_13_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_14_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_15_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_16_n_0 }));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(enb));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[8] [4]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[8] [5]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[8] [3]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[8] [4]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[8] [2]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[8] [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[8] [1]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[8] [2]),
        .O(S[0]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[8] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_9 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[8] [5]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[8] [6]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[8]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[8] [6]),
        .I2(\count_value_i_reg_n_0_[8] ),
        .I3(\grdc.rd_data_count_i_reg[8] [7]),
        .O(\count_value_i_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_43
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[8] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gwdc.wr_data_count_i_reg[8] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[8]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [8:0]\gwdc.wr_data_count_i_reg[8] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[8] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[8] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[8] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[8] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[8] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[8] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[8] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[8] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[8]_i_2 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[8] [8]),
        .O(\gwdc.wr_data_count_i[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[8]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gwdc.wr_data_count_i_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gwdc.wr_data_count_i_reg[8]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[8]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_23
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_30
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_33
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_41
   (Q,
    E,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output [7:0]Q;
  input [0:0]E;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[7]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(E),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_44
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    wr_clk);
  output [7:0]Q;
  output [6:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  input wr_clk;

  wire [6:0]D;
  wire [7:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[7]_i_2__0_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [7:7]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED ;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_CO_UNCONNECTED [7],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({1'b0,Q[6:0]}),
        .O({D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2_34
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2_45
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[6]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [7:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[6]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [7:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[7]_i_2_n_0 ;
  wire \count_value_i_reg[6]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[6]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[7]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[7]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_10
   (Q,
    ram_rd_en_i,
    \reg_out_i_reg[7] ,
    src_in_bin,
    \count_value_i_reg[1]_0 ,
    D,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[7] ,
    DI,
    \grdc.rd_data_count_i_reg[9] ,
    S,
    \grdc.rd_data_count_i_reg[9]_0 ,
    \count_value_i_reg[9]_0 ,
    rd_clk);
  output [9:0]Q;
  output ram_rd_en_i;
  output \reg_out_i_reg[7] ;
  output [8:0]src_in_bin;
  output \count_value_i_reg[1]_0 ;
  output [8:0]D;
  output [7:0]\count_value_i_reg[7]_0 ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[7] ;
  input [7:0]DI;
  input [0:0]\grdc.rd_data_count_i_reg[9] ;
  input [0:0]S;
  input [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  input \count_value_i_reg[9]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [7:0]DI;
  wire [9:0]Q;
  wire [0:0]S;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [7:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg[9]_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_8_n_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire \grdc.rd_data_count_i[7]_i_10_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_11_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_12_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_13_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_15_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_16_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_17_n_0 ;
  wire \grdc.rd_data_count_i[9]_i_5_n_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[7] ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[9] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9]_0 ;
  wire \grdc.rd_data_count_i_reg[9]_i_2_n_7 ;
  wire ram_empty_i;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[7] ;
  wire [8:0]src_in_bin;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED ;
  wire [7:2]\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hAABA5545)) 
    \count_value_i[0]_i_1__4 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(\count_value_i[6]_i_2__3_n_0 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[6]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \count_value_i[8]_i_1__3 
       (.I0(\count_value_i[9]_i_2__0_n_0 ),
        .I1(Q[5]),
        .I2(Q[6]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7FFF00008000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Q[5]),
        .I4(\count_value_i[9]_i_2__0_n_0 ),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[0]),
        .I1(ram_rd_en_i),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(rd_clk),
        .CE(ram_rd_en_i),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .O(src_in_bin[8]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[4]),
        .I4(Q[6]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'hFFFFDD4D)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12 
       (.I0(\grdc.rd_data_count_i_reg[7] [1]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[8]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_11_n_0 ),
        .I2(Q[7]),
        .O(src_in_bin[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[7]),
        .O(src_in_bin[6]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_4 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .O(src_in_bin[5]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(src_in_bin[4]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[4]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_12_n_0 ),
        .I2(Q[3]),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hEFAAFFEF10550010)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h9A55AA9A)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[7] [1]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h6696)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[7] [0]),
        .I3(Q[0]),
        .O(src_in_bin[0]));
  LUT5 #(
    .INIT(32'hAABA5545)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_10 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(Q[0]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .O(\count_value_i_reg[7]_0 [7]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .O(\count_value_i_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I2(Q[7]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [8]),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ),
        .O(\reg_out_i_reg[7] ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_8 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I2(Q[3]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I4(Q[5]),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h00FB)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(ram_rd_en_i));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_10 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .O(\grdc.rd_data_count_i[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_11 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [6]),
        .O(\grdc.rd_data_count_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_12 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_13 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h2BD4D42B)) 
    \grdc.rd_data_count_i[7]_i_15 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] [1]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[9]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hD22D2DD2)) 
    \grdc.rd_data_count_i[7]_i_16 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [1]),
        .I3(\grdc.rd_data_count_i_reg[7] [1]),
        .I4(Q[1]),
        .O(\grdc.rd_data_count_i[7]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \grdc.rd_data_count_i[7]_i_17 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[7] [0]),
        .I2(\grdc.rd_data_count_i_reg[9]_0 [0]),
        .O(\grdc.rd_data_count_i[7]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[9]_i_5 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9]_0 [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[9]_0 [8]),
        .O(\grdc.rd_data_count_i[9]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI(DI),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\grdc.rd_data_count_i[7]_i_10_n_0 ,\grdc.rd_data_count_i[7]_i_11_n_0 ,\grdc.rd_data_count_i[7]_i_12_n_0 ,\grdc.rd_data_count_i[7]_i_13_n_0 ,\grdc.rd_data_count_i[7]_i_14_n_0 ,\grdc.rd_data_count_i[7]_i_15_n_0 ,\grdc.rd_data_count_i[7]_i_16_n_0 ,\grdc.rd_data_count_i[7]_i_17_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[9]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[9]_i_2_CO_UNCONNECTED [7:1],\grdc.rd_data_count_i_reg[9]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[9] }),
        .O({\NLW_grdc.rd_data_count_i_reg[9]_i_2_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,S,\grdc.rd_data_count_i[9]_i_5_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_13
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_3
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[9] ,
    wr_clk);
  output [9:0]Q;
  output [8:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [9:0]\gwdc.wr_data_count_i_reg[9] ;
  input wr_clk;

  wire [8:0]D;
  wire [9:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[7]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_7_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_8_n_0 ;
  wire \gwdc.wr_data_count_i[7]_i_9_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[9]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_0 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_1 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_2 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[7]_i_1_n_7 ;
  wire [9:0]\gwdc.wr_data_count_i_reg[9] ;
  wire \gwdc.wr_data_count_i_reg[9]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:1]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_2 
       (.I0(Q[7]),
        .I1(\gwdc.wr_data_count_i_reg[9] [7]),
        .O(\gwdc.wr_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_3 
       (.I0(Q[6]),
        .I1(\gwdc.wr_data_count_i_reg[9] [6]),
        .O(\gwdc.wr_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_4 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[9] [5]),
        .O(\gwdc.wr_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_5 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[9] [4]),
        .O(\gwdc.wr_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_6 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[9] [3]),
        .O(\gwdc.wr_data_count_i[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_7 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[9] [2]),
        .O(\gwdc.wr_data_count_i[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_8 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[9] [1]),
        .O(\gwdc.wr_data_count_i[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[7]_i_9 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[9] [0]),
        .O(\gwdc.wr_data_count_i[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_2 
       (.I0(Q[9]),
        .I1(\gwdc.wr_data_count_i_reg[9] [9]),
        .O(\gwdc.wr_data_count_i[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[9]_i_3 
       (.I0(Q[8]),
        .I1(\gwdc.wr_data_count_i_reg[9] [8]),
        .O(\gwdc.wr_data_count_i[9]_i_3_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[7]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_1 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_2 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[7]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gwdc.wr_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({\gwdc.wr_data_count_i[7]_i_2_n_0 ,\gwdc.wr_data_count_i[7]_i_3_n_0 ,\gwdc.wr_data_count_i[7]_i_4_n_0 ,\gwdc.wr_data_count_i[7]_i_5_n_0 ,\gwdc.wr_data_count_i[7]_i_6_n_0 ,\gwdc.wr_data_count_i[7]_i_7_n_0 ,\gwdc.wr_data_count_i[7]_i_8_n_0 ,\gwdc.wr_data_count_i[7]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[9]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_CO_UNCONNECTED [7:1],\gwdc.wr_data_count_i_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[8]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[9]_i_1_O_UNCONNECTED [7:2],D[8:7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[9]_i_2_n_0 ,\gwdc.wr_data_count_i[9]_i_3_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_11
   (ram_empty_i0,
    E,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[0]_0 ,
    rd_clk);
  output ram_empty_i0;
  input [0:0]E;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[0]_0 ;
  input rd_clk;

  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_2__1_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \count_value_i_reg_n_0_[5] ;
  wire \count_value_i_reg_n_0_[6] ;
  wire \count_value_i_reg_n_0_[7] ;
  wire \count_value_i_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire [8:0]\gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h04FB)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h04FFFB00)) 
    \count_value_i[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rd_en),
        .I3(\count_value_i_reg_n_0_[0] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\count_value_i_reg_n_0_[3] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(\count_value_i[6]_i_2__2_n_0 ),
        .I1(\count_value_i_reg_n_0_[2] ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[4] ),
        .I4(\count_value_i_reg_n_0_[5] ),
        .I5(\count_value_i_reg_n_0_[6] ),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AA8A00000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT4 #(
    .INIT(16'hF708)) 
    \count_value_i[7]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[6] ),
        .I1(\count_value_i_reg_n_0_[5] ),
        .I2(\count_value_i[8]_i_2__1_n_0 ),
        .I3(\count_value_i_reg_n_0_[7] ),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \count_value_i[8]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\count_value_i[8]_i_2__1_n_0 ),
        .I2(\count_value_i_reg_n_0_[5] ),
        .I3(\count_value_i_reg_n_0_[6] ),
        .I4(\count_value_i_reg_n_0_[8] ),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \count_value_i[8]_i_2__1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(E),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[3] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[8]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[5] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[6] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[7] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[8] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080008000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I1(E),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I5(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\count_value_i_reg_n_0_[7] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [7]),
        .I2(\count_value_i_reg_n_0_[6] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [8]),
        .I5(\count_value_i_reg_n_0_[8] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [1]),
        .I2(\count_value_i_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [2]),
        .I5(\count_value_i_reg_n_0_[2] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_1 [4]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 [3]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_1 [5]),
        .I5(\count_value_i_reg_n_0_[5] ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_14
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_4
   (Q,
    D,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ,
    wr_clk);
  output [8:0]Q;
  output [7:0]D;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  input wr_clk;

  wire [7:0]D;
  wire [8:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire [8:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;
  wire [0:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[7]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [7]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [6]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[5]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [5]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] [8]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(wr_pntr_plus1_pf_carry),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI(Q[7:0]),
        .O({D[6:0],\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_O_UNCONNECTED [0]}),
        .S({\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_7_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_8_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[8]_i_9_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1 
       (.CI(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9]_i_1_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[9]_i_2_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized5
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized5_15
   (Q,
    wr_pntr_plus1_pf_carry,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    wr_clk);
  output [8:0]Q;
  input wr_pntr_plus1_pf_carry;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input wr_clk;

  wire [8:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_2__0_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[8]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[8]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(wr_pntr_plus1_pf_carry),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[8]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(wr_pntr_plus1_pf_carry),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_52
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_59
   (D,
    Q,
    \reg_out_i_reg[2] ,
    E,
    src_in_bin,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ,
    ram_empty_i,
    rd_en,
    \count_value_i_reg[0]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_1 ,
    \src_gray_ff_reg[4] ,
    \count_value_i_reg[4]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output [1:0]\reg_out_i_reg[2] ;
  output [0:0]E;
  output [3:0]src_in_bin;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  input ram_empty_i;
  input rd_en;
  input [1:0]\count_value_i_reg[0]_0 ;
  input \grdc.rd_data_count_i_reg[4] ;
  input [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_1 ;
  input [1:0]\src_gray_ff_reg[4] ;
  input \count_value_i_reg[4]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[4] ;
  wire \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ;
  wire \grdc.rd_data_count_i[4]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[4]_i_6_n_0 ;
  wire \grdc.rd_data_count_i_reg[4] ;
  wire [3:0]\grdc.rd_data_count_i_reg[4]_0 ;
  wire \grdc.rd_data_count_i_reg[4]_1 ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire [1:0]\reg_out_i_reg[2] ;
  wire [1:0]\src_gray_ff_reg[4] ;
  wire [3:0]src_in_bin;

  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__4 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAFE00001501)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_1 
       (.I0(Q[3]),
        .I1(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(src_in_bin[3]));
  LUT6 #(
    .INIT(64'hFBFBBAFB04044504)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_2 
       (.I0(Q[2]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [0]),
        .I4(Q[0]),
        .I5(Q[3]),
        .O(src_in_bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'hB0FB4F04)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_3 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .I2(Q[1]),
        .I3(\src_gray_ff_reg[4] [1]),
        .I4(Q[2]),
        .O(src_in_bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_5 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(src_in_bin[0]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6 
       (.I0(Q[0]),
        .I1(\src_gray_ff_reg[4] [0]),
        .O(\gen_cdc_pntr.rd_pntr_cdc_dc_inst_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [1]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [2]),
        .I4(Q[2]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hDDDFDDDD44454444)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2 
       (.I0(Q[0]),
        .I1(ram_empty_i),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [0]),
        .I4(\count_value_i_reg[0]_0 [1]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [0]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] [3]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(E));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \grdc.rd_data_count_i[3]_i_1 
       (.I0(\grdc.rd_data_count_i_reg[4] ),
        .I1(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I3(Q[3]),
        .I4(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I5(Q[2]),
        .O(\reg_out_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'h1701FF7FE8FE0080)) 
    \grdc.rd_data_count_i[4]_i_2 
       (.I0(\grdc.rd_data_count_i[4]_i_3_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] ),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [1]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[4]_1 ),
        .I5(\grdc.rd_data_count_i[4]_i_6_n_0 ),
        .O(\reg_out_i_reg[2] [1]));
  LUT3 #(
    .INIT(8'hD4)) 
    \grdc.rd_data_count_i[4]_i_3 
       (.I0(Q[1]),
        .I1(\src_gray_ff_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4]_0 [0]),
        .O(\grdc.rd_data_count_i[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hB44B)) 
    \grdc.rd_data_count_i[4]_i_6 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4]_0 [2]),
        .I2(\count_value_i_reg_n_0_[4] ),
        .I3(\grdc.rd_data_count_i_reg[4]_0 [3]),
        .O(\grdc.rd_data_count_i[4]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_62
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[2] ,
    wrst_busy,
    E,
    wr_clk);
  output [0:0]D;
  output [4:0]Q;
  input [2:0]\gwdc.wr_data_count_i_reg[2] ;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [2:0]\gwdc.wr_data_count_i_reg[2] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h4F04B0FBB0FB4F04)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[2] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[2] [1]),
        .I4(\gwdc.wr_data_count_i_reg[2] [2]),
        .I5(Q[2]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_53
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_60
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire rd_clk;
  wire rd_en;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_63
   (D,
    Q,
    \count_value_i_reg[3]_0 ,
    E,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    wrst_busy,
    wr_clk);
  output [0:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3]_0 ;
  input [0:0]E;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input wrst_busy;
  input wr_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire wr_clk;
  wire [4:4]wr_pntr_plus1_pf;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(wr_pntr_plus1_pf),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(wr_pntr_plus1_pf),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[2]_i_1 
       (.I0(E),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I4(Q[1]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized8
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized8_64
   (\count_value_i_reg[3]_0 ,
    \count_value_i_reg[2]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[3]_0 ;
  output [2:0]\count_value_i_reg[2]_0 ;
  input [0:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire [2:0]\count_value_i_reg[2]_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg_n_0_[3] ;
  wire wr_clk;
  wire wrst_busy;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg[2]_0 [0]),
        .I1(\count_value_i_reg[2]_0 [1]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg[2]_0 [1]),
        .I1(\count_value_i_reg[2]_0 [0]),
        .I2(\count_value_i_reg[2]_0 [2]),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [0]),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg[2]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\count_value_i_reg_n_0_[3] ),
        .I1(Q),
        .O(\count_value_i_reg[3]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "38" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "38" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "19456" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "38" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "38" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized0 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "512" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* READ_DATA_WIDTH = "36" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "36" *) (* WR_DATA_COUNT_WIDTH = "9" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [35:0]din;
  wire [35:1]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;
  wire [0:0]\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[35:1] = \^dout [35:1];
  assign dout[0] = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "512" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "18432" *) 
  (* FIFO_WRITE_DEPTH = "512" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "507" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "382" *) 
  (* PF_THRESH_MAX = "507" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "384" *) 
  (* RD_DATA_COUNT_WIDTH = "9" *) 
  (* RD_DC_WIDTH_EXT = "10" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "9" *) 
  (* READ_DATA_WIDTH = "36" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "36" *) 
  (* WR_DATA_COUNT_WIDTH = "9" *) 
  (* WR_DC_WIDTH_EXT = "10" *) 
  (* WR_DEPTH_LOG = "9" *) 
  (* WR_PNTR_WIDTH = "9" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din({din[35:1],1'b0}),
        .dout({\^dout ,\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dout_UNCONNECTED [0]}),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "3" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "3" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "768" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "3" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "3" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "2" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized3 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* READ_DATA_WIDTH = "20" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "20" *) (* WR_DATA_COUNT_WIDTH = "4" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "320" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "4" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "20" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "20" *) 
  (* WR_DATA_COUNT_WIDTH = "4" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized3__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "3" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "block" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_WRITE_DEPTH = "256" *) (* FULL_RESET_VALUE = "1" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) 
(* P_READ_MODE = "1" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* READ_DATA_WIDTH = "45" *) (* READ_MODE = "fwft" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "45" *) (* WR_DATA_COUNT_WIDTH = "8" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) (* is_du_within_envelope = "true" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_async__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "3" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "256" *) 
  (* FIFO_READ_LATENCY = "0" *) 
  (* FIFO_SIZE = "11520" *) 
  (* FIFO_WRITE_DEPTH = "256" *) 
  (* FULL_RESET_VALUE = "1" *) 
  (* FULL_RST_VAL = "1'b1" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "251" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "126" *) 
  (* PF_THRESH_MAX = "251" *) 
  (* PF_THRESH_MIN = "8" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "128" *) 
  (* RD_DATA_COUNT_WIDTH = "8" *) 
  (* RD_DC_WIDTH_EXT = "9" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "8" *) 
  (* READ_DATA_WIDTH = "45" *) 
  (* READ_MODE = "1" *) 
  (* READ_MODE_LL = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "45" *) 
  (* WR_DATA_COUNT_WIDTH = "8" *) 
  (* WR_DC_WIDTH_EXT = "9" *) 
  (* WR_DEPTH_LOG = "8" *) 
  (* WR_PNTR_WIDTH = "8" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  c2cSlave_K_C2CB_0_xpm_fifo_base__xdcDup__1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__8 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__9 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_35 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_36 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_37 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_38 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__8 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_39 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_40 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_41 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_42 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_43 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_44 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2_45 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__2 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "19456" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "38" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "38" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [37:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [37:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [37:0]din;
  wire [37:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [37:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized3__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__10 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized2__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__9 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "38" *) 
  (* BYTE_WRITE_WIDTH_B = "38" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "37" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "38" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "19456" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "38" *) 
  (* P_MIN_WIDTH_DATA_A = "38" *) 
  (* P_MIN_WIDTH_DATA_B = "38" *) 
  (* P_MIN_WIDTH_DATA_ECC = "38" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "38" *) 
  (* P_WIDTH_COL_WRITE_B = "38" *) 
  (* READ_DATA_WIDTH_A = "38" *) 
  (* READ_DATA_WIDTH_B = "38" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "38" *) 
  (* WRITE_DATA_WIDTH_B = "38" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "40" *) 
  (* rstb_loop_iter = "40" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [37:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_3 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized5 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__3 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_pf_ic_rc.ram_empty_i_reg (\gen_fwft.count_rst ),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "512" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "18432" *) (* FIFO_WRITE_DEPTH = "512" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "507" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "382" *) (* PF_THRESH_MAX = "507" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "384" *) (* RD_DATA_COUNT_WIDTH = "9" *) 
(* RD_DC_WIDTH_EXT = "10" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "9" *) (* READ_DATA_WIDTH = "36" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "36" *) 
(* WR_DATA_COUNT_WIDTH = "9" *) (* WR_DC_WIDTH_EXT = "10" *) (* WR_DEPTH_LOG = "9" *) 
(* WR_PNTR_WIDTH = "9" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [35:0]din;
  output full;
  output full_n;
  output prog_full;
  output [8:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [35:0]dout;
  output empty;
  output prog_empty;
  output [8:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [8:0]diff_pntr_pe;
  wire [9:2]diff_pntr_pf_q;
  wire [9:2]diff_pntr_pf_q0;
  wire [35:0]din;
  wire [35:1]\^dout ;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_0 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [9:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [9:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [8:0]rd_data_count;
  wire rd_en;
  wire [8:0]rd_pntr_ext;
  wire [8:0]rd_pntr_wr;
  wire [8:0]rd_pntr_wr_cdc;
  wire [9:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_0;
  wire rdp_inst_n_11;
  wire rdp_inst_n_21;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [9:0]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [8:0]wr_data_count;
  wire wr_en;
  wire [9:0]wr_pntr_ext;
  wire [9:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [8:0]wr_pntr_rd_cdc;
  wire [9:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [35:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;
  wire [0:0]\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[35:1] = \^dout [35:1];
  assign dout[0] = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'h69A1)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(ram_empty_i),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(rd_en),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized3 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(src_in_bin00_out));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__12 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_5 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(rd_pntr_wr),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg (wr_pntr_plus1_pf),
        .\reg_out_i_reg[0]_0 (\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_6 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_7 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe),
        .DI(p_1_in),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .S({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] (rd_pntr_ext[8]),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_8 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[9] ({rdp_inst_n_0,rd_pntr_ext[8:1]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[7]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\reg_out_i_reg[9]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "10" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__11 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[8:0]));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hE0CC)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(empty),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_9 \gen_fwft.rdpp1_inst 
       (.DI({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\src_gray_ff_reg[0] (rd_pntr_ext[0]),
        .src_in_bin(src_in_bin00_out[0]));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_9 ),
        .Q(full),
        .S(wrst_busy));
  LUT4 #(
    .INIT(16'hAABA)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[7]_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[8] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "9" *) 
  (* ADDR_WIDTH_B = "9" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "36" *) 
  (* BYTE_WRITE_WIDTH_B = "36" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "34" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "35" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "18432" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "512" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "36" *) 
  (* P_MIN_WIDTH_DATA_A = "36" *) 
  (* P_MIN_WIDTH_DATA_B = "36" *) 
  (* P_MIN_WIDTH_DATA_ECC = "36" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "9" *) 
  (* P_WIDTH_ADDR_READ_B = "9" *) 
  (* P_WIDTH_ADDR_WRITE_A = "9" *) 
  (* P_WIDTH_ADDR_WRITE_B = "9" *) 
  (* P_WIDTH_COL_WRITE_A = "36" *) 
  (* P_WIDTH_COL_WRITE_B = "36" *) 
  (* READ_DATA_WIDTH_A = "36" *) 
  (* READ_DATA_WIDTH_B = "36" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "36" *) 
  (* WRITE_DATA_WIDTH_B = "36" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "36" *) 
  (* rstb_loop_iter = "36" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[8:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina({din[35:1],1'b0}),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [35:0]),
        .doutb({\^dout ,\NLW_gen_sdpram.xpm_memory_base_inst_doutb_UNCONNECTED [0]}),
        .ena(1'b0),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(wr_pntr_plus1_pf_carry),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h2C)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [9]),
        .Q(rd_data_count[8]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [9]),
        .Q(wr_data_count[8]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_10 rdp_inst
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({\gen_cdc_pntr.wpr_gray_reg_dc_n_0 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 ,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .Q({rdp_inst_n_0,rd_pntr_ext}),
        .S(\gen_cdc_pntr.wpr_gray_reg_dc_n_16 ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_0 (rdp_inst_n_21),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38}),
        .\count_value_i_reg[9]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[9] (\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ),
        .\grdc.rd_data_count_i_reg[9]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_7 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 }),
        .ram_empty_i(ram_empty_i),
        .ram_rd_en_i(ram_rd_en_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[7] (rdp_inst_n_11),
        .src_in_bin(src_in_bin00_out[9:1]));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_11 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q(curr_fwft_state),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_21),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (rdp_inst_n_11),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 ({\gen_cdc_pntr.wpr_gray_reg_n_0 ,\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_12 rst_d1_inst
       (.Q(diff_pntr_pf_q[9:8]),
        .clr_full(clr_full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized3_13 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[9] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_9 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized4_14 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[9] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized5_15 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8}),
        .\count_value_i_reg[5]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__4 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[8] (full),
        .\gen_pf_ic_rc.ram_empty_i_reg (\gen_fwft.count_rst ),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "768" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "3" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "3" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "2" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [2:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [2:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [2:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_17 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_18 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_19 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__10 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_20 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "3" *) 
  (* BYTE_WRITE_WIDTH_B = "3" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "768" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "3" *) 
  (* P_MIN_WIDTH_DATA_A = "3" *) 
  (* P_MIN_WIDTH_DATA_B = "3" *) 
  (* P_MIN_WIDTH_DATA_ECC = "3" *) 
  (* P_MIN_WIDTH_DATA_LDW = "3" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "3" *) 
  (* P_WIDTH_COL_WRITE_B = "3" *) 
  (* READ_DATA_WIDTH_A = "3" *) 
  (* READ_DATA_WIDTH_B = "3" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "3" *) 
  (* WRITE_DATA_WIDTH_B = "3" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "4" *) 
  (* rstb_loop_iter = "4" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [2:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_21 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_22 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_23 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__5 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized3
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized6 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_54 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_55 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_56 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_57 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized5 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_58 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__parameterized3 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_59 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_60 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_61 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_62 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_63 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized8_64 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "320" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "4" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "20" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "20" *) 
(* WR_DATA_COUNT_WIDTH = "4" *) (* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) 
(* WR_PNTR_WIDTH = "4" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__parameterized3__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [19:0]din;
  output full;
  output full_n;
  output prog_full;
  output [3:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [19:0]dout;
  output empty;
  output prog_empty;
  output [3:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire clr_full;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [19:0]din;
  wire [19:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [4:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [3:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire [3:0]rd_pntr_wr;
  wire [3:0]rd_pntr_wr_cdc;
  wire [4:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_11;
  wire rdp_inst_n_12;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [3:0]wr_data_count;
  wire wr_en;
  wire [4:0]wr_pntr_ext;
  wire [3:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [3:0]wr_pntr_rd_cdc;
  wire [4:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_4;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [19:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized6__2 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,src_in_bin00_out,rdp_inst_n_12}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2 \gen_cdc_pntr.rpw_gray_reg 
       (.D(diff_pntr_pf_q0[4:3]),
        .E(wr_pntr_plus1_pf_carry),
        .Q({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .clr_full(clr_full),
        .\count_value_i_reg[3] (\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] (wr_pntr_plus1_pf),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 (wrpp1_inst_n_4),
        .\reg_out_i_reg[3]_0 (rd_pntr_wr_cdc),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D({\gwdc.diff_wr_rd_pntr1_out [4:3],\gwdc.diff_wr_rd_pntr1_out [1]}),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .\gwdc.wr_data_count_i_reg[4] (wr_pntr_ext),
        .\reg_out_i_reg[4]_0 (rd_pntr_wr_cdc_dc),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_48 \gen_cdc_pntr.wpr_gray_reg 
       (.D(diff_pntr_pe[1:0]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[3]_0 (wr_pntr_rd_cdc));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_49 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[1] (count_value_i),
        .\grdc.rd_data_count_i_reg[4] ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[3]_0 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .\reg_out_i_reg[4]_0 (rd_rst_busy),
        .\reg_out_i_reg[4]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized5__2 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "4" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized4__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[3:0]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_50 \gen_fwft.rdpp1_inst 
       (.D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(count_value_i),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (\gen_fwft.rdpp1_inst_n_3 ),
        .\count_value_i_reg[1]_1 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[2] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_5 }),
        .\grdc.rd_data_count_i_reg[2]_0 (rd_pntr_ext[2:0]),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_5 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  LUT6 #(
    .INIT(64'h8888888BBBBBBBBB)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[1]),
        .I3(diff_pntr_pf_q[2]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "20" *) 
  (* BYTE_WRITE_WIDTH_B = "20" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "320" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "20" *) 
  (* P_MIN_WIDTH_DATA_A = "20" *) 
  (* P_MIN_WIDTH_DATA_B = "20" *) 
  (* P_MIN_WIDTH_DATA_ECC = "20" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "20" *) 
  (* P_WIDTH_COL_WRITE_B = "20" *) 
  (* READ_DATA_WIDTH_A = "20" *) 
  (* READ_DATA_WIDTH_B = "20" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "20" *) 
  (* WRITE_DATA_WIDTH_B = "20" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "20" *) 
  (* rstb_loop_iter = "20" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__parameterized3__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[3:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [19:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .E(rdp_inst_n_8),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[4]_0 (rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] ({\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 }),
        .\grdc.rd_data_count_i_reg[4] (\gen_fwft.rdpp1_inst_n_3 ),
        .\grdc.rd_data_count_i_reg[4]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_1 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_2 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_3 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_4 }),
        .\grdc.rd_data_count_i_reg[4]_1 (\gen_cdc_pntr.wpr_gray_reg_dc_n_6 ),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2] (\grdc.diff_wr_rd_pntr_rdc [4:3]),
        .\src_gray_ff_reg[4] (count_value_i),
        .src_in_bin({rdp_inst_n_9,rdp_inst_n_10,rdp_inst_n_11,rdp_inst_n_12}));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_51 rst_d1_inst
       (.D(diff_pntr_pf_q0[1]),
        .Q(rd_pntr_wr[0]),
        .clr_full(clr_full),
        .d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] (wr_pntr_plus1_pf[1]),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized6_52 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\gwdc.wr_data_count_i_reg[2] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized7_53 wrpp1_inst
       (.D(diff_pntr_pf_q0[2]),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_4),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ({rd_pntr_wr[3],rd_pntr_wr[1:0]}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized8 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[3]),
        .\count_value_i_reg[2]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3}),
        .\count_value_i_reg[3]_0 (wrpp2_inst_n_0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__6 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[3] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "3" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "256" *) 
(* FIFO_READ_LATENCY = "0" *) (* FIFO_SIZE = "11520" *) (* FIFO_WRITE_DEPTH = "256" *) 
(* FULL_RESET_VALUE = "1" *) (* FULL_RST_VAL = "1'b1" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "251" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "126" *) (* PF_THRESH_MAX = "251" *) (* PF_THRESH_MIN = "8" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "128" *) (* RD_DATA_COUNT_WIDTH = "8" *) 
(* RD_DC_WIDTH_EXT = "9" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "8" *) (* READ_DATA_WIDTH = "45" *) (* READ_MODE = "1" *) 
(* READ_MODE_LL = "1" *) (* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "45" *) 
(* WR_DATA_COUNT_WIDTH = "8" *) (* WR_DC_WIDTH_EXT = "9" *) (* WR_DEPTH_LOG = "8" *) 
(* WR_PNTR_WIDTH = "8" *) (* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) 
(* XPM_MODULE = "TRUE" *) (* both_stages_valid = "3" *) (* invalid = "0" *) 
(* keep_hierarchy = "soft" *) (* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_base__xdcDup__1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [44:0]din;
  output full;
  output full_n;
  output prog_full;
  output [7:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [44:0]dout;
  output empty;
  output prog_empty;
  output [7:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [1:0]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [7:0]diff_pntr_pe;
  wire [8:2]diff_pntr_pf_q;
  wire [8:2]diff_pntr_pf_q0;
  wire [44:0]din;
  wire [44:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_6 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_7 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.rpw_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_10 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_11 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_12 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_13 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_14 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_15 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_16 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_dc_n_9 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_1 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_2 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_3 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_fwft.rdpp1_inst_n_4 ;
  wire \gen_fwft.rdpp1_inst_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [8:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire [8:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire [7:0]rd_data_count;
  wire rd_en;
  wire [7:0]rd_pntr_ext;
  wire [7:0]rd_pntr_wr;
  wire [7:0]rd_pntr_wr_cdc;
  wire [8:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire [1:1]src_in_bin00_out;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [7:0]wr_data_count;
  wire wr_en;
  wire [8:0]wr_pntr_ext;
  wire [8:1]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [7:0]wr_pntr_rd_cdc;
  wire [8:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [44:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(rd_rst_busy));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(rd_rst_busy));
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized1__7 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,src_in_bin00_out,rdp_inst_n_31}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__7 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_24 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .Q(wr_pntr_plus1_pf),
        .d_out_reg(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\reg_out_i_reg[7]_0 (rd_pntr_wr),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_25 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_26 \gen_cdc_pntr.wpr_gray_reg 
       (.D(wr_pntr_rd_cdc),
        .Q(curr_fwft_state),
        .\gen_pf_ic_rc.ram_empty_i_reg (rd_pntr_ext),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_27 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc ),
        .DI({rdp_inst_n_9,\gen_fwft.rdpp1_inst_n_5 }),
        .Q({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23,\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i[1]),
        .\grdc.rd_data_count_i_reg[7]_0 (rd_pntr_ext[6:1]),
        .\grdc.rd_data_count_i_reg[8] (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[8]_0 (rd_rst_busy),
        .\reg_out_i_reg[8]_1 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "5" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "9" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__parameterized0__3 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "8" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[7:0]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(rd_rst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn_28 \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_5 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_3 ,\gen_fwft.rdpp1_inst_n_4 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\grdc.rd_data_count_i_reg[7] (rd_pntr_ext[1:0]),
        .\grdc.rd_data_count_i_reg[7]_0 ({\gen_cdc_pntr.wpr_gray_reg_dc_n_15 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_16 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin(src_in_bin00_out));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_cdc_pntr.rpw_gray_reg_n_8 ),
        .Q(full),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .R(rd_rst_busy));
  LUT4 #(
    .INIT(16'h88B8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h01FF)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[5] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[7] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[6] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[6]),
        .I3(diff_pntr_pf_q[7]),
        .I4(diff_pntr_pf_q[4]),
        .I5(diff_pntr_pf_q[5]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .S(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "8" *) 
  (* ADDR_WIDTH_B = "8" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "45" *) 
  (* BYTE_WRITE_WIDTH_B = "45" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "44" *) 
  (* \MEM.ADDRESS_SPACE_END  = "511" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "45" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "11520" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "256" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "45" *) 
  (* P_MIN_WIDTH_DATA_A = "45" *) 
  (* P_MIN_WIDTH_DATA_B = "45" *) 
  (* P_MIN_WIDTH_DATA_ECC = "45" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "8" *) 
  (* P_WIDTH_ADDR_READ_B = "8" *) 
  (* P_WIDTH_ADDR_WRITE_A = "8" *) 
  (* P_WIDTH_ADDR_WRITE_B = "8" *) 
  (* P_WIDTH_COL_WRITE_A = "45" *) 
  (* P_WIDTH_COL_WRITE_B = "45" *) 
  (* READ_DATA_WIDTH_A = "45" *) 
  (* READ_DATA_WIDTH_B = "45" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "45" *) 
  (* WRITE_DATA_WIDTH_B = "45" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "48" *) 
  (* rstb_loop_iter = "48" *) 
  c2cSlave_K_C2CB_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[7:0]),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [44:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(rdp_inst_n_8),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [5]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [6]),
        .Q(rd_data_count[5]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [7]),
        .Q(rd_data_count[6]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [8]),
        .Q(rd_data_count[7]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [6]),
        .Q(wr_data_count[5]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [7]),
        .Q(wr_data_count[6]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [8]),
        .Q(wr_data_count[7]),
        .R(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_29 rdp_inst
       (.D(diff_pntr_pe),
        .DI(rdp_inst_n_9),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_19,rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[7]_0 (rdp_inst_n_10),
        .\count_value_i_reg[8]_0 (rd_rst_busy),
        .enb(rdp_inst_n_8),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7] ({\gen_cdc_pntr.wpr_gray_reg_n_1 ,\gen_cdc_pntr.wpr_gray_reg_n_2 ,\gen_cdc_pntr.wpr_gray_reg_n_3 ,\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\grdc.rd_data_count_i_reg[7] (count_value_i),
        .\grdc.rd_data_count_i_reg[8] ({\gen_cdc_pntr.wpr_gray_reg_dc_n_8 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_9 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_10 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_11 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_12 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_13 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_14 ,\gen_cdc_pntr.wpr_gray_reg_dc_n_15 }),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .src_in_bin({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29,rdp_inst_n_30,rdp_inst_n_31}));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_30 rdpp1_inst
       (.E(rdp_inst_n_8),
        .Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7}),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_31 rst_d1_inst
       (.Q(diff_pntr_pf_q[8]),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized0_32 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[6]_0 (full),
        .\gwdc.wr_data_count_i_reg[8] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_6 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_7 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_8 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized1_33 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[6]_0 (full),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] (rd_pntr_wr),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_counter_updn__parameterized2_34 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7}),
        .\count_value_i_reg[6]_0 (full),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wrst_busy(wrst_busy));
  c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__1 xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\grdc.rd_data_count_i0 ),
        .\count_value_i_reg[7] (full),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_1 (\gen_fwft.count_rst ),
        .\guf.underflow_i_reg (empty),
        .ram_empty_i(ram_empty_i),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_pntr_plus1_pf_carry(wr_pntr_plus1_pf_carry),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_12
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    clr_full,
    overflow_i0,
    wrst_busy,
    wr_clk,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output clr_full;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input [1:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [1:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT6 #(
    .INIT(64'h00FF00E0000000E0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(Q[1]),
        .I3(clr_full),
        .I4(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I5(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_21
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_31
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_42
   (rst_d1,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ,
    overflow_i0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    Q,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ,
    prog_full,
    wr_en,
    rst);
  output rst_d1;
  output \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  output overflow_i0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input [0:0]Q;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  input prog_full;
  input wr_en;
  input rst;

  wire [0:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0F0E000E)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(Q),
        .I2(clr_full),
        .I3(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I4(prog_full),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[8] ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg_0 ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_51
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_bit_61
   (rst_d1,
    d_out_reg_0,
    overflow_i0,
    clr_full,
    D,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst,
    \gof.overflow_i_reg ,
    prog_full,
    wr_en,
    Q,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] );
  output rst_d1;
  output d_out_reg_0;
  output overflow_i0;
  output clr_full;
  output [0:0]D;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;
  input \gof.overflow_i_reg ;
  input prog_full;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;

  wire [0:0]D;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire [0:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(rst),
        .I1(rst_d1),
        .I2(wrst_busy),
        .O(clr_full));
  LUT5 #(
    .INIT(32'hEF1010EF)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[1]_i_1 
       (.I0(rst_d1),
        .I1(\gof.overflow_i_reg ),
        .I2(wr_en),
        .I3(Q),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] ),
        .O(D));
  LUT5 #(
    .INIT(32'hF3A200A2)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I1(rst_d1),
        .I2(rst),
        .I3(\gof.overflow_i_reg ),
        .I4(prog_full),
        .O(d_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(wrst_busy),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_18
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_24
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_26
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_35
   (\reg_out_i_reg[7]_0 ,
    d_out_reg,
    Q,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    wr_pntr_plus1_pf_carry,
    rst_d1,
    rst,
    wrst_busy,
    D,
    wr_clk);
  output [7:0]\reg_out_i_reg[7]_0 ;
  output d_out_reg;
  input [7:0]Q;
  input [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input wr_pntr_plus1_pf_carry;
  input rst_d1;
  input rst;
  input wrst_busy;
  input [7:0]D;
  input wr_clk;

  wire [7:0]D;
  wire [7:0]Q;
  wire d_out_reg;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full0;
  wire leaving_full;
  wire [7:0]\reg_out_i_reg[7]_0 ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hEAEA00EA)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(leaving_full),
        .I1(going_full0),
        .I2(wr_pntr_plus1_pf_carry),
        .I3(rst_d1),
        .I4(rst),
        .O(d_out_reg));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(Q[6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(leaving_full));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .O(going_full0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(Q[4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(Q[1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec_37
   (ram_empty_i0,
    \reg_out_i_reg[7]_0 ,
    Q,
    rd_en,
    ram_empty_i,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output ram_empty_i0;
  output [7:0]\reg_out_i_reg[7]_0 ;
  input [1:0]Q;
  input rd_en;
  input ram_empty_i;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [7:0]D;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]Q;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_7_n_0 ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [7:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire going_empty0;
  wire leaving_empty;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [7:0]\reg_out_i_reg[7]_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFF00FD0000)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .I4(going_empty0),
        .I5(leaving_empty),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg_0 [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .O(going_empty0));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg [7]),
        .I1(\reg_out_i_reg[7]_0 [7]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [6]),
        .I3(\reg_out_i_reg[7]_0 [6]),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .I5(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ),
        .O(leaving_empty));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\reg_out_i_reg[7]_0 [3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [5]),
        .I3(\reg_out_i_reg[7]_0 [5]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [4]),
        .I5(\reg_out_i_reg[7]_0 [4]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_7 
       (.I0(\reg_out_i_reg[7]_0 [0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(\reg_out_i_reg[7]_0 [2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(\reg_out_i_reg[7]_0 [1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg[7]_0 [0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg[7]_0 [1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg[7]_0 [2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg[7]_0 [3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg[7]_0 [4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg[7]_0 [5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\reg_out_i_reg[7]_0 [6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\reg_out_i_reg[7]_0 [7]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_1
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_17
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_19
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_25
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_27
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_36
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_38
   (D,
    Q,
    DI,
    S,
    \grdc.rd_data_count_i_reg[8] ,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[7]_0 ,
    \reg_out_i_reg[8]_0 ,
    \reg_out_i_reg[8]_1 ,
    rd_clk);
  output [7:0]D;
  output [8:0]Q;
  input [1:0]DI;
  input [6:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[8] ;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  input \reg_out_i_reg[8]_0 ;
  input [8:0]\reg_out_i_reg[8]_1 ;
  input rd_clk;

  wire [7:0]D;
  wire [1:0]DI;
  wire [8:0]Q;
  wire [6:0]S;
  wire \grdc.rd_data_count_i[7]_i_14_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[7]_i_6_n_0 ;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [5:0]\grdc.rd_data_count_i_reg[7]_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_0 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_1 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_2 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[7]_i_1_n_7 ;
  wire [0:0]\grdc.rd_data_count_i_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[8]_0 ;
  wire [8:0]\reg_out_i_reg[8]_1 ;
  wire [0:0]\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED ;
  wire [7:1]\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'h718E8E71)) 
    \grdc.rd_data_count_i[7]_i_14 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[7]_0 [0]),
        .I3(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .I4(Q[2]),
        .O(\grdc.rd_data_count_i[7]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [5]),
        .O(\grdc.rd_data_count_i[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [4]),
        .O(\grdc.rd_data_count_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [3]),
        .O(\grdc.rd_data_count_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [2]),
        .O(\grdc.rd_data_count_i[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[7]_0 [1]),
        .O(\grdc.rd_data_count_i[7]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\grdc.rd_data_count_i_reg[7]_i_1_n_0 ,\grdc.rd_data_count_i_reg[7]_i_1_n_1 ,\grdc.rd_data_count_i_reg[7]_i_1_n_2 ,\grdc.rd_data_count_i_reg[7]_i_1_n_3 ,\grdc.rd_data_count_i_reg[7]_i_1_n_4 ,\grdc.rd_data_count_i_reg[7]_i_1_n_5 ,\grdc.rd_data_count_i_reg[7]_i_1_n_6 ,\grdc.rd_data_count_i_reg[7]_i_1_n_7 }),
        .DI({\grdc.rd_data_count_i[7]_i_2_n_0 ,\grdc.rd_data_count_i[7]_i_3_n_0 ,\grdc.rd_data_count_i[7]_i_4_n_0 ,\grdc.rd_data_count_i[7]_i_5_n_0 ,\grdc.rd_data_count_i[7]_i_6_n_0 ,DI,Q[0]}),
        .O({D[6:0],\NLW_grdc.rd_data_count_i_reg[7]_i_1_O_UNCONNECTED [0]}),
        .S({S[6:2],\grdc.rd_data_count_i[7]_i_14_n_0 ,S[1:0]}));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \grdc.rd_data_count_i_reg[8]_i_2 
       (.CI(\grdc.rd_data_count_i_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_grdc.rd_data_count_i_reg[8]_i_2_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_grdc.rd_data_count_i_reg[8]_i_2_O_UNCONNECTED [7:1],D[7]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[8]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_1 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[8]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_5
   (Q,
    \reg_out_i_reg[0]_0 ,
    wr_pntr_plus1_pf_carry,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    clr_full,
    wrst_busy,
    D,
    wr_clk);
  output [8:0]Q;
  output \reg_out_i_reg[0]_0 ;
  input wr_pntr_plus1_pf_carry;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  input [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input clr_full;
  input wrst_busy;
  input [8:0]D;
  input wr_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire clr_full;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire [8:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire going_full;
  wire \reg_out_i_reg[0]_0 ;
  wire wr_clk;
  wire wr_pntr_plus1_pf_carry;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h0000FF80)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(going_full),
        .I4(clr_full),
        .O(\reg_out_i_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5 
       (.I0(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I3(wr_pntr_plus1_pf_carry),
        .O(going_full));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [3]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [4]),
        .I5(Q[4]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [6]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [7]),
        .I5(Q[7]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_5_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized0_7
   (Q,
    D,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ,
    DI,
    S,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[8]_0 ,
    rd_clk);
  output [8:0]Q;
  output [8:0]D;
  input [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  input [0:0]DI;
  input [7:0]S;
  input \reg_out_i_reg[0]_0 ;
  input [8:0]\reg_out_i_reg[8]_0 ;
  input rd_clk;

  wire [8:0]D;
  wire [0:0]DI;
  wire [8:0]Q;
  wire [7:0]S;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [0:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire [8:0]\reg_out_i_reg[8]_0 ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8] ),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],DI}),
        .O(D[7:0]),
        .S(S));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1 
       (.CI(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[8]_i_1_O_UNCONNECTED [7:1],D[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[8]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[8]_0 [8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_2
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_6
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [9:0]Q;
  input wrst_busy;
  input [9:0]D;
  input wr_clk;

  wire [9:0]D;
  wire [9:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized1_8
   (DI,
    Q,
    \reg_out_i_reg[7]_0 ,
    S,
    \grdc.rd_data_count_i_reg[7] ,
    \grdc.rd_data_count_i_reg[9] ,
    \reg_out_i_reg[9]_0 ,
    D,
    rd_clk);
  output [5:0]DI;
  output [8:0]Q;
  output [0:0]\reg_out_i_reg[7]_0 ;
  output [0:0]S;
  input [0:0]\grdc.rd_data_count_i_reg[7] ;
  input [8:0]\grdc.rd_data_count_i_reg[9] ;
  input \reg_out_i_reg[9]_0 ;
  input [9:0]D;
  input rd_clk;

  wire [9:0]D;
  wire [5:0]DI;
  wire [8:0]Q;
  wire [0:0]S;
  wire [0:0]\grdc.rd_data_count_i_reg[7] ;
  wire [8:0]\grdc.rd_data_count_i_reg[9] ;
  wire rd_clk;
  wire [0:0]\reg_out_i_reg[7]_0 ;
  wire \reg_out_i_reg[9]_0 ;
  wire \reg_out_i_reg_n_0_[9] ;

  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_2 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[9] [5]),
        .O(DI[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_3 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[9] [4]),
        .O(DI[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_4 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[9] [3]),
        .O(DI[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[9] [2]),
        .O(DI[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[7]_i_6 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[9] [1]),
        .O(DI[1]));
  LUT3 #(
    .INIT(8'h8E)) 
    \grdc.rd_data_count_i[7]_i_7 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[7] ),
        .I2(\grdc.rd_data_count_i_reg[9] [0]),
        .O(DI[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \grdc.rd_data_count_i[9]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[9] [6]),
        .O(\reg_out_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \grdc.rd_data_count_i[9]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[9] [7]),
        .I2(\grdc.rd_data_count_i_reg[9] [8]),
        .I3(\reg_out_i_reg_n_0_[9] ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[6] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[7] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[8] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(\reg_out_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[9] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\reg_out_i_reg_n_0_[9] ),
        .R(\reg_out_i_reg[9]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_48
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_54
   (D,
    Q,
    \count_value_i_reg[3] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ,
    rst_d1,
    wrst_busy,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ,
    wr_en,
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ,
    E,
    clr_full,
    \reg_out_i_reg[3]_0 ,
    wr_clk);
  output [1:0]D;
  output [2:0]Q;
  output \count_value_i_reg[3] ;
  input [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  input [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  input rst_d1;
  input wrst_busy;
  input \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  input wr_en;
  input \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  input [0:0]E;
  input clr_full;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input wr_clk;

  wire [1:0]D;
  wire [0:0]E;
  wire [2:0]Q;
  wire clr_full;
  wire \count_value_i_reg[3] ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire [2:0]\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ;
  wire [2:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ;
  wire [2:2]rd_pntr_wr;
  wire [3:0]\reg_out_i_reg[3]_0 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;

  LUT6 #(
    .INIT(64'h00000000F8888888)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg_0 ),
        .I4(E),
        .I5(clr_full),
        .O(\count_value_i_reg[3] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [0]),
        .I2(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [2]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(Q[1]),
        .I3(rd_pntr_wr),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h2BFF002BD400FFD4)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_1 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [1]),
        .I2(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [2]),
        .I4(rd_pntr_wr),
        .I5(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4]_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h4444444D44444444)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] [0]),
        .I2(rst_d1),
        .I3(wrst_busy),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] ),
        .I5(wr_en),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(rd_pntr_wr),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[2]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized2_56
   (D,
    Q,
    ram_empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    ram_empty_i,
    enb,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[3]_0 ,
    rd_clk);
  output [1:0]D;
  output [3:0]Q;
  output ram_empty_i0;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input ram_empty_i;
  input enb;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [3:0]\reg_out_i_reg[3]_0 ;
  input rd_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire enb;
  wire [1:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire \gen_pf_ic_rc.ram_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire [3:0]\reg_out_i_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6666666699999969)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] [0]),
        .I4(rd_en),
        .I5(ram_empty_i),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(enb),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I3(Q[1]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF8080802020FF20)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(enb),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [3]),
        .I5(Q[3]),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg [0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[3]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_49
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_55
   (D,
    Q,
    \gwdc.wr_data_count_i_reg[4] ,
    wrst_busy,
    \reg_out_i_reg[4]_0 ,
    wr_clk);
  output [2:0]D;
  output [2:0]Q;
  input [4:0]\gwdc.wr_data_count_i_reg[4] ;
  input wrst_busy;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input wr_clk;

  wire [2:0]D;
  wire [2:0]Q;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire [4:0]\gwdc.wr_data_count_i_reg[4] ;
  wire [4:0]\reg_out_i_reg[4]_0 ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire wr_clk;
  wire wrst_busy;

  LUT4 #(
    .INIT(16'h2DD2)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[4] [0]),
        .I2(Q[1]),
        .I3(\gwdc.wr_data_count_i_reg[4] [1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\reg_out_i_reg_n_0_[3] ),
        .I2(\gwdc.wr_data_count_i_reg[4] [3]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\gwdc.wr_data_count_i_reg[4] [3]),
        .I2(\reg_out_i_reg_n_0_[3] ),
        .I3(\reg_out_i_reg_n_0_[4] ),
        .I4(\gwdc.wr_data_count_i_reg[4] [4]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hD4DD4444DDDDD4DD)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[4] [2]),
        .I2(\gwdc.wr_data_count_i_reg[4] [0]),
        .I3(Q[0]),
        .I4(\gwdc.wr_data_count_i_reg[4] [1]),
        .I5(Q[1]),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_reg_vec__parameterized3_57
   (D,
    Q,
    \reg_out_i_reg[3]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    \grdc.rd_data_count_i_reg[1] ,
    \reg_out_i_reg[4]_0 ,
    \reg_out_i_reg[4]_1 ,
    rd_clk);
  output [0:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[3]_0 ;
  input [2:0]\grdc.rd_data_count_i_reg[4] ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input \reg_out_i_reg[4]_0 ;
  input [4:0]\reg_out_i_reg[4]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire [2:0]\grdc.rd_data_count_i_reg[4] ;
  wire rd_clk;
  wire \reg_out_i_reg[3]_0 ;
  wire \reg_out_i_reg[4]_0 ;
  wire [4:0]\reg_out_i_reg[4]_1 ;

  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \grdc.rd_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[1] [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(D));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[4]_i_5 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .O(\reg_out_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_1 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[4]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__26 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__1
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__15 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__14 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__2
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__17 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__16 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__3
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[8] ;
  wire [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    \count_value_i[1]_i_1__4 
       (.I0(ram_empty_i),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__19 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__18 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__4
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[8] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[8] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[8] ;
  wire [0:0]\gen_pf_ic_rc.ram_empty_i_reg ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'hFF02)) 
    \count_value_i[1]_i_1__4 
       (.I0(ram_empty_i),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__21 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__20 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[8] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hF1)) 
    \grdc.rd_data_count_i[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__5
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    wr_pntr_plus1_pf_carry,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[7] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output wr_pntr_plus1_pf_carry;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[7] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[7] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_pntr_plus1_pf_carry;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__23 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__22 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[7] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(wr_pntr_plus1_pf_carry));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[8]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module c2cSlave_K_C2CB_0_xpm_fifo_rst__xdcDup__6
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    E,
    wr_rst_busy,
    SR,
    underflow_i0,
    \gen_rst_ic.fifo_rd_rst_ic_reg_1 ,
    rd_clk,
    wr_clk,
    rst,
    wr_en,
    \count_value_i_reg[3] ,
    rst_d1,
    Q,
    \guf.underflow_i_reg ,
    rd_en,
    ram_empty_i);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output [0:0]E;
  output wr_rst_busy;
  output [0:0]SR;
  output underflow_i0;
  output [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  input rd_clk;
  input wr_clk;
  input rst;
  input wr_en;
  input \count_value_i_reg[3] ;
  input rst_d1;
  input [1:0]Q;
  input \guf.underflow_i_reg ;
  input rd_en;
  input ram_empty_i;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  wire \count_value_i_reg[3] ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire [0:0]\gen_rst_ic.fifo_rd_rst_ic_reg_1 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire ram_empty_i;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire rst_i__0;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h03030200FFFFFFFF)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I5(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFEFEFEEE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF0EEE0FFFFEEE0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000C0008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I2(rst),
        .I3(p_0_in),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(rst),
        .I3(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(p_0_in),
        .I2(rst),
        .I3(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_2_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\gen_rst_ic.fifo_rd_rst_ic_reg_1 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(rst_i__0),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i__0));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__25 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I1(rst),
        .I2(p_0_in),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I5(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  c2cSlave_K_C2CB_0_xpm_cdc_sync_rst__24 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[3] ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(SR));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "45" *) (* BYTE_WRITE_WIDTH_B = "45" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "11520" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "45" *) (* P_MIN_WIDTH_DATA_A = "45" *) (* P_MIN_WIDTH_DATA_B = "45" *) 
(* P_MIN_WIDTH_DATA_ECC = "45" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "45" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "45" *) (* P_WIDTH_COL_WRITE_B = "45" *) (* READ_DATA_WIDTH_A = "45" *) 
(* READ_DATA_WIDTH_B = "45" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "45" *) (* WRITE_DATA_WIDTH_B = "45" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "48" *) 
(* rstb_loop_iter = "48" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [44:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [44:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [44:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [44:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [44:0]dina;
  wire [44:0]doutb;
  wire ena;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:13]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "44" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d45" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "44" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "11520" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "44" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({1'b0,addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b0,addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[44:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:13],doutb[44:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(ena),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({ena,ena,ena,ena,ena,ena,ena,ena}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "38" *) (* BYTE_WRITE_WIDTH_B = "38" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "19456" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "38" *) (* P_MIN_WIDTH_DATA_A = "38" *) (* P_MIN_WIDTH_DATA_B = "38" *) 
(* P_MIN_WIDTH_DATA_ECC = "38" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "38" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "38" *) (* P_WIDTH_COL_WRITE_B = "38" *) (* READ_DATA_WIDTH_A = "38" *) 
(* READ_DATA_WIDTH_B = "38" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "38" *) (* WRITE_DATA_WIDTH_B = "38" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "40" *) 
(* rstb_loop_iter = "40" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [37:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [37:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [37:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [37:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [37:0]dina;
  wire [37:0]doutb;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [31:6]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "37" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d38" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "37" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "19456" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "37" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [31:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [31:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [3:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [3:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,dina[37:32]}),
        .DINPADINP({1'b1,1'b1,1'b1,1'b1}),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(doutb[31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTBDOUT_UNCONNECTED [31:6],doutb[37:32]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea,wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "9" *) (* ADDR_WIDTH_B = "9" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "36" *) (* BYTE_WRITE_WIDTH_B = "36" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "18432" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "512" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "36" *) (* P_MIN_WIDTH_DATA_A = "36" *) (* P_MIN_WIDTH_DATA_B = "36" *) 
(* P_MIN_WIDTH_DATA_ECC = "36" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "36" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "9" *) 
(* P_WIDTH_ADDR_READ_B = "9" *) (* P_WIDTH_ADDR_WRITE_A = "9" *) (* P_WIDTH_ADDR_WRITE_B = "9" *) 
(* P_WIDTH_COL_WRITE_A = "36" *) (* P_WIDTH_COL_WRITE_B = "36" *) (* READ_DATA_WIDTH_A = "36" *) 
(* READ_DATA_WIDTH_B = "36" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "36" *) (* WRITE_DATA_WIDTH_B = "36" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "36" *) 
(* rstb_loop_iter = "36" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [8:0]addra;
  input [35:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [35:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [8:0]addrb;
  input [35:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [35:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [8:0]addra;
  wire [8:0]addrb;
  wire clka;
  wire clkb;
  wire [35:0]dina;
  wire [35:1]\^doutb ;
  wire enb;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED ;
  wire [15:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED ;
  wire [1:1]\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign doutb[35:1] = \^doutb [35:1];
  assign doutb[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "511" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p3_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "34" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "511" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p3_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "34" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "18432" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "511" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "34" *) 
  RAMB18E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("INDEPENDENT"),
    .DOA_REG(1),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("TRUE"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg 
       (.ADDRARDADDR({addrb,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({addra,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINA_UNCONNECTED [15:0]),
        .CASDINB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINB_UNCONNECTED [15:0]),
        .CASDINPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPA_UNCONNECTED [1:0]),
        .CASDINPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDINPB_UNCONNECTED [1:0]),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTA_UNCONNECTED [15:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTB_UNCONNECTED [15:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPA_UNCONNECTED [1:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_CASDOUTPB_UNCONNECTED [1:0]),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CLKARDCLK(clkb),
        .CLKBWRCLK(clka),
        .DINADIN(dina[16:1]),
        .DINBDIN(dina[32:17]),
        .DINPADINP(dina[34:33]),
        .DINPBDINP({1'b1,dina[35]}),
        .DOUTADOUT(\^doutb [16:1]),
        .DOUTBDOUT(\^doutb [32:17]),
        .DOUTPADOUTP(\^doutb [34:33]),
        .DOUTPBDOUTP({\NLW_gen_wr_a.gen_word_narrow.mem_reg_DOUTPBDOUTP_UNCONNECTED [1],\^doutb [35]}),
        .ENARDEN(enb),
        .ENBWREN(1'b1),
        .REGCEAREGCE(regceb),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(rstb),
        .RSTREGB(1'b0),
        .SLEEP(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({wea,wea,wea,wea}));
endmodule

(* ADDR_WIDTH_A = "8" *) (* ADDR_WIDTH_B = "8" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "3" *) (* BYTE_WRITE_WIDTH_B = "3" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "768" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "256" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "3" *) (* P_MIN_WIDTH_DATA_A = "3" *) (* P_MIN_WIDTH_DATA_B = "3" *) 
(* P_MIN_WIDTH_DATA_ECC = "3" *) (* P_MIN_WIDTH_DATA_LDW = "3" *) (* P_MIN_WIDTH_DATA_SHFT = "5" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "8" *) 
(* P_WIDTH_ADDR_READ_B = "8" *) (* P_WIDTH_ADDR_WRITE_A = "8" *) (* P_WIDTH_ADDR_WRITE_B = "8" *) 
(* P_WIDTH_COL_WRITE_A = "3" *) (* P_WIDTH_COL_WRITE_B = "3" *) (* READ_DATA_WIDTH_A = "3" *) 
(* READ_DATA_WIDTH_B = "3" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "3" *) (* WRITE_DATA_WIDTH_B = "3" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "4" *) 
(* rstb_loop_iter = "4" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [7:0]addra;
  input [2:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [2:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [7:0]addrb;
  input [2:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [2:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [7:0]addra;
  wire [7:0]addrb;
  wire clka;
  wire clkb;
  wire [2:0]dina;
  wire [2:0]doutb;
  wire ena;
  wire enb;
  wire [2:0]\gen_rd_b.doutb_reg ;
  wire \gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ;
  wire \gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ;
  wire regceb;
  wire rstb;
  wire select_piped_1_reg_pipe_5_reg_n_0;
  wire select_piped_3_reg_pipe_6_reg_n_0;
  wire sleep;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOH_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOE_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOF_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOG_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_10_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_11_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_12_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_13_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_14_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_1_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_2_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_3_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_4_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_7_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_8_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .R(1'b0));
  FDRE \gen_rd_b.doutb_reg_reg_pipe_9_reg 
       (.C(clkb),
        .CE(enb),
        .D(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .Q(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][0]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_14_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_13_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_12_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_11_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][1]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_10_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_9_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_8_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_7_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe[0][2]_i_1 
       (.I0(\gen_rd_b.doutb_reg_reg_pipe_4_reg_n_0 ),
        .I1(\gen_rd_b.doutb_reg_reg_pipe_3_reg_n_0 ),
        .I2(select_piped_3_reg_pipe_6_reg_n_0),
        .I3(\gen_rd_b.doutb_reg_reg_pipe_2_reg_n_0 ),
        .I4(select_piped_1_reg_pipe_5_reg_n_0),
        .I5(\gen_rd_b.doutb_reg_reg_pipe_1_reg_n_0 ),
        .O(\gen_rd_b.doutb_reg [2]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "63" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_0_63_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "128" *) 
  (* ram_addr_end = "191" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1 
       (.I0(addra[6]),
        .I1(addra[7]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_128_191_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "192" *) 
  (* ram_addr_end = "255" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1 
       (.I0(ena),
        .I1(addra[6]),
        .I2(addra[7]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_192_255_0_2_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "768" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "64" *) 
  (* ram_addr_end = "127" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "2" *) 
  RAM64M8 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2 
       (.ADDRA(addrb[5:0]),
        .ADDRB(addrb[5:0]),
        .ADDRC(addrb[5:0]),
        .ADDRD(addrb[5:0]),
        .ADDRE(addrb[5:0]),
        .ADDRF(addrb[5:0]),
        .ADDRG(addrb[5:0]),
        .ADDRH(addra[5:0]),
        .DIA(dina[0]),
        .DIB(dina[1]),
        .DIC(dina[2]),
        .DID(1'b0),
        .DIE(1'b0),
        .DIF(1'b0),
        .DIG(1'b0),
        .DIH(1'b0),
        .DOA(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_0 ),
        .DOB(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_1 ),
        .DOC(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_n_2 ),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOD_UNCONNECTED ),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOE_UNCONNECTED ),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOF_UNCONNECTED ),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOG_UNCONNECTED ),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_DOH_UNCONNECTED ),
        .WCLK(clka),
        .WE(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1 
       (.I0(addra[7]),
        .I1(addra[6]),
        .I2(ena),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_64_127_0_2_i_1_n_0 ));
  FDRE select_piped_1_reg_pipe_5_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[6]),
        .Q(select_piped_1_reg_pipe_5_reg_n_0),
        .R(1'b0));
  FDRE select_piped_3_reg_pipe_6_reg
       (.C(clkb),
        .CE(enb),
        .D(addrb[7]),
        .Q(select_piped_3_reg_pipe_6_reg_n_0),
        .R(1'b0));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__parameterized3
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED [1:0]),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED [1:0]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "20" *) (* BYTE_WRITE_WIDTH_B = "20" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "320" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "20" *) (* P_MIN_WIDTH_DATA_A = "20" *) (* P_MIN_WIDTH_DATA_B = "20" *) 
(* P_MIN_WIDTH_DATA_ECC = "20" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "20" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "20" *) (* P_WIDTH_COL_WRITE_B = "20" *) (* READ_DATA_WIDTH_A = "20" *) 
(* READ_DATA_WIDTH_B = "20" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "20" *) (* WRITE_DATA_WIDTH_B = "20" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "20" *) 
(* rstb_loop_iter = "20" *) 
module c2cSlave_K_C2CB_0_xpm_memory_base__parameterized3__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [19:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [19:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [19:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [19:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire clkb;
  wire [19:0]dina;
  wire [19:0]doutb;
  wire ena;
  wire enb;
  wire [19:0]\gen_rd_b.doutb_reg ;
  wire [19:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(\gen_rd_b.doutb_reg [12]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(\gen_rd_b.doutb_reg [13]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(\gen_rd_b.doutb_reg [14]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(\gen_rd_b.doutb_reg [15]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(\gen_rd_b.doutb_reg [16]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(\gen_rd_b.doutb_reg [17]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(\gen_rd_b.doutb_reg [18]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(\gen_rd_b.doutb_reg [19]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][12] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [12]),
        .Q(doutb[12]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][13] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [13]),
        .Q(doutb[13]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][14] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [14]),
        .Q(doutb[14]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][15] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [15]),
        .Q(doutb[15]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][16] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [16]),
        .Q(doutb[16]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][17] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [17]),
        .Q(doutb[17]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][18] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [18]),
        .Q(doutb[18]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][19] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [19]),
        .Q(doutb[19]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clkb),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "320" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "19" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOD_UNCONNECTED [1:0]),
        .DOE(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOE_UNCONNECTED [1:0]),
        .DOF(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOF_UNCONNECTED [1:0]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_14_19_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2020.2"
`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="cds_rsa_key", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=64)
`pragma protect key_block
Smodsvllcvd6MuPfdHlFmvR8p+Pe7f/pUBu/EPfJ2zZ5ctuddGasm68DT7c1GLZh6gDWLRVWzeFo
7fcCmPmHOg==

`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
s2mDZJeKjJsKFE8Xp2XRbJCl6T2FNVLRNeAmU/UqqR05MWC75Dr4jE6br+1fqFRpw3qEraDZBccO
2KWWAdJBHQOh1fufTlMCJJJEIWl4RL3bkCRsGDbIquWw0kVLdFyOEx6Lt14PvUyTuHVmV8wLyqrH
yrV4YPFXV6ypwrcRjr8=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
x+7/agT4n/d9u1QQInxgxce2jZanNSpIonCHAMN9TwcrlJrdb8ZfXZRtPg5W5uDzAYwFlpOMaH7J
K0bU2N1bJd5SulzzWFr2xmwWwHkajiQbUTVM/qR72fbwtXA37wmHeH5Tj2maA3ysmVCEOBf+PzRU
Skp4HmB39p3hznf7ivb9O+sIfUNHxZBRzkiGh0ybjA8gVC3hy9NdrtQe0RHj+KDnauKeW/7F5h28
Wru9E7eo717pSBIWiXC0+XEYHLyZH8UN1U/iAvPNkpqEn4OvzptabgKAiRn6ijsrWWhVztYbGXt2
qOtTlmttFPVT2ywiD8/sG81mWcXtkBnjurP1Bw==

`pragma protect key_keyowner="ATRENTA", key_keyname="ATR-SG-2015-RSA-3", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
a+uyg/DogHrar2B20X0VgKpDYxx8u5tU3WA15lXV858Y9HTfE/D5Ryjp0R5g+o4hU/5agZ7PQugj
+Mvi/rKN+IHrEnVKSjN5RJGFUfDKEXQdedEiVI1lKvTljh6/DbxkqYVn8yzilcIXSBDhoq5uXOcx
Mwmzc2s6rW0NV5Q8EbxCcgTrGYzpifzEoYV0jTlScpaPkDqnEcq5FfdczU1m49BoU+M4J77FaKjN
pv9iayEPhHjY2K5BE74HpvcRAZiQ5f6Gm3FLXXd/9cLd2FDmDBtno+HFPjWV03VK9Wa3oqggUaWc
2+IraP0j0iYXzF9j3MybI+65W/eukw9H5L3ICg==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
pIB9TJIKMKujbrZdwkCbRqImY/XmmtgVYJYP8sQJB8aidnWCgifLnFKwPxN8+uM6n92XDeuSl2uf
spMy7uFl+uyL+JqlCjJUGfHM+H03Wu2cccoisOYpY+XRV9nieltHFTy8wDgpVV0w3KMf+UV1TZtt
4ztD5z48R4BbG/Ue0sk=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Vn0eykMtydiA29PmAvGfWqzU/OcR9L9ZRcvug6TYIDc7Wxv5/GyVdGrNdRktD0f9KubgBa0urkHZ
OVAc1qpm7pKiLBUVlFacwXaioX9Q1FD1SAxilHWB5ltYgZegy2ez2lryio4r3lIYsEXOpFFCfoTj
JjvYIAKkVicZbUdPFn9Cw7BgtAyIBox5+wMxN4Woz2ieR6XD0tXW5bIK6OUZiDKv6cMDmQ7o/QLx
ki3QAGoSbICwuLgoE01RbtjZTocaCLZT+wrDC/IcJB+d70CbAiRE5s6cmmTsX/12AcCznkVRMaTv
CR0SNb0Ps+0ZVYz9aKP8giXb5qLYBT0vftbPPg==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Yt83c3DmqkpWc1KPkPbqmHqaLoT3qlzJzC6nkvkkrCh8yH/Ym2KZkrIxp3XDJeaAtDhQXBkh650y
O3wUe60ck9zvA8HWGhS5BPgIw9rnangrhcvzCScfI0OfwQ6h5ZsgVFFGvkBnBgniaJ4N2G3Zujop
aYKZKOok233c5nuk6znEO/qIaPnWVPy2jruPlSPfu+7OpnFaiOVBJx+VJC4YR2E6xdvjMTM4vPrQ
/etKY/AYxfvM028Lxnt9Xc+CVCVOYyV5dT4unPuM89uabGBKMCLWKBA9mKxBmXNUT2MSjOds3Dut
JQa6ypo8M2SEm2GGxI67ytaHq3pYFSh7UBopoA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
rWZCM2OLTdFeNt3/3w1nV8cDE8ru50QBdnwQU2vQ/RCdITRg6R67t+HHT+nMg7iJ9FgoAWWbslZP
nNrhWQS1A/eoyQsI+cbuwUT7rIPRLBRpJIXKI5TnO0alZwYyePXXbSzmnbSbbxoRhXVgbY4MQ2gT
8KcbIZfsV8RKXGHsAbt8vPQSHgOXcZFD4+w2IU/VGk/KAnGsIVvTUcijNi7Q7vBbI8ceiHiKg55T
nv14J6fhUXK2vndlaXvQ7Uoqcxdpu2PDWj9CiInYu5QBGzJWoMPwzfLfxB+Am5azcUDCf8FUy4IO
oArsrBt5MXGK/KRLLr4vcSvW+yOxJzfrZPG8Mw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2020_08", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
SP+xNpp1Ho2r2B0A7yOizrsTj3eBYEq/2auUnNB7Pjs4H7cFrz5pVVFE+c9sc68Oe7YL/0e2v/jK
M9zSnmOQjteVTNuriozBDU8b7ZbRl2EIwBoHjxxr3APjuHMe7B00kUieij2E3nkqNJFL0VhqMYz8
1rSTpPERO5jBUCzhjyi1cdOHrQNzt2kVY0SgJDtNz6oN07397z0su0vaN0DNs6qAu5DF5mGIdPdP
vD4c7qy0B0wcB0NQPx5Gxr+54OL3AKN3BsuWEOCrY2vztdCtXoep3lXDB3fw1rOXfb0ELNDv2CtF
a8UzUmODOsTlTsU5nvL0uTLS58RWaxXYE14rnQ==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 511408)
`pragma protect data_block
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
2el0Cg==
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
