// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl

`ifndef HP_PKG_SVH
`define HP_PKG_SVH

`include <common_ieee_pkg.svh>
`include <common_constants_pkg.svh>
`include <common_types_pkg.svh>
`include <l0mdt_constants_pkg.svh>
`include <l0mdt_dataformats_pkg.svh>


  typedef struct packed {
    logic unsigned [MDT_TUBE_LEN-1:0] hi;
    logic unsigned [MDT_TUBE_LEN-1:0] lo;
  } hp_win_tubes_rt;

  typedef logic [$bits(hp_win_tubes_rt)-1:0] hp_win_tubes_vt;

  typedef hp_win_tubes_rt   hp_win_tubes_art;

  typedef hp_win_tubes_vt   hp_win_tubes_avt;

  typedef struct packed {
    logic signed [MDT_TUBE_LEN-1:0] hi;
    logic signed [MDT_TUBE_LEN-1:0] lo;
  } hp_win_tubes_limits_rt;

  typedef logic [$bits(hp_win_tubes_limits_rt)-1:0] hp_win_tubes_limits_vt;

  typedef hp_win_tubes_limits_rt   hp_win_tubes_limits_art;

  typedef hp_win_tubes_limits_vt   hp_win_tubes_limits_avt;

  typedef struct packed {
    logic unsigned [MDT_GLOBAL_AXI_LEN-1:0] roi_z;
    logic unsigned [MDT_GLOBAL_AXI_LEN-1:0] roi_x;
  } hp_heg2hp_slc_b_rt;

  parameter int  HP_HEG2HP_SPECIFIC_LEN = 38;

  typedef struct packed {
    logic unsigned [BCID_LEN-1:0] bcid;
    logic [HP_HEG2HP_SPECIFIC_LEN-1:0] specific;
    logic  data_valid;
  } hp_heg2hp_slc_rt;

  typedef logic [$bits(hp_heg2hp_slc_rt)-1:0] hp_heg2hp_slc_vt;

  typedef hp_heg2hp_slc_rt   hp_heg2hp_slc_art;

  typedef hp_heg2hp_slc_vt   hp_heg2hp_slc_avt;

  typedef struct packed {
    logic unsigned [MDT_TUBE_LEN-1:0] tube;
    logic unsigned [MDT_LAYER_LEN-1:0] layer;
    logic unsigned [MDT_TIME_LEN-1:0] time_t0;
    logic unsigned [MDT_GLOBAL_AXI_LEN-1:0] global_z;
    logic unsigned [MDT_GLOBAL_AXI_LEN-1:0] global_x;
    logic  data_valid;
  } hp_hpsPc2hp_rt;

  typedef logic [$bits(hp_hpsPc2hp_rt)-1:0] hp_hpsPc2hp_vt;

  typedef struct packed {
    logic unsigned [MDT_LOCAL_Y_LEN-1:0] local_y;
    logic unsigned [MDT_LOCAL_X_LEN-1:0] local_x;
    logic unsigned [MDT_RADIUS_LEN-1:0] radius;
    logic  mlayer;
  } hp_hp2sf_data_rt;

  typedef logic [$bits(hp_hp2sf_data_rt)-1:0] hp_hp2sf_data_vt;

  typedef hp_hp2sf_data_rt   hp_hp2sf_data_art;

  typedef hp_hp2sf_data_vt   hp_hp2sf_data_avt;

  typedef struct packed {
    hp_hp2sf_data_rt   data;
    logic  mdt_valid;
    logic  data_valid;
  } hp_hp2bm_rt;

  typedef logic [$bits(hp_hp2bm_rt)-1:0] hp_hp2bm_vt;



`endif // HP_PKG_SVH
