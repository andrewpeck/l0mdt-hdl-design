#*****************************************************************************************
# Vivado (TM) v2022.2 (64-bit)
#
# fm_validation_v2022.tcl: Tcl script for re-creating project 'fm_validation'
#
# Generated by Vivado on Thu Sep 07 08:53:14 PDT 2023
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (fm_validation_v2022.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sources_1/imports/imports/axi_vip_0_chip.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_adv_mst_active__pt_passive__slv_comb/imports/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_comb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_adv_mst_active__pt_passive__slv_mem/imports/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_mem.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_adv_mst_active_pt_mem__slv_passive/imports/imports/axi_vip_0_exdes_adv_mst_active_pt_mem__slv_passive.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_adv_mst_active__pt_slv__slv_passive/imports/imports/axi_vip_0_exdes_adv_mst_active__pt_slv__slv_passive.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_adv_mst_passive__pt_mst__slv_comb/imports/imports/axi_vip_0_exdes_adv_mst_passive__pt_mst__slv_comb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active__pt_passive__slv_comb/imports/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_comb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active__pt_passive__slv_mem/imports/imports/axi_vip_0_mst_stimulus.svh"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active__pt_passive__slv_mem/imports/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active__pt_passive__slv_mem/imports/imports/axi_vip_0_mem_basic_stimulus.svh"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active_pt_mem__slv_passive/imports/imports/axi_vip_0_exdes_basic_mst_active_pt_mem__slv_passive.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_active__pt_slv__slv_passive/imports/imports/axi_vip_0_exdes_basic_mst_active__pt_slv__slv_passive.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_basic_mst_passive__pt_mst__slv_comb/imports/imports/axi_vip_0_exdes_basic_mst_passive__pt_mst__slv_comb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_memory/imports/imports/axi_vip_0_exdes_memory_tb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_ready_gen/imports/imports/axi_vip_0_exdes_ready_tb.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_validation/fm_validation/fm_validation.srcs/sim_all_config/imports/imports/axi_vip_0_exdes_tb.sv"
#
# 3. The following remote source files that were added to the original project:-
#
#    "$origin_dir/../../../../shared/SpyBuffer/src/SpyProtocol.vh"
#    "$origin_dir/../../../../shared/SpyBuffer/src/SpyBuffer.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/SpyController.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/SpyPlayback.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/aFifo.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/asym_ram_tdp_read_first.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/fifomem.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/rptr_empty.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_r2w.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_w2r.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/wptr_full.v"
#    "$origin_dir/../../../../shared/types/common_ieee_pkg.svh"
#    "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.svh"
#    "$origin_dir/../../../../dataformats/l0mdt_buses_constants.svh"
#    "$origin_dir/../../../../UserLogic/fm/src/fm_sb_pkg.sv"
#    "$origin_dir/../../../../UserLogic/fm/src/fm.sv"
#    "$origin_dir/../../../../UserLogic/fm/src/fm_data.sv"
#    "$origin_dir/../../../../UserLogic/fm/src/fm_dummy_block.sv"
#    "$origin_dir/../../../../UserLogic/fm/src/fm_sb_ctrl.sv"
#    "$origin_dir/../../../../configs/l0mdt_ku15p_ull_fm/autogen/AXI_slave_pkg.vhd"
#    "$origin_dir/../../../../shared/types/common_ieee_pkg.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG_DEF.vhd"
#    "$origin_dir/../../../../HAL/hal/src/system_types_pkg.vhd"
#    "$origin_dir/../../../../HAL/hal/src/board_pkg_common.vhd"
#    "$origin_dir/../../../../HAL/boards/board_pkg_mpi_ku15p.vhd"
#    "$origin_dir/../../../../HAL/hal/src/user_pkg.vhd"
#    "$origin_dir/../../../../HAL/link_maps/link_map_ku15p.vhd"
#    "$origin_dir/../../../../HAL/hal/src/constants_pkg.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi/types.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegWidthPkg_32.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/bramPortPkg.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegBlocking.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/FM/FM_map.vhd"
#    "$origin_dir/../../../../shared/detector_parameters/dp_repo/chambers/mechanics/barrel_R_rpc_pkg.vhd"
#    "$origin_dir/../../../../dataformats/l0mdt_constants_pkg.vhd"
#    "$origin_dir/../../../../shared/types/common_constants_pkg.vhd"
#    "$origin_dir/../../../../dataformats/l0mdt_dataformats_pkg.vhd"
#    "$origin_dir/../../../../shared/types/common_types_pkg.vhd"
#    "$origin_dir/../../../../shared/config/config_defaults_pkg.vhd"
#    "$origin_dir/../../../../shared/vhdl_utilities/pkg/vhdl2008_functions_pkg.vhd"
#    "$origin_dir/../../../../shared/detector_parameters/dp_repo/detector_param_pkg.vhd"
#    "$origin_dir/../../../../shared/detector_parameters/fw_parameters/detector_time_param_pkg.vhd"
#    "$origin_dir/../../../../shared/detector_parameters/functions/fct_barrel_R_rpc_pkg.vhd"
#    "$origin_dir/../../../../Top/l0mdt/ku15p/l0mdt_ku15p_ull_fm/prj_cfg.vhd"
#    "$origin_dir/../../../../shared/config/config_pkg.vhd"
#    "$origin_dir/../../../../UserLogic/fm/src/fm_ult_pkg.vhd"
#    "$origin_dir/../../../../UserLogic/ult/src/ult_fm.vhd"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_map_vhdl_wrapper.vhd"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_map_wrapper.v"
#    "$origin_dir/../../../../UserLogic/fm/sim/axiRegPkg_sv.sv"
#    "$origin_dir/../../../../UserLogic/fm/sim/fm_map_struct.sv"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg_d64.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiReg.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegMaster.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_controller.vhd"
#    "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_ctrl_v4_1_rfs.vhd"
#    "$origin_dir/../../../../shared/types/common_types_pkg-top.vhd"
#    "$origin_dir/../../../../shared/types/common_types_vectors_pkg.vhd"
#    "$origin_dir/../../../../shared/types/common_constants_pkg.svh"
#    "$origin_dir/../../../../shared/types/common_types_pkg.svh"
#    "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.svh"
#    "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.vhd"
#    "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.vhd"
#    "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.svh"
#    "$origin_dir/../../../../shared/SpyBuffer/src/SpyMemory.v"
#    "$origin_dir/../../../../shared/SpyBuffer/src/asym_ram_tdp_write_first.v"
#    "$origin_dir/../../../../HAL/hal/src/display_board_cfg.vhd"
#    "$origin_dir/../../../../HAL/hal/src/counter.vhd"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/xil_common_vip_pkg.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi_vip_pkg.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/rst_vip_if.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi_vip_if.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi4stream_vip_pkg.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi4stream_vip_if.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi_vip_axi4pc.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/clk_vip_if.sv"
#    "/state/opt/Xilinx/Vivado/2020.2/data/xilinx_vip/hdl/axi4stream_vip_axi4streampc.sv"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir xilinx_tools_dir} {
  set status true
  set files [list \
 "$origin_dir/imports/axi_vip_0_chip.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_comb.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_mem.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_adv_mst_active_pt_mem__slv_passive.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_adv_mst_active__pt_slv__slv_passive.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_adv_mst_passive__pt_mst__slv_comb.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_comb.sv" \
   "$origin_dir/imports/axi_vip_0_mst_stimulus.svh" \
   "$origin_dir/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem.sv" \
   "$origin_dir/imports/axi_vip_0_mem_basic_stimulus.svh" \
   "$origin_dir/imports/axi_vip_0_exdes_basic_mst_active_pt_mem__slv_passive.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_basic_mst_active__pt_slv__slv_passive.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_basic_mst_passive__pt_mst__slv_comb.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_memory_tb.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_ready_tb.sv" \
   "$origin_dir/imports/axi_vip_0_exdes_tb.sv" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set files [list \
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/SpyProtocol.vh"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/SpyBuffer.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/SpyController.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/SpyPlayback.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/aFifo.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/asym_ram_tdp_read_first.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/fifomem.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/rptr_empty.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_r2w.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_w2r.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/aFifo/wptr_full.v"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_ieee_pkg.svh"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.svh"]"\
 "[file normalize "$origin_dir/../../../../dataformats/l0mdt_buses_constants.svh"]"\
 "[file normalize "$origin_dir/../../src/fm_sb_pkg.sv"]"\
 "[file normalize "$origin_dir/../../src/fm.sv"]"\
 "[file normalize "$origin_dir/../../src/fm_data.sv"]"\
 "[file normalize "$origin_dir/../../src/fm_dummy_block.sv"]"\
 "[file normalize "$origin_dir/../../src/fm_sb_ctrl.sv"]"\
 "[file normalize "$origin_dir/../../../../configs/l0mdt_ku15p_ull_fm/autogen/AXI_slave_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_ieee_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG_DEF.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/system_types_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/board_pkg_common.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/boards/board_pkg_mpi_ku15p.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/user_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/link_maps/link_map_ku15p.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/constants_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi/types.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegWidthPkg_32.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/bramPortPkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegBlocking.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/FM/FM_map.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/detector_parameters/dp_repo/chambers/mechanics/barrel_R_rpc_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../dataformats/l0mdt_constants_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_constants_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../dataformats/l0mdt_dataformats_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_types_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/config/config_defaults_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/vhdl_utilities/pkg/vhdl2008_functions_pkg.vhd"]"\
#  "[file normalize "$origin_dir/../../../../shared/detector_parameters/dp_repo/detector_param_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/detector_parameters/fw_parameters/detector_time_param_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/detector_parameters/functions/fct_barrel_R_rpc_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../Top/l0mdt/ku15p/l0mdt_ku15p_ull_fm/prj_cfg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/config/config_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../src/fm_ult_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../ult/src/ult_fm.vhd"]"\
 "[file normalize "$origin_dir/../fm_map_vhdl_wrapper.vhd"]"\
 "[file normalize "$origin_dir/../fm_map_wrapper.v"]"\
 "[file normalize "$origin_dir/../axiRegPkg_sv.sv"]"\
 "[file normalize "$origin_dir/../fm_map_struct.sv"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg_d64.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiReg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegMaster.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_controller.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_ctrl_v4_1_rfs.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_types_pkg-top.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_types_vectors_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_constants_pkg.svh"]"\
 "[file normalize "$origin_dir/../../../../shared/types/common_types_pkg.svh"]"\
 "[file normalize "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.svh"]"\
 "[file normalize "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.vhd"]"\
 "[file normalize "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.svh"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/SpyMemory.v"]"\
 "[file normalize "$origin_dir/../../../../shared/SpyBuffer/src/asym_ram_tdp_write_first.v"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/display_board_cfg.vhd"]"\
 "[file normalize "$origin_dir/../../../../HAL/hal/src/counter.vhd"]"\
 "$xilinx_tools_dir/data/xilinx_vip/hdl/xil_common_vip_pkg.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi_vip_pkg.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/rst_vip_if.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi_vip_if.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi4stream_vip_pkg.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi4stream_vip_if.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi_vip_axi4pc.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/clk_vip_if.sv" \
  "$xilinx_tools_dir/data/xilinx_vip/hdl/axi4stream_vip_axi4streampc.sv" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."
set xilinx_tools_dir "/state/opt/Xilinx/Vivado/2022.2"
#set xilinx_compiled_lib_dir "/home/psundara/xilinx/compiled_libraries/v2020.2"
set xilinx_compiled_lib_dir "/DFS-L/DATA/atlas/psundara/xilinx/compiled_libraries/v2020.2/"

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "fm_validation_v2022"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "fm_validation_v2022.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/$_xil_proj_name_"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir]  $xilinx_tools_dir} {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku15p-ffva1760-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
#set_property -name "compxlib.questa_compiled_library_dir" -value "/DFS-L/DATA/atlas/psundara/xilinx/compiled_libraries/v2020.2" -objects $obj
set_property -name "compxlib.questa_compiled_library_dir" -value "$xilinx_compiled_lib_dir" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip.user_files_dir" -value "$origin_dir/../../../../UserLogic/fm/sim/axi_vip/axi_vip_0_ex/axi_vip_0_ex.ip_user_files" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku15p-ffva1760-2-e" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$origin_dir/../../../../UserLogic/fm/sim/axi_vip/axi_vip_0_ex/axi_vip_0_ex.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "target_simulator" -value "Questa" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "62" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "61" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "62" -objects $obj
set_property -name "webtalk.modelsim_launch_sim" -value "2" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "62" -objects $obj
set_property -name "webtalk.questa_launch_sim" -value "360" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "62" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "62" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "62" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "20" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/SpyProtocol.vh"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/SpyBuffer.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/SpyController.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/SpyPlayback.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/aFifo.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/asym_ram_tdp_read_first.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/fifomem.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/rptr_empty.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/sync_r2w.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/sync_w2r.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/aFifo/wptr_full.v"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_ieee_pkg.svh"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/FM/FM_PKG.svh"] \
 [file normalize "${origin_dir}/../../../../dataformats/l0mdt_buses_constants.svh"] \
 [file normalize "${origin_dir}/../../src/fm_sb_pkg.sv"] \
 [file normalize "${origin_dir}/../../src/fm.sv"] \
 [file normalize "${origin_dir}/../../src/fm_data.sv"] \
 [file normalize "${origin_dir}/../../src/fm_dummy_block.sv"] \
 [file normalize "${origin_dir}/../../src/fm_sb_ctrl.sv"] \
 [file normalize "${origin_dir}/../../../../configs/l0mdt_ku15p_ull_fm/autogen/AXI_slave_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_ieee_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/FM/FM_PKG.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/FM/FM_PKG_DEF.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/system_types_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/board_pkg_common.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/boards/board_pkg_mpi_ku15p.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/user_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/link_maps/link_map_ku15p.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/constants_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi/types.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegWidthPkg_32.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/bramPortPkg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegBlocking.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/FM/FM_map.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/detector_parameters/dp_repo/chambers/mechanics/barrel_R_rpc_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../dataformats/l0mdt_constants_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_constants_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../dataformats/l0mdt_dataformats_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_types_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/config/config_defaults_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/vhdl_utilities/pkg/vhdl2008_functions_pkg.vhd"] \
#  [file normalize "${origin_dir}/../../../../shared/detector_parameters/dp_repo/detector_param_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/detector_parameters/fw_parameters/detector_time_param_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/detector_parameters/functions/fct_barrel_R_rpc_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../Top/l0mdt/ku15p/l0mdt_ku15p_ull_fm/prj_cfg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/config/config_pkg.vhd"] \
 [file normalize "${origin_dir}/../../src/fm_ult_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../ult/src/ult_fm.vhd"] \
 [file normalize "${origin_dir}/../fm_map_vhdl_wrapper.vhd"] \
 [file normalize "${origin_dir}/../fm_map_wrapper.v"] \
 [file normalize "${origin_dir}/../axiRegPkg_sv.sv"] \
 [file normalize "${origin_dir}/../fm_map_struct.sv"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg_d64.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiReg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegMaster.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi/axi_bram_controller.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/ctrl/src/axi/axi_bram_ctrl_v4_1_rfs.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_types_pkg-top.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_types_vectors_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_constants_pkg.svh"] \
 [file normalize "${origin_dir}/../../../../shared/types/common_types_pkg.svh"] \
 [file normalize "${origin_dir}/../../../../shared/types/sl2mdt_dataformats_pkg.svh"] \
 [file normalize "${origin_dir}/../../../../shared/types/sl2mdt_constants_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/sl2mdt_dataformats_pkg.vhd"] \
 [file normalize "${origin_dir}/../../../../shared/types/sl2mdt_constants_pkg.svh"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/SpyMemory.v"] \
 [file normalize "${origin_dir}/../../../../shared/SpyBuffer/src/asym_ram_tdp_write_first.v"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/display_board_cfg.vhd"] \
 [file normalize "${origin_dir}/../../../../HAL/hal/src/counter.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_chip.sv"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../../../shared/SpyBuffer/src/SpyProtocol.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_ieee_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../dataformats/l0mdt_buses_constants.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../../src/fm_sb_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../src/fm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../src/fm_data.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../src/fm_dummy_block.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../src/fm_sb_ctrl.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../../configs/l0mdt_ku15p_ull_fm/autogen/AXI_slave_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_ieee_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG_DEF.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/system_types_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/board_pkg_common.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/boards/board_pkg_mpi_ku15p.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/user_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/link_maps/link_map_ku15p.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/constants_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi/types.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegWidthPkg_32.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/bramPortPkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegBlocking.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/FM/FM_map.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/detector_parameters/dp_repo/chambers/mechanics/barrel_R_rpc_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "dp_repo_lib" -objects $file_obj

set file "$origin_dir/../../../../dataformats/l0mdt_constants_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_constants_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../dataformats/l0mdt_dataformats_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_types_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/config/config_defaults_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_cfg_def_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/vhdl_utilities/pkg/vhdl2008_functions_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

# set file "$origin_dir/../../../../shared/detector_parameters/dp_repo/detector_param_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/detector_parameters/fw_parameters/detector_time_param_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/detector_parameters/functions/fct_barrel_R_rpc_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../Top/l0mdt/ku15p/l0mdt_ku15p_ull_fm/prj_cfg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "project_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/config/config_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../src/fm_ult_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "fm_lib" -objects $file_obj

set file "$origin_dir/../../../ult/src/ult_fm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "ult_lib" -objects $file_obj

set file "$origin_dir/../fm_map_vhdl_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj

set file "$origin_dir/../axiRegPkg_sv.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../fm_map_struct.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg_d64.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiReg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegMaster.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_controller.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj
set_property -name "library" -value "ctrl_lib" -objects $file_obj

set file "$origin_dir/../../../../HAL/ctrl/src/axi/axi_bram_ctrl_v4_1_rfs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_types_pkg-top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_types_vectors_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "shared_lib" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_constants_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../shared/types/common_types_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../shared/types/sl2mdt_dataformats_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "$origin_dir/../../../../shared/types/sl2mdt_constants_pkg.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/display_board_cfg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL 2008" -objects $file_obj
set_property -name "library" -value "hal" -objects $file_obj

set file "$origin_dir/../../../../HAL/hal/src/counter.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
set file "imports/axi_vip_0_chip.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "chip" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcku15p-ffva1760-2-e" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "chip" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_adv_mst_active__pt_passive__slv_comb' fileset (if not found)
if {[string equal [get_filesets -quiet sim_adv_mst_active__pt_passive__slv_comb] ""]} {
  create_fileset -simset sim_adv_mst_active__pt_passive__slv_comb
}

# Set 'sim_adv_mst_active__pt_passive__slv_comb' fileset object
set obj [get_filesets sim_adv_mst_active__pt_passive__slv_comb]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_comb.sv"]\
]
set imported_files [import_files -fileset sim_adv_mst_active__pt_passive__slv_comb $files]

# Set 'sim_adv_mst_active__pt_passive__slv_comb' fileset file properties for remote files
# None

# Set 'sim_adv_mst_active__pt_passive__slv_comb' fileset file properties for local files
set file "imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_comb.sv"
set file_obj [get_files -of_objects [get_filesets sim_adv_mst_active__pt_passive__slv_comb] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj


# Set 'sim_adv_mst_active__pt_passive__slv_comb' fileset properties
set obj [get_filesets sim_adv_mst_active__pt_passive__slv_comb]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "chip" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_adv_mst_active__pt_passive__slv_mem' fileset (if not found)
if {[string equal [get_filesets -quiet sim_adv_mst_active__pt_passive__slv_mem] ""]} {
  create_fileset -simset sim_adv_mst_active__pt_passive__slv_mem
}

# Set 'sim_adv_mst_active__pt_passive__slv_mem' fileset object
set obj [get_filesets sim_adv_mst_active__pt_passive__slv_mem]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_mem.sv"]\
]
set imported_files [import_files -fileset sim_adv_mst_active__pt_passive__slv_mem $files]

# Set 'sim_adv_mst_active__pt_passive__slv_mem' fileset file properties for remote files
# None

# Set 'sim_adv_mst_active__pt_passive__slv_mem' fileset file properties for local files
set file "imports/axi_vip_0_exdes_adv_mst_active__pt_passive__slv_mem.sv"
set file_obj [get_files -of_objects [get_filesets sim_adv_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_adv_mst_active__pt_passive__slv_mem' fileset properties
set obj [get_filesets sim_adv_mst_active__pt_passive__slv_mem]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_adv_mst_active__pt_passive__slv_mem" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_adv_mst_active_pt_mem__slv_passive' fileset (if not found)
if {[string equal [get_filesets -quiet sim_adv_mst_active_pt_mem__slv_passive] ""]} {
  create_fileset -simset sim_adv_mst_active_pt_mem__slv_passive
}

# Set 'sim_adv_mst_active_pt_mem__slv_passive' fileset object
set obj [get_filesets sim_adv_mst_active_pt_mem__slv_passive]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_adv_mst_active_pt_mem__slv_passive.sv"]\
]
set imported_files [import_files -fileset sim_adv_mst_active_pt_mem__slv_passive $files]

# Set 'sim_adv_mst_active_pt_mem__slv_passive' fileset file properties for remote files
# None

# Set 'sim_adv_mst_active_pt_mem__slv_passive' fileset file properties for local files
set file "imports/axi_vip_0_exdes_adv_mst_active_pt_mem__slv_passive.sv"
set file_obj [get_files -of_objects [get_filesets sim_adv_mst_active_pt_mem__slv_passive] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_adv_mst_active_pt_mem__slv_passive' fileset properties
set obj [get_filesets sim_adv_mst_active_pt_mem__slv_passive]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0__exdes_adv_mst_active_pt_mem__slv_passive" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_adv_mst_active__pt_slv__slv_passive' fileset (if not found)
if {[string equal [get_filesets -quiet sim_adv_mst_active__pt_slv__slv_passive] ""]} {
  create_fileset -simset sim_adv_mst_active__pt_slv__slv_passive
}

# Set 'sim_adv_mst_active__pt_slv__slv_passive' fileset object
set obj [get_filesets sim_adv_mst_active__pt_slv__slv_passive]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_adv_mst_active__pt_slv__slv_passive.sv"]\
]
set imported_files [import_files -fileset sim_adv_mst_active__pt_slv__slv_passive $files]

# Set 'sim_adv_mst_active__pt_slv__slv_passive' fileset file properties for remote files
# None

# Set 'sim_adv_mst_active__pt_slv__slv_passive' fileset file properties for local files
set file "imports/axi_vip_0_exdes_adv_mst_active__pt_slv__slv_passive.sv"
set file_obj [get_files -of_objects [get_filesets sim_adv_mst_active__pt_slv__slv_passive] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_adv_mst_active__pt_slv__slv_passive' fileset properties
set obj [get_filesets sim_adv_mst_active__pt_slv__slv_passive]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_adv_mst_active__pt_slv__slv_passive" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_adv_mst_passive__pt_mst__slv_comb' fileset (if not found)
if {[string equal [get_filesets -quiet sim_adv_mst_passive__pt_mst__slv_comb] ""]} {
  create_fileset -simset sim_adv_mst_passive__pt_mst__slv_comb
}

# Set 'sim_adv_mst_passive__pt_mst__slv_comb' fileset object
set obj [get_filesets sim_adv_mst_passive__pt_mst__slv_comb]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_adv_mst_passive__pt_mst__slv_comb.sv"]\
]
set imported_files [import_files -fileset sim_adv_mst_passive__pt_mst__slv_comb $files]

# Set 'sim_adv_mst_passive__pt_mst__slv_comb' fileset file properties for remote files
# None

# Set 'sim_adv_mst_passive__pt_mst__slv_comb' fileset file properties for local files
set file "imports/axi_vip_0_exdes_adv_mst_passive__pt_mst__slv_comb.sv"
set file_obj [get_files -of_objects [get_filesets sim_adv_mst_passive__pt_mst__slv_comb] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_adv_mst_passive__pt_mst__slv_comb' fileset properties
set obj [get_filesets sim_adv_mst_passive__pt_mst__slv_comb]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_adv_mst_passive__pt_mst__slv_comb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_basic_mst_active__pt_passive__slv_comb' fileset (if not found)
if {[string equal [get_filesets -quiet sim_basic_mst_active__pt_passive__slv_comb] ""]} {
  create_fileset -simset sim_basic_mst_active__pt_passive__slv_comb
}

# Set 'sim_basic_mst_active__pt_passive__slv_comb' fileset object
set obj [get_filesets sim_basic_mst_active__pt_passive__slv_comb]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_comb.sv"]\
]
set imported_files [import_files -fileset sim_basic_mst_active__pt_passive__slv_comb $files]

# Set 'sim_basic_mst_active__pt_passive__slv_comb' fileset file properties for remote files
# None

# Set 'sim_basic_mst_active__pt_passive__slv_comb' fileset file properties for local files
set file "imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_comb.sv"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_comb] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_basic_mst_active__pt_passive__slv_comb' fileset properties
set obj [get_filesets sim_basic_mst_active__pt_passive__slv_comb]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_basic_mst_active__pt_passive__slv_comb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_basic_mst_active__pt_passive__slv_mem' fileset (if not found)
if {[string equal [get_filesets -quiet sim_basic_mst_active__pt_passive__slv_mem] ""]} {
  create_fileset -simset sim_basic_mst_active__pt_passive__slv_mem
}

# Set 'sim_basic_mst_active__pt_passive__slv_mem' fileset object
set obj [get_filesets sim_basic_mst_active__pt_passive__slv_mem]
set files [list \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/xil_common_vip_pkg.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_pkg.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/rst_vip_if.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_if.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_pkg.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_if.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_axi4pc.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/clk_vip_if.sv"] \
 [file normalize "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_axi4streampc.sv"] \
]

add_files -norecurse -fileset $obj $files

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_mst_stimulus.svh"]\
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem.sv"]\
 [file normalize "${origin_dir}/imports/axi_vip_0_mem_basic_stimulus.svh"]\
]
set imported_files [import_files -fileset sim_basic_mst_active__pt_passive__slv_mem $files]

# Set 'sim_basic_mst_active__pt_passive__slv_mem' fileset file properties for remote files
set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/xil_common_vip_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/rst_vip_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_pkg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi_vip_axi4pc.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/clk_vip_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "${xilinx_tools_dir}/data/xilinx_vip/hdl/axi4stream_vip_axi4streampc.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_basic_mst_active__pt_passive__slv_mem' fileset file properties for local files
set file "imports/axi_vip_0_mst_stimulus.svh"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "imports/axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem.sv"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "imports/axi_vip_0_mem_basic_stimulus.svh"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_passive__slv_mem] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj


# Set 'sim_basic_mst_active__pt_passive__slv_mem' fileset properties
set obj [get_filesets sim_basic_mst_active__pt_passive__slv_mem]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "questa.compile.vhdl_syntax" -value "2008" -objects $obj
set_property -name "questa.compile.vlog.more_options" -value "-sv +incdir+../../../../../../../../../dataformats" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_basic_mst_active_pt_mem__slv_passive' fileset (if not found)
if {[string equal [get_filesets -quiet sim_basic_mst_active_pt_mem__slv_passive] ""]} {
  create_fileset -simset sim_basic_mst_active_pt_mem__slv_passive
}

# Set 'sim_basic_mst_active_pt_mem__slv_passive' fileset object
set obj [get_filesets sim_basic_mst_active_pt_mem__slv_passive]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_basic_mst_active_pt_mem__slv_passive.sv"]\
]
set imported_files [import_files -fileset sim_basic_mst_active_pt_mem__slv_passive $files]

# Set 'sim_basic_mst_active_pt_mem__slv_passive' fileset file properties for remote files
# None

# Set 'sim_basic_mst_active_pt_mem__slv_passive' fileset file properties for local files
set file "imports/axi_vip_0_exdes_basic_mst_active_pt_mem__slv_passive.sv"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active_pt_mem__slv_passive] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_basic_mst_active_pt_mem__slv_passive' fileset properties
set obj [get_filesets sim_basic_mst_active_pt_mem__slv_passive]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0__exdes_basic_mst_active_pt_mem__slv_passive" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_basic_mst_active__pt_slv__slv_passive' fileset (if not found)
if {[string equal [get_filesets -quiet sim_basic_mst_active__pt_slv__slv_passive] ""]} {
  create_fileset -simset sim_basic_mst_active__pt_slv__slv_passive
}

# Set 'sim_basic_mst_active__pt_slv__slv_passive' fileset object
set obj [get_filesets sim_basic_mst_active__pt_slv__slv_passive]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_basic_mst_active__pt_slv__slv_passive.sv"]\
]
set imported_files [import_files -fileset sim_basic_mst_active__pt_slv__slv_passive $files]

# Set 'sim_basic_mst_active__pt_slv__slv_passive' fileset file properties for remote files
# None

# Set 'sim_basic_mst_active__pt_slv__slv_passive' fileset file properties for local files
set file "imports/axi_vip_0_exdes_basic_mst_active__pt_slv__slv_passive.sv"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_active__pt_slv__slv_passive] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_basic_mst_active__pt_slv__slv_passive' fileset properties
set obj [get_filesets sim_basic_mst_active__pt_slv__slv_passive]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_basic_mst_active__pt_slv__slv_passive" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_basic_mst_passive__pt_mst__slv_comb' fileset (if not found)
if {[string equal [get_filesets -quiet sim_basic_mst_passive__pt_mst__slv_comb] ""]} {
  create_fileset -simset sim_basic_mst_passive__pt_mst__slv_comb
}

# Set 'sim_basic_mst_passive__pt_mst__slv_comb' fileset object
set obj [get_filesets sim_basic_mst_passive__pt_mst__slv_comb]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_basic_mst_passive__pt_mst__slv_comb.sv"]\
]
set imported_files [import_files -fileset sim_basic_mst_passive__pt_mst__slv_comb $files]

# Set 'sim_basic_mst_passive__pt_mst__slv_comb' fileset file properties for remote files
# None

# Set 'sim_basic_mst_passive__pt_mst__slv_comb' fileset file properties for local files
set file "imports/axi_vip_0_exdes_basic_mst_passive__pt_mst__slv_comb.sv"
set file_obj [get_files -of_objects [get_filesets sim_basic_mst_passive__pt_mst__slv_comb] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_basic_mst_passive__pt_mst__slv_comb' fileset properties
set obj [get_filesets sim_basic_mst_passive__pt_mst__slv_comb]
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_basic_mst_passive__pt_mst__slv_comb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_memory' fileset (if not found)
if {[string equal [get_filesets -quiet sim_memory] ""]} {
  create_fileset -simset sim_memory
}

# Set 'sim_memory' fileset object
set obj [get_filesets sim_memory]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_memory_tb.sv"]\
]
set imported_files [import_files -fileset sim_memory $files]

# Set 'sim_memory' fileset file properties for remote files
# None

# Set 'sim_memory' fileset file properties for local files
set file "imports/axi_vip_0_exdes_memory_tb.sv"
set file_obj [get_files -of_objects [get_filesets sim_memory] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_memory' fileset properties
set obj [get_filesets sim_memory]
set_property -name "top" -value "axi_vip_0_exdes_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_ready_gen' fileset (if not found)
if {[string equal [get_filesets -quiet sim_ready_gen] ""]} {
  create_fileset -simset sim_ready_gen
}

# Set 'sim_ready_gen' fileset object
set obj [get_filesets sim_ready_gen]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_ready_tb.sv"]\
]
set imported_files [import_files -fileset sim_ready_gen $files]

# Set 'sim_ready_gen' fileset file properties for remote files
# None

# Set 'sim_ready_gen' fileset file properties for local files
set file "imports/axi_vip_0_exdes_ready_tb.sv"
set file_obj [get_files -of_objects [get_filesets sim_ready_gen] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_ready_gen' fileset properties
set obj [get_filesets sim_ready_gen]
set_property -name "top" -value "axi_vip_0_exdes_ready_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Create 'sim_all_config' fileset (if not found)
if {[string equal [get_filesets -quiet sim_all_config] ""]} {
  create_fileset -simset sim_all_config
}

# Set 'sim_all_config' fileset object
set obj [get_filesets sim_all_config]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/axi_vip_0_exdes_tb.sv"]\
]
set imported_files [import_files -fileset sim_all_config $files]

# Set 'sim_all_config' fileset file properties for remote files
# None
#SET THE DEFAULT ACTIVE SIMULATION FILESET
current_fileset -simset [ get_filesets sim_basic_mst_active__pt_passive__slv_mem ]
# Set 'sim_basic_mst_active__pt_passive__slv_mem' fileset properties
set obj [get_filesets sim_basic_mst_active__pt_passive__slv_mem]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "include_dirs" -value "[file normalize "$origin_dir/imports"]" -objects $obj
set_property -name "questa.compile.vhdl_syntax" -value "2008" -objects $obj
set_property -name "questa.compile.vlog.more_options" -value "-sv +incdir+../../../../../../../../../dataformats" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_basic_mst_active__pt_passive__slv_mem" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'sim_all_config' fileset file properties for local files
set file "imports/axi_vip_0_exdes_tb.sv"
set file_obj [get_files -of_objects [get_filesets sim_all_config] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_all_config' fileset properties
set obj [get_filesets sim_all_config]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "axi_vip_0_exdes_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files SpyProtocol.vh] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/SpyProtocol.vh
}
if { [get_files SpyBuffer.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/SpyBuffer.v
}
if { [get_files SpyController.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/SpyController.v
}
if { [get_files SpyPlayback.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/SpyPlayback.v
}
if { [get_files aFifo.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/aFifo.v
}
if { [get_files asym_ram_tdp_read_first.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/asym_ram_tdp_read_first.v
}
if { [get_files fifomem.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/fifomem.v
}
if { [get_files rptr_empty.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/rptr_empty.v
}
if { [get_files sync_r2w.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_r2w.v
}
if { [get_files sync_w2r.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/sync_w2r.v
}
if { [get_files wptr_full.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/SpyBuffer/src/aFifo/wptr_full.v
}
if { [get_files FM_PKG.svh] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.svh
}
if { [get_files l0mdt_buses_constants.svh] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../dataformats/l0mdt_buses_constants.svh
}
if { [get_files common_ieee_pkg.svh] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/types/common_ieee_pkg.svh
}
if { [get_files fm_sb_pkg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm_sb_pkg.sv
}
if { [get_files fm.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm.sv
}
if { [get_files fm_data.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm_data.sv
}
if { [get_files fm_dummy_block.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm_dummy_block.sv
}
if { [get_files fm_sb_ctrl.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm_sb_ctrl.sv
}
if { [get_files AXI_slave_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../configs/l0mdt_ku15p_ull_fm/autogen/AXI_slave_pkg.vhd
}
if { [get_files common_ieee_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/types/common_ieee_pkg.vhd
}
if { [get_files FM_PKG.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG.vhd
}
if { [get_files FM_PKG_DEF.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/FM/FM_PKG_DEF.vhd
}
if { [get_files system_types_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/hal/src/system_types_pkg.vhd
}
if { [get_files board_pkg_common.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/hal/src/board_pkg_common.vhd
}
if { [get_files board_pkg_mpi_ku15p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/boards/board_pkg_mpi_ku15p.vhd
}
if { [get_files user_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/hal/src/user_pkg.vhd
}
if { [get_files link_map_ku15p.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/link_maps/link_map_ku15p.vhd
}
if { [get_files constants_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/hal/src/constants_pkg.vhd
}
if { [get_files types.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/axi/types.vhd
}
if { [get_files axiRegWidthPkg_32.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegWidthPkg_32.vhd
}
if { [get_files axiRegPkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegPkg.vhd
}
if { [get_files bramPortPkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/bramPortPkg.vhd
}
if { [get_files axiRegBlocking.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/axi-vhdl-package/axiRegBlocking.vhd
}
if { [get_files FM_map.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../HAL/ctrl/src/FM/FM_map.vhd
}
if { [get_files barrel_R_rpc_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/detector_parameters/dp_repo/chambers/mechanics/barrel_R_rpc_pkg.vhd
}
if { [get_files l0mdt_constants_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../dataformats/l0mdt_constants_pkg.vhd
}
if { [get_files common_constants_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/types/common_constants_pkg.vhd
}
if { [get_files l0mdt_dataformats_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../dataformats/l0mdt_dataformats_pkg.vhd
}
if { [get_files common_types_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/types/common_types_pkg.vhd
}
if { [get_files config_defaults_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/config/config_defaults_pkg.vhd
}
if { [get_files vhdl2008_functions_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/vhdl_utilities/pkg/vhdl2008_functions_pkg.vhd
}
# if { [get_files detector_param_pkg.vhd] == "" } {
#   import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/detector_parameters/dp_repo/detector_param_pkg.vhd
# }
if { [get_files detector_time_param_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/detector_parameters/fw_parameters/detector_time_param_pkg.vhd
}
if { [get_files fct_barrel_R_rpc_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/detector_parameters/functions/fct_barrel_R_rpc_pkg.vhd
}
if { [get_files prj_cfg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../Top/l0mdt/ku15p/l0mdt_ku15p_ull_fm/prj_cfg.vhd
}
if { [get_files config_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../shared/config/config_pkg.vhd
}
if { [get_files fm_ult_pkg.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/src/fm_ult_pkg.vhd
}
if { [get_files ult_fm.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/ult/src/ult_fm.vhd
}
if { [get_files fm_map_vhdl_wrapper.vhd] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/sim/fm_map_vhdl_wrapper.vhd
}
if { [get_files fm_map_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../../../UserLogic/fm/sim/fm_map_wrapper.v
}


# Proc to create BD ex_sim
proc cr_bd_ex_sim { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# fm_map_wrapper



  # CHANGE DESIGN NAME HERE
  set design_name ex_sim

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_vip:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  fm_map_wrapper\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set aclk [ create_bd_port -dir I -type clk -freq_hz 300000000 aclk ]
  set_property -dict [ list \
   CONFIG.CLK_DOMAIN {design_sim_clk_wiz_0_0_clk_out1} \
   CONFIG.PHASE {0.0} \
 ] $aclk
  set aresetn [ create_bd_port -dir I -type rst aresetn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $aresetn

  # Create instance: axi_vip_mst, and set properties
  set axi_vip_mst [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_vip:1.1 axi_vip_mst ]
  set_property -dict [list \
    CONFIG.ADDR_WIDTH {32} \
    CONFIG.DATA_WIDTH {32} \
    CONFIG.HAS_ACLKEN {0} \
    CONFIG.HAS_ARESETN {1} \
    CONFIG.HAS_BRESP {1} \
    CONFIG.HAS_PROT {1} \
    CONFIG.HAS_RRESP {1} \
    CONFIG.HAS_WSTRB {1} \
    CONFIG.INTERFACE_MODE {MASTER} \
    CONFIG.PROTOCOL {AXI4LITE} \
    CONFIG.READ_WRITE_MODE {READ_WRITE} \
  ] $axi_vip_mst


  # Create instance: fm_map_wrapper_0, and set properties
  set block_name fm_map_wrapper
  set block_cell_name fm_map_wrapper_0
  if { [catch {set fm_map_wrapper_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $fm_map_wrapper_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net aclk_1 [get_bd_ports aclk] [get_bd_pins axi_vip_mst/aclk] [get_bd_pins fm_map_wrapper_0/clk_axi]
  connect_bd_net -net aresetn_1 [get_bd_ports aresetn] [get_bd_pins axi_vip_mst/aresetn] [get_bd_pins fm_map_wrapper_0/reset_axi_n]
  connect_bd_net -net axi_vip_mst_m_axi_araddr [get_bd_pins axi_vip_mst/m_axi_araddr] [get_bd_pins fm_map_wrapper_0/slave_readMOSI_address]
  connect_bd_net -net axi_vip_mst_m_axi_arprot [get_bd_pins axi_vip_mst/m_axi_arprot] [get_bd_pins fm_map_wrapper_0/slave_readMOSI_protection_type]
  connect_bd_net -net axi_vip_mst_m_axi_arvalid [get_bd_pins axi_vip_mst/m_axi_arvalid] [get_bd_pins fm_map_wrapper_0/slave_readMOSI_address_valid]
  connect_bd_net -net axi_vip_mst_m_axi_awaddr [get_bd_pins axi_vip_mst/m_axi_awaddr] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_address]
  connect_bd_net -net axi_vip_mst_m_axi_awprot [get_bd_pins axi_vip_mst/m_axi_awprot] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_protection_type]
  connect_bd_net -net axi_vip_mst_m_axi_awvalid [get_bd_pins axi_vip_mst/m_axi_awvalid] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_address_valid]
  connect_bd_net -net axi_vip_mst_m_axi_bready [get_bd_pins axi_vip_mst/m_axi_bready] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_ready_for_response]
  connect_bd_net -net axi_vip_mst_m_axi_rready [get_bd_pins axi_vip_mst/m_axi_rready] [get_bd_pins fm_map_wrapper_0/slave_readMOSI_ready_for_data]
  connect_bd_net -net axi_vip_mst_m_axi_wdata [get_bd_pins axi_vip_mst/m_axi_wdata] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_data]
  connect_bd_net -net axi_vip_mst_m_axi_wstrb [get_bd_pins axi_vip_mst/m_axi_wstrb] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_data_write_strobe]
  connect_bd_net -net axi_vip_mst_m_axi_wvalid [get_bd_pins axi_vip_mst/m_axi_wvalid] [get_bd_pins fm_map_wrapper_0/slave_writeMOSI_data_valid]
  connect_bd_net -net fm_map_wrapper_0_slave_readMISO_data [get_bd_pins axi_vip_mst/m_axi_rdata] [get_bd_pins fm_map_wrapper_0/slave_readMISO_data]
  connect_bd_net -net fm_map_wrapper_0_slave_readMISO_data_valid [get_bd_pins axi_vip_mst/m_axi_rvalid] [get_bd_pins fm_map_wrapper_0/slave_readMISO_data_valid]
  connect_bd_net -net fm_map_wrapper_0_slave_readMISO_ready_for_address [get_bd_pins axi_vip_mst/m_axi_arready] [get_bd_pins fm_map_wrapper_0/slave_readMISO_ready_for_address]
  connect_bd_net -net fm_map_wrapper_0_slave_readMISO_response [get_bd_pins axi_vip_mst/m_axi_rresp] [get_bd_pins fm_map_wrapper_0/slave_readMISO_response]
  connect_bd_net -net fm_map_wrapper_0_slave_writeMISO_ready_for_address [get_bd_pins axi_vip_mst/m_axi_awready] [get_bd_pins fm_map_wrapper_0/slave_writeMISO_ready_for_address]
  connect_bd_net -net fm_map_wrapper_0_slave_writeMISO_ready_for_data [get_bd_pins axi_vip_mst/m_axi_wready] [get_bd_pins fm_map_wrapper_0/slave_writeMISO_ready_for_data]
  connect_bd_net -net fm_map_wrapper_0_slave_writeMISO_response [get_bd_pins axi_vip_mst/m_axi_bresp] [get_bd_pins fm_map_wrapper_0/slave_writeMISO_response]
  connect_bd_net -net fm_map_wrapper_0_slave_writeMISO_response_valid [get_bd_pins axi_vip_mst/m_axi_bvalid] [get_bd_pins fm_map_wrapper_0/slave_writeMISO_response_valid]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_ex_sim()
cr_bd_ex_sim ""
set_property REGISTERED_WITH_MANAGER "1" [get_files ex_sim.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files ex_sim.bd ] 

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku15p-ffva1760-2-e -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "part" -value "xcku15p-ffva1760-2-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku15p-ffva1760-2-e -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "part" -value "xcku15p-ffva1760-2-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
