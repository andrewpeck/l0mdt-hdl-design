// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl

`ifndef DAQ_ROW_DEFS_SVH
`define DAQ_ROW_DEFS_SVH

`include <common_ieee.svh>

`include <ttc_defs.svh>

`include <daq_config_defs.svh>
`include <daq_defs.svh>


  typedef struct packed {
    logic  data_ready;
    logic  nempty;
    logic  err;
  } node_to_mngt_rt;

  typedef struct packed {
    logic  en;
    logic  rd_en;
  } mngt_to_node_rt;

  typedef struct packed {
    logic  wr_en;
    logic [DAQ_MAX_DATA_WIDTH-1:0] data;
  } src_to_node_fifo_rt;

  typedef struct packed {
    logic  full;
  } node_fifo_to_src_rt;

  typedef logic [DAQ_MAX_DATA_WIDTH-1:0] node_fifo_cnt_t;

  typedef struct packed {
    daq_stream_data_t   data;
    node_fifo_cnt_t   count;
    logic  nempty;
  } node_fifo_to_dst_rt;

  typedef struct packed {
    logic  rd_en;
  } dst_to_node_fifo_rt;

  typedef struct packed {
    daq_sys_rt   sys;
    src_to_node_fifo_rt   src;
    dst_to_node_fifo_rt   dst;
  } daq_node_fifo_irt;

  typedef struct packed {
    node_fifo_to_src_rt   src;
    node_fifo_to_dst_rt   dst;
  } daq_node_fifo_ort;

  typedef struct packed {
    daq_node_fifo_irt   i;
    daq_node_fifo_ort   o;
  } daq_node_fifo_ert;

  typedef struct packed {
    int  WRITE_DATA_WIDTH;
    int  READ_DATA_WIDTH;
    int  READ_COUNT_WIDTH;
    int  FIFO_DEPTH;
  } daq_node_fifo_grt;

  typedef struct packed {
    node_to_mngt_rt   mngt;
    forward_rt   bconv;
    logic  debug;
  } node_ort;

  typedef logic [$bits(node_ort)-1:0] node_ovt;

  typedef struct packed {
    int  DATA_WIDTH;
    int  COUNTER_WIDTH;
    int  FIFO_DEPTH;
  } data_node_grt;

  typedef struct packed {
    daq_sys_rt   sys;
    mngt_to_node_rt   mngt;
    req_to_row_common_rt   req;
    daq_stream_rt   stream;
    backward_rt   bconv;
  } data_node_irt;

  typedef node_ort   data_node_ort;

  typedef struct packed {
    data_node_irt   i;
    data_node_ort   o;
  } data_node_ert;

  typedef logic [$bits(data_node_irt)-1:0] data_node_ivt;

  typedef struct packed {
    int  COUNTER_WIDTH;
  } header_node_grt;

  typedef struct packed {
    daq_sys_rt   sys;
    mngt_to_node_rt   mngt;
    req_to_row_rt   req;
    backward_rt   bconv;
  } header_node_irt;

  typedef node_ort   header_node_ort;

  typedef struct packed {
    header_node_irt   i;
    header_node_ort   o;
  } header_node_ert;

  typedef logic [$bits(header_node_irt)-1:0] header_node_ivt;

  typedef struct packed {
    int  INPUT_DATA_WIDTH;
    int  OUTPUT_DATA_WIDTH;
  } bconv_grt;

  typedef struct packed {
    daq_sys_rt   sys;
    forward_rt   node;
    backward_rt   pbldr;
  } bconv_irt;

  typedef struct packed {
    backward_rt   node;
    forward_rt   pbldr;
  } bconv_ort;

  typedef struct packed {
    bconv_irt   i;
    bconv_ort   o;
  } bconv_ert;

  typedef logic [$bits(bconv_irt)-1:0] bconv_ivt;

  typedef logic [$bits(bconv_ort)-1:0] bconv_ovt;

  typedef struct packed {
    forward_rt   cnt;
    forward_rt   pld;
    backward_rt   dst;
  } hub_irt;

  typedef struct packed {
    backward_rt   cnt;
    backward_rt   pld;
    forward_rt   dst;
  } hub_ort;

  typedef struct packed {
    hub_irt   i;
    hub_ort   o;
  } hub_ert;

  typedef logic [$bits(hub_irt)-1:0] hub_ivt;

  typedef logic [$bits(hub_ort)-1:0] hub_ovt;



`endif // DAQ_ROW_DEFS_SVH
