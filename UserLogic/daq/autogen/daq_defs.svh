// This file was auto-generated by YML2HDL tool.
// https://gitlab.com/tcpaiva/yml2hdl

`ifndef DAQ_DEFS_SVH
`define DAQ_DEFS_SVH

`include <common_ieee.svh>

`include <ttc_defs.svh>

`include <daq_config_defs.svh>


  typedef logic unsigned [12-1:0] daq_bcid_t;

  parameter int  DAQ_MAX_ROWS = DAQ_MAX_STREAMS + 1;

  typedef logic [DAQ_MAX_DATA_WIDTH-1:0] daq_stream_data_t;

  typedef struct packed {
    daq_bcid_t   bcid;
    logic  valid;
    daq_stream_data_t   data;
    logic  enable;
  } daq_stream_rt;

  typedef daq_stream_rt  [DAQ_MAX_STREAMS-1:0] daq_branch_t;

  typedef struct packed {
    int  WIDTH;
    int  DEPTH;
  } daq_stream_struct_t;

  typedef daq_stream_struct_t  daq_branch_struct_at [0:DAQ_MAX_STREAMS-1];

  typedef daq_branch_t  [DAQ_MAX_BRANCHES-1:0] daq_branches_t;

  typedef int  daq_branches_mask_at [0:DAQ_MAX_BRANCHES-1];

  typedef daq_branch_struct_at  daq_branches_map_at [0:DAQ_MAX_BRANCHES-1];

  typedef struct packed {
    logic  clk320;
    logic  rst;
  } daq_sys_rt;

  // daq_hdr_swrod_rt:
  // Fields required by swROD
  typedef struct packed {
    // flag_0: example of flag from swROD
    logic [8-1:0] flag_0;
    logic [8-1:0] flag_1;
    logic [16-1:0] flag_2;
    ttc_evid_t   evid;
  } daq_hdr_swrod_rt;

  typedef struct packed {
    daq_bcid_t   daq_bcid;
    daq_bcid_t   window_start;
    daq_bcid_t   window_width;
    daq_bcid_t   window_latency;
    daq_bcid_t   lower_window_size;
    daq_bcid_t   upper_window_size;
    daq_bcid_t   sys_bcid;
  } daq_hdr_extra_rt;

  typedef struct packed {
    daq_hdr_swrod_rt   swrod;
    daq_hdr_extra_rt   extra;
  } daq_hdr_rt;

  typedef logic [$bits(daq_hdr_rt)-1:0] daq_hdr_vt;

  typedef struct packed {
    daq_bcid_t   daq_bcid;
    daq_bcid_t   sys_bcid;
    daq_bcid_t   lower_window_limit;
    daq_bcid_t   upper_window_limit;
  } daq_counters_rt;

  typedef struct packed {
    daq_bcid_t   lower_size;
    daq_bcid_t   upper_size;
    daq_bcid_t   latency;
  } daq_window_params_rt;

  typedef struct packed {
    logic  upper_window_limit;
    logic  lower_window_limit;
    logic  daq_bcid;
  } stability_rt;

  typedef logic [$bits(stability_rt)-1:0] stability_vt;

  typedef struct packed {
    logic  nempty;
    logic [DAQ_MAX_DATA_WIDTH-1:0] data;
  } forward_rt;

  typedef struct packed {
    logic  rd_strb;
  } backward_rt;

  typedef struct packed {
    logic [DAQ_MAX_PIPELINES-1:0] data_ready;
    logic [DAQ_MAX_PIPELINES-1:0] nempty;
    logic [DAQ_MAX_PIPELINES-1:0] err;
  } row_to_mngt_rt;

  typedef struct packed {
    logic [0:DAQ_MAX_PIPELINES-1] en;
    int  rd_en;
  } mngt_to_row_rt;

  typedef struct packed {
    logic  en;
  } mngt_to_pbldr_rt;

  typedef struct packed {
    logic  done;
  } pbldr_to_mngt_rt;

  typedef forward_rt   row_to_pbldr_rt;

  typedef row_to_pbldr_rt  [DAQ_MAX_ROWS-1:0] rows_to_pbldr_at;

  typedef backward_rt   pbldr_to_row_rt;

  typedef pbldr_to_row_rt  [DAQ_MAX_ROWS-1:0] pbldr_to_rows_at;

  typedef struct packed {
    logic  req_strb;
    daq_bcid_t   window_start;
    daq_bcid_t   window_width;
  } req_to_row_common_rt;

  typedef struct packed {
    daq_bcid_t   window_latency;
    daq_bcid_t   lower_window_size;
    daq_bcid_t   upper_window_size;
    daq_bcid_t   daq_bcid;
    daq_bcid_t   sys_bcid;
    ttc_evid_t   evid;
  } req_to_row_extra_rt;

  typedef struct packed {
    req_to_row_common_rt   common;
    req_to_row_extra_rt   extra;
  } req_to_row_rt;

  typedef struct packed {
    logic  hfull;
  } felix_to_daq_rt;

  typedef struct packed {
    logic  wr_en;
    logic [DAQ_MAX_DATA_WIDTH-1:0] data;
  } daq_to_felix_rt;

  typedef struct packed {
    logic  wr_en;
    daq_bcid_t   window_latency;
    daq_bcid_t   lower_window_size;
    daq_bcid_t   upper_window_size;
  } ctrl_to_daq_rt;

  typedef struct packed {
    stability_rt   stability;
  } daq_to_status_rt;

  typedef struct packed {
    stability_rt   stability;
  } daq_req_status_rt;

  typedef struct packed {
    daq_sys_rt   sys;
    ttc_ort   ttc;
    ctrl_to_daq_rt   ctrl;
  } daq_req_irt;

  typedef struct packed {
    daq_req_status_rt   status;
    req_to_row_rt   row;
  } daq_req_ort;

  typedef struct packed {
    daq_req_irt   i;
    daq_req_ort   o;
  } daq_req_ert;

  typedef logic [$bits(daq_req_irt)-1:0] daq_req_ivt;

  typedef logic [$bits(daq_req_ort)-1:0] daq_req_ovt;

  typedef struct packed {
    row_to_mngt_rt   mngt;
    row_to_pbldr_rt   pbldr;
    logic  debug;
  } daq_row_ort;

  typedef struct packed {
    daq_sys_rt   sys;
    mngt_to_row_rt   mngt;
    req_to_row_rt   req;
    pbldr_to_row_rt   pbldr;
  } daq_header_row_irt;

  typedef daq_row_ort   daq_header_row_ort;

  typedef struct packed {
    daq_header_row_irt   i;
    daq_header_row_ort   o;
  } daq_header_row_ert;

  typedef struct packed {
    daq_sys_rt   sys;
    mngt_to_row_rt   mngt;
    req_to_row_common_rt   req;
    daq_stream_rt   stream;
    pbldr_to_row_rt   pbldr;
  } daq_data_row_irt;

  typedef daq_row_ort   daq_data_row_ort;

  typedef struct packed {
    daq_data_row_irt   i;
    daq_data_row_ort   o;
  } daq_data_row_ert;

  typedef logic [$bits(daq_header_row_irt)-1:0] daq_header_row_ivt;

  typedef logic [$bits(daq_data_row_irt)-1:0] daq_data_row_ivt;

  typedef logic [$bits(daq_row_ort)-1:0] daq_row_ovt;

  typedef struct packed {
    daq_sys_rt   sys;
    mngt_to_pbldr_rt   mngt;
    rows_to_pbldr_at   rows;
    felix_to_daq_rt   f2e;
  } daq_pbldr_irt;

  typedef struct packed {
    pbldr_to_rows_at   rows;
    daq_to_felix_rt   f2e;
  } daq_pbldr_ort;

  typedef struct packed {
    daq_pbldr_irt   i;
    daq_pbldr_ort   o;
  } daq_pbldr_ert;

  typedef logic [$bits(daq_pbldr_irt)-1:0] daq_pbldr_ivt;

  typedef logic [$bits(daq_pbldr_ort)-1:0] daq_pbldr_ovt;

  typedef row_to_mngt_rt  [DAQ_MAX_STREAMS+1-1:0] rows_to_mngt_rt;

  typedef struct packed {
    daq_sys_rt   sys;
    ttc_ort   ttc;
    rows_to_mngt_rt   rows;
  } daq_mngt_irt;

  typedef struct packed {
    mngt_to_row_rt   row;
    mngt_to_pbldr_rt   pbldr;
    logic [DAQ_MAX_PIPELINES-1:0] err;
    logic [2-1:0] debug;
  } daq_mngt_ort;

  typedef struct packed {
    daq_mngt_irt   i;
    daq_mngt_ort   o;
  } daq_mngt_ert;

  typedef logic [$bits(daq_mngt_irt)-1:0] daq_mngt_ivt;

  typedef logic [$bits(daq_mngt_ort)-1:0] daq_mngt_ovt;

  typedef struct packed {
    daq_sys_rt   sys;
    ttc_ort   ttc;
    ctrl_to_daq_rt   ctrl;
    daq_branch_t   branch;
    felix_to_daq_rt   f2e;
  } daq_algo_irt;

  typedef struct packed {
    daq_to_status_rt   status;
    daq_to_felix_rt   f2e;
  } daq_algo_ort;

  typedef struct packed {
    daq_algo_irt   i;
    daq_algo_ort   o;
  } daq_algo_ert;

  typedef logic [$bits(daq_algo_irt)-1:0] daq_algo_ivt;

  typedef logic [$bits(daq_algo_ort)-1:0] daq_algo_ovt;

  typedef felix_to_daq_rt  [0:DAQ_MAX_BRANCHES-1] mfelix_to_branch_at;

  typedef daq_to_felix_rt  [0:DAQ_MAX_BRANCHES-1] top_to_mfelix_at;

  typedef daq_to_status_rt  [DAQ_MAX_BRANCHES-1:0] top_to_status_at;

  typedef struct packed {
    daq_sys_rt   sys;
    ttc_ort   ttc;
    ctrl_to_daq_rt   ctrl;
    daq_branches_t   branches;
    mfelix_to_branch_at   f2e_bus;
  } daq_branch_irt;

  typedef struct packed {
    top_to_status_at   status_bus;
    top_to_mfelix_at   f2e_bus;
  } daq_branch_ort;

  typedef struct packed {
    daq_branch_irt   i;
    daq_branch_ort   o;
  } daq_branch_ert;

  typedef logic [$bits(daq_branch_irt)-1:0] daq_branch_ivt;

  typedef logic [$bits(daq_branch_ort)-1:0] daq_branch_ovt;



`endif // DAQ_DEFS_SVH
