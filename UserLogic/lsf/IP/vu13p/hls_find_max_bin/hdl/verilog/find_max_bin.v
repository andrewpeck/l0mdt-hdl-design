// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="find_max_bin,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu13p-flga2577-1-e,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.733000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=509,HLS_SYN_LUT=3254,HLS_VERSION=2019_2_1}" *)

module find_max_bin (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        slcvec_angle_polar_offset_mrad_V,
        roi_seed_r_V,
        max_bin_count_0_V,
        max_bin_count_1_V,
        max_bin_count_2_V,
        max_bin_count_3_V,
        max_bin_count_4_V,
        max_bin_count_5_V,
        max_bin_count_6_V,
        max_bin_count_7_V,
        max_bin_count_8_V,
        max_bin_count_9_V,
        max_bin_count_10_V,
        max_bin_count_11_V,
        max_bin_count_12_V,
        max_bin_count_13_V,
        max_bin_count_14_V,
        max_bin_count_15_V,
        max_bin_count_16_V,
        max_bin_count_17_V,
        max_bin_count_18_V,
        max_bin_count_19_V,
        max_bin_count_20_V,
        max_bin_count_21_V,
        max_bin_count_22_V,
        max_bin_count_23_V,
        max_bin_count_24_V,
        max_bin_count_25_V,
        max_bin_count_26_V,
        max_bin_count_27_V,
        max_bin_count_28_V,
        max_bin_count_29_V,
        max_bin_count_30_V,
        max_bin_count_31_V,
        max_bin_count_32_V,
        max_bin_count_33_V,
        max_bin_count_34_V,
        max_bin_count_35_V,
        max_bin_count_36_V,
        max_bin_count_37_V,
        max_bin_count_38_V,
        max_bin_count_39_V,
        max_bin_count_40_V,
        max_bin_count_41_V,
        max_bin_count_42_V,
        max_bin_count_43_V,
        max_bin_count_44_V,
        max_bin_count_45_V,
        max_bin_count_46_V,
        max_bin_count_47_V,
        max_bin_count_48_V,
        max_bin_count_49_V,
        max_bin_count_50_V,
        max_bin_count_51_V,
        max_bin_count_52_V,
        max_bin_count_53_V,
        max_bin_count_54_V,
        max_bin_count_55_V,
        max_bin_count_56_V,
        max_bin_count_57_V,
        max_bin_count_58_V,
        max_bin_count_59_V,
        max_bin_count_60_V,
        max_bin_count_61_V,
        max_bin_count_62_V,
        max_bin_count_63_V,
        max_bin_r_0_V,
        max_bin_r_1_V,
        max_bin_r_2_V,
        max_bin_r_3_V,
        max_bin_r_4_V,
        max_bin_r_5_V,
        max_bin_r_6_V,
        max_bin_r_7_V,
        max_bin_r_8_V,
        max_bin_r_9_V,
        max_bin_r_10_V,
        max_bin_r_11_V,
        max_bin_r_12_V,
        max_bin_r_13_V,
        max_bin_r_14_V,
        max_bin_r_15_V,
        max_bin_r_16_V,
        max_bin_r_17_V,
        max_bin_r_18_V,
        max_bin_r_19_V,
        max_bin_r_20_V,
        max_bin_r_21_V,
        max_bin_r_22_V,
        max_bin_r_23_V,
        max_bin_r_24_V,
        max_bin_r_25_V,
        max_bin_r_26_V,
        max_bin_r_27_V,
        max_bin_r_28_V,
        max_bin_r_29_V,
        max_bin_r_30_V,
        max_bin_r_31_V,
        max_bin_r_32_V,
        max_bin_r_33_V,
        max_bin_r_34_V,
        max_bin_r_35_V,
        max_bin_r_36_V,
        max_bin_r_37_V,
        max_bin_r_38_V,
        max_bin_r_39_V,
        max_bin_r_40_V,
        max_bin_r_41_V,
        max_bin_r_42_V,
        max_bin_r_43_V,
        max_bin_r_44_V,
        max_bin_r_45_V,
        max_bin_r_46_V,
        max_bin_r_47_V,
        max_bin_r_48_V,
        max_bin_r_49_V,
        max_bin_r_50_V,
        max_bin_r_51_V,
        max_bin_r_52_V,
        max_bin_r_53_V,
        max_bin_r_54_V,
        max_bin_r_55_V,
        max_bin_r_56_V,
        max_bin_r_57_V,
        max_bin_r_58_V,
        max_bin_r_59_V,
        max_bin_r_60_V,
        max_bin_r_61_V,
        max_bin_r_62_V,
        max_bin_r_63_V,
        hls_LT_theta_global_V,
        hls_LT_theta_global_V_ap_vld,
        hls_LT_r_global_V,
        hls_LT_r_global_V_ap_vld,
        hls_LT_theta_V,
        hls_LT_theta_V_ap_vld,
        hls_LT_r_V,
        hls_LT_r_V_ap_vld,
        res_max_bin_count_V,
        res_max_bin_count_V_ap_vld,
        res_max_bin_theta_V,
        res_max_bin_theta_V_ap_vld,
        res_max_bin_r_V,
        res_max_bin_r_V_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] slcvec_angle_polar_offset_mrad_V;
input  [21:0] roi_seed_r_V;
input  [3:0] max_bin_count_0_V;
input  [3:0] max_bin_count_1_V;
input  [3:0] max_bin_count_2_V;
input  [3:0] max_bin_count_3_V;
input  [3:0] max_bin_count_4_V;
input  [3:0] max_bin_count_5_V;
input  [3:0] max_bin_count_6_V;
input  [3:0] max_bin_count_7_V;
input  [3:0] max_bin_count_8_V;
input  [3:0] max_bin_count_9_V;
input  [3:0] max_bin_count_10_V;
input  [3:0] max_bin_count_11_V;
input  [3:0] max_bin_count_12_V;
input  [3:0] max_bin_count_13_V;
input  [3:0] max_bin_count_14_V;
input  [3:0] max_bin_count_15_V;
input  [3:0] max_bin_count_16_V;
input  [3:0] max_bin_count_17_V;
input  [3:0] max_bin_count_18_V;
input  [3:0] max_bin_count_19_V;
input  [3:0] max_bin_count_20_V;
input  [3:0] max_bin_count_21_V;
input  [3:0] max_bin_count_22_V;
input  [3:0] max_bin_count_23_V;
input  [3:0] max_bin_count_24_V;
input  [3:0] max_bin_count_25_V;
input  [3:0] max_bin_count_26_V;
input  [3:0] max_bin_count_27_V;
input  [3:0] max_bin_count_28_V;
input  [3:0] max_bin_count_29_V;
input  [3:0] max_bin_count_30_V;
input  [3:0] max_bin_count_31_V;
input  [3:0] max_bin_count_32_V;
input  [3:0] max_bin_count_33_V;
input  [3:0] max_bin_count_34_V;
input  [3:0] max_bin_count_35_V;
input  [3:0] max_bin_count_36_V;
input  [3:0] max_bin_count_37_V;
input  [3:0] max_bin_count_38_V;
input  [3:0] max_bin_count_39_V;
input  [3:0] max_bin_count_40_V;
input  [3:0] max_bin_count_41_V;
input  [3:0] max_bin_count_42_V;
input  [3:0] max_bin_count_43_V;
input  [3:0] max_bin_count_44_V;
input  [3:0] max_bin_count_45_V;
input  [3:0] max_bin_count_46_V;
input  [3:0] max_bin_count_47_V;
input  [3:0] max_bin_count_48_V;
input  [3:0] max_bin_count_49_V;
input  [3:0] max_bin_count_50_V;
input  [3:0] max_bin_count_51_V;
input  [3:0] max_bin_count_52_V;
input  [3:0] max_bin_count_53_V;
input  [3:0] max_bin_count_54_V;
input  [3:0] max_bin_count_55_V;
input  [3:0] max_bin_count_56_V;
input  [3:0] max_bin_count_57_V;
input  [3:0] max_bin_count_58_V;
input  [3:0] max_bin_count_59_V;
input  [3:0] max_bin_count_60_V;
input  [3:0] max_bin_count_61_V;
input  [3:0] max_bin_count_62_V;
input  [3:0] max_bin_count_63_V;
input  [6:0] max_bin_r_0_V;
input  [6:0] max_bin_r_1_V;
input  [6:0] max_bin_r_2_V;
input  [6:0] max_bin_r_3_V;
input  [6:0] max_bin_r_4_V;
input  [6:0] max_bin_r_5_V;
input  [6:0] max_bin_r_6_V;
input  [6:0] max_bin_r_7_V;
input  [6:0] max_bin_r_8_V;
input  [6:0] max_bin_r_9_V;
input  [6:0] max_bin_r_10_V;
input  [6:0] max_bin_r_11_V;
input  [6:0] max_bin_r_12_V;
input  [6:0] max_bin_r_13_V;
input  [6:0] max_bin_r_14_V;
input  [6:0] max_bin_r_15_V;
input  [6:0] max_bin_r_16_V;
input  [6:0] max_bin_r_17_V;
input  [6:0] max_bin_r_18_V;
input  [6:0] max_bin_r_19_V;
input  [6:0] max_bin_r_20_V;
input  [6:0] max_bin_r_21_V;
input  [6:0] max_bin_r_22_V;
input  [6:0] max_bin_r_23_V;
input  [6:0] max_bin_r_24_V;
input  [6:0] max_bin_r_25_V;
input  [6:0] max_bin_r_26_V;
input  [6:0] max_bin_r_27_V;
input  [6:0] max_bin_r_28_V;
input  [6:0] max_bin_r_29_V;
input  [6:0] max_bin_r_30_V;
input  [6:0] max_bin_r_31_V;
input  [6:0] max_bin_r_32_V;
input  [6:0] max_bin_r_33_V;
input  [6:0] max_bin_r_34_V;
input  [6:0] max_bin_r_35_V;
input  [6:0] max_bin_r_36_V;
input  [6:0] max_bin_r_37_V;
input  [6:0] max_bin_r_38_V;
input  [6:0] max_bin_r_39_V;
input  [6:0] max_bin_r_40_V;
input  [6:0] max_bin_r_41_V;
input  [6:0] max_bin_r_42_V;
input  [6:0] max_bin_r_43_V;
input  [6:0] max_bin_r_44_V;
input  [6:0] max_bin_r_45_V;
input  [6:0] max_bin_r_46_V;
input  [6:0] max_bin_r_47_V;
input  [6:0] max_bin_r_48_V;
input  [6:0] max_bin_r_49_V;
input  [6:0] max_bin_r_50_V;
input  [6:0] max_bin_r_51_V;
input  [6:0] max_bin_r_52_V;
input  [6:0] max_bin_r_53_V;
input  [6:0] max_bin_r_54_V;
input  [6:0] max_bin_r_55_V;
input  [6:0] max_bin_r_56_V;
input  [6:0] max_bin_r_57_V;
input  [6:0] max_bin_r_58_V;
input  [6:0] max_bin_r_59_V;
input  [6:0] max_bin_r_60_V;
input  [6:0] max_bin_r_61_V;
input  [6:0] max_bin_r_62_V;
input  [6:0] max_bin_r_63_V;
output  [13:0] hls_LT_theta_global_V;
output   hls_LT_theta_global_V_ap_vld;
output  [21:0] hls_LT_r_global_V;
output   hls_LT_r_global_V_ap_vld;
output  [13:0] hls_LT_theta_V;
output   hls_LT_theta_V_ap_vld;
output  [21:0] hls_LT_r_V;
output   hls_LT_r_V_ap_vld;
output  [3:0] res_max_bin_count_V;
output   res_max_bin_count_V_ap_vld;
output  [6:0] res_max_bin_theta_V;
output   res_max_bin_theta_V_ap_vld;
output  [6:0] res_max_bin_r_V;
output   res_max_bin_r_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    hls_LT_theta_global_V_1_ack_in;
reg    hls_LT_r_global_V_1_ack_in;
reg    hls_LT_theta_V_1_ack_in;
reg    hls_LT_r_V_1_ack_in;
reg    res_max_bin_count_V_1_ack_in;
reg    res_max_bin_theta_V_1_ack_in;
reg    res_max_bin_r_V_1_ack_in;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [13:0] hls_LT_theta_global_V_1_data_reg;
reg    hls_LT_theta_global_V_1_vld_reg;
reg    hls_LT_theta_global_V_1_vld_in;
reg   [21:0] hls_LT_r_global_V_1_data_reg;
reg    hls_LT_r_global_V_1_vld_reg;
reg    hls_LT_r_global_V_1_vld_in;
reg   [13:0] hls_LT_theta_V_1_data_reg;
reg    hls_LT_theta_V_1_vld_reg;
reg    hls_LT_theta_V_1_vld_in;
reg   [21:0] hls_LT_r_V_1_data_reg;
reg    hls_LT_r_V_1_vld_reg;
reg    hls_LT_r_V_1_vld_in;
reg   [3:0] res_max_bin_count_V_1_data_reg;
reg    res_max_bin_count_V_1_vld_reg;
reg    res_max_bin_count_V_1_vld_in;
reg   [6:0] res_max_bin_theta_V_1_data_reg;
reg    res_max_bin_theta_V_1_vld_reg;
reg    res_max_bin_theta_V_1_vld_in;
reg   [6:0] res_max_bin_r_V_1_data_reg;
reg    res_max_bin_r_V_1_vld_reg;
reg    res_max_bin_r_V_1_vld_in;
reg   [21:0] roi_seed_r_V_read_reg_4742;
reg   [21:0] roi_seed_r_V_read_reg_4742_pp0_iter1_reg;
reg   [13:0] slcvec_angle_polar_o_reg_4747;
reg   [13:0] slcvec_angle_polar_o_reg_4747_pp0_iter1_reg;
wire   [0:0] icmp_ln895_fu_1552_p2;
reg   [0:0] icmp_ln895_reg_4752;
wire   [0:0] icmp_ln895_1_fu_1558_p2;
reg   [0:0] icmp_ln895_1_reg_4757;
wire   [0:0] icmp_ln895_2_fu_1564_p2;
reg   [0:0] icmp_ln895_2_reg_4762;
wire   [0:0] icmp_ln895_3_fu_1570_p2;
reg   [0:0] icmp_ln895_3_reg_4767;
wire   [0:0] icmp_ln895_4_fu_1576_p2;
reg   [0:0] icmp_ln895_4_reg_4772;
wire   [0:0] icmp_ln895_6_fu_1582_p2;
reg   [0:0] icmp_ln895_6_reg_4777;
wire   [0:0] icmp_ln895_64_fu_1588_p2;
reg   [0:0] icmp_ln895_64_reg_4782;
wire   [0:0] icmp_ln895_7_fu_1594_p2;
reg   [0:0] icmp_ln895_7_reg_4787;
wire   [0:0] icmp_ln895_8_fu_1600_p2;
reg   [0:0] icmp_ln895_8_reg_4792;
wire   [0:0] icmp_ln895_9_fu_1606_p2;
reg   [0:0] icmp_ln895_9_reg_4797;
wire   [0:0] icmp_ln895_10_fu_1612_p2;
reg   [0:0] icmp_ln895_10_reg_4802;
wire   [0:0] icmp_ln895_11_fu_1618_p2;
reg   [0:0] icmp_ln895_11_reg_4807;
wire   [0:0] icmp_ln895_12_fu_1624_p2;
reg   [0:0] icmp_ln895_12_reg_4812;
wire   [0:0] icmp_ln895_13_fu_1630_p2;
reg   [0:0] icmp_ln895_13_reg_4817;
wire   [0:0] icmp_ln895_14_fu_1636_p2;
reg   [0:0] icmp_ln895_14_reg_4822;
wire   [0:0] icmp_ln895_15_fu_1642_p2;
reg   [0:0] icmp_ln895_15_reg_4827;
wire   [0:0] icmp_ln895_16_fu_1648_p2;
reg   [0:0] icmp_ln895_16_reg_4832;
wire   [0:0] icmp_ln895_17_fu_1654_p2;
reg   [0:0] icmp_ln895_17_reg_4837;
wire   [0:0] icmp_ln895_18_fu_1660_p2;
reg   [0:0] icmp_ln895_18_reg_4842;
wire   [0:0] icmp_ln895_19_fu_1666_p2;
reg   [0:0] icmp_ln895_19_reg_4847;
wire   [0:0] icmp_ln895_20_fu_1672_p2;
reg   [0:0] icmp_ln895_20_reg_4852;
wire   [0:0] icmp_ln895_21_fu_1678_p2;
reg   [0:0] icmp_ln895_21_reg_4857;
wire   [0:0] icmp_ln895_22_fu_1684_p2;
reg   [0:0] icmp_ln895_22_reg_4862;
wire   [0:0] icmp_ln895_23_fu_1690_p2;
reg   [0:0] icmp_ln895_23_reg_4867;
wire   [0:0] icmp_ln895_24_fu_1696_p2;
reg   [0:0] icmp_ln895_24_reg_4872;
wire   [0:0] icmp_ln895_25_fu_1702_p2;
reg   [0:0] icmp_ln895_25_reg_4877;
wire   [0:0] icmp_ln895_26_fu_1708_p2;
reg   [0:0] icmp_ln895_26_reg_4882;
wire   [0:0] icmp_ln895_27_fu_1714_p2;
reg   [0:0] icmp_ln895_27_reg_4887;
wire   [0:0] icmp_ln895_28_fu_1720_p2;
reg   [0:0] icmp_ln895_28_reg_4892;
wire   [0:0] icmp_ln895_29_fu_1726_p2;
reg   [0:0] icmp_ln895_29_reg_4897;
wire   [0:0] icmp_ln895_30_fu_1732_p2;
reg   [0:0] icmp_ln895_30_reg_4902;
wire   [0:0] icmp_ln895_31_fu_1738_p2;
reg   [0:0] icmp_ln895_31_reg_4907;
wire   [0:0] icmp_ln895_32_fu_1744_p2;
reg   [0:0] icmp_ln895_32_reg_4912;
wire   [0:0] icmp_ln895_33_fu_1750_p2;
reg   [0:0] icmp_ln895_33_reg_4917;
wire   [0:0] icmp_ln895_34_fu_1756_p2;
reg   [0:0] icmp_ln895_34_reg_4922;
wire   [0:0] icmp_ln895_35_fu_1762_p2;
reg   [0:0] icmp_ln895_35_reg_4927;
wire   [0:0] icmp_ln895_36_fu_1768_p2;
reg   [0:0] icmp_ln895_36_reg_4932;
wire   [0:0] icmp_ln895_37_fu_1774_p2;
reg   [0:0] icmp_ln895_37_reg_4937;
wire   [0:0] icmp_ln895_38_fu_1780_p2;
reg   [0:0] icmp_ln895_38_reg_4942;
wire   [0:0] icmp_ln895_39_fu_1786_p2;
reg   [0:0] icmp_ln895_39_reg_4947;
wire   [0:0] icmp_ln895_40_fu_1792_p2;
reg   [0:0] icmp_ln895_40_reg_4952;
wire   [0:0] icmp_ln895_41_fu_1798_p2;
reg   [0:0] icmp_ln895_41_reg_4957;
wire   [0:0] icmp_ln895_42_fu_1804_p2;
reg   [0:0] icmp_ln895_42_reg_4962;
wire   [0:0] icmp_ln895_43_fu_1810_p2;
reg   [0:0] icmp_ln895_43_reg_4967;
wire   [0:0] icmp_ln895_44_fu_1816_p2;
reg   [0:0] icmp_ln895_44_reg_4972;
wire   [0:0] icmp_ln895_45_fu_1822_p2;
reg   [0:0] icmp_ln895_45_reg_4977;
wire   [0:0] icmp_ln895_46_fu_1828_p2;
reg   [0:0] icmp_ln895_46_reg_4982;
wire   [0:0] icmp_ln895_47_fu_1834_p2;
reg   [0:0] icmp_ln895_47_reg_4987;
wire   [0:0] icmp_ln895_48_fu_1840_p2;
reg   [0:0] icmp_ln895_48_reg_4992;
wire   [0:0] icmp_ln895_49_fu_1846_p2;
reg   [0:0] icmp_ln895_49_reg_4997;
wire   [0:0] icmp_ln895_50_fu_1852_p2;
reg   [0:0] icmp_ln895_50_reg_5002;
wire   [0:0] icmp_ln895_51_fu_1858_p2;
reg   [0:0] icmp_ln895_51_reg_5007;
wire   [0:0] icmp_ln895_52_fu_1864_p2;
reg   [0:0] icmp_ln895_52_reg_5012;
wire   [0:0] icmp_ln895_53_fu_1870_p2;
reg   [0:0] icmp_ln895_53_reg_5017;
wire   [0:0] icmp_ln895_54_fu_1876_p2;
reg   [0:0] icmp_ln895_54_reg_5022;
wire   [0:0] icmp_ln895_55_fu_1882_p2;
reg   [0:0] icmp_ln895_55_reg_5027;
wire   [0:0] icmp_ln895_56_fu_1888_p2;
reg   [0:0] icmp_ln895_56_reg_5032;
wire   [0:0] icmp_ln895_57_fu_1894_p2;
reg   [0:0] icmp_ln895_57_reg_5037;
wire   [0:0] icmp_ln895_58_fu_1900_p2;
reg   [0:0] icmp_ln895_58_reg_5042;
wire   [0:0] icmp_ln895_59_fu_1906_p2;
reg   [0:0] icmp_ln895_59_reg_5047;
wire   [0:0] icmp_ln895_60_fu_1912_p2;
reg   [0:0] icmp_ln895_60_reg_5052;
wire   [0:0] icmp_ln895_61_fu_1918_p2;
reg   [0:0] icmp_ln895_61_reg_5057;
wire   [0:0] icmp_ln895_62_fu_1924_p2;
reg   [0:0] icmp_ln895_62_reg_5062;
wire   [0:0] icmp_ln895_63_fu_1930_p2;
reg   [0:0] icmp_ln895_63_reg_5067;
wire   [0:0] icmp_ln895_65_fu_1936_p2;
reg   [0:0] icmp_ln895_65_reg_5072;
wire   [6:0] select_ln432_1_fu_2764_p3;
reg   [6:0] select_ln432_1_reg_5077;
wire   [0:0] icmp_ln895_66_fu_1942_p2;
reg   [0:0] icmp_ln895_66_reg_5082;
wire   [6:0] select_ln432_4_fu_2781_p3;
reg   [6:0] select_ln432_4_reg_5087;
wire   [0:0] icmp_ln895_67_fu_1948_p2;
reg   [0:0] icmp_ln895_67_reg_5092;
wire   [6:0] select_ln432_7_fu_2798_p3;
reg   [6:0] select_ln432_7_reg_5097;
wire   [0:0] icmp_ln895_68_fu_1954_p2;
reg   [0:0] icmp_ln895_68_reg_5102;
wire   [6:0] select_ln432_10_fu_2815_p3;
reg   [6:0] select_ln432_10_reg_5107;
wire   [0:0] icmp_ln895_69_fu_1960_p2;
reg   [0:0] icmp_ln895_69_reg_5112;
wire   [6:0] select_ln432_13_fu_2832_p3;
reg   [6:0] select_ln432_13_reg_5117;
wire   [0:0] icmp_ln895_70_fu_1966_p2;
reg   [0:0] icmp_ln895_70_reg_5122;
wire   [6:0] select_ln432_16_fu_2849_p3;
reg   [6:0] select_ln432_16_reg_5127;
wire   [0:0] icmp_ln895_71_fu_1972_p2;
reg   [0:0] icmp_ln895_71_reg_5132;
wire   [6:0] select_ln432_19_fu_2866_p3;
reg   [6:0] select_ln432_19_reg_5137;
wire   [0:0] icmp_ln895_72_fu_1978_p2;
reg   [0:0] icmp_ln895_72_reg_5142;
wire   [6:0] select_ln432_22_fu_2883_p3;
reg   [6:0] select_ln432_22_reg_5147;
wire   [0:0] icmp_ln895_73_fu_1984_p2;
reg   [0:0] icmp_ln895_73_reg_5152;
wire   [0:0] icmp_ln895_74_fu_1990_p2;
reg   [0:0] icmp_ln895_74_reg_5157;
wire   [0:0] icmp_ln895_75_fu_1996_p2;
reg   [0:0] icmp_ln895_75_reg_5162;
wire   [0:0] icmp_ln895_76_fu_2002_p2;
reg   [0:0] icmp_ln895_76_reg_5167;
wire   [0:0] icmp_ln895_77_fu_2008_p2;
reg   [0:0] icmp_ln895_77_reg_5172;
wire   [0:0] icmp_ln895_78_fu_2014_p2;
reg   [0:0] icmp_ln895_78_reg_5177;
wire   [0:0] icmp_ln895_79_fu_2020_p2;
reg   [0:0] icmp_ln895_79_reg_5182;
wire   [0:0] icmp_ln895_80_fu_2026_p2;
reg   [0:0] icmp_ln895_80_reg_5187;
wire   [0:0] icmp_ln895_81_fu_2032_p2;
reg   [0:0] icmp_ln895_81_reg_5192;
wire   [6:0] select_ln432_49_fu_3036_p3;
reg   [6:0] select_ln432_49_reg_5197;
wire   [0:0] icmp_ln895_82_fu_2038_p2;
reg   [0:0] icmp_ln895_82_reg_5202;
wire   [6:0] select_ln432_52_fu_3053_p3;
reg   [6:0] select_ln432_52_reg_5207;
wire   [0:0] icmp_ln895_83_fu_2044_p2;
reg   [0:0] icmp_ln895_83_reg_5212;
wire   [6:0] select_ln432_55_fu_3070_p3;
reg   [6:0] select_ln432_55_reg_5217;
wire   [0:0] icmp_ln895_84_fu_2050_p2;
reg   [0:0] icmp_ln895_84_reg_5222;
wire   [6:0] select_ln432_58_fu_3087_p3;
reg   [6:0] select_ln432_58_reg_5227;
wire   [0:0] icmp_ln895_85_fu_2056_p2;
reg   [0:0] icmp_ln895_85_reg_5232;
wire   [6:0] select_ln432_61_fu_3104_p3;
reg   [6:0] select_ln432_61_reg_5237;
wire   [0:0] icmp_ln895_86_fu_2062_p2;
reg   [0:0] icmp_ln895_86_reg_5242;
wire   [6:0] select_ln432_64_fu_3121_p3;
reg   [6:0] select_ln432_64_reg_5247;
wire   [0:0] icmp_ln895_87_fu_2068_p2;
reg   [0:0] icmp_ln895_87_reg_5252;
wire   [6:0] select_ln432_67_fu_3138_p3;
reg   [6:0] select_ln432_67_reg_5257;
wire   [0:0] icmp_ln895_88_fu_2074_p2;
reg   [0:0] icmp_ln895_88_reg_5262;
wire   [6:0] select_ln432_70_fu_3155_p3;
reg   [6:0] select_ln432_70_reg_5267;
wire   [0:0] icmp_ln895_89_fu_2080_p2;
reg   [0:0] icmp_ln895_89_reg_5272;
wire   [0:0] icmp_ln895_90_fu_2086_p2;
reg   [0:0] icmp_ln895_90_reg_5277;
wire   [0:0] icmp_ln895_91_fu_2092_p2;
reg   [0:0] icmp_ln895_91_reg_5282;
wire   [0:0] icmp_ln895_92_fu_2098_p2;
reg   [0:0] icmp_ln895_92_reg_5287;
wire   [0:0] icmp_ln895_93_fu_2104_p2;
reg   [0:0] icmp_ln895_93_reg_5292;
wire   [0:0] icmp_ln895_94_fu_2110_p2;
reg   [0:0] icmp_ln895_94_reg_5297;
wire   [0:0] icmp_ln895_95_fu_2116_p2;
reg   [0:0] icmp_ln895_95_reg_5302;
wire   [0:0] icmp_ln895_96_fu_2122_p2;
reg   [0:0] icmp_ln895_96_reg_5307;
wire   [0:0] icmp_ln895_97_fu_2128_p2;
reg   [0:0] icmp_ln895_97_reg_5312;
wire   [0:0] icmp_ln895_98_fu_2132_p2;
reg   [0:0] icmp_ln895_98_reg_5318;
wire   [0:0] icmp_ln895_99_fu_2136_p2;
reg   [0:0] icmp_ln895_99_reg_5324;
wire   [0:0] icmp_ln895_100_fu_2140_p2;
reg   [0:0] icmp_ln895_100_reg_5330;
wire   [0:0] icmp_ln895_101_fu_2144_p2;
reg   [0:0] icmp_ln895_101_reg_5336;
wire   [0:0] icmp_ln895_102_fu_2148_p2;
reg   [0:0] icmp_ln895_102_reg_5342;
wire   [0:0] icmp_ln895_103_fu_2152_p2;
reg   [0:0] icmp_ln895_103_reg_5348;
wire   [0:0] icmp_ln895_104_fu_2156_p2;
reg   [0:0] icmp_ln895_104_reg_5354;
wire   [0:0] icmp_ln895_105_fu_2160_p2;
reg   [0:0] icmp_ln895_105_reg_5360;
wire   [6:0] select_ln450_25_fu_3380_p3;
reg   [6:0] select_ln450_25_reg_5365;
wire   [0:0] icmp_ln895_106_fu_2164_p2;
reg   [0:0] icmp_ln895_106_reg_5370;
wire   [6:0] select_ln450_28_fu_3397_p3;
reg   [6:0] select_ln450_28_reg_5375;
wire   [0:0] icmp_ln895_107_fu_2168_p2;
reg   [0:0] icmp_ln895_107_reg_5380;
wire   [6:0] select_ln450_31_fu_3414_p3;
reg   [6:0] select_ln450_31_reg_5385;
wire   [0:0] icmp_ln895_108_fu_2172_p2;
reg   [0:0] icmp_ln895_108_reg_5390;
wire   [6:0] select_ln450_34_fu_3431_p3;
reg   [6:0] select_ln450_34_reg_5395;
wire   [0:0] icmp_ln895_109_fu_2176_p2;
reg   [0:0] icmp_ln895_109_reg_5400;
wire   [6:0] select_ln450_37_fu_3448_p3;
reg   [6:0] select_ln450_37_reg_5405;
wire   [0:0] icmp_ln895_110_fu_2180_p2;
reg   [0:0] icmp_ln895_110_reg_5410;
wire   [6:0] select_ln450_40_fu_3465_p3;
reg   [6:0] select_ln450_40_reg_5415;
wire   [0:0] icmp_ln895_111_fu_2184_p2;
reg   [0:0] icmp_ln895_111_reg_5420;
wire   [6:0] select_ln450_43_fu_3482_p3;
reg   [6:0] select_ln450_43_reg_5425;
wire   [0:0] icmp_ln895_112_fu_2188_p2;
reg   [0:0] icmp_ln895_112_reg_5430;
wire   [6:0] select_ln450_46_fu_3499_p3;
reg   [6:0] select_ln450_46_reg_5435;
wire   [0:0] icmp_ln895_113_fu_2192_p2;
reg   [0:0] icmp_ln895_113_reg_5440;
wire   [3:0] select_ln468_2_fu_3516_p3;
reg   [3:0] select_ln468_2_reg_5446;
wire   [0:0] icmp_ln895_114_fu_2196_p2;
reg   [0:0] icmp_ln895_114_reg_5452;
wire   [3:0] select_ln468_5_fu_3524_p3;
reg   [3:0] select_ln468_5_reg_5458;
wire   [0:0] icmp_ln895_115_fu_2200_p2;
reg   [0:0] icmp_ln895_115_reg_5464;
wire   [3:0] select_ln468_8_fu_3532_p3;
reg   [3:0] select_ln468_8_reg_5470;
wire   [0:0] icmp_ln895_116_fu_2204_p2;
reg   [0:0] icmp_ln895_116_reg_5476;
wire   [3:0] select_ln468_11_fu_3540_p3;
reg   [3:0] select_ln468_11_reg_5482;
wire   [0:0] icmp_ln895_117_fu_2208_p2;
reg   [0:0] icmp_ln895_117_reg_5488;
wire   [3:0] select_ln468_14_fu_3548_p3;
reg   [3:0] select_ln468_14_reg_5494;
wire   [0:0] icmp_ln895_118_fu_2212_p2;
reg   [0:0] icmp_ln895_118_reg_5500;
wire   [3:0] select_ln468_17_fu_3556_p3;
reg   [3:0] select_ln468_17_reg_5506;
wire   [0:0] icmp_ln895_119_fu_2216_p2;
reg   [0:0] icmp_ln895_119_reg_5512;
wire   [3:0] select_ln468_20_fu_3564_p3;
reg   [3:0] select_ln468_20_reg_5518;
wire   [0:0] icmp_ln895_120_fu_2220_p2;
reg   [0:0] icmp_ln895_120_reg_5524;
wire   [3:0] select_ln468_23_fu_3572_p3;
reg   [3:0] select_ln468_23_reg_5530;
wire   [6:0] select_ln486_fu_4508_p3;
reg   [6:0] select_ln486_reg_5536;
wire   [6:0] select_ln486_6_fu_4554_p3;
reg   [6:0] select_ln486_6_reg_5541;
wire   [0:0] icmp_ln895_125_fu_2240_p2;
reg   [0:0] icmp_ln895_125_reg_5546;
wire   [6:0] res_max_bin_r_t_V_fu_4600_p3;
reg   [6:0] res_max_bin_r_t_V_reg_5551;
wire   [6:0] res_max_bin_theta_t_1_fu_4617_p3;
reg   [6:0] res_max_bin_theta_t_1_reg_5556;
wire   [6:0] res_max_bin_r_t_V_1_fu_4625_p3;
reg   [6:0] res_max_bin_r_t_V_1_reg_5561;
wire   [0:0] icmp_ln895_5_fu_2248_p2;
reg   [0:0] icmp_ln895_5_reg_5566;
wire   [3:0] res_max_bin_count_t_2_fu_4642_p3;
reg   [3:0] res_max_bin_count_t_2_reg_5572;
wire   [6:0] res_max_bin_theta_t_2_fu_4655_p3;
wire   [6:0] tmp_V_fu_4667_p2;
wire   [13:0] zext_ln703_1_fu_4692_p1;
wire   [13:0] add_ln703_1_fu_4711_p2;
wire   [21:0] zext_ln708_fu_4731_p1;
wire   [21:0] add_ln703_2_fu_4736_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [3:0] select_ln432_2_fu_2772_p3;
wire   [3:0] select_ln432_50_fu_3044_p3;
wire   [3:0] select_ln432_5_fu_2789_p3;
wire   [3:0] select_ln432_53_fu_3061_p3;
wire   [3:0] select_ln432_8_fu_2806_p3;
wire   [3:0] select_ln432_56_fu_3078_p3;
wire   [3:0] select_ln432_11_fu_2823_p3;
wire   [3:0] select_ln432_59_fu_3095_p3;
wire   [3:0] select_ln432_14_fu_2840_p3;
wire   [3:0] select_ln432_62_fu_3112_p3;
wire   [3:0] select_ln432_17_fu_2857_p3;
wire   [3:0] select_ln432_65_fu_3129_p3;
wire   [3:0] select_ln432_20_fu_2874_p3;
wire   [3:0] select_ln432_68_fu_3146_p3;
wire   [3:0] select_ln432_23_fu_2891_p3;
wire   [3:0] select_ln432_71_fu_3163_p3;
wire   [3:0] select_ln432_26_fu_2908_p3;
wire   [3:0] select_ln432_74_fu_3180_p3;
wire   [3:0] select_ln432_29_fu_2925_p3;
wire   [3:0] select_ln432_77_fu_3197_p3;
wire   [3:0] select_ln432_32_fu_2942_p3;
wire   [3:0] select_ln432_80_fu_3214_p3;
wire   [3:0] select_ln432_35_fu_2959_p3;
wire   [3:0] select_ln432_83_fu_3231_p3;
wire   [3:0] select_ln432_38_fu_2976_p3;
wire   [3:0] select_ln432_86_fu_3248_p3;
wire   [3:0] select_ln432_41_fu_2993_p3;
wire   [3:0] select_ln432_89_fu_3265_p3;
wire   [3:0] select_ln432_44_fu_3010_p3;
wire   [3:0] select_ln432_92_fu_3282_p3;
wire   [3:0] select_ln432_47_fu_3027_p3;
wire   [3:0] select_ln432_95_fu_3299_p3;
wire   [3:0] select_ln450_2_fu_3308_p3;
wire   [3:0] select_ln450_26_fu_3388_p3;
wire   [3:0] select_ln450_5_fu_3317_p3;
wire   [3:0] select_ln450_29_fu_3405_p3;
wire   [3:0] select_ln450_8_fu_3326_p3;
wire   [3:0] select_ln450_32_fu_3422_p3;
wire   [3:0] select_ln450_11_fu_3335_p3;
wire   [3:0] select_ln450_35_fu_3439_p3;
wire   [3:0] select_ln450_14_fu_3344_p3;
wire   [3:0] select_ln450_38_fu_3456_p3;
wire   [3:0] select_ln450_17_fu_3353_p3;
wire   [3:0] select_ln450_41_fu_3473_p3;
wire   [3:0] select_ln450_20_fu_3362_p3;
wire   [3:0] select_ln450_44_fu_3490_p3;
wire   [3:0] select_ln450_23_fu_3371_p3;
wire   [3:0] select_ln450_47_fu_3507_p3;
wire   [3:0] select_ln486_2_fu_4524_p3;
wire   [3:0] select_ln486_8_fu_4570_p3;
wire   [3:0] select_ln486_5_fu_4547_p3;
wire   [3:0] select_ln486_11_fu_4593_p3;
wire   [3:0] res_max_bin_count_t_s_fu_4608_p3;
wire   [3:0] res_max_bin_count_t_1_fu_4633_p3;
wire   [6:0] select_ln414_1_fu_2252_p3;
wire   [6:0] select_ln414_65_fu_2508_p3;
wire   [6:0] select_ln414_3_fu_2260_p3;
wire   [6:0] select_ln414_67_fu_2516_p3;
wire   [6:0] select_ln414_5_fu_2268_p3;
wire   [6:0] select_ln414_69_fu_2524_p3;
wire   [6:0] select_ln414_7_fu_2276_p3;
wire   [6:0] select_ln414_71_fu_2532_p3;
wire   [6:0] select_ln414_9_fu_2284_p3;
wire   [6:0] select_ln414_73_fu_2540_p3;
wire   [6:0] select_ln414_11_fu_2292_p3;
wire   [6:0] select_ln414_75_fu_2548_p3;
wire   [6:0] select_ln414_13_fu_2300_p3;
wire   [6:0] select_ln414_77_fu_2556_p3;
wire   [6:0] select_ln414_15_fu_2308_p3;
wire   [6:0] select_ln414_79_fu_2564_p3;
wire   [6:0] select_ln414_17_fu_2316_p3;
wire   [6:0] select_ln414_81_fu_2572_p3;
wire   [6:0] select_ln414_19_fu_2324_p3;
wire   [6:0] select_ln414_83_fu_2580_p3;
wire   [6:0] select_ln414_21_fu_2332_p3;
wire   [6:0] select_ln414_85_fu_2588_p3;
wire   [6:0] select_ln414_23_fu_2340_p3;
wire   [6:0] select_ln414_87_fu_2596_p3;
wire   [6:0] select_ln414_25_fu_2348_p3;
wire   [6:0] select_ln414_89_fu_2604_p3;
wire   [6:0] select_ln414_27_fu_2356_p3;
wire   [6:0] select_ln414_91_fu_2612_p3;
wire   [6:0] select_ln414_29_fu_2364_p3;
wire   [6:0] select_ln414_93_fu_2620_p3;
wire   [6:0] select_ln414_31_fu_2372_p3;
wire   [6:0] select_ln414_95_fu_2628_p3;
wire   [6:0] select_ln414_33_fu_2380_p3;
wire   [6:0] select_ln414_97_fu_2636_p3;
wire   [6:0] select_ln414_35_fu_2388_p3;
wire   [6:0] select_ln414_99_fu_2644_p3;
wire   [6:0] select_ln414_37_fu_2396_p3;
wire   [6:0] select_ln414_101_fu_2652_p3;
wire   [6:0] select_ln414_39_fu_2404_p3;
wire   [6:0] select_ln414_103_fu_2660_p3;
wire   [6:0] select_ln414_41_fu_2412_p3;
wire   [6:0] select_ln414_105_fu_2668_p3;
wire   [6:0] select_ln414_43_fu_2420_p3;
wire   [6:0] select_ln414_107_fu_2676_p3;
wire   [6:0] select_ln414_45_fu_2428_p3;
wire   [6:0] select_ln414_109_fu_2684_p3;
wire   [6:0] select_ln414_47_fu_2436_p3;
wire   [6:0] select_ln414_111_fu_2692_p3;
wire   [6:0] select_ln414_49_fu_2444_p3;
wire   [6:0] select_ln414_113_fu_2700_p3;
wire   [6:0] select_ln414_51_fu_2452_p3;
wire   [6:0] select_ln414_115_fu_2708_p3;
wire   [6:0] select_ln414_53_fu_2460_p3;
wire   [6:0] select_ln414_117_fu_2716_p3;
wire   [6:0] select_ln414_55_fu_2468_p3;
wire   [6:0] select_ln414_119_fu_2724_p3;
wire   [6:0] select_ln414_57_fu_2476_p3;
wire   [6:0] select_ln414_121_fu_2732_p3;
wire   [6:0] select_ln414_59_fu_2484_p3;
wire   [6:0] select_ln414_123_fu_2740_p3;
wire   [6:0] select_ln414_61_fu_2492_p3;
wire   [6:0] select_ln414_125_fu_2748_p3;
wire   [6:0] select_ln414_63_fu_2500_p3;
wire   [6:0] select_ln414_127_fu_2756_p3;
wire   [6:0] select_ln432_25_fu_2900_p3;
wire   [6:0] select_ln432_73_fu_3172_p3;
wire   [6:0] select_ln432_28_fu_2917_p3;
wire   [6:0] select_ln432_76_fu_3189_p3;
wire   [6:0] select_ln432_31_fu_2934_p3;
wire   [6:0] select_ln432_79_fu_3206_p3;
wire   [6:0] select_ln432_34_fu_2951_p3;
wire   [6:0] select_ln432_82_fu_3223_p3;
wire   [6:0] select_ln432_37_fu_2968_p3;
wire   [6:0] select_ln432_85_fu_3240_p3;
wire   [6:0] select_ln432_40_fu_2985_p3;
wire   [6:0] select_ln432_88_fu_3257_p3;
wire   [6:0] select_ln432_43_fu_3002_p3;
wire   [6:0] select_ln432_91_fu_3274_p3;
wire   [6:0] select_ln432_46_fu_3019_p3;
wire   [6:0] select_ln432_94_fu_3291_p3;
wire   [6:0] select_ln414_fu_3580_p3;
wire   [6:0] select_ln414_64_fu_3804_p3;
wire   [6:0] select_ln414_2_fu_3587_p3;
wire   [6:0] select_ln414_66_fu_3811_p3;
wire   [6:0] select_ln414_4_fu_3594_p3;
wire   [6:0] select_ln414_68_fu_3818_p3;
wire   [6:0] select_ln414_6_fu_3601_p3;
wire   [6:0] select_ln414_70_fu_3825_p3;
wire   [6:0] select_ln414_8_fu_3608_p3;
wire   [6:0] select_ln414_72_fu_3832_p3;
wire   [6:0] select_ln414_10_fu_3615_p3;
wire   [6:0] select_ln414_74_fu_3839_p3;
wire   [6:0] select_ln414_12_fu_3622_p3;
wire   [6:0] select_ln414_76_fu_3846_p3;
wire   [6:0] select_ln414_14_fu_3629_p3;
wire   [6:0] select_ln414_78_fu_3853_p3;
wire   [6:0] select_ln414_16_fu_3636_p3;
wire   [6:0] select_ln414_80_fu_3860_p3;
wire   [6:0] select_ln414_18_fu_3643_p3;
wire   [6:0] select_ln414_82_fu_3867_p3;
wire   [6:0] select_ln414_20_fu_3650_p3;
wire   [6:0] select_ln414_84_fu_3874_p3;
wire   [6:0] select_ln414_22_fu_3657_p3;
wire   [6:0] select_ln414_86_fu_3881_p3;
wire   [6:0] select_ln414_24_fu_3664_p3;
wire   [6:0] select_ln414_88_fu_3888_p3;
wire   [6:0] select_ln414_26_fu_3671_p3;
wire   [6:0] select_ln414_90_fu_3895_p3;
wire   [6:0] select_ln414_28_fu_3678_p3;
wire   [6:0] select_ln414_92_fu_3902_p3;
wire   [6:0] select_ln414_30_fu_3685_p3;
wire   [6:0] select_ln414_94_fu_3909_p3;
wire   [6:0] select_ln414_32_fu_3692_p3;
wire   [6:0] select_ln414_96_fu_3916_p3;
wire   [6:0] select_ln414_34_fu_3699_p3;
wire   [6:0] select_ln414_98_fu_3923_p3;
wire   [6:0] select_ln414_36_fu_3706_p3;
wire   [6:0] select_ln414_100_fu_3930_p3;
wire   [6:0] select_ln414_38_fu_3713_p3;
wire   [6:0] select_ln414_102_fu_3937_p3;
wire   [6:0] select_ln414_40_fu_3720_p3;
wire   [6:0] select_ln414_104_fu_3944_p3;
wire   [6:0] select_ln414_42_fu_3727_p3;
wire   [6:0] select_ln414_106_fu_3951_p3;
wire   [6:0] select_ln414_44_fu_3734_p3;
wire   [6:0] select_ln414_108_fu_3958_p3;
wire   [6:0] select_ln414_46_fu_3741_p3;
wire   [6:0] select_ln414_110_fu_3965_p3;
wire   [6:0] select_ln414_48_fu_3748_p3;
wire   [6:0] select_ln414_112_fu_3972_p3;
wire   [6:0] select_ln414_50_fu_3755_p3;
wire   [6:0] select_ln414_114_fu_3979_p3;
wire   [6:0] select_ln414_52_fu_3762_p3;
wire   [6:0] select_ln414_116_fu_3986_p3;
wire   [6:0] select_ln414_54_fu_3769_p3;
wire   [6:0] select_ln414_118_fu_3993_p3;
wire   [6:0] select_ln414_56_fu_3776_p3;
wire   [6:0] select_ln414_120_fu_4000_p3;
wire   [6:0] select_ln414_58_fu_3783_p3;
wire   [6:0] select_ln414_122_fu_4007_p3;
wire   [6:0] select_ln414_60_fu_3790_p3;
wire   [6:0] select_ln414_124_fu_4014_p3;
wire   [6:0] select_ln414_62_fu_3797_p3;
wire   [6:0] select_ln414_126_fu_4021_p3;
wire   [6:0] select_ln432_fu_4028_p3;
wire   [6:0] select_ln432_48_fu_4140_p3;
wire   [6:0] select_ln432_3_fu_4035_p3;
wire   [6:0] select_ln432_51_fu_4147_p3;
wire   [6:0] select_ln432_6_fu_4042_p3;
wire   [6:0] select_ln432_54_fu_4154_p3;
wire   [6:0] select_ln432_9_fu_4049_p3;
wire   [6:0] select_ln432_57_fu_4161_p3;
wire   [6:0] select_ln432_12_fu_4056_p3;
wire   [6:0] select_ln432_60_fu_4168_p3;
wire   [6:0] select_ln432_15_fu_4063_p3;
wire   [6:0] select_ln432_63_fu_4175_p3;
wire   [6:0] select_ln432_18_fu_4070_p3;
wire   [6:0] select_ln432_66_fu_4182_p3;
wire   [6:0] select_ln432_21_fu_4077_p3;
wire   [6:0] select_ln432_69_fu_4189_p3;
wire   [6:0] select_ln432_24_fu_4084_p3;
wire   [6:0] select_ln432_72_fu_4196_p3;
wire   [6:0] select_ln432_27_fu_4091_p3;
wire   [6:0] select_ln432_75_fu_4203_p3;
wire   [6:0] select_ln432_30_fu_4098_p3;
wire   [6:0] select_ln432_78_fu_4210_p3;
wire   [6:0] select_ln432_33_fu_4105_p3;
wire   [6:0] select_ln432_81_fu_4217_p3;
wire   [6:0] select_ln432_36_fu_4112_p3;
wire   [6:0] select_ln432_84_fu_4224_p3;
wire   [6:0] select_ln432_39_fu_4119_p3;
wire   [6:0] select_ln432_87_fu_4231_p3;
wire   [6:0] select_ln432_42_fu_4126_p3;
wire   [6:0] select_ln432_90_fu_4238_p3;
wire   [6:0] select_ln432_45_fu_4133_p3;
wire   [6:0] select_ln432_93_fu_4245_p3;
wire   [6:0] select_ln450_fu_4252_p3;
wire   [6:0] select_ln450_24_fu_4348_p3;
wire   [6:0] select_ln450_1_fu_4259_p3;
wire   [6:0] select_ln450_3_fu_4264_p3;
wire   [6:0] select_ln450_27_fu_4355_p3;
wire   [6:0] select_ln450_4_fu_4271_p3;
wire   [6:0] select_ln450_6_fu_4276_p3;
wire   [6:0] select_ln450_30_fu_4362_p3;
wire   [6:0] select_ln450_7_fu_4283_p3;
wire   [6:0] select_ln450_9_fu_4288_p3;
wire   [6:0] select_ln450_33_fu_4369_p3;
wire   [6:0] select_ln450_10_fu_4295_p3;
wire   [6:0] select_ln450_12_fu_4300_p3;
wire   [6:0] select_ln450_36_fu_4376_p3;
wire   [6:0] select_ln450_13_fu_4307_p3;
wire   [6:0] select_ln450_15_fu_4312_p3;
wire   [6:0] select_ln450_39_fu_4383_p3;
wire   [6:0] select_ln450_16_fu_4319_p3;
wire   [6:0] select_ln450_18_fu_4324_p3;
wire   [6:0] select_ln450_42_fu_4390_p3;
wire   [6:0] select_ln450_19_fu_4331_p3;
wire   [6:0] select_ln450_21_fu_4336_p3;
wire   [6:0] select_ln450_45_fu_4397_p3;
wire   [6:0] select_ln450_22_fu_4343_p3;
wire   [0:0] icmp_ln895_121_fu_2224_p2;
wire   [6:0] select_ln468_fu_4404_p3;
wire   [6:0] select_ln468_12_fu_4456_p3;
wire   [6:0] select_ln468_1_fu_4411_p3;
wire   [6:0] select_ln468_13_fu_4463_p3;
wire   [0:0] icmp_ln895_122_fu_2228_p2;
wire   [6:0] select_ln468_3_fu_4417_p3;
wire   [6:0] select_ln468_15_fu_4469_p3;
wire   [6:0] select_ln468_4_fu_4424_p3;
wire   [6:0] select_ln468_16_fu_4476_p3;
wire   [0:0] icmp_ln895_123_fu_2232_p2;
wire   [6:0] select_ln468_6_fu_4430_p3;
wire   [6:0] select_ln468_18_fu_4482_p3;
wire   [6:0] select_ln468_7_fu_4437_p3;
wire   [6:0] select_ln468_19_fu_4489_p3;
wire   [0:0] icmp_ln895_124_fu_2236_p2;
wire   [6:0] select_ln468_9_fu_4443_p3;
wire   [6:0] select_ln468_21_fu_4495_p3;
wire   [6:0] select_ln468_10_fu_4450_p3;
wire   [6:0] select_ln468_22_fu_4502_p3;
wire   [6:0] select_ln486_1_fu_4516_p3;
wire   [6:0] select_ln486_7_fu_4562_p3;
wire   [0:0] icmp_ln895_126_fu_2244_p2;
wire   [6:0] select_ln486_3_fu_4531_p3;
wire   [6:0] select_ln486_9_fu_4577_p3;
wire   [6:0] select_ln486_4_fu_4539_p3;
wire   [6:0] select_ln486_10_fu_4585_p3;
wire   [6:0] res_max_bin_theta_t_s_fu_4650_p3;
wire   [6:0] res_max_bin_r_t_V_2_fu_4662_p3;
wire   [8:0] t0_V_fu_4674_p3;
wire   [8:0] p_Val2_2_fu_4682_p2;
wire   [11:0] zext_ln703_fu_4688_p1;
wire   [11:0] add_ln703_fu_4697_p2;
wire  signed [12:0] sext_ln703_fu_4703_p1;
wire   [13:0] zext_ln703_2_fu_4707_p1;
wire   [11:0] shl_ln_fu_4717_p3;
wire   [11:0] p_Val2_4_fu_4725_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 hls_LT_theta_global_V_1_data_reg = 14'd0;
#0 hls_LT_theta_global_V_1_vld_reg = 1'b0;
#0 hls_LT_r_global_V_1_data_reg = 22'd0;
#0 hls_LT_r_global_V_1_vld_reg = 1'b0;
#0 hls_LT_theta_V_1_data_reg = 14'd0;
#0 hls_LT_theta_V_1_vld_reg = 1'b0;
#0 hls_LT_r_V_1_data_reg = 22'd0;
#0 hls_LT_r_V_1_vld_reg = 1'b0;
#0 res_max_bin_count_V_1_data_reg = 4'd0;
#0 res_max_bin_count_V_1_vld_reg = 1'b0;
#0 res_max_bin_theta_V_1_data_reg = 7'd0;
#0 res_max_bin_theta_V_1_vld_reg = 1'b0;
#0 res_max_bin_r_V_1_data_reg = 7'd0;
#0 res_max_bin_r_V_1_vld_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_r_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_r_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b1;
    end else if (((hls_LT_theta_global_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_count_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1))) begin
        res_max_bin_count_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_r_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1))) begin
        res_max_bin_r_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b1;
    end else if (((res_max_bin_theta_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1))) begin
        res_max_bin_theta_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_V_1_vld_reg == 1'b0) & (hls_LT_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_V_1_vld_in == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_data_reg[11 : 4] <= zext_ln708_fu_4731_p1[11 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_r_global_V_1_vld_reg == 1'b0) & (hls_LT_r_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_in == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_data_reg <= add_ln703_2_fu_4736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_V_1_vld_reg == 1'b0) & (hls_LT_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_in == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_data_reg[8 : 1] <= zext_ln703_1_fu_4692_p1[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (hls_LT_theta_global_V_1_vld_reg == 1'b0) & (hls_LT_theta_global_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_in == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_data_reg <= add_ln703_1_fu_4711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln895_100_reg_5330 <= icmp_ln895_100_fu_2140_p2;
        icmp_ln895_101_reg_5336 <= icmp_ln895_101_fu_2144_p2;
        icmp_ln895_102_reg_5342 <= icmp_ln895_102_fu_2148_p2;
        icmp_ln895_103_reg_5348 <= icmp_ln895_103_fu_2152_p2;
        icmp_ln895_104_reg_5354 <= icmp_ln895_104_fu_2156_p2;
        icmp_ln895_105_reg_5360 <= icmp_ln895_105_fu_2160_p2;
        icmp_ln895_106_reg_5370 <= icmp_ln895_106_fu_2164_p2;
        icmp_ln895_107_reg_5380 <= icmp_ln895_107_fu_2168_p2;
        icmp_ln895_108_reg_5390 <= icmp_ln895_108_fu_2172_p2;
        icmp_ln895_109_reg_5400 <= icmp_ln895_109_fu_2176_p2;
        icmp_ln895_10_reg_4802 <= icmp_ln895_10_fu_1612_p2;
        icmp_ln895_110_reg_5410 <= icmp_ln895_110_fu_2180_p2;
        icmp_ln895_111_reg_5420 <= icmp_ln895_111_fu_2184_p2;
        icmp_ln895_112_reg_5430 <= icmp_ln895_112_fu_2188_p2;
        icmp_ln895_113_reg_5440 <= icmp_ln895_113_fu_2192_p2;
        icmp_ln895_114_reg_5452 <= icmp_ln895_114_fu_2196_p2;
        icmp_ln895_115_reg_5464 <= icmp_ln895_115_fu_2200_p2;
        icmp_ln895_116_reg_5476 <= icmp_ln895_116_fu_2204_p2;
        icmp_ln895_117_reg_5488 <= icmp_ln895_117_fu_2208_p2;
        icmp_ln895_118_reg_5500 <= icmp_ln895_118_fu_2212_p2;
        icmp_ln895_119_reg_5512 <= icmp_ln895_119_fu_2216_p2;
        icmp_ln895_11_reg_4807 <= icmp_ln895_11_fu_1618_p2;
        icmp_ln895_120_reg_5524 <= icmp_ln895_120_fu_2220_p2;
        icmp_ln895_125_reg_5546 <= icmp_ln895_125_fu_2240_p2;
        icmp_ln895_12_reg_4812 <= icmp_ln895_12_fu_1624_p2;
        icmp_ln895_13_reg_4817 <= icmp_ln895_13_fu_1630_p2;
        icmp_ln895_14_reg_4822 <= icmp_ln895_14_fu_1636_p2;
        icmp_ln895_15_reg_4827 <= icmp_ln895_15_fu_1642_p2;
        icmp_ln895_16_reg_4832 <= icmp_ln895_16_fu_1648_p2;
        icmp_ln895_17_reg_4837 <= icmp_ln895_17_fu_1654_p2;
        icmp_ln895_18_reg_4842 <= icmp_ln895_18_fu_1660_p2;
        icmp_ln895_19_reg_4847 <= icmp_ln895_19_fu_1666_p2;
        icmp_ln895_1_reg_4757 <= icmp_ln895_1_fu_1558_p2;
        icmp_ln895_20_reg_4852 <= icmp_ln895_20_fu_1672_p2;
        icmp_ln895_21_reg_4857 <= icmp_ln895_21_fu_1678_p2;
        icmp_ln895_22_reg_4862 <= icmp_ln895_22_fu_1684_p2;
        icmp_ln895_23_reg_4867 <= icmp_ln895_23_fu_1690_p2;
        icmp_ln895_24_reg_4872 <= icmp_ln895_24_fu_1696_p2;
        icmp_ln895_25_reg_4877 <= icmp_ln895_25_fu_1702_p2;
        icmp_ln895_26_reg_4882 <= icmp_ln895_26_fu_1708_p2;
        icmp_ln895_27_reg_4887 <= icmp_ln895_27_fu_1714_p2;
        icmp_ln895_28_reg_4892 <= icmp_ln895_28_fu_1720_p2;
        icmp_ln895_29_reg_4897 <= icmp_ln895_29_fu_1726_p2;
        icmp_ln895_2_reg_4762 <= icmp_ln895_2_fu_1564_p2;
        icmp_ln895_30_reg_4902 <= icmp_ln895_30_fu_1732_p2;
        icmp_ln895_31_reg_4907 <= icmp_ln895_31_fu_1738_p2;
        icmp_ln895_32_reg_4912 <= icmp_ln895_32_fu_1744_p2;
        icmp_ln895_33_reg_4917 <= icmp_ln895_33_fu_1750_p2;
        icmp_ln895_34_reg_4922 <= icmp_ln895_34_fu_1756_p2;
        icmp_ln895_35_reg_4927 <= icmp_ln895_35_fu_1762_p2;
        icmp_ln895_36_reg_4932 <= icmp_ln895_36_fu_1768_p2;
        icmp_ln895_37_reg_4937 <= icmp_ln895_37_fu_1774_p2;
        icmp_ln895_38_reg_4942 <= icmp_ln895_38_fu_1780_p2;
        icmp_ln895_39_reg_4947 <= icmp_ln895_39_fu_1786_p2;
        icmp_ln895_3_reg_4767 <= icmp_ln895_3_fu_1570_p2;
        icmp_ln895_40_reg_4952 <= icmp_ln895_40_fu_1792_p2;
        icmp_ln895_41_reg_4957 <= icmp_ln895_41_fu_1798_p2;
        icmp_ln895_42_reg_4962 <= icmp_ln895_42_fu_1804_p2;
        icmp_ln895_43_reg_4967 <= icmp_ln895_43_fu_1810_p2;
        icmp_ln895_44_reg_4972 <= icmp_ln895_44_fu_1816_p2;
        icmp_ln895_45_reg_4977 <= icmp_ln895_45_fu_1822_p2;
        icmp_ln895_46_reg_4982 <= icmp_ln895_46_fu_1828_p2;
        icmp_ln895_47_reg_4987 <= icmp_ln895_47_fu_1834_p2;
        icmp_ln895_48_reg_4992 <= icmp_ln895_48_fu_1840_p2;
        icmp_ln895_49_reg_4997 <= icmp_ln895_49_fu_1846_p2;
        icmp_ln895_4_reg_4772 <= icmp_ln895_4_fu_1576_p2;
        icmp_ln895_50_reg_5002 <= icmp_ln895_50_fu_1852_p2;
        icmp_ln895_51_reg_5007 <= icmp_ln895_51_fu_1858_p2;
        icmp_ln895_52_reg_5012 <= icmp_ln895_52_fu_1864_p2;
        icmp_ln895_53_reg_5017 <= icmp_ln895_53_fu_1870_p2;
        icmp_ln895_54_reg_5022 <= icmp_ln895_54_fu_1876_p2;
        icmp_ln895_55_reg_5027 <= icmp_ln895_55_fu_1882_p2;
        icmp_ln895_56_reg_5032 <= icmp_ln895_56_fu_1888_p2;
        icmp_ln895_57_reg_5037 <= icmp_ln895_57_fu_1894_p2;
        icmp_ln895_58_reg_5042 <= icmp_ln895_58_fu_1900_p2;
        icmp_ln895_59_reg_5047 <= icmp_ln895_59_fu_1906_p2;
        icmp_ln895_5_reg_5566 <= icmp_ln895_5_fu_2248_p2;
        icmp_ln895_60_reg_5052 <= icmp_ln895_60_fu_1912_p2;
        icmp_ln895_61_reg_5057 <= icmp_ln895_61_fu_1918_p2;
        icmp_ln895_62_reg_5062 <= icmp_ln895_62_fu_1924_p2;
        icmp_ln895_63_reg_5067 <= icmp_ln895_63_fu_1930_p2;
        icmp_ln895_64_reg_4782 <= icmp_ln895_64_fu_1588_p2;
        icmp_ln895_65_reg_5072 <= icmp_ln895_65_fu_1936_p2;
        icmp_ln895_66_reg_5082 <= icmp_ln895_66_fu_1942_p2;
        icmp_ln895_67_reg_5092 <= icmp_ln895_67_fu_1948_p2;
        icmp_ln895_68_reg_5102 <= icmp_ln895_68_fu_1954_p2;
        icmp_ln895_69_reg_5112 <= icmp_ln895_69_fu_1960_p2;
        icmp_ln895_6_reg_4777 <= icmp_ln895_6_fu_1582_p2;
        icmp_ln895_70_reg_5122 <= icmp_ln895_70_fu_1966_p2;
        icmp_ln895_71_reg_5132 <= icmp_ln895_71_fu_1972_p2;
        icmp_ln895_72_reg_5142 <= icmp_ln895_72_fu_1978_p2;
        icmp_ln895_73_reg_5152 <= icmp_ln895_73_fu_1984_p2;
        icmp_ln895_74_reg_5157 <= icmp_ln895_74_fu_1990_p2;
        icmp_ln895_75_reg_5162 <= icmp_ln895_75_fu_1996_p2;
        icmp_ln895_76_reg_5167 <= icmp_ln895_76_fu_2002_p2;
        icmp_ln895_77_reg_5172 <= icmp_ln895_77_fu_2008_p2;
        icmp_ln895_78_reg_5177 <= icmp_ln895_78_fu_2014_p2;
        icmp_ln895_79_reg_5182 <= icmp_ln895_79_fu_2020_p2;
        icmp_ln895_7_reg_4787 <= icmp_ln895_7_fu_1594_p2;
        icmp_ln895_80_reg_5187 <= icmp_ln895_80_fu_2026_p2;
        icmp_ln895_81_reg_5192 <= icmp_ln895_81_fu_2032_p2;
        icmp_ln895_82_reg_5202 <= icmp_ln895_82_fu_2038_p2;
        icmp_ln895_83_reg_5212 <= icmp_ln895_83_fu_2044_p2;
        icmp_ln895_84_reg_5222 <= icmp_ln895_84_fu_2050_p2;
        icmp_ln895_85_reg_5232 <= icmp_ln895_85_fu_2056_p2;
        icmp_ln895_86_reg_5242 <= icmp_ln895_86_fu_2062_p2;
        icmp_ln895_87_reg_5252 <= icmp_ln895_87_fu_2068_p2;
        icmp_ln895_88_reg_5262 <= icmp_ln895_88_fu_2074_p2;
        icmp_ln895_89_reg_5272 <= icmp_ln895_89_fu_2080_p2;
        icmp_ln895_8_reg_4792 <= icmp_ln895_8_fu_1600_p2;
        icmp_ln895_90_reg_5277 <= icmp_ln895_90_fu_2086_p2;
        icmp_ln895_91_reg_5282 <= icmp_ln895_91_fu_2092_p2;
        icmp_ln895_92_reg_5287 <= icmp_ln895_92_fu_2098_p2;
        icmp_ln895_93_reg_5292 <= icmp_ln895_93_fu_2104_p2;
        icmp_ln895_94_reg_5297 <= icmp_ln895_94_fu_2110_p2;
        icmp_ln895_95_reg_5302 <= icmp_ln895_95_fu_2116_p2;
        icmp_ln895_96_reg_5307 <= icmp_ln895_96_fu_2122_p2;
        icmp_ln895_97_reg_5312 <= icmp_ln895_97_fu_2128_p2;
        icmp_ln895_98_reg_5318 <= icmp_ln895_98_fu_2132_p2;
        icmp_ln895_99_reg_5324 <= icmp_ln895_99_fu_2136_p2;
        icmp_ln895_9_reg_4797 <= icmp_ln895_9_fu_1606_p2;
        icmp_ln895_reg_4752 <= icmp_ln895_fu_1552_p2;
        res_max_bin_count_t_2_reg_5572 <= res_max_bin_count_t_2_fu_4642_p3;
        res_max_bin_r_t_V_1_reg_5561 <= res_max_bin_r_t_V_1_fu_4625_p3;
        res_max_bin_r_t_V_reg_5551 <= res_max_bin_r_t_V_fu_4600_p3;
        res_max_bin_theta_t_1_reg_5556[6 : 1] <= res_max_bin_theta_t_1_fu_4617_p3[6 : 1];
        roi_seed_r_V_read_reg_4742 <= roi_seed_r_V;
        roi_seed_r_V_read_reg_4742_pp0_iter1_reg <= roi_seed_r_V_read_reg_4742;
        select_ln432_10_reg_5107 <= select_ln432_10_fu_2815_p3;
        select_ln432_13_reg_5117 <= select_ln432_13_fu_2832_p3;
        select_ln432_16_reg_5127 <= select_ln432_16_fu_2849_p3;
        select_ln432_19_reg_5137 <= select_ln432_19_fu_2866_p3;
        select_ln432_1_reg_5077 <= select_ln432_1_fu_2764_p3;
        select_ln432_22_reg_5147 <= select_ln432_22_fu_2883_p3;
        select_ln432_49_reg_5197 <= select_ln432_49_fu_3036_p3;
        select_ln432_4_reg_5087 <= select_ln432_4_fu_2781_p3;
        select_ln432_52_reg_5207 <= select_ln432_52_fu_3053_p3;
        select_ln432_55_reg_5217 <= select_ln432_55_fu_3070_p3;
        select_ln432_58_reg_5227 <= select_ln432_58_fu_3087_p3;
        select_ln432_61_reg_5237 <= select_ln432_61_fu_3104_p3;
        select_ln432_64_reg_5247 <= select_ln432_64_fu_3121_p3;
        select_ln432_67_reg_5257 <= select_ln432_67_fu_3138_p3;
        select_ln432_70_reg_5267 <= select_ln432_70_fu_3155_p3;
        select_ln432_7_reg_5097 <= select_ln432_7_fu_2798_p3;
        select_ln450_25_reg_5365 <= select_ln450_25_fu_3380_p3;
        select_ln450_28_reg_5375 <= select_ln450_28_fu_3397_p3;
        select_ln450_31_reg_5385 <= select_ln450_31_fu_3414_p3;
        select_ln450_34_reg_5395 <= select_ln450_34_fu_3431_p3;
        select_ln450_37_reg_5405 <= select_ln450_37_fu_3448_p3;
        select_ln450_40_reg_5415 <= select_ln450_40_fu_3465_p3;
        select_ln450_43_reg_5425 <= select_ln450_43_fu_3482_p3;
        select_ln450_46_reg_5435 <= select_ln450_46_fu_3499_p3;
        select_ln468_11_reg_5482 <= select_ln468_11_fu_3540_p3;
        select_ln468_14_reg_5494 <= select_ln468_14_fu_3548_p3;
        select_ln468_17_reg_5506 <= select_ln468_17_fu_3556_p3;
        select_ln468_20_reg_5518 <= select_ln468_20_fu_3564_p3;
        select_ln468_23_reg_5530 <= select_ln468_23_fu_3572_p3;
        select_ln468_2_reg_5446 <= select_ln468_2_fu_3516_p3;
        select_ln468_5_reg_5458 <= select_ln468_5_fu_3524_p3;
        select_ln468_8_reg_5470 <= select_ln468_8_fu_3532_p3;
        select_ln486_6_reg_5541[6 : 2] <= select_ln486_6_fu_4554_p3[6 : 2];
        select_ln486_reg_5536[6 : 2] <= select_ln486_fu_4508_p3[6 : 2];
        slcvec_angle_polar_o_reg_4747 <= slcvec_angle_polar_offset_mrad_V;
        slcvec_angle_polar_o_reg_4747_pp0_iter1_reg <= slcvec_angle_polar_o_reg_4747;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_count_V_1_vld_reg == 1'b0) & (res_max_bin_count_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_in == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_data_reg <= res_max_bin_count_t_2_reg_5572;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_r_V_1_vld_reg == 1'b0) & (res_max_bin_r_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_in == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_data_reg <= tmp_V_fu_4667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (res_max_bin_theta_V_1_vld_reg == 1'b0) & (res_max_bin_theta_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_in == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_data_reg <= res_max_bin_theta_t_2_fu_4655_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_r_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_r_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_r_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_r_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_r_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((hls_LT_theta_global_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (hls_LT_theta_global_V_1_vld_reg == 1'b1)))) begin
        hls_LT_theta_global_V_1_ack_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        hls_LT_theta_global_V_1_vld_in = 1'b1;
    end else begin
        hls_LT_theta_global_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_count_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_count_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_count_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_count_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_count_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_r_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_r_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_r_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_r_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_r_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((res_max_bin_theta_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (res_max_bin_theta_V_1_vld_reg == 1'b1)))) begin
        res_max_bin_theta_V_1_ack_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        res_max_bin_theta_V_1_vld_in = 1'b1;
    end else begin
        res_max_bin_theta_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_1_fu_4711_p2 = (zext_ln703_2_fu_4707_p1 + slcvec_angle_polar_o_reg_4747_pp0_iter1_reg);

assign add_ln703_2_fu_4736_p2 = (zext_ln708_fu_4731_p1 + roi_seed_r_V_read_reg_4742_pp0_iter1_reg);

assign add_ln703_fu_4697_p2 = ($signed(zext_ln703_fu_4688_p1) + $signed(12'd2189));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_start == 1'b0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((res_max_bin_r_V_1_ack_in == 1'b0) | (res_max_bin_theta_V_1_ack_in == 1'b0) | (res_max_bin_count_V_1_ack_in == 1'b0) | (hls_LT_r_V_1_ack_in == 1'b0) | (hls_LT_theta_V_1_ack_in == 1'b0) | (hls_LT_r_global_V_1_ack_in == 1'b0) | (hls_LT_theta_global_V_1_ack_in == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign hls_LT_r_V = hls_LT_r_V_1_data_reg;

assign hls_LT_r_V_ap_vld = hls_LT_r_V_1_vld_reg;

assign hls_LT_r_global_V = hls_LT_r_global_V_1_data_reg;

assign hls_LT_r_global_V_ap_vld = hls_LT_r_global_V_1_vld_reg;

assign hls_LT_theta_V = hls_LT_theta_V_1_data_reg;

assign hls_LT_theta_V_ap_vld = hls_LT_theta_V_1_vld_reg;

assign hls_LT_theta_global_V = hls_LT_theta_global_V_1_data_reg;

assign hls_LT_theta_global_V_ap_vld = hls_LT_theta_global_V_1_vld_reg;

assign icmp_ln895_100_fu_2140_p2 = ((select_ln432_11_fu_2823_p3 > select_ln432_59_fu_3095_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_101_fu_2144_p2 = ((select_ln432_14_fu_2840_p3 > select_ln432_62_fu_3112_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_102_fu_2148_p2 = ((select_ln432_17_fu_2857_p3 > select_ln432_65_fu_3129_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_103_fu_2152_p2 = ((select_ln432_20_fu_2874_p3 > select_ln432_68_fu_3146_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_104_fu_2156_p2 = ((select_ln432_23_fu_2891_p3 > select_ln432_71_fu_3163_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_105_fu_2160_p2 = ((select_ln432_26_fu_2908_p3 > select_ln432_74_fu_3180_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_106_fu_2164_p2 = ((select_ln432_29_fu_2925_p3 > select_ln432_77_fu_3197_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_107_fu_2168_p2 = ((select_ln432_32_fu_2942_p3 > select_ln432_80_fu_3214_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_108_fu_2172_p2 = ((select_ln432_35_fu_2959_p3 > select_ln432_83_fu_3231_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_109_fu_2176_p2 = ((select_ln432_38_fu_2976_p3 > select_ln432_86_fu_3248_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_10_fu_1612_p2 = ((max_bin_count_10_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_110_fu_2180_p2 = ((select_ln432_41_fu_2993_p3 > select_ln432_89_fu_3265_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_111_fu_2184_p2 = ((select_ln432_44_fu_3010_p3 > select_ln432_92_fu_3282_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_112_fu_2188_p2 = ((select_ln432_47_fu_3027_p3 > select_ln432_95_fu_3299_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_113_fu_2192_p2 = ((select_ln450_2_fu_3308_p3 > select_ln450_26_fu_3388_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_114_fu_2196_p2 = ((select_ln450_5_fu_3317_p3 > select_ln450_29_fu_3405_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_115_fu_2200_p2 = ((select_ln450_8_fu_3326_p3 > select_ln450_32_fu_3422_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_116_fu_2204_p2 = ((select_ln450_11_fu_3335_p3 > select_ln450_35_fu_3439_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_117_fu_2208_p2 = ((select_ln450_14_fu_3344_p3 > select_ln450_38_fu_3456_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_118_fu_2212_p2 = ((select_ln450_17_fu_3353_p3 > select_ln450_41_fu_3473_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_119_fu_2216_p2 = ((select_ln450_20_fu_3362_p3 > select_ln450_44_fu_3490_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_11_fu_1618_p2 = ((max_bin_count_11_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_120_fu_2220_p2 = ((select_ln450_23_fu_3371_p3 > select_ln450_47_fu_3507_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_121_fu_2224_p2 = ((select_ln468_2_reg_5446 > select_ln468_14_reg_5494) ? 1'b1 : 1'b0);

assign icmp_ln895_122_fu_2228_p2 = ((select_ln468_5_reg_5458 > select_ln468_17_reg_5506) ? 1'b1 : 1'b0);

assign icmp_ln895_123_fu_2232_p2 = ((select_ln468_8_reg_5470 > select_ln468_20_reg_5518) ? 1'b1 : 1'b0);

assign icmp_ln895_124_fu_2236_p2 = ((select_ln468_11_reg_5482 > select_ln468_23_reg_5530) ? 1'b1 : 1'b0);

assign icmp_ln895_125_fu_2240_p2 = ((select_ln486_2_fu_4524_p3 > select_ln486_8_fu_4570_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_126_fu_2244_p2 = ((select_ln486_5_fu_4547_p3 > select_ln486_11_fu_4593_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_12_fu_1624_p2 = ((max_bin_count_12_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_13_fu_1630_p2 = ((max_bin_count_13_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_14_fu_1636_p2 = ((max_bin_count_14_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_15_fu_1642_p2 = ((max_bin_count_15_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_16_fu_1648_p2 = ((max_bin_count_16_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_17_fu_1654_p2 = ((max_bin_count_17_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_18_fu_1660_p2 = ((max_bin_count_18_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_19_fu_1666_p2 = ((max_bin_count_19_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_1_fu_1558_p2 = ((max_bin_count_1_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_20_fu_1672_p2 = ((max_bin_count_20_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_21_fu_1678_p2 = ((max_bin_count_21_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_22_fu_1684_p2 = ((max_bin_count_22_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_23_fu_1690_p2 = ((max_bin_count_23_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_24_fu_1696_p2 = ((max_bin_count_24_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_25_fu_1702_p2 = ((max_bin_count_25_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_26_fu_1708_p2 = ((max_bin_count_26_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_27_fu_1714_p2 = ((max_bin_count_27_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_28_fu_1720_p2 = ((max_bin_count_28_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_29_fu_1726_p2 = ((max_bin_count_29_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_2_fu_1564_p2 = ((max_bin_count_2_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_30_fu_1732_p2 = ((max_bin_count_30_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_31_fu_1738_p2 = ((max_bin_count_31_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_32_fu_1744_p2 = ((max_bin_count_32_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_33_fu_1750_p2 = ((max_bin_count_33_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_34_fu_1756_p2 = ((max_bin_count_34_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_35_fu_1762_p2 = ((max_bin_count_35_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_36_fu_1768_p2 = ((max_bin_count_36_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_37_fu_1774_p2 = ((max_bin_count_37_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_38_fu_1780_p2 = ((max_bin_count_38_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_39_fu_1786_p2 = ((max_bin_count_39_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_3_fu_1570_p2 = ((max_bin_count_3_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_40_fu_1792_p2 = ((max_bin_count_40_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_41_fu_1798_p2 = ((max_bin_count_41_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_42_fu_1804_p2 = ((max_bin_count_42_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_43_fu_1810_p2 = ((max_bin_count_43_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_44_fu_1816_p2 = ((max_bin_count_44_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_45_fu_1822_p2 = ((max_bin_count_45_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_46_fu_1828_p2 = ((max_bin_count_46_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_47_fu_1834_p2 = ((max_bin_count_47_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_48_fu_1840_p2 = ((max_bin_count_48_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_49_fu_1846_p2 = ((max_bin_count_49_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_4_fu_1576_p2 = ((max_bin_count_4_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_50_fu_1852_p2 = ((max_bin_count_50_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_51_fu_1858_p2 = ((max_bin_count_51_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_52_fu_1864_p2 = ((max_bin_count_52_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_53_fu_1870_p2 = ((max_bin_count_53_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_54_fu_1876_p2 = ((max_bin_count_54_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_55_fu_1882_p2 = ((max_bin_count_55_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_56_fu_1888_p2 = ((max_bin_count_56_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_57_fu_1894_p2 = ((max_bin_count_57_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_58_fu_1900_p2 = ((max_bin_count_58_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_59_fu_1906_p2 = ((max_bin_count_59_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_5_fu_2248_p2 = ((res_max_bin_count_t_s_fu_4608_p3 > res_max_bin_count_t_1_fu_4633_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_60_fu_1912_p2 = ((max_bin_count_60_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_61_fu_1918_p2 = ((max_bin_count_61_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_62_fu_1924_p2 = ((max_bin_count_62_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_63_fu_1930_p2 = ((max_bin_count_63_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_64_fu_1588_p2 = ((max_bin_count_6_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_65_fu_1936_p2 = ((max_bin_count_0_V > max_bin_count_32_V) ? 1'b1 : 1'b0);

assign icmp_ln895_66_fu_1942_p2 = ((max_bin_count_1_V > max_bin_count_33_V) ? 1'b1 : 1'b0);

assign icmp_ln895_67_fu_1948_p2 = ((max_bin_count_2_V > max_bin_count_34_V) ? 1'b1 : 1'b0);

assign icmp_ln895_68_fu_1954_p2 = ((max_bin_count_3_V > max_bin_count_35_V) ? 1'b1 : 1'b0);

assign icmp_ln895_69_fu_1960_p2 = ((max_bin_count_4_V > max_bin_count_36_V) ? 1'b1 : 1'b0);

assign icmp_ln895_6_fu_1582_p2 = ((max_bin_count_5_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_70_fu_1966_p2 = ((max_bin_count_5_V > max_bin_count_37_V) ? 1'b1 : 1'b0);

assign icmp_ln895_71_fu_1972_p2 = ((max_bin_count_6_V > max_bin_count_38_V) ? 1'b1 : 1'b0);

assign icmp_ln895_72_fu_1978_p2 = ((max_bin_count_7_V > max_bin_count_39_V) ? 1'b1 : 1'b0);

assign icmp_ln895_73_fu_1984_p2 = ((max_bin_count_8_V > max_bin_count_40_V) ? 1'b1 : 1'b0);

assign icmp_ln895_74_fu_1990_p2 = ((max_bin_count_9_V > max_bin_count_41_V) ? 1'b1 : 1'b0);

assign icmp_ln895_75_fu_1996_p2 = ((max_bin_count_10_V > max_bin_count_42_V) ? 1'b1 : 1'b0);

assign icmp_ln895_76_fu_2002_p2 = ((max_bin_count_11_V > max_bin_count_43_V) ? 1'b1 : 1'b0);

assign icmp_ln895_77_fu_2008_p2 = ((max_bin_count_12_V > max_bin_count_44_V) ? 1'b1 : 1'b0);

assign icmp_ln895_78_fu_2014_p2 = ((max_bin_count_13_V > max_bin_count_45_V) ? 1'b1 : 1'b0);

assign icmp_ln895_79_fu_2020_p2 = ((max_bin_count_14_V > max_bin_count_46_V) ? 1'b1 : 1'b0);

assign icmp_ln895_7_fu_1594_p2 = ((max_bin_count_7_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_80_fu_2026_p2 = ((max_bin_count_15_V > max_bin_count_47_V) ? 1'b1 : 1'b0);

assign icmp_ln895_81_fu_2032_p2 = ((max_bin_count_16_V > max_bin_count_48_V) ? 1'b1 : 1'b0);

assign icmp_ln895_82_fu_2038_p2 = ((max_bin_count_17_V > max_bin_count_49_V) ? 1'b1 : 1'b0);

assign icmp_ln895_83_fu_2044_p2 = ((max_bin_count_18_V > max_bin_count_50_V) ? 1'b1 : 1'b0);

assign icmp_ln895_84_fu_2050_p2 = ((max_bin_count_19_V > max_bin_count_51_V) ? 1'b1 : 1'b0);

assign icmp_ln895_85_fu_2056_p2 = ((max_bin_count_20_V > max_bin_count_52_V) ? 1'b1 : 1'b0);

assign icmp_ln895_86_fu_2062_p2 = ((max_bin_count_21_V > max_bin_count_53_V) ? 1'b1 : 1'b0);

assign icmp_ln895_87_fu_2068_p2 = ((max_bin_count_22_V > max_bin_count_54_V) ? 1'b1 : 1'b0);

assign icmp_ln895_88_fu_2074_p2 = ((max_bin_count_23_V > max_bin_count_55_V) ? 1'b1 : 1'b0);

assign icmp_ln895_89_fu_2080_p2 = ((max_bin_count_24_V > max_bin_count_56_V) ? 1'b1 : 1'b0);

assign icmp_ln895_8_fu_1600_p2 = ((max_bin_count_8_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_90_fu_2086_p2 = ((max_bin_count_25_V > max_bin_count_57_V) ? 1'b1 : 1'b0);

assign icmp_ln895_91_fu_2092_p2 = ((max_bin_count_26_V > max_bin_count_58_V) ? 1'b1 : 1'b0);

assign icmp_ln895_92_fu_2098_p2 = ((max_bin_count_27_V > max_bin_count_59_V) ? 1'b1 : 1'b0);

assign icmp_ln895_93_fu_2104_p2 = ((max_bin_count_28_V > max_bin_count_60_V) ? 1'b1 : 1'b0);

assign icmp_ln895_94_fu_2110_p2 = ((max_bin_count_29_V > max_bin_count_61_V) ? 1'b1 : 1'b0);

assign icmp_ln895_95_fu_2116_p2 = ((max_bin_count_30_V > max_bin_count_62_V) ? 1'b1 : 1'b0);

assign icmp_ln895_96_fu_2122_p2 = ((max_bin_count_31_V > max_bin_count_63_V) ? 1'b1 : 1'b0);

assign icmp_ln895_97_fu_2128_p2 = ((select_ln432_2_fu_2772_p3 > select_ln432_50_fu_3044_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_98_fu_2132_p2 = ((select_ln432_5_fu_2789_p3 > select_ln432_53_fu_3061_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_99_fu_2136_p2 = ((select_ln432_8_fu_2806_p3 > select_ln432_56_fu_3078_p3) ? 1'b1 : 1'b0);

assign icmp_ln895_9_fu_1606_p2 = ((max_bin_count_9_V == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_1552_p2 = ((max_bin_count_0_V == 4'd0) ? 1'b1 : 1'b0);

assign p_Val2_2_fu_4682_p2 = (t0_V_fu_4674_p3 | 9'd2);

assign p_Val2_4_fu_4725_p2 = (shl_ln_fu_4717_p3 | 12'd16);

assign res_max_bin_count_V = res_max_bin_count_V_1_data_reg;

assign res_max_bin_count_V_ap_vld = res_max_bin_count_V_1_vld_reg;

assign res_max_bin_count_t_1_fu_4633_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln486_5_fu_4547_p3 : select_ln486_11_fu_4593_p3);

assign res_max_bin_count_t_2_fu_4642_p3 = ((icmp_ln895_5_fu_2248_p2[0:0] === 1'b1) ? res_max_bin_count_t_s_fu_4608_p3 : res_max_bin_count_t_1_fu_4633_p3);

assign res_max_bin_count_t_s_fu_4608_p3 = ((icmp_ln895_125_fu_2240_p2[0:0] === 1'b1) ? select_ln486_2_fu_4524_p3 : select_ln486_8_fu_4570_p3);

assign res_max_bin_r_V = res_max_bin_r_V_1_data_reg;

assign res_max_bin_r_V_ap_vld = res_max_bin_r_V_1_vld_reg;

assign res_max_bin_r_t_V_1_fu_4625_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln486_4_fu_4539_p3 : select_ln486_10_fu_4585_p3);

assign res_max_bin_r_t_V_2_fu_4662_p3 = ((icmp_ln895_5_reg_5566[0:0] === 1'b1) ? res_max_bin_r_t_V_reg_5551 : res_max_bin_r_t_V_1_reg_5561);

assign res_max_bin_r_t_V_fu_4600_p3 = ((icmp_ln895_125_fu_2240_p2[0:0] === 1'b1) ? select_ln486_1_fu_4516_p3 : select_ln486_7_fu_4562_p3);

assign res_max_bin_theta_V = res_max_bin_theta_V_1_data_reg;

assign res_max_bin_theta_V_ap_vld = res_max_bin_theta_V_1_vld_reg;

assign res_max_bin_theta_t_1_fu_4617_p3 = ((icmp_ln895_126_fu_2244_p2[0:0] === 1'b1) ? select_ln486_3_fu_4531_p3 : select_ln486_9_fu_4577_p3);

assign res_max_bin_theta_t_2_fu_4655_p3 = ((icmp_ln895_5_reg_5566[0:0] === 1'b1) ? res_max_bin_theta_t_s_fu_4650_p3 : res_max_bin_theta_t_1_reg_5556);

assign res_max_bin_theta_t_s_fu_4650_p3 = ((icmp_ln895_125_reg_5546[0:0] === 1'b1) ? select_ln486_reg_5536 : select_ln486_6_reg_5541);

assign select_ln414_100_fu_3930_p3 = ((icmp_ln895_50_reg_5002[0:0] === 1'b1) ? 7'd114 : 7'd50);

assign select_ln414_101_fu_2652_p3 = ((icmp_ln895_50_fu_1852_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_50_V);

assign select_ln414_102_fu_3937_p3 = ((icmp_ln895_51_reg_5007[0:0] === 1'b1) ? 7'd115 : 7'd51);

assign select_ln414_103_fu_2660_p3 = ((icmp_ln895_51_fu_1858_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_51_V);

assign select_ln414_104_fu_3944_p3 = ((icmp_ln895_52_reg_5012[0:0] === 1'b1) ? 7'd116 : 7'd52);

assign select_ln414_105_fu_2668_p3 = ((icmp_ln895_52_fu_1864_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_52_V);

assign select_ln414_106_fu_3951_p3 = ((icmp_ln895_53_reg_5017[0:0] === 1'b1) ? 7'd117 : 7'd53);

assign select_ln414_107_fu_2676_p3 = ((icmp_ln895_53_fu_1870_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_53_V);

assign select_ln414_108_fu_3958_p3 = ((icmp_ln895_54_reg_5022[0:0] === 1'b1) ? 7'd118 : 7'd54);

assign select_ln414_109_fu_2684_p3 = ((icmp_ln895_54_fu_1876_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_54_V);

assign select_ln414_10_fu_3615_p3 = ((icmp_ln895_6_reg_4777[0:0] === 1'b1) ? 7'd69 : 7'd5);

assign select_ln414_110_fu_3965_p3 = ((icmp_ln895_55_reg_5027[0:0] === 1'b1) ? 7'd119 : 7'd55);

assign select_ln414_111_fu_2692_p3 = ((icmp_ln895_55_fu_1882_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_55_V);

assign select_ln414_112_fu_3972_p3 = ((icmp_ln895_56_reg_5032[0:0] === 1'b1) ? 7'd120 : 7'd56);

assign select_ln414_113_fu_2700_p3 = ((icmp_ln895_56_fu_1888_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_56_V);

assign select_ln414_114_fu_3979_p3 = ((icmp_ln895_57_reg_5037[0:0] === 1'b1) ? 7'd121 : 7'd57);

assign select_ln414_115_fu_2708_p3 = ((icmp_ln895_57_fu_1894_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_57_V);

assign select_ln414_116_fu_3986_p3 = ((icmp_ln895_58_reg_5042[0:0] === 1'b1) ? 7'd122 : 7'd58);

assign select_ln414_117_fu_2716_p3 = ((icmp_ln895_58_fu_1900_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_58_V);

assign select_ln414_118_fu_3993_p3 = ((icmp_ln895_59_reg_5047[0:0] === 1'b1) ? 7'd123 : 7'd59);

assign select_ln414_119_fu_2724_p3 = ((icmp_ln895_59_fu_1906_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_59_V);

assign select_ln414_11_fu_2292_p3 = ((icmp_ln895_6_fu_1582_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_5_V);

assign select_ln414_120_fu_4000_p3 = ((icmp_ln895_60_reg_5052[0:0] === 1'b1) ? 7'd124 : 7'd60);

assign select_ln414_121_fu_2732_p3 = ((icmp_ln895_60_fu_1912_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_60_V);

assign select_ln414_122_fu_4007_p3 = ((icmp_ln895_61_reg_5057[0:0] === 1'b1) ? 7'd125 : 7'd61);

assign select_ln414_123_fu_2740_p3 = ((icmp_ln895_61_fu_1918_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_61_V);

assign select_ln414_124_fu_4014_p3 = ((icmp_ln895_62_reg_5062[0:0] === 1'b1) ? 7'd126 : 7'd62);

assign select_ln414_125_fu_2748_p3 = ((icmp_ln895_62_fu_1924_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_62_V);

assign select_ln414_126_fu_4021_p3 = ((icmp_ln895_63_reg_5067[0:0] === 1'b1) ? 7'd127 : 7'd63);

assign select_ln414_127_fu_2756_p3 = ((icmp_ln895_63_fu_1930_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_63_V);

assign select_ln414_12_fu_3622_p3 = ((icmp_ln895_64_reg_4782[0:0] === 1'b1) ? 7'd70 : 7'd6);

assign select_ln414_13_fu_2300_p3 = ((icmp_ln895_64_fu_1588_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_6_V);

assign select_ln414_14_fu_3629_p3 = ((icmp_ln895_7_reg_4787[0:0] === 1'b1) ? 7'd71 : 7'd7);

assign select_ln414_15_fu_2308_p3 = ((icmp_ln895_7_fu_1594_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_7_V);

assign select_ln414_16_fu_3636_p3 = ((icmp_ln895_8_reg_4792[0:0] === 1'b1) ? 7'd72 : 7'd8);

assign select_ln414_17_fu_2316_p3 = ((icmp_ln895_8_fu_1600_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_8_V);

assign select_ln414_18_fu_3643_p3 = ((icmp_ln895_9_reg_4797[0:0] === 1'b1) ? 7'd73 : 7'd9);

assign select_ln414_19_fu_2324_p3 = ((icmp_ln895_9_fu_1606_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_9_V);

assign select_ln414_1_fu_2252_p3 = ((icmp_ln895_fu_1552_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_0_V);

assign select_ln414_20_fu_3650_p3 = ((icmp_ln895_10_reg_4802[0:0] === 1'b1) ? 7'd74 : 7'd10);

assign select_ln414_21_fu_2332_p3 = ((icmp_ln895_10_fu_1612_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_10_V);

assign select_ln414_22_fu_3657_p3 = ((icmp_ln895_11_reg_4807[0:0] === 1'b1) ? 7'd75 : 7'd11);

assign select_ln414_23_fu_2340_p3 = ((icmp_ln895_11_fu_1618_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_11_V);

assign select_ln414_24_fu_3664_p3 = ((icmp_ln895_12_reg_4812[0:0] === 1'b1) ? 7'd76 : 7'd12);

assign select_ln414_25_fu_2348_p3 = ((icmp_ln895_12_fu_1624_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_12_V);

assign select_ln414_26_fu_3671_p3 = ((icmp_ln895_13_reg_4817[0:0] === 1'b1) ? 7'd77 : 7'd13);

assign select_ln414_27_fu_2356_p3 = ((icmp_ln895_13_fu_1630_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_13_V);

assign select_ln414_28_fu_3678_p3 = ((icmp_ln895_14_reg_4822[0:0] === 1'b1) ? 7'd78 : 7'd14);

assign select_ln414_29_fu_2364_p3 = ((icmp_ln895_14_fu_1636_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_14_V);

assign select_ln414_2_fu_3587_p3 = ((icmp_ln895_1_reg_4757[0:0] === 1'b1) ? 7'd65 : 7'd1);

assign select_ln414_30_fu_3685_p3 = ((icmp_ln895_15_reg_4827[0:0] === 1'b1) ? 7'd79 : 7'd15);

assign select_ln414_31_fu_2372_p3 = ((icmp_ln895_15_fu_1642_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_15_V);

assign select_ln414_32_fu_3692_p3 = ((icmp_ln895_16_reg_4832[0:0] === 1'b1) ? 7'd80 : 7'd16);

assign select_ln414_33_fu_2380_p3 = ((icmp_ln895_16_fu_1648_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_16_V);

assign select_ln414_34_fu_3699_p3 = ((icmp_ln895_17_reg_4837[0:0] === 1'b1) ? 7'd81 : 7'd17);

assign select_ln414_35_fu_2388_p3 = ((icmp_ln895_17_fu_1654_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_17_V);

assign select_ln414_36_fu_3706_p3 = ((icmp_ln895_18_reg_4842[0:0] === 1'b1) ? 7'd82 : 7'd18);

assign select_ln414_37_fu_2396_p3 = ((icmp_ln895_18_fu_1660_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_18_V);

assign select_ln414_38_fu_3713_p3 = ((icmp_ln895_19_reg_4847[0:0] === 1'b1) ? 7'd83 : 7'd19);

assign select_ln414_39_fu_2404_p3 = ((icmp_ln895_19_fu_1666_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_19_V);

assign select_ln414_3_fu_2260_p3 = ((icmp_ln895_1_fu_1558_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_1_V);

assign select_ln414_40_fu_3720_p3 = ((icmp_ln895_20_reg_4852[0:0] === 1'b1) ? 7'd84 : 7'd20);

assign select_ln414_41_fu_2412_p3 = ((icmp_ln895_20_fu_1672_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_20_V);

assign select_ln414_42_fu_3727_p3 = ((icmp_ln895_21_reg_4857[0:0] === 1'b1) ? 7'd85 : 7'd21);

assign select_ln414_43_fu_2420_p3 = ((icmp_ln895_21_fu_1678_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_21_V);

assign select_ln414_44_fu_3734_p3 = ((icmp_ln895_22_reg_4862[0:0] === 1'b1) ? 7'd86 : 7'd22);

assign select_ln414_45_fu_2428_p3 = ((icmp_ln895_22_fu_1684_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_22_V);

assign select_ln414_46_fu_3741_p3 = ((icmp_ln895_23_reg_4867[0:0] === 1'b1) ? 7'd87 : 7'd23);

assign select_ln414_47_fu_2436_p3 = ((icmp_ln895_23_fu_1690_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_23_V);

assign select_ln414_48_fu_3748_p3 = ((icmp_ln895_24_reg_4872[0:0] === 1'b1) ? 7'd88 : 7'd24);

assign select_ln414_49_fu_2444_p3 = ((icmp_ln895_24_fu_1696_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_24_V);

assign select_ln414_4_fu_3594_p3 = ((icmp_ln895_2_reg_4762[0:0] === 1'b1) ? 7'd66 : 7'd2);

assign select_ln414_50_fu_3755_p3 = ((icmp_ln895_25_reg_4877[0:0] === 1'b1) ? 7'd89 : 7'd25);

assign select_ln414_51_fu_2452_p3 = ((icmp_ln895_25_fu_1702_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_25_V);

assign select_ln414_52_fu_3762_p3 = ((icmp_ln895_26_reg_4882[0:0] === 1'b1) ? 7'd90 : 7'd26);

assign select_ln414_53_fu_2460_p3 = ((icmp_ln895_26_fu_1708_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_26_V);

assign select_ln414_54_fu_3769_p3 = ((icmp_ln895_27_reg_4887[0:0] === 1'b1) ? 7'd91 : 7'd27);

assign select_ln414_55_fu_2468_p3 = ((icmp_ln895_27_fu_1714_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_27_V);

assign select_ln414_56_fu_3776_p3 = ((icmp_ln895_28_reg_4892[0:0] === 1'b1) ? 7'd92 : 7'd28);

assign select_ln414_57_fu_2476_p3 = ((icmp_ln895_28_fu_1720_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_28_V);

assign select_ln414_58_fu_3783_p3 = ((icmp_ln895_29_reg_4897[0:0] === 1'b1) ? 7'd93 : 7'd29);

assign select_ln414_59_fu_2484_p3 = ((icmp_ln895_29_fu_1726_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_29_V);

assign select_ln414_5_fu_2268_p3 = ((icmp_ln895_2_fu_1564_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_2_V);

assign select_ln414_60_fu_3790_p3 = ((icmp_ln895_30_reg_4902[0:0] === 1'b1) ? 7'd94 : 7'd30);

assign select_ln414_61_fu_2492_p3 = ((icmp_ln895_30_fu_1732_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_30_V);

assign select_ln414_62_fu_3797_p3 = ((icmp_ln895_31_reg_4907[0:0] === 1'b1) ? 7'd95 : 7'd31);

assign select_ln414_63_fu_2500_p3 = ((icmp_ln895_31_fu_1738_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_31_V);

assign select_ln414_64_fu_3804_p3 = ((icmp_ln895_32_reg_4912[0:0] === 1'b1) ? 7'd96 : 7'd32);

assign select_ln414_65_fu_2508_p3 = ((icmp_ln895_32_fu_1744_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_32_V);

assign select_ln414_66_fu_3811_p3 = ((icmp_ln895_33_reg_4917[0:0] === 1'b1) ? 7'd97 : 7'd33);

assign select_ln414_67_fu_2516_p3 = ((icmp_ln895_33_fu_1750_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_33_V);

assign select_ln414_68_fu_3818_p3 = ((icmp_ln895_34_reg_4922[0:0] === 1'b1) ? 7'd98 : 7'd34);

assign select_ln414_69_fu_2524_p3 = ((icmp_ln895_34_fu_1756_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_34_V);

assign select_ln414_6_fu_3601_p3 = ((icmp_ln895_3_reg_4767[0:0] === 1'b1) ? 7'd67 : 7'd3);

assign select_ln414_70_fu_3825_p3 = ((icmp_ln895_35_reg_4927[0:0] === 1'b1) ? 7'd99 : 7'd35);

assign select_ln414_71_fu_2532_p3 = ((icmp_ln895_35_fu_1762_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_35_V);

assign select_ln414_72_fu_3832_p3 = ((icmp_ln895_36_reg_4932[0:0] === 1'b1) ? 7'd100 : 7'd36);

assign select_ln414_73_fu_2540_p3 = ((icmp_ln895_36_fu_1768_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_36_V);

assign select_ln414_74_fu_3839_p3 = ((icmp_ln895_37_reg_4937[0:0] === 1'b1) ? 7'd101 : 7'd37);

assign select_ln414_75_fu_2548_p3 = ((icmp_ln895_37_fu_1774_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_37_V);

assign select_ln414_76_fu_3846_p3 = ((icmp_ln895_38_reg_4942[0:0] === 1'b1) ? 7'd102 : 7'd38);

assign select_ln414_77_fu_2556_p3 = ((icmp_ln895_38_fu_1780_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_38_V);

assign select_ln414_78_fu_3853_p3 = ((icmp_ln895_39_reg_4947[0:0] === 1'b1) ? 7'd103 : 7'd39);

assign select_ln414_79_fu_2564_p3 = ((icmp_ln895_39_fu_1786_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_39_V);

assign select_ln414_7_fu_2276_p3 = ((icmp_ln895_3_fu_1570_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_3_V);

assign select_ln414_80_fu_3860_p3 = ((icmp_ln895_40_reg_4952[0:0] === 1'b1) ? 7'd104 : 7'd40);

assign select_ln414_81_fu_2572_p3 = ((icmp_ln895_40_fu_1792_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_40_V);

assign select_ln414_82_fu_3867_p3 = ((icmp_ln895_41_reg_4957[0:0] === 1'b1) ? 7'd105 : 7'd41);

assign select_ln414_83_fu_2580_p3 = ((icmp_ln895_41_fu_1798_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_41_V);

assign select_ln414_84_fu_3874_p3 = ((icmp_ln895_42_reg_4962[0:0] === 1'b1) ? 7'd106 : 7'd42);

assign select_ln414_85_fu_2588_p3 = ((icmp_ln895_42_fu_1804_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_42_V);

assign select_ln414_86_fu_3881_p3 = ((icmp_ln895_43_reg_4967[0:0] === 1'b1) ? 7'd107 : 7'd43);

assign select_ln414_87_fu_2596_p3 = ((icmp_ln895_43_fu_1810_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_43_V);

assign select_ln414_88_fu_3888_p3 = ((icmp_ln895_44_reg_4972[0:0] === 1'b1) ? 7'd108 : 7'd44);

assign select_ln414_89_fu_2604_p3 = ((icmp_ln895_44_fu_1816_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_44_V);

assign select_ln414_8_fu_3608_p3 = ((icmp_ln895_4_reg_4772[0:0] === 1'b1) ? 7'd68 : 7'd4);

assign select_ln414_90_fu_3895_p3 = ((icmp_ln895_45_reg_4977[0:0] === 1'b1) ? 7'd109 : 7'd45);

assign select_ln414_91_fu_2612_p3 = ((icmp_ln895_45_fu_1822_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_45_V);

assign select_ln414_92_fu_3902_p3 = ((icmp_ln895_46_reg_4982[0:0] === 1'b1) ? 7'd110 : 7'd46);

assign select_ln414_93_fu_2620_p3 = ((icmp_ln895_46_fu_1828_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_46_V);

assign select_ln414_94_fu_3909_p3 = ((icmp_ln895_47_reg_4987[0:0] === 1'b1) ? 7'd111 : 7'd47);

assign select_ln414_95_fu_2628_p3 = ((icmp_ln895_47_fu_1834_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_47_V);

assign select_ln414_96_fu_3916_p3 = ((icmp_ln895_48_reg_4992[0:0] === 1'b1) ? 7'd112 : 7'd48);

assign select_ln414_97_fu_2636_p3 = ((icmp_ln895_48_fu_1840_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_48_V);

assign select_ln414_98_fu_3923_p3 = ((icmp_ln895_49_reg_4997[0:0] === 1'b1) ? 7'd113 : 7'd49);

assign select_ln414_99_fu_2644_p3 = ((icmp_ln895_49_fu_1846_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_49_V);

assign select_ln414_9_fu_2284_p3 = ((icmp_ln895_4_fu_1576_p2[0:0] === 1'b1) ? 7'd0 : max_bin_r_4_V);

assign select_ln414_fu_3580_p3 = ((icmp_ln895_reg_4752[0:0] === 1'b1) ? 7'd64 : 7'd0);

assign select_ln432_10_fu_2815_p3 = ((icmp_ln895_68_fu_1954_p2[0:0] === 1'b1) ? select_ln414_7_fu_2276_p3 : select_ln414_71_fu_2532_p3);

assign select_ln432_11_fu_2823_p3 = ((icmp_ln895_68_fu_1954_p2[0:0] === 1'b1) ? max_bin_count_3_V : max_bin_count_35_V);

assign select_ln432_12_fu_4056_p3 = ((icmp_ln895_69_reg_5112[0:0] === 1'b1) ? select_ln414_8_fu_3608_p3 : select_ln414_72_fu_3832_p3);

assign select_ln432_13_fu_2832_p3 = ((icmp_ln895_69_fu_1960_p2[0:0] === 1'b1) ? select_ln414_9_fu_2284_p3 : select_ln414_73_fu_2540_p3);

assign select_ln432_14_fu_2840_p3 = ((icmp_ln895_69_fu_1960_p2[0:0] === 1'b1) ? max_bin_count_4_V : max_bin_count_36_V);

assign select_ln432_15_fu_4063_p3 = ((icmp_ln895_70_reg_5122[0:0] === 1'b1) ? select_ln414_10_fu_3615_p3 : select_ln414_74_fu_3839_p3);

assign select_ln432_16_fu_2849_p3 = ((icmp_ln895_70_fu_1966_p2[0:0] === 1'b1) ? select_ln414_11_fu_2292_p3 : select_ln414_75_fu_2548_p3);

assign select_ln432_17_fu_2857_p3 = ((icmp_ln895_70_fu_1966_p2[0:0] === 1'b1) ? max_bin_count_5_V : max_bin_count_37_V);

assign select_ln432_18_fu_4070_p3 = ((icmp_ln895_71_reg_5132[0:0] === 1'b1) ? select_ln414_12_fu_3622_p3 : select_ln414_76_fu_3846_p3);

assign select_ln432_19_fu_2866_p3 = ((icmp_ln895_71_fu_1972_p2[0:0] === 1'b1) ? select_ln414_13_fu_2300_p3 : select_ln414_77_fu_2556_p3);

assign select_ln432_1_fu_2764_p3 = ((icmp_ln895_65_fu_1936_p2[0:0] === 1'b1) ? select_ln414_1_fu_2252_p3 : select_ln414_65_fu_2508_p3);

assign select_ln432_20_fu_2874_p3 = ((icmp_ln895_71_fu_1972_p2[0:0] === 1'b1) ? max_bin_count_6_V : max_bin_count_38_V);

assign select_ln432_21_fu_4077_p3 = ((icmp_ln895_72_reg_5142[0:0] === 1'b1) ? select_ln414_14_fu_3629_p3 : select_ln414_78_fu_3853_p3);

assign select_ln432_22_fu_2883_p3 = ((icmp_ln895_72_fu_1978_p2[0:0] === 1'b1) ? select_ln414_15_fu_2308_p3 : select_ln414_79_fu_2564_p3);

assign select_ln432_23_fu_2891_p3 = ((icmp_ln895_72_fu_1978_p2[0:0] === 1'b1) ? max_bin_count_7_V : max_bin_count_39_V);

assign select_ln432_24_fu_4084_p3 = ((icmp_ln895_73_reg_5152[0:0] === 1'b1) ? select_ln414_16_fu_3636_p3 : select_ln414_80_fu_3860_p3);

assign select_ln432_25_fu_2900_p3 = ((icmp_ln895_73_fu_1984_p2[0:0] === 1'b1) ? select_ln414_17_fu_2316_p3 : select_ln414_81_fu_2572_p3);

assign select_ln432_26_fu_2908_p3 = ((icmp_ln895_73_fu_1984_p2[0:0] === 1'b1) ? max_bin_count_8_V : max_bin_count_40_V);

assign select_ln432_27_fu_4091_p3 = ((icmp_ln895_74_reg_5157[0:0] === 1'b1) ? select_ln414_18_fu_3643_p3 : select_ln414_82_fu_3867_p3);

assign select_ln432_28_fu_2917_p3 = ((icmp_ln895_74_fu_1990_p2[0:0] === 1'b1) ? select_ln414_19_fu_2324_p3 : select_ln414_83_fu_2580_p3);

assign select_ln432_29_fu_2925_p3 = ((icmp_ln895_74_fu_1990_p2[0:0] === 1'b1) ? max_bin_count_9_V : max_bin_count_41_V);

assign select_ln432_2_fu_2772_p3 = ((icmp_ln895_65_fu_1936_p2[0:0] === 1'b1) ? max_bin_count_0_V : max_bin_count_32_V);

assign select_ln432_30_fu_4098_p3 = ((icmp_ln895_75_reg_5162[0:0] === 1'b1) ? select_ln414_20_fu_3650_p3 : select_ln414_84_fu_3874_p3);

assign select_ln432_31_fu_2934_p3 = ((icmp_ln895_75_fu_1996_p2[0:0] === 1'b1) ? select_ln414_21_fu_2332_p3 : select_ln414_85_fu_2588_p3);

assign select_ln432_32_fu_2942_p3 = ((icmp_ln895_75_fu_1996_p2[0:0] === 1'b1) ? max_bin_count_10_V : max_bin_count_42_V);

assign select_ln432_33_fu_4105_p3 = ((icmp_ln895_76_reg_5167[0:0] === 1'b1) ? select_ln414_22_fu_3657_p3 : select_ln414_86_fu_3881_p3);

assign select_ln432_34_fu_2951_p3 = ((icmp_ln895_76_fu_2002_p2[0:0] === 1'b1) ? select_ln414_23_fu_2340_p3 : select_ln414_87_fu_2596_p3);

assign select_ln432_35_fu_2959_p3 = ((icmp_ln895_76_fu_2002_p2[0:0] === 1'b1) ? max_bin_count_11_V : max_bin_count_43_V);

assign select_ln432_36_fu_4112_p3 = ((icmp_ln895_77_reg_5172[0:0] === 1'b1) ? select_ln414_24_fu_3664_p3 : select_ln414_88_fu_3888_p3);

assign select_ln432_37_fu_2968_p3 = ((icmp_ln895_77_fu_2008_p2[0:0] === 1'b1) ? select_ln414_25_fu_2348_p3 : select_ln414_89_fu_2604_p3);

assign select_ln432_38_fu_2976_p3 = ((icmp_ln895_77_fu_2008_p2[0:0] === 1'b1) ? max_bin_count_12_V : max_bin_count_44_V);

assign select_ln432_39_fu_4119_p3 = ((icmp_ln895_78_reg_5177[0:0] === 1'b1) ? select_ln414_26_fu_3671_p3 : select_ln414_90_fu_3895_p3);

assign select_ln432_3_fu_4035_p3 = ((icmp_ln895_66_reg_5082[0:0] === 1'b1) ? select_ln414_2_fu_3587_p3 : select_ln414_66_fu_3811_p3);

assign select_ln432_40_fu_2985_p3 = ((icmp_ln895_78_fu_2014_p2[0:0] === 1'b1) ? select_ln414_27_fu_2356_p3 : select_ln414_91_fu_2612_p3);

assign select_ln432_41_fu_2993_p3 = ((icmp_ln895_78_fu_2014_p2[0:0] === 1'b1) ? max_bin_count_13_V : max_bin_count_45_V);

assign select_ln432_42_fu_4126_p3 = ((icmp_ln895_79_reg_5182[0:0] === 1'b1) ? select_ln414_28_fu_3678_p3 : select_ln414_92_fu_3902_p3);

assign select_ln432_43_fu_3002_p3 = ((icmp_ln895_79_fu_2020_p2[0:0] === 1'b1) ? select_ln414_29_fu_2364_p3 : select_ln414_93_fu_2620_p3);

assign select_ln432_44_fu_3010_p3 = ((icmp_ln895_79_fu_2020_p2[0:0] === 1'b1) ? max_bin_count_14_V : max_bin_count_46_V);

assign select_ln432_45_fu_4133_p3 = ((icmp_ln895_80_reg_5187[0:0] === 1'b1) ? select_ln414_30_fu_3685_p3 : select_ln414_94_fu_3909_p3);

assign select_ln432_46_fu_3019_p3 = ((icmp_ln895_80_fu_2026_p2[0:0] === 1'b1) ? select_ln414_31_fu_2372_p3 : select_ln414_95_fu_2628_p3);

assign select_ln432_47_fu_3027_p3 = ((icmp_ln895_80_fu_2026_p2[0:0] === 1'b1) ? max_bin_count_15_V : max_bin_count_47_V);

assign select_ln432_48_fu_4140_p3 = ((icmp_ln895_81_reg_5192[0:0] === 1'b1) ? select_ln414_32_fu_3692_p3 : select_ln414_96_fu_3916_p3);

assign select_ln432_49_fu_3036_p3 = ((icmp_ln895_81_fu_2032_p2[0:0] === 1'b1) ? select_ln414_33_fu_2380_p3 : select_ln414_97_fu_2636_p3);

assign select_ln432_4_fu_2781_p3 = ((icmp_ln895_66_fu_1942_p2[0:0] === 1'b1) ? select_ln414_3_fu_2260_p3 : select_ln414_67_fu_2516_p3);

assign select_ln432_50_fu_3044_p3 = ((icmp_ln895_81_fu_2032_p2[0:0] === 1'b1) ? max_bin_count_16_V : max_bin_count_48_V);

assign select_ln432_51_fu_4147_p3 = ((icmp_ln895_82_reg_5202[0:0] === 1'b1) ? select_ln414_34_fu_3699_p3 : select_ln414_98_fu_3923_p3);

assign select_ln432_52_fu_3053_p3 = ((icmp_ln895_82_fu_2038_p2[0:0] === 1'b1) ? select_ln414_35_fu_2388_p3 : select_ln414_99_fu_2644_p3);

assign select_ln432_53_fu_3061_p3 = ((icmp_ln895_82_fu_2038_p2[0:0] === 1'b1) ? max_bin_count_17_V : max_bin_count_49_V);

assign select_ln432_54_fu_4154_p3 = ((icmp_ln895_83_reg_5212[0:0] === 1'b1) ? select_ln414_36_fu_3706_p3 : select_ln414_100_fu_3930_p3);

assign select_ln432_55_fu_3070_p3 = ((icmp_ln895_83_fu_2044_p2[0:0] === 1'b1) ? select_ln414_37_fu_2396_p3 : select_ln414_101_fu_2652_p3);

assign select_ln432_56_fu_3078_p3 = ((icmp_ln895_83_fu_2044_p2[0:0] === 1'b1) ? max_bin_count_18_V : max_bin_count_50_V);

assign select_ln432_57_fu_4161_p3 = ((icmp_ln895_84_reg_5222[0:0] === 1'b1) ? select_ln414_38_fu_3713_p3 : select_ln414_102_fu_3937_p3);

assign select_ln432_58_fu_3087_p3 = ((icmp_ln895_84_fu_2050_p2[0:0] === 1'b1) ? select_ln414_39_fu_2404_p3 : select_ln414_103_fu_2660_p3);

assign select_ln432_59_fu_3095_p3 = ((icmp_ln895_84_fu_2050_p2[0:0] === 1'b1) ? max_bin_count_19_V : max_bin_count_51_V);

assign select_ln432_5_fu_2789_p3 = ((icmp_ln895_66_fu_1942_p2[0:0] === 1'b1) ? max_bin_count_1_V : max_bin_count_33_V);

assign select_ln432_60_fu_4168_p3 = ((icmp_ln895_85_reg_5232[0:0] === 1'b1) ? select_ln414_40_fu_3720_p3 : select_ln414_104_fu_3944_p3);

assign select_ln432_61_fu_3104_p3 = ((icmp_ln895_85_fu_2056_p2[0:0] === 1'b1) ? select_ln414_41_fu_2412_p3 : select_ln414_105_fu_2668_p3);

assign select_ln432_62_fu_3112_p3 = ((icmp_ln895_85_fu_2056_p2[0:0] === 1'b1) ? max_bin_count_20_V : max_bin_count_52_V);

assign select_ln432_63_fu_4175_p3 = ((icmp_ln895_86_reg_5242[0:0] === 1'b1) ? select_ln414_42_fu_3727_p3 : select_ln414_106_fu_3951_p3);

assign select_ln432_64_fu_3121_p3 = ((icmp_ln895_86_fu_2062_p2[0:0] === 1'b1) ? select_ln414_43_fu_2420_p3 : select_ln414_107_fu_2676_p3);

assign select_ln432_65_fu_3129_p3 = ((icmp_ln895_86_fu_2062_p2[0:0] === 1'b1) ? max_bin_count_21_V : max_bin_count_53_V);

assign select_ln432_66_fu_4182_p3 = ((icmp_ln895_87_reg_5252[0:0] === 1'b1) ? select_ln414_44_fu_3734_p3 : select_ln414_108_fu_3958_p3);

assign select_ln432_67_fu_3138_p3 = ((icmp_ln895_87_fu_2068_p2[0:0] === 1'b1) ? select_ln414_45_fu_2428_p3 : select_ln414_109_fu_2684_p3);

assign select_ln432_68_fu_3146_p3 = ((icmp_ln895_87_fu_2068_p2[0:0] === 1'b1) ? max_bin_count_22_V : max_bin_count_54_V);

assign select_ln432_69_fu_4189_p3 = ((icmp_ln895_88_reg_5262[0:0] === 1'b1) ? select_ln414_46_fu_3741_p3 : select_ln414_110_fu_3965_p3);

assign select_ln432_6_fu_4042_p3 = ((icmp_ln895_67_reg_5092[0:0] === 1'b1) ? select_ln414_4_fu_3594_p3 : select_ln414_68_fu_3818_p3);

assign select_ln432_70_fu_3155_p3 = ((icmp_ln895_88_fu_2074_p2[0:0] === 1'b1) ? select_ln414_47_fu_2436_p3 : select_ln414_111_fu_2692_p3);

assign select_ln432_71_fu_3163_p3 = ((icmp_ln895_88_fu_2074_p2[0:0] === 1'b1) ? max_bin_count_23_V : max_bin_count_55_V);

assign select_ln432_72_fu_4196_p3 = ((icmp_ln895_89_reg_5272[0:0] === 1'b1) ? select_ln414_48_fu_3748_p3 : select_ln414_112_fu_3972_p3);

assign select_ln432_73_fu_3172_p3 = ((icmp_ln895_89_fu_2080_p2[0:0] === 1'b1) ? select_ln414_49_fu_2444_p3 : select_ln414_113_fu_2700_p3);

assign select_ln432_74_fu_3180_p3 = ((icmp_ln895_89_fu_2080_p2[0:0] === 1'b1) ? max_bin_count_24_V : max_bin_count_56_V);

assign select_ln432_75_fu_4203_p3 = ((icmp_ln895_90_reg_5277[0:0] === 1'b1) ? select_ln414_50_fu_3755_p3 : select_ln414_114_fu_3979_p3);

assign select_ln432_76_fu_3189_p3 = ((icmp_ln895_90_fu_2086_p2[0:0] === 1'b1) ? select_ln414_51_fu_2452_p3 : select_ln414_115_fu_2708_p3);

assign select_ln432_77_fu_3197_p3 = ((icmp_ln895_90_fu_2086_p2[0:0] === 1'b1) ? max_bin_count_25_V : max_bin_count_57_V);

assign select_ln432_78_fu_4210_p3 = ((icmp_ln895_91_reg_5282[0:0] === 1'b1) ? select_ln414_52_fu_3762_p3 : select_ln414_116_fu_3986_p3);

assign select_ln432_79_fu_3206_p3 = ((icmp_ln895_91_fu_2092_p2[0:0] === 1'b1) ? select_ln414_53_fu_2460_p3 : select_ln414_117_fu_2716_p3);

assign select_ln432_7_fu_2798_p3 = ((icmp_ln895_67_fu_1948_p2[0:0] === 1'b1) ? select_ln414_5_fu_2268_p3 : select_ln414_69_fu_2524_p3);

assign select_ln432_80_fu_3214_p3 = ((icmp_ln895_91_fu_2092_p2[0:0] === 1'b1) ? max_bin_count_26_V : max_bin_count_58_V);

assign select_ln432_81_fu_4217_p3 = ((icmp_ln895_92_reg_5287[0:0] === 1'b1) ? select_ln414_54_fu_3769_p3 : select_ln414_118_fu_3993_p3);

assign select_ln432_82_fu_3223_p3 = ((icmp_ln895_92_fu_2098_p2[0:0] === 1'b1) ? select_ln414_55_fu_2468_p3 : select_ln414_119_fu_2724_p3);

assign select_ln432_83_fu_3231_p3 = ((icmp_ln895_92_fu_2098_p2[0:0] === 1'b1) ? max_bin_count_27_V : max_bin_count_59_V);

assign select_ln432_84_fu_4224_p3 = ((icmp_ln895_93_reg_5292[0:0] === 1'b1) ? select_ln414_56_fu_3776_p3 : select_ln414_120_fu_4000_p3);

assign select_ln432_85_fu_3240_p3 = ((icmp_ln895_93_fu_2104_p2[0:0] === 1'b1) ? select_ln414_57_fu_2476_p3 : select_ln414_121_fu_2732_p3);

assign select_ln432_86_fu_3248_p3 = ((icmp_ln895_93_fu_2104_p2[0:0] === 1'b1) ? max_bin_count_28_V : max_bin_count_60_V);

assign select_ln432_87_fu_4231_p3 = ((icmp_ln895_94_reg_5297[0:0] === 1'b1) ? select_ln414_58_fu_3783_p3 : select_ln414_122_fu_4007_p3);

assign select_ln432_88_fu_3257_p3 = ((icmp_ln895_94_fu_2110_p2[0:0] === 1'b1) ? select_ln414_59_fu_2484_p3 : select_ln414_123_fu_2740_p3);

assign select_ln432_89_fu_3265_p3 = ((icmp_ln895_94_fu_2110_p2[0:0] === 1'b1) ? max_bin_count_29_V : max_bin_count_61_V);

assign select_ln432_8_fu_2806_p3 = ((icmp_ln895_67_fu_1948_p2[0:0] === 1'b1) ? max_bin_count_2_V : max_bin_count_34_V);

assign select_ln432_90_fu_4238_p3 = ((icmp_ln895_95_reg_5302[0:0] === 1'b1) ? select_ln414_60_fu_3790_p3 : select_ln414_124_fu_4014_p3);

assign select_ln432_91_fu_3274_p3 = ((icmp_ln895_95_fu_2116_p2[0:0] === 1'b1) ? select_ln414_61_fu_2492_p3 : select_ln414_125_fu_2748_p3);

assign select_ln432_92_fu_3282_p3 = ((icmp_ln895_95_fu_2116_p2[0:0] === 1'b1) ? max_bin_count_30_V : max_bin_count_62_V);

assign select_ln432_93_fu_4245_p3 = ((icmp_ln895_96_reg_5307[0:0] === 1'b1) ? select_ln414_62_fu_3797_p3 : select_ln414_126_fu_4021_p3);

assign select_ln432_94_fu_3291_p3 = ((icmp_ln895_96_fu_2122_p2[0:0] === 1'b1) ? select_ln414_63_fu_2500_p3 : select_ln414_127_fu_2756_p3);

assign select_ln432_95_fu_3299_p3 = ((icmp_ln895_96_fu_2122_p2[0:0] === 1'b1) ? max_bin_count_31_V : max_bin_count_63_V);

assign select_ln432_9_fu_4049_p3 = ((icmp_ln895_68_reg_5102[0:0] === 1'b1) ? select_ln414_6_fu_3601_p3 : select_ln414_70_fu_3825_p3);

assign select_ln432_fu_4028_p3 = ((icmp_ln895_65_reg_5072[0:0] === 1'b1) ? select_ln414_fu_3580_p3 : select_ln414_64_fu_3804_p3);

assign select_ln450_10_fu_4295_p3 = ((icmp_ln895_100_reg_5330[0:0] === 1'b1) ? select_ln432_10_reg_5107 : select_ln432_58_reg_5227);

assign select_ln450_11_fu_3335_p3 = ((icmp_ln895_100_fu_2140_p2[0:0] === 1'b1) ? select_ln432_11_fu_2823_p3 : select_ln432_59_fu_3095_p3);

assign select_ln450_12_fu_4300_p3 = ((icmp_ln895_101_reg_5336[0:0] === 1'b1) ? select_ln432_12_fu_4056_p3 : select_ln432_60_fu_4168_p3);

assign select_ln450_13_fu_4307_p3 = ((icmp_ln895_101_reg_5336[0:0] === 1'b1) ? select_ln432_13_reg_5117 : select_ln432_61_reg_5237);

assign select_ln450_14_fu_3344_p3 = ((icmp_ln895_101_fu_2144_p2[0:0] === 1'b1) ? select_ln432_14_fu_2840_p3 : select_ln432_62_fu_3112_p3);

assign select_ln450_15_fu_4312_p3 = ((icmp_ln895_102_reg_5342[0:0] === 1'b1) ? select_ln432_15_fu_4063_p3 : select_ln432_63_fu_4175_p3);

assign select_ln450_16_fu_4319_p3 = ((icmp_ln895_102_reg_5342[0:0] === 1'b1) ? select_ln432_16_reg_5127 : select_ln432_64_reg_5247);

assign select_ln450_17_fu_3353_p3 = ((icmp_ln895_102_fu_2148_p2[0:0] === 1'b1) ? select_ln432_17_fu_2857_p3 : select_ln432_65_fu_3129_p3);

assign select_ln450_18_fu_4324_p3 = ((icmp_ln895_103_reg_5348[0:0] === 1'b1) ? select_ln432_18_fu_4070_p3 : select_ln432_66_fu_4182_p3);

assign select_ln450_19_fu_4331_p3 = ((icmp_ln895_103_reg_5348[0:0] === 1'b1) ? select_ln432_19_reg_5137 : select_ln432_67_reg_5257);

assign select_ln450_1_fu_4259_p3 = ((icmp_ln895_97_reg_5312[0:0] === 1'b1) ? select_ln432_1_reg_5077 : select_ln432_49_reg_5197);

assign select_ln450_20_fu_3362_p3 = ((icmp_ln895_103_fu_2152_p2[0:0] === 1'b1) ? select_ln432_20_fu_2874_p3 : select_ln432_68_fu_3146_p3);

assign select_ln450_21_fu_4336_p3 = ((icmp_ln895_104_reg_5354[0:0] === 1'b1) ? select_ln432_21_fu_4077_p3 : select_ln432_69_fu_4189_p3);

assign select_ln450_22_fu_4343_p3 = ((icmp_ln895_104_reg_5354[0:0] === 1'b1) ? select_ln432_22_reg_5147 : select_ln432_70_reg_5267);

assign select_ln450_23_fu_3371_p3 = ((icmp_ln895_104_fu_2156_p2[0:0] === 1'b1) ? select_ln432_23_fu_2891_p3 : select_ln432_71_fu_3163_p3);

assign select_ln450_24_fu_4348_p3 = ((icmp_ln895_105_reg_5360[0:0] === 1'b1) ? select_ln432_24_fu_4084_p3 : select_ln432_72_fu_4196_p3);

assign select_ln450_25_fu_3380_p3 = ((icmp_ln895_105_fu_2160_p2[0:0] === 1'b1) ? select_ln432_25_fu_2900_p3 : select_ln432_73_fu_3172_p3);

assign select_ln450_26_fu_3388_p3 = ((icmp_ln895_105_fu_2160_p2[0:0] === 1'b1) ? select_ln432_26_fu_2908_p3 : select_ln432_74_fu_3180_p3);

assign select_ln450_27_fu_4355_p3 = ((icmp_ln895_106_reg_5370[0:0] === 1'b1) ? select_ln432_27_fu_4091_p3 : select_ln432_75_fu_4203_p3);

assign select_ln450_28_fu_3397_p3 = ((icmp_ln895_106_fu_2164_p2[0:0] === 1'b1) ? select_ln432_28_fu_2917_p3 : select_ln432_76_fu_3189_p3);

assign select_ln450_29_fu_3405_p3 = ((icmp_ln895_106_fu_2164_p2[0:0] === 1'b1) ? select_ln432_29_fu_2925_p3 : select_ln432_77_fu_3197_p3);

assign select_ln450_2_fu_3308_p3 = ((icmp_ln895_97_fu_2128_p2[0:0] === 1'b1) ? select_ln432_2_fu_2772_p3 : select_ln432_50_fu_3044_p3);

assign select_ln450_30_fu_4362_p3 = ((icmp_ln895_107_reg_5380[0:0] === 1'b1) ? select_ln432_30_fu_4098_p3 : select_ln432_78_fu_4210_p3);

assign select_ln450_31_fu_3414_p3 = ((icmp_ln895_107_fu_2168_p2[0:0] === 1'b1) ? select_ln432_31_fu_2934_p3 : select_ln432_79_fu_3206_p3);

assign select_ln450_32_fu_3422_p3 = ((icmp_ln895_107_fu_2168_p2[0:0] === 1'b1) ? select_ln432_32_fu_2942_p3 : select_ln432_80_fu_3214_p3);

assign select_ln450_33_fu_4369_p3 = ((icmp_ln895_108_reg_5390[0:0] === 1'b1) ? select_ln432_33_fu_4105_p3 : select_ln432_81_fu_4217_p3);

assign select_ln450_34_fu_3431_p3 = ((icmp_ln895_108_fu_2172_p2[0:0] === 1'b1) ? select_ln432_34_fu_2951_p3 : select_ln432_82_fu_3223_p3);

assign select_ln450_35_fu_3439_p3 = ((icmp_ln895_108_fu_2172_p2[0:0] === 1'b1) ? select_ln432_35_fu_2959_p3 : select_ln432_83_fu_3231_p3);

assign select_ln450_36_fu_4376_p3 = ((icmp_ln895_109_reg_5400[0:0] === 1'b1) ? select_ln432_36_fu_4112_p3 : select_ln432_84_fu_4224_p3);

assign select_ln450_37_fu_3448_p3 = ((icmp_ln895_109_fu_2176_p2[0:0] === 1'b1) ? select_ln432_37_fu_2968_p3 : select_ln432_85_fu_3240_p3);

assign select_ln450_38_fu_3456_p3 = ((icmp_ln895_109_fu_2176_p2[0:0] === 1'b1) ? select_ln432_38_fu_2976_p3 : select_ln432_86_fu_3248_p3);

assign select_ln450_39_fu_4383_p3 = ((icmp_ln895_110_reg_5410[0:0] === 1'b1) ? select_ln432_39_fu_4119_p3 : select_ln432_87_fu_4231_p3);

assign select_ln450_3_fu_4264_p3 = ((icmp_ln895_98_reg_5318[0:0] === 1'b1) ? select_ln432_3_fu_4035_p3 : select_ln432_51_fu_4147_p3);

assign select_ln450_40_fu_3465_p3 = ((icmp_ln895_110_fu_2180_p2[0:0] === 1'b1) ? select_ln432_40_fu_2985_p3 : select_ln432_88_fu_3257_p3);

assign select_ln450_41_fu_3473_p3 = ((icmp_ln895_110_fu_2180_p2[0:0] === 1'b1) ? select_ln432_41_fu_2993_p3 : select_ln432_89_fu_3265_p3);

assign select_ln450_42_fu_4390_p3 = ((icmp_ln895_111_reg_5420[0:0] === 1'b1) ? select_ln432_42_fu_4126_p3 : select_ln432_90_fu_4238_p3);

assign select_ln450_43_fu_3482_p3 = ((icmp_ln895_111_fu_2184_p2[0:0] === 1'b1) ? select_ln432_43_fu_3002_p3 : select_ln432_91_fu_3274_p3);

assign select_ln450_44_fu_3490_p3 = ((icmp_ln895_111_fu_2184_p2[0:0] === 1'b1) ? select_ln432_44_fu_3010_p3 : select_ln432_92_fu_3282_p3);

assign select_ln450_45_fu_4397_p3 = ((icmp_ln895_112_reg_5430[0:0] === 1'b1) ? select_ln432_45_fu_4133_p3 : select_ln432_93_fu_4245_p3);

assign select_ln450_46_fu_3499_p3 = ((icmp_ln895_112_fu_2188_p2[0:0] === 1'b1) ? select_ln432_46_fu_3019_p3 : select_ln432_94_fu_3291_p3);

assign select_ln450_47_fu_3507_p3 = ((icmp_ln895_112_fu_2188_p2[0:0] === 1'b1) ? select_ln432_47_fu_3027_p3 : select_ln432_95_fu_3299_p3);

assign select_ln450_4_fu_4271_p3 = ((icmp_ln895_98_reg_5318[0:0] === 1'b1) ? select_ln432_4_reg_5087 : select_ln432_52_reg_5207);

assign select_ln450_5_fu_3317_p3 = ((icmp_ln895_98_fu_2132_p2[0:0] === 1'b1) ? select_ln432_5_fu_2789_p3 : select_ln432_53_fu_3061_p3);

assign select_ln450_6_fu_4276_p3 = ((icmp_ln895_99_reg_5324[0:0] === 1'b1) ? select_ln432_6_fu_4042_p3 : select_ln432_54_fu_4154_p3);

assign select_ln450_7_fu_4283_p3 = ((icmp_ln895_99_reg_5324[0:0] === 1'b1) ? select_ln432_7_reg_5097 : select_ln432_55_reg_5217);

assign select_ln450_8_fu_3326_p3 = ((icmp_ln895_99_fu_2136_p2[0:0] === 1'b1) ? select_ln432_8_fu_2806_p3 : select_ln432_56_fu_3078_p3);

assign select_ln450_9_fu_4288_p3 = ((icmp_ln895_100_reg_5330[0:0] === 1'b1) ? select_ln432_9_fu_4049_p3 : select_ln432_57_fu_4161_p3);

assign select_ln450_fu_4252_p3 = ((icmp_ln895_97_reg_5312[0:0] === 1'b1) ? select_ln432_fu_4028_p3 : select_ln432_48_fu_4140_p3);

assign select_ln468_10_fu_4450_p3 = ((icmp_ln895_116_reg_5476[0:0] === 1'b1) ? select_ln450_10_fu_4295_p3 : select_ln450_34_reg_5395);

assign select_ln468_11_fu_3540_p3 = ((icmp_ln895_116_fu_2204_p2[0:0] === 1'b1) ? select_ln450_11_fu_3335_p3 : select_ln450_35_fu_3439_p3);

assign select_ln468_12_fu_4456_p3 = ((icmp_ln895_117_reg_5488[0:0] === 1'b1) ? select_ln450_12_fu_4300_p3 : select_ln450_36_fu_4376_p3);

assign select_ln468_13_fu_4463_p3 = ((icmp_ln895_117_reg_5488[0:0] === 1'b1) ? select_ln450_13_fu_4307_p3 : select_ln450_37_reg_5405);

assign select_ln468_14_fu_3548_p3 = ((icmp_ln895_117_fu_2208_p2[0:0] === 1'b1) ? select_ln450_14_fu_3344_p3 : select_ln450_38_fu_3456_p3);

assign select_ln468_15_fu_4469_p3 = ((icmp_ln895_118_reg_5500[0:0] === 1'b1) ? select_ln450_15_fu_4312_p3 : select_ln450_39_fu_4383_p3);

assign select_ln468_16_fu_4476_p3 = ((icmp_ln895_118_reg_5500[0:0] === 1'b1) ? select_ln450_16_fu_4319_p3 : select_ln450_40_reg_5415);

assign select_ln468_17_fu_3556_p3 = ((icmp_ln895_118_fu_2212_p2[0:0] === 1'b1) ? select_ln450_17_fu_3353_p3 : select_ln450_41_fu_3473_p3);

assign select_ln468_18_fu_4482_p3 = ((icmp_ln895_119_reg_5512[0:0] === 1'b1) ? select_ln450_18_fu_4324_p3 : select_ln450_42_fu_4390_p3);

assign select_ln468_19_fu_4489_p3 = ((icmp_ln895_119_reg_5512[0:0] === 1'b1) ? select_ln450_19_fu_4331_p3 : select_ln450_43_reg_5425);

assign select_ln468_1_fu_4411_p3 = ((icmp_ln895_113_reg_5440[0:0] === 1'b1) ? select_ln450_1_fu_4259_p3 : select_ln450_25_reg_5365);

assign select_ln468_20_fu_3564_p3 = ((icmp_ln895_119_fu_2216_p2[0:0] === 1'b1) ? select_ln450_20_fu_3362_p3 : select_ln450_44_fu_3490_p3);

assign select_ln468_21_fu_4495_p3 = ((icmp_ln895_120_reg_5524[0:0] === 1'b1) ? select_ln450_21_fu_4336_p3 : select_ln450_45_fu_4397_p3);

assign select_ln468_22_fu_4502_p3 = ((icmp_ln895_120_reg_5524[0:0] === 1'b1) ? select_ln450_22_fu_4343_p3 : select_ln450_46_reg_5435);

assign select_ln468_23_fu_3572_p3 = ((icmp_ln895_120_fu_2220_p2[0:0] === 1'b1) ? select_ln450_23_fu_3371_p3 : select_ln450_47_fu_3507_p3);

assign select_ln468_2_fu_3516_p3 = ((icmp_ln895_113_fu_2192_p2[0:0] === 1'b1) ? select_ln450_2_fu_3308_p3 : select_ln450_26_fu_3388_p3);

assign select_ln468_3_fu_4417_p3 = ((icmp_ln895_114_reg_5452[0:0] === 1'b1) ? select_ln450_3_fu_4264_p3 : select_ln450_27_fu_4355_p3);

assign select_ln468_4_fu_4424_p3 = ((icmp_ln895_114_reg_5452[0:0] === 1'b1) ? select_ln450_4_fu_4271_p3 : select_ln450_28_reg_5375);

assign select_ln468_5_fu_3524_p3 = ((icmp_ln895_114_fu_2196_p2[0:0] === 1'b1) ? select_ln450_5_fu_3317_p3 : select_ln450_29_fu_3405_p3);

assign select_ln468_6_fu_4430_p3 = ((icmp_ln895_115_reg_5464[0:0] === 1'b1) ? select_ln450_6_fu_4276_p3 : select_ln450_30_fu_4362_p3);

assign select_ln468_7_fu_4437_p3 = ((icmp_ln895_115_reg_5464[0:0] === 1'b1) ? select_ln450_7_fu_4283_p3 : select_ln450_31_reg_5385);

assign select_ln468_8_fu_3532_p3 = ((icmp_ln895_115_fu_2200_p2[0:0] === 1'b1) ? select_ln450_8_fu_3326_p3 : select_ln450_32_fu_3422_p3);

assign select_ln468_9_fu_4443_p3 = ((icmp_ln895_116_reg_5476[0:0] === 1'b1) ? select_ln450_9_fu_4288_p3 : select_ln450_33_fu_4369_p3);

assign select_ln468_fu_4404_p3 = ((icmp_ln895_113_reg_5440[0:0] === 1'b1) ? select_ln450_fu_4252_p3 : select_ln450_24_fu_4348_p3);

assign select_ln486_10_fu_4585_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln468_10_fu_4450_p3 : select_ln468_22_fu_4502_p3);

assign select_ln486_11_fu_4593_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln468_11_reg_5482 : select_ln468_23_reg_5530);

assign select_ln486_1_fu_4516_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln468_1_fu_4411_p3 : select_ln468_13_fu_4463_p3);

assign select_ln486_2_fu_4524_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln468_2_reg_5446 : select_ln468_14_reg_5494);

assign select_ln486_3_fu_4531_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln468_3_fu_4417_p3 : select_ln468_15_fu_4469_p3);

assign select_ln486_4_fu_4539_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln468_4_fu_4424_p3 : select_ln468_16_fu_4476_p3);

assign select_ln486_5_fu_4547_p3 = ((icmp_ln895_122_fu_2228_p2[0:0] === 1'b1) ? select_ln468_5_reg_5458 : select_ln468_17_reg_5506);

assign select_ln486_6_fu_4554_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln468_6_fu_4430_p3 : select_ln468_18_fu_4482_p3);

assign select_ln486_7_fu_4562_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln468_7_fu_4437_p3 : select_ln468_19_fu_4489_p3);

assign select_ln486_8_fu_4570_p3 = ((icmp_ln895_123_fu_2232_p2[0:0] === 1'b1) ? select_ln468_8_reg_5470 : select_ln468_20_reg_5518);

assign select_ln486_9_fu_4577_p3 = ((icmp_ln895_124_fu_2236_p2[0:0] === 1'b1) ? select_ln468_9_fu_4443_p3 : select_ln468_21_fu_4495_p3);

assign select_ln486_fu_4508_p3 = ((icmp_ln895_121_fu_2224_p2[0:0] === 1'b1) ? select_ln468_fu_4404_p3 : select_ln468_12_fu_4456_p3);

assign sext_ln703_fu_4703_p1 = $signed(add_ln703_fu_4697_p2);

assign shl_ln_fu_4717_p3 = {{tmp_V_fu_4667_p2}, {5'd0}};

assign t0_V_fu_4674_p3 = {{res_max_bin_theta_t_2_fu_4655_p3}, {2'd0}};

assign tmp_V_fu_4667_p2 = (res_max_bin_r_t_V_2_fu_4662_p3 + 7'd1);

assign zext_ln703_1_fu_4692_p1 = p_Val2_2_fu_4682_p2;

assign zext_ln703_2_fu_4707_p1 = $unsigned(sext_ln703_fu_4703_p1);

assign zext_ln703_fu_4688_p1 = p_Val2_2_fu_4682_p2;

assign zext_ln708_fu_4731_p1 = p_Val2_4_fu_4725_p2;

always @ (posedge ap_clk) begin
    hls_LT_theta_V_1_data_reg[0] <= 1'b0;
    hls_LT_theta_V_1_data_reg[13:9] <= 5'b00000;
    hls_LT_r_V_1_data_reg[3:0] <= 4'b0000;
    hls_LT_r_V_1_data_reg[21:12] <= 10'b0000000000;
    select_ln486_reg_5536[1:0] <= 2'b00;
    select_ln486_6_reg_5541[1:0] <= 2'b10;
    res_max_bin_theta_t_1_reg_5556[0] <= 1'b1;
end

endmodule //find_max_bin
