-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
--
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get_trig_vals is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hw_trig_vals_0_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_1_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_2_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_3_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_4_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_5_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_6_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_7_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_8_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_9_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_10_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_11_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_12_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_13_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_14_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    hw_trig_vals_15_V : OUT STD_LOGIC_VECTOR (35 downto 0);
    rom_idx_V : IN STD_LOGIC_VECTOR (2 downto 0);
    lut_start_addr_V : IN STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of get_trig_vals is
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "get_trig_vals,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku15p-ffva1760-2-e,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.636125,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=909,HLS_SYN_LUT=1475,HLS_VERSION=2019_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv13_8 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_const_lv13_628 : STD_LOGIC_VECTOR (12 downto 0) := "0011000101000";
    constant ap_const_lv13_19D8 : STD_LOGIC_VECTOR (12 downto 0) := "1100111011000";
    constant ap_const_lv13_19E0 : STD_LOGIC_VECTOR (12 downto 0) := "1100111100000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal hw_trig_vals_0_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_1_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_2_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_3_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_4_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_5_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_6_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_7_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_8_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_9_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_10_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_11_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_12_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_13_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_14_V_1_ack_in : STD_LOGIC;
    signal hw_trig_vals_15_V_1_ack_in : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal hw_trig_vals_0_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_0_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_0_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_1_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_1_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_1_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_2_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_2_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_2_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_3_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_3_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_3_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_4_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_4_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_4_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_5_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_5_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_5_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_6_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_6_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_6_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_7_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_7_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_7_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_8_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_8_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_8_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_9_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_9_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_9_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_10_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_10_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_10_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_11_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_11_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_11_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_12_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_12_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_12_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_13_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_13_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_13_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_14_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_14_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_14_V_1_vld_in : STD_LOGIC;
    signal hw_trig_vals_15_V_1_data_reg : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    signal hw_trig_vals_15_V_1_vld_reg : STD_LOGIC := '0';
    signal hw_trig_vals_15_V_1_vld_in : STD_LOGIC;
    signal lut_tables_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_0_ce0 : STD_LOGIC;
    signal lut_tables_0_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_0_ce1 : STD_LOGIC;
    signal lut_tables_0_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_1_ce0 : STD_LOGIC;
    signal lut_tables_1_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_1_ce1 : STD_LOGIC;
    signal lut_tables_1_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_2_ce0 : STD_LOGIC;
    signal lut_tables_2_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_2_ce1 : STD_LOGIC;
    signal lut_tables_2_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_3_ce0 : STD_LOGIC;
    signal lut_tables_3_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_3_ce1 : STD_LOGIC;
    signal lut_tables_3_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_4_ce0 : STD_LOGIC;
    signal lut_tables_4_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_4_ce1 : STD_LOGIC;
    signal lut_tables_4_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_5_ce0 : STD_LOGIC;
    signal lut_tables_5_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_5_ce1 : STD_LOGIC;
    signal lut_tables_5_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_6_ce0 : STD_LOGIC;
    signal lut_tables_6_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_6_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_6_ce1 : STD_LOGIC;
    signal lut_tables_6_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_7_ce0 : STD_LOGIC;
    signal lut_tables_7_q0 : STD_LOGIC_VECTOR (35 downto 0);
    signal lut_tables_7_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lut_tables_7_ce1 : STD_LOGIC;
    signal lut_tables_7_q1 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln215_fu_462_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_reg_1453 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln647_fu_466_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln647_reg_1464 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_fu_474_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_reg_1469 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_1_fu_484_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_1_reg_1474 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_2_fu_494_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_2_reg_1479 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1353_8_fu_514_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_8_reg_1484 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_8_reg_1484_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_reg_1492 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_reg_1492_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln647_3_fu_534_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_3_reg_1497 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_4_fu_544_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_4_reg_1502 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_5_fu_554_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln647_5_reg_1507 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1353_fu_563_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_reg_1512 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_reg_1519 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_1_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_reg_1524 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1529 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_2_fu_603_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_2_reg_1534 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_reg_1541 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_9_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_9_reg_1546 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1551 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_4_fu_643_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_4_reg_1556 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_reg_1563 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_10_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_10_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1573 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_6_fu_683_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_6_reg_1578 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_reg_1585 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_11_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_11_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1595 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_12_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_12_reg_1600 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1605 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_10_fu_744_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_10_reg_1610 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_reg_1617 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_13_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_13_reg_1622 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1627 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_12_fu_784_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_12_reg_1632 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_12_reg_1639 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_14_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_14_reg_1644 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1353_14_fu_824_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_14_reg_1654 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_reg_1661 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_15_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_15_reg_1666 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_reg_1671 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln895_1_fu_896_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln895_3_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_5_fu_970_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_7_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_9_fu_1044_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_11_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_13_fu_1118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_15_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_17_fu_1192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_19_fu_1226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_21_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_23_fu_1300_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_25_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_27_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_29_fu_1414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln895_31_fu_1448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1354_fu_452_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_fu_456_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1353_fu_470_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1353_1_fu_480_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1353_2_fu_490_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1353_3_fu_500_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln647_fu_504_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln215_5_fu_510_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1353_4_fu_530_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1353_5_fu_540_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1353_6_fu_550_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln215_1_fu_560_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_1_fu_578_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_2_fu_600_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_3_fu_618_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_3_fu_640_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_5_fu_658_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_4_fu_680_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_7_fu_698_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_9_fu_720_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_6_fu_741_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_11_fu_759_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_7_fu_781_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_13_fu_799_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_8_fu_821_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_15_fu_839_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1354_fu_866_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln_fu_871_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_fu_881_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_fu_885_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_fu_888_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_1_fu_901_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_1_fu_906_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_1_fu_916_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_2_fu_920_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_1_fu_923_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_2_fu_940_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_2_fu_945_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_8_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_2_fu_955_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_4_fu_959_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_2_fu_962_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_3_fu_975_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_3_fu_980_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_3_fu_990_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_6_fu_994_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_3_fu_997_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_4_fu_1014_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_4_fu_1019_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_2_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_4_fu_1029_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_8_fu_1033_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_4_fu_1036_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_5_fu_1049_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_5_fu_1054_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_5_fu_1064_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_10_fu_1068_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_5_fu_1071_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_6_fu_1088_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_6_fu_1093_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_3_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_6_fu_1103_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_12_fu_1107_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_6_fu_1110_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_7_fu_1123_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_7_fu_1128_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_7_fu_1138_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_14_fu_1142_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_7_fu_1145_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_8_fu_1162_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_8_fu_1167_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_4_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_8_fu_1177_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_16_fu_1181_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_8_fu_1184_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_9_fu_1197_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_9_fu_1202_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_9_fu_1212_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_18_fu_1216_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_9_fu_1219_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_10_fu_1236_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_s_fu_1241_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_5_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_10_fu_1251_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_20_fu_1255_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_10_fu_1258_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_11_fu_1271_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_10_fu_1276_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_11_fu_1286_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_22_fu_1290_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_11_fu_1293_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_12_fu_1310_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_11_fu_1315_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_6_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_12_fu_1325_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_24_fu_1329_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_12_fu_1332_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_13_fu_1345_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_12_fu_1350_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_13_fu_1360_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_26_fu_1364_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_13_fu_1367_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln1354_14_fu_1384_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_13_fu_1389_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_7_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1503_14_fu_1399_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln895_28_fu_1403_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln895_14_fu_1406_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln1354_15_fu_1419_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1503_14_fu_1424_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1503_15_fu_1434_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln895_30_fu_1438_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal select_ln895_15_fu_1441_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component get_trig_vals_lutbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_lutcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_lutdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_luteOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_lutfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_lutg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_luthbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component get_trig_vals_lutibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (35 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    lut_tables_0_U : component get_trig_vals_lutbkb
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_0_address0,
        ce0 => lut_tables_0_ce0,
        q0 => lut_tables_0_q0,
        address1 => lut_tables_0_address1,
        ce1 => lut_tables_0_ce1,
        q1 => lut_tables_0_q1);

    lut_tables_1_U : component get_trig_vals_lutcud
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_1_address0,
        ce0 => lut_tables_1_ce0,
        q0 => lut_tables_1_q0,
        address1 => lut_tables_1_address1,
        ce1 => lut_tables_1_ce1,
        q1 => lut_tables_1_q1);

    lut_tables_2_U : component get_trig_vals_lutdEe
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_2_address0,
        ce0 => lut_tables_2_ce0,
        q0 => lut_tables_2_q0,
        address1 => lut_tables_2_address1,
        ce1 => lut_tables_2_ce1,
        q1 => lut_tables_2_q1);

    lut_tables_3_U : component get_trig_vals_luteOg
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_3_address0,
        ce0 => lut_tables_3_ce0,
        q0 => lut_tables_3_q0,
        address1 => lut_tables_3_address1,
        ce1 => lut_tables_3_ce1,
        q1 => lut_tables_3_q1);

    lut_tables_4_U : component get_trig_vals_lutfYi
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_4_address0,
        ce0 => lut_tables_4_ce0,
        q0 => lut_tables_4_q0,
        address1 => lut_tables_4_address1,
        ce1 => lut_tables_4_ce1,
        q1 => lut_tables_4_q1);

    lut_tables_5_U : component get_trig_vals_lutg8j
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_5_address0,
        ce0 => lut_tables_5_ce0,
        q0 => lut_tables_5_q0,
        address1 => lut_tables_5_address1,
        ce1 => lut_tables_5_ce1,
        q1 => lut_tables_5_q1);

    lut_tables_6_U : component get_trig_vals_luthbi
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_6_address0,
        ce0 => lut_tables_6_ce0,
        q0 => lut_tables_6_q0,
        address1 => lut_tables_6_address1,
        ce1 => lut_tables_6_ce1,
        q1 => lut_tables_6_q1);

    lut_tables_7_U : component get_trig_vals_lutibs
    generic map (
        DataWidth => 36,
        AddressRange => 197,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lut_tables_7_address0,
        ce0 => lut_tables_7_ce0,
        q0 => lut_tables_7_q0,
        address1 => lut_tables_7_address1,
        ce1 => lut_tables_7_ce1,
        q1 => lut_tables_7_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if;
            end if;
        end if;
    end process;


    hw_trig_vals_0_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_10_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_11_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_12_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_13_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_14_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_15_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_1_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_2_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_3_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_4_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_5_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_6_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_7_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_8_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hw_trig_vals_9_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln1353_10_reg_1610 <= add_ln1353_10_fu_744_p2;
                add_ln1353_12_reg_1632 <= add_ln1353_12_fu_784_p2;
                add_ln1353_14_reg_1654 <= add_ln1353_14_fu_824_p2;
                add_ln1353_2_reg_1534 <= add_ln1353_2_fu_603_p2;
                add_ln1353_4_reg_1556 <= add_ln1353_4_fu_643_p2;
                add_ln1353_6_reg_1578 <= add_ln1353_6_fu_683_p2;
                add_ln1353_8_reg_1484 <= add_ln1353_8_fu_514_p2;
                add_ln1353_8_reg_1484_pp0_iter1_reg <= add_ln1353_8_reg_1484;
                add_ln1353_reg_1512 <= add_ln1353_fu_563_p2;
                add_ln647_1_reg_1474 <= add_ln647_1_fu_484_p2;
                add_ln647_2_reg_1479 <= add_ln647_2_fu_494_p2;
                add_ln647_3_reg_1497 <= add_ln647_3_fu_534_p2;
                add_ln647_4_reg_1502 <= add_ln647_4_fu_544_p2;
                add_ln647_5_reg_1507 <= add_ln647_5_fu_554_p2;
                add_ln647_reg_1469 <= add_ln647_fu_474_p2;
                icmp_ln895_10_reg_1568 <= icmp_ln895_10_fu_664_p2;
                icmp_ln895_11_reg_1590 <= icmp_ln895_11_fu_704_p2;
                icmp_ln895_12_reg_1600 <= icmp_ln895_12_fu_725_p2;
                icmp_ln895_13_reg_1622 <= icmp_ln895_13_fu_765_p2;
                icmp_ln895_14_reg_1644 <= icmp_ln895_14_fu_805_p2;
                icmp_ln895_15_reg_1666 <= icmp_ln895_15_fu_845_p2;
                icmp_ln895_1_reg_1524 <= icmp_ln895_1_fu_584_p2;
                icmp_ln895_9_reg_1546 <= icmp_ln895_9_fu_624_p2;
                tmp_10_reg_1617 <= add_ln1353_10_fu_744_p2(12 downto 3);
                tmp_11_reg_1627 <= add_ln1353_11_fu_759_p2(12 downto 3);
                tmp_12_reg_1639 <= add_ln1353_12_fu_784_p2(12 downto 3);
                tmp_13_reg_1649 <= add_ln1353_13_fu_799_p2(12 downto 3);
                tmp_14_reg_1661 <= add_ln1353_14_fu_824_p2(12 downto 3);
                tmp_15_reg_1671 <= add_ln1353_15_fu_839_p2(12 downto 3);
                tmp_1_reg_1529 <= add_ln1353_1_fu_578_p2(12 downto 3);
                tmp_2_reg_1541 <= add_ln1353_2_fu_603_p2(12 downto 3);
                tmp_3_reg_1551 <= add_ln1353_3_fu_618_p2(12 downto 3);
                tmp_4_reg_1563 <= add_ln1353_4_fu_643_p2(12 downto 3);
                tmp_5_reg_1573 <= add_ln1353_5_fu_658_p2(12 downto 3);
                tmp_6_reg_1585 <= add_ln1353_6_fu_683_p2(12 downto 3);
                tmp_7_reg_1595 <= add_ln1353_7_fu_698_p2(12 downto 3);
                tmp_8_reg_1492 <= add_ln1353_8_fu_514_p2(12 downto 3);
                tmp_8_reg_1492_pp0_iter1_reg <= tmp_8_reg_1492;
                tmp_9_reg_1605 <= add_ln1353_9_fu_720_p2(12 downto 3);
                tmp_reg_1519 <= add_ln1353_fu_563_p2(12 downto 3);
                trunc_ln647_reg_1464 <= trunc_ln647_fu_466_p1;
                    zext_ln215_reg_1453(11 downto 0) <= zext_ln215_fu_462_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_0_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_0_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_0_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_0_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_0_V_1_data_reg <= lut_tables_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_10_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_10_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_10_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_10_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_10_V_1_data_reg <= lut_tables_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_11_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_11_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_11_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_11_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_11_V_1_data_reg <= lut_tables_3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_12_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_12_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_12_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_12_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_12_V_1_data_reg <= lut_tables_4_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_13_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_13_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_13_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_13_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_13_V_1_data_reg <= lut_tables_5_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_14_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_14_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_14_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_14_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_14_V_1_data_reg <= lut_tables_6_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_15_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_15_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_15_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_15_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_15_V_1_data_reg <= lut_tables_7_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_1_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_1_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_1_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_1_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_1_V_1_data_reg <= lut_tables_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_2_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_2_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_2_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_2_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_2_V_1_data_reg <= lut_tables_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_3_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_3_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_3_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_3_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_3_V_1_data_reg <= lut_tables_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_4_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_4_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_4_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_4_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_4_V_1_data_reg <= lut_tables_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_5_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_5_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_5_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_5_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_5_V_1_data_reg <= lut_tables_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_6_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_6_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_6_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_6_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_6_V_1_data_reg <= lut_tables_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_7_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_7_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_7_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_7_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_7_V_1_data_reg <= lut_tables_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_8_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_8_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_8_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_8_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_8_V_1_data_reg <= lut_tables_0_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (hw_trig_vals_9_V_1_vld_reg = ap_const_logic_0) and (hw_trig_vals_9_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_9_V_1_vld_in = ap_const_logic_1) and (hw_trig_vals_9_V_1_vld_reg = ap_const_logic_1)))) then
                hw_trig_vals_9_V_1_data_reg <= lut_tables_1_q1;
            end if;
        end if;
    end process;
    zext_ln215_reg_1453(12) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 =>
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1353_10_fu_744_p2 <= std_logic_vector(unsigned(zext_ln215_6_fu_741_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_11_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_10_fu_744_p2));
    add_ln1353_12_fu_784_p2 <= std_logic_vector(unsigned(zext_ln215_7_fu_781_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_13_fu_799_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_12_fu_784_p2));
    add_ln1353_14_fu_824_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_821_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_15_fu_839_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_14_fu_824_p2));
    add_ln1353_1_fu_578_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_fu_563_p2));
    add_ln1353_2_fu_603_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_600_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_3_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_2_fu_603_p2));
    add_ln1353_4_fu_643_p2 <= std_logic_vector(unsigned(zext_ln215_3_fu_640_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_5_fu_658_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_4_fu_643_p2));
    add_ln1353_6_fu_683_p2 <= std_logic_vector(unsigned(zext_ln215_4_fu_680_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1353_7_fu_698_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_6_fu_683_p2));
    add_ln1353_8_fu_514_p2 <= std_logic_vector(unsigned(zext_ln215_5_fu_510_p1) + unsigned(zext_ln215_fu_462_p1));
    add_ln1353_9_fu_720_p2 <= std_logic_vector(unsigned(ap_const_lv13_8) + unsigned(add_ln1353_8_reg_1484));
    add_ln1353_fu_563_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_560_p1) + unsigned(zext_ln215_reg_1453));
    add_ln1354_10_fu_1236_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_10_reg_1610));
    add_ln1354_11_fu_1271_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_10_reg_1610));
    add_ln1354_12_fu_1310_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_12_reg_1632));
    add_ln1354_13_fu_1345_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_12_reg_1632));
    add_ln1354_14_fu_1384_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_14_reg_1654));
    add_ln1354_15_fu_1419_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_14_reg_1654));
    add_ln1354_1_fu_901_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_reg_1512));
    add_ln1354_2_fu_940_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_2_reg_1534));
    add_ln1354_3_fu_975_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_2_reg_1534));
    add_ln1354_4_fu_1014_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_4_reg_1556));
    add_ln1354_5_fu_1049_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_4_reg_1556));
    add_ln1354_6_fu_1088_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_6_reg_1578));
    add_ln1354_7_fu_1123_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_6_reg_1578));
    add_ln1354_8_fu_1162_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_8_reg_1484_pp0_iter1_reg));
    add_ln1354_9_fu_1197_p2 <= std_logic_vector(signed(ap_const_lv13_19E0) + signed(add_ln1353_8_reg_1484_pp0_iter1_reg));
    add_ln1354_fu_866_p2 <= std_logic_vector(signed(ap_const_lv13_19D8) + signed(add_ln1353_reg_1512));
    add_ln647_1_fu_484_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(trunc_ln1353_1_fu_480_p1));
    add_ln647_2_fu_494_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(trunc_ln1353_2_fu_490_p1));
    add_ln647_3_fu_534_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(trunc_ln1353_4_fu_530_p1));
    add_ln647_4_fu_544_p2 <= std_logic_vector(signed(ap_const_lv3_6) + signed(trunc_ln1353_5_fu_540_p1));
    add_ln647_5_fu_554_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(trunc_ln1353_6_fu_550_p1));
    add_ln647_fu_474_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(trunc_ln1353_fu_470_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter4, hw_trig_vals_0_V_1_ack_in, hw_trig_vals_1_V_1_ack_in, hw_trig_vals_2_V_1_ack_in, hw_trig_vals_3_V_1_ack_in, hw_trig_vals_4_V_1_ack_in, hw_trig_vals_5_V_1_ack_in, hw_trig_vals_6_V_1_ack_in, hw_trig_vals_7_V_1_ack_in, hw_trig_vals_8_V_1_ack_in, hw_trig_vals_9_V_1_ack_in, hw_trig_vals_10_V_1_ack_in, hw_trig_vals_11_V_1_ack_in, hw_trig_vals_12_V_1_ack_in, hw_trig_vals_13_V_1_ack_in, hw_trig_vals_14_V_1_ack_in, hw_trig_vals_15_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((hw_trig_vals_13_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_12_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_11_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_10_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_9_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_8_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_7_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_6_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_5_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_4_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_3_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_2_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_1_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_0_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_15_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_14_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter4, hw_trig_vals_0_V_1_ack_in, hw_trig_vals_1_V_1_ack_in, hw_trig_vals_2_V_1_ack_in, hw_trig_vals_3_V_1_ack_in, hw_trig_vals_4_V_1_ack_in, hw_trig_vals_5_V_1_ack_in, hw_trig_vals_6_V_1_ack_in, hw_trig_vals_7_V_1_ack_in, hw_trig_vals_8_V_1_ack_in, hw_trig_vals_9_V_1_ack_in, hw_trig_vals_10_V_1_ack_in, hw_trig_vals_11_V_1_ack_in, hw_trig_vals_12_V_1_ack_in, hw_trig_vals_13_V_1_ack_in, hw_trig_vals_14_V_1_ack_in, hw_trig_vals_15_V_1_ack_in)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((hw_trig_vals_13_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_12_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_11_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_10_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_9_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_8_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_7_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_6_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_5_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_4_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_3_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_2_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_1_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_0_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_15_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_14_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter4, hw_trig_vals_0_V_1_ack_in, hw_trig_vals_1_V_1_ack_in, hw_trig_vals_2_V_1_ack_in, hw_trig_vals_3_V_1_ack_in, hw_trig_vals_4_V_1_ack_in, hw_trig_vals_5_V_1_ack_in, hw_trig_vals_6_V_1_ack_in, hw_trig_vals_7_V_1_ack_in, hw_trig_vals_8_V_1_ack_in, hw_trig_vals_9_V_1_ack_in, hw_trig_vals_10_V_1_ack_in, hw_trig_vals_11_V_1_ack_in, hw_trig_vals_12_V_1_ack_in, hw_trig_vals_13_V_1_ack_in, hw_trig_vals_14_V_1_ack_in, hw_trig_vals_15_V_1_ack_in)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and ((hw_trig_vals_13_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_12_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_11_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_10_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_9_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_8_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_7_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_6_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_5_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_4_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_3_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_2_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_1_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_0_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_15_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_14_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(hw_trig_vals_0_V_1_ack_in, hw_trig_vals_1_V_1_ack_in, hw_trig_vals_2_V_1_ack_in, hw_trig_vals_3_V_1_ack_in, hw_trig_vals_4_V_1_ack_in, hw_trig_vals_5_V_1_ack_in, hw_trig_vals_6_V_1_ack_in, hw_trig_vals_7_V_1_ack_in, hw_trig_vals_8_V_1_ack_in, hw_trig_vals_9_V_1_ack_in, hw_trig_vals_10_V_1_ack_in, hw_trig_vals_11_V_1_ack_in, hw_trig_vals_12_V_1_ack_in, hw_trig_vals_13_V_1_ack_in, hw_trig_vals_14_V_1_ack_in, hw_trig_vals_15_V_1_ack_in)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((hw_trig_vals_13_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_12_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_11_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_10_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_9_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_8_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_7_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_6_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_5_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_4_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_3_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_2_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_1_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_0_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_15_V_1_ack_in = ap_const_logic_0) or (hw_trig_vals_14_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            ap_done <= ap_const_logic_1;
        else
            ap_done <= ap_const_logic_0;
        end if;
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            ap_idle <= ap_const_logic_1;
        else
            ap_idle <= ap_const_logic_0;
        end if;
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
            ap_idle_pp0 <= ap_const_logic_1;
        else
            ap_idle_pp0 <= ap_const_logic_0;
        end if;
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if;
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            ap_ready <= ap_const_logic_1;
        else
            ap_ready <= ap_const_logic_0;
        end if;
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_0_V <= hw_trig_vals_0_V_1_data_reg;

    hw_trig_vals_0_V_1_ack_in_assign_proc : process(hw_trig_vals_0_V_1_vld_reg)
    begin
        if (((hw_trig_vals_0_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_0_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_0_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_0_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_0_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_0_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_0_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_10_V <= hw_trig_vals_10_V_1_data_reg;

    hw_trig_vals_10_V_1_ack_in_assign_proc : process(hw_trig_vals_10_V_1_vld_reg)
    begin
        if (((hw_trig_vals_10_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_10_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_10_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_10_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_10_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_10_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_10_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_11_V <= hw_trig_vals_11_V_1_data_reg;

    hw_trig_vals_11_V_1_ack_in_assign_proc : process(hw_trig_vals_11_V_1_vld_reg)
    begin
        if (((hw_trig_vals_11_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_11_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_11_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_11_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_11_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_11_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_11_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_12_V <= hw_trig_vals_12_V_1_data_reg;

    hw_trig_vals_12_V_1_ack_in_assign_proc : process(hw_trig_vals_12_V_1_vld_reg)
    begin
        if (((hw_trig_vals_12_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_12_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_12_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_12_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_12_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_12_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_12_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_13_V <= hw_trig_vals_13_V_1_data_reg;

    hw_trig_vals_13_V_1_ack_in_assign_proc : process(hw_trig_vals_13_V_1_vld_reg)
    begin
        if (((hw_trig_vals_13_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_13_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_13_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_13_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_13_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_13_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_13_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_14_V <= hw_trig_vals_14_V_1_data_reg;

    hw_trig_vals_14_V_1_ack_in_assign_proc : process(hw_trig_vals_14_V_1_vld_reg)
    begin
        if (((hw_trig_vals_14_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_14_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_14_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_14_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_14_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_14_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_14_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_15_V <= hw_trig_vals_15_V_1_data_reg;

    hw_trig_vals_15_V_1_ack_in_assign_proc : process(hw_trig_vals_15_V_1_vld_reg)
    begin
        if (((hw_trig_vals_15_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_15_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_15_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_15_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_15_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_15_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_15_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_1_V <= hw_trig_vals_1_V_1_data_reg;

    hw_trig_vals_1_V_1_ack_in_assign_proc : process(hw_trig_vals_1_V_1_vld_reg)
    begin
        if (((hw_trig_vals_1_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_1_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_1_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_1_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_1_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_1_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_1_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_2_V <= hw_trig_vals_2_V_1_data_reg;

    hw_trig_vals_2_V_1_ack_in_assign_proc : process(hw_trig_vals_2_V_1_vld_reg)
    begin
        if (((hw_trig_vals_2_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_2_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_2_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_2_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_2_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_2_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_2_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_3_V <= hw_trig_vals_3_V_1_data_reg;

    hw_trig_vals_3_V_1_ack_in_assign_proc : process(hw_trig_vals_3_V_1_vld_reg)
    begin
        if (((hw_trig_vals_3_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_3_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_3_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_3_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_3_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_3_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_3_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_4_V <= hw_trig_vals_4_V_1_data_reg;

    hw_trig_vals_4_V_1_ack_in_assign_proc : process(hw_trig_vals_4_V_1_vld_reg)
    begin
        if (((hw_trig_vals_4_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_4_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_4_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_4_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_4_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_4_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_4_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_5_V <= hw_trig_vals_5_V_1_data_reg;

    hw_trig_vals_5_V_1_ack_in_assign_proc : process(hw_trig_vals_5_V_1_vld_reg)
    begin
        if (((hw_trig_vals_5_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_5_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_5_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_5_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_5_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_5_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_5_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_6_V <= hw_trig_vals_6_V_1_data_reg;

    hw_trig_vals_6_V_1_ack_in_assign_proc : process(hw_trig_vals_6_V_1_vld_reg)
    begin
        if (((hw_trig_vals_6_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_6_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_6_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_6_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_6_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_6_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_6_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_7_V <= hw_trig_vals_7_V_1_data_reg;

    hw_trig_vals_7_V_1_ack_in_assign_proc : process(hw_trig_vals_7_V_1_vld_reg)
    begin
        if (((hw_trig_vals_7_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_7_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_7_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_7_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_7_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_7_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_7_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_8_V <= hw_trig_vals_8_V_1_data_reg;

    hw_trig_vals_8_V_1_ack_in_assign_proc : process(hw_trig_vals_8_V_1_vld_reg)
    begin
        if (((hw_trig_vals_8_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_8_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_8_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_8_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_8_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_8_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_8_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    hw_trig_vals_9_V <= hw_trig_vals_9_V_1_data_reg;

    hw_trig_vals_9_V_1_ack_in_assign_proc : process(hw_trig_vals_9_V_1_vld_reg)
    begin
        if (((hw_trig_vals_9_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (hw_trig_vals_9_V_1_vld_reg = ap_const_logic_1)))) then
            hw_trig_vals_9_V_1_ack_in <= ap_const_logic_1;
        else
            hw_trig_vals_9_V_1_ack_in <= ap_const_logic_0;
        end if;
    end process;


    hw_trig_vals_9_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            hw_trig_vals_9_V_1_vld_in <= ap_const_logic_1;
        else
            hw_trig_vals_9_V_1_vld_in <= ap_const_logic_0;
        end if;
    end process;

    icmp_ln895_10_fu_664_p2 <= "1" when (unsigned(add_ln1353_5_fu_658_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_11_fu_704_p2 <= "1" when (unsigned(add_ln1353_7_fu_698_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_12_fu_725_p2 <= "1" when (unsigned(add_ln1353_9_fu_720_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_13_fu_765_p2 <= "1" when (unsigned(add_ln1353_11_fu_759_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_14_fu_805_p2 <= "1" when (unsigned(add_ln1353_13_fu_799_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_15_fu_845_p2 <= "1" when (unsigned(add_ln1353_15_fu_839_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_1_fu_584_p2 <= "1" when (unsigned(add_ln1353_1_fu_578_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_2_fu_1009_p2 <= "1" when (unsigned(add_ln1353_4_reg_1556) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_3_fu_1083_p2 <= "1" when (unsigned(add_ln1353_6_reg_1578) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_4_fu_1157_p2 <= "1" when (unsigned(add_ln1353_8_reg_1484_pp0_iter1_reg) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_5_fu_1231_p2 <= "1" when (unsigned(add_ln1353_10_reg_1610) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_6_fu_1305_p2 <= "1" when (unsigned(add_ln1353_12_reg_1632) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_7_fu_1379_p2 <= "1" when (unsigned(add_ln1353_14_reg_1654) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_8_fu_935_p2 <= "1" when (unsigned(add_ln1353_2_reg_1534) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_9_fu_624_p2 <= "1" when (unsigned(add_ln1353_3_fu_618_p2) > unsigned(ap_const_lv13_628)) else "0";
    icmp_ln895_fu_861_p2 <= "1" when (unsigned(add_ln1353_reg_1512) > unsigned(ap_const_lv13_628)) else "0";
    lut_tables_0_address0 <= zext_ln895_1_fu_896_p1(8 - 1 downto 0);
    lut_tables_0_address1 <= zext_ln895_3_fu_930_p1(8 - 1 downto 0);

    lut_tables_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_0_ce0 <= ap_const_logic_1;
        else
            lut_tables_0_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_0_ce1 <= ap_const_logic_1;
        else
            lut_tables_0_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_1_address0 <= zext_ln895_5_fu_970_p1(8 - 1 downto 0);
    lut_tables_1_address1 <= zext_ln895_7_fu_1004_p1(8 - 1 downto 0);

    lut_tables_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_1_ce0 <= ap_const_logic_1;
        else
            lut_tables_1_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_1_ce1 <= ap_const_logic_1;
        else
            lut_tables_1_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_2_address0 <= zext_ln895_9_fu_1044_p1(8 - 1 downto 0);
    lut_tables_2_address1 <= zext_ln895_11_fu_1078_p1(8 - 1 downto 0);

    lut_tables_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_2_ce0 <= ap_const_logic_1;
        else
            lut_tables_2_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_2_ce1 <= ap_const_logic_1;
        else
            lut_tables_2_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_3_address0 <= zext_ln895_13_fu_1118_p1(8 - 1 downto 0);
    lut_tables_3_address1 <= zext_ln895_15_fu_1152_p1(8 - 1 downto 0);

    lut_tables_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_3_ce0 <= ap_const_logic_1;
        else
            lut_tables_3_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_3_ce1 <= ap_const_logic_1;
        else
            lut_tables_3_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_4_address0 <= zext_ln895_17_fu_1192_p1(8 - 1 downto 0);
    lut_tables_4_address1 <= zext_ln895_19_fu_1226_p1(8 - 1 downto 0);

    lut_tables_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_4_ce0 <= ap_const_logic_1;
        else
            lut_tables_4_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_4_ce1 <= ap_const_logic_1;
        else
            lut_tables_4_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_5_address0 <= zext_ln895_21_fu_1266_p1(8 - 1 downto 0);
    lut_tables_5_address1 <= zext_ln895_23_fu_1300_p1(8 - 1 downto 0);

    lut_tables_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_5_ce0 <= ap_const_logic_1;
        else
            lut_tables_5_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_5_ce1 <= ap_const_logic_1;
        else
            lut_tables_5_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_6_address0 <= zext_ln895_25_fu_1340_p1(8 - 1 downto 0);
    lut_tables_6_address1 <= zext_ln895_27_fu_1374_p1(8 - 1 downto 0);

    lut_tables_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_6_ce0 <= ap_const_logic_1;
        else
            lut_tables_6_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_6_ce1 <= ap_const_logic_1;
        else
            lut_tables_6_ce1 <= ap_const_logic_0;
        end if;
    end process;

    lut_tables_7_address0 <= zext_ln895_29_fu_1414_p1(8 - 1 downto 0);
    lut_tables_7_address1 <= zext_ln895_31_fu_1448_p1(8 - 1 downto 0);

    lut_tables_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_7_ce0 <= ap_const_logic_1;
        else
            lut_tables_7_ce0 <= ap_const_logic_0;
        end if;
    end process;


    lut_tables_7_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
            lut_tables_7_ce1 <= ap_const_logic_1;
        else
            lut_tables_7_ce1 <= ap_const_logic_0;
        end if;
    end process;

    ret_V_fu_456_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(zext_ln1354_fu_452_p1));
    select_ln895_10_fu_1258_p3 <=
        sext_ln1503_10_fu_1251_p1 when (icmp_ln895_5_fu_1231_p2(0) = '1') else
        zext_ln895_20_fu_1255_p1;
    select_ln895_11_fu_1293_p3 <=
        sext_ln1503_11_fu_1286_p1 when (icmp_ln895_13_reg_1622(0) = '1') else
        zext_ln895_22_fu_1290_p1;
    select_ln895_12_fu_1332_p3 <=
        sext_ln1503_12_fu_1325_p1 when (icmp_ln895_6_fu_1305_p2(0) = '1') else
        zext_ln895_24_fu_1329_p1;
    select_ln895_13_fu_1367_p3 <=
        sext_ln1503_13_fu_1360_p1 when (icmp_ln895_14_reg_1644(0) = '1') else
        zext_ln895_26_fu_1364_p1;
    select_ln895_14_fu_1406_p3 <=
        sext_ln1503_14_fu_1399_p1 when (icmp_ln895_7_fu_1379_p2(0) = '1') else
        zext_ln895_28_fu_1403_p1;
    select_ln895_15_fu_1441_p3 <=
        sext_ln1503_15_fu_1434_p1 when (icmp_ln895_15_reg_1666(0) = '1') else
        zext_ln895_30_fu_1438_p1;
    select_ln895_1_fu_923_p3 <=
        sext_ln1503_1_fu_916_p1 when (icmp_ln895_1_reg_1524(0) = '1') else
        zext_ln895_2_fu_920_p1;
    select_ln895_2_fu_962_p3 <=
        sext_ln1503_2_fu_955_p1 when (icmp_ln895_8_fu_935_p2(0) = '1') else
        zext_ln895_4_fu_959_p1;
    select_ln895_3_fu_997_p3 <=
        sext_ln1503_3_fu_990_p1 when (icmp_ln895_9_reg_1546(0) = '1') else
        zext_ln895_6_fu_994_p1;
    select_ln895_4_fu_1036_p3 <=
        sext_ln1503_4_fu_1029_p1 when (icmp_ln895_2_fu_1009_p2(0) = '1') else
        zext_ln895_8_fu_1033_p1;
    select_ln895_5_fu_1071_p3 <=
        sext_ln1503_5_fu_1064_p1 when (icmp_ln895_10_reg_1568(0) = '1') else
        zext_ln895_10_fu_1068_p1;
    select_ln895_6_fu_1110_p3 <=
        sext_ln1503_6_fu_1103_p1 when (icmp_ln895_3_fu_1083_p2(0) = '1') else
        zext_ln895_12_fu_1107_p1;
    select_ln895_7_fu_1145_p3 <=
        sext_ln1503_7_fu_1138_p1 when (icmp_ln895_11_reg_1590(0) = '1') else
        zext_ln895_14_fu_1142_p1;
    select_ln895_8_fu_1184_p3 <=
        sext_ln1503_8_fu_1177_p1 when (icmp_ln895_4_fu_1157_p2(0) = '1') else
        zext_ln895_16_fu_1181_p1;
    select_ln895_9_fu_1219_p3 <=
        sext_ln1503_9_fu_1212_p1 when (icmp_ln895_12_reg_1600(0) = '1') else
        zext_ln895_18_fu_1216_p1;
    select_ln895_fu_888_p3 <=
        sext_ln1503_fu_881_p1 when (icmp_ln895_fu_861_p2(0) = '1') else
        zext_ln895_fu_885_p1;
        sext_ln1503_10_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_s_fu_1241_p4),33));

        sext_ln1503_11_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_10_fu_1276_p4),34));

        sext_ln1503_12_fu_1325_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_11_fu_1315_p4),33));

        sext_ln1503_13_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_12_fu_1350_p4),34));

        sext_ln1503_14_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_13_fu_1389_p4),33));

        sext_ln1503_15_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_14_fu_1424_p4),34));

        sext_ln1503_1_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_1_fu_906_p4),34));

        sext_ln1503_2_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_2_fu_945_p4),33));

        sext_ln1503_3_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_3_fu_980_p4),34));

        sext_ln1503_4_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_4_fu_1019_p4),33));

        sext_ln1503_5_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_5_fu_1054_p4),34));

        sext_ln1503_6_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_6_fu_1093_p4),33));

        sext_ln1503_7_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_7_fu_1128_p4),34));

        sext_ln1503_8_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_8_fu_1167_p4),33));

        sext_ln1503_9_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1503_9_fu_1202_p4),34));

        sext_ln1503_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_871_p4),33));

    trunc_ln1353_1_fu_480_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_2_fu_490_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_3_fu_500_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_4_fu_530_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_5_fu_540_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_6_fu_550_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1353_fu_470_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln1503_10_fu_1276_p4 <= add_ln1354_11_fu_1271_p2(12 downto 3);
    trunc_ln1503_11_fu_1315_p4 <= add_ln1354_12_fu_1310_p2(12 downto 3);
    trunc_ln1503_12_fu_1350_p4 <= add_ln1354_13_fu_1345_p2(12 downto 3);
    trunc_ln1503_13_fu_1389_p4 <= add_ln1354_14_fu_1384_p2(12 downto 3);
    trunc_ln1503_14_fu_1424_p4 <= add_ln1354_15_fu_1419_p2(12 downto 3);
    trunc_ln1503_1_fu_906_p4 <= add_ln1354_1_fu_901_p2(12 downto 3);
    trunc_ln1503_2_fu_945_p4 <= add_ln1354_2_fu_940_p2(12 downto 3);
    trunc_ln1503_3_fu_980_p4 <= add_ln1354_3_fu_975_p2(12 downto 3);
    trunc_ln1503_4_fu_1019_p4 <= add_ln1354_4_fu_1014_p2(12 downto 3);
    trunc_ln1503_5_fu_1054_p4 <= add_ln1354_5_fu_1049_p2(12 downto 3);
    trunc_ln1503_6_fu_1093_p4 <= add_ln1354_6_fu_1088_p2(12 downto 3);
    trunc_ln1503_7_fu_1128_p4 <= add_ln1354_7_fu_1123_p2(12 downto 3);
    trunc_ln1503_8_fu_1167_p4 <= add_ln1354_8_fu_1162_p2(12 downto 3);
    trunc_ln1503_9_fu_1202_p4 <= add_ln1354_9_fu_1197_p2(12 downto 3);
    trunc_ln1503_s_fu_1241_p4 <= add_ln1354_10_fu_1236_p2(12 downto 3);
    trunc_ln647_fu_466_p1 <= ret_V_fu_456_p2(3 - 1 downto 0);
    trunc_ln_fu_871_p4 <= add_ln1354_fu_866_p2(12 downto 3);
    xor_ln647_fu_504_p2 <= (trunc_ln1353_3_fu_500_p1 xor ap_const_lv3_4);
    zext_ln1354_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rom_idx_V),4));
    zext_ln215_1_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_reg_1464),13));
    zext_ln215_2_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_reg_1469),13));
    zext_ln215_3_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_1_reg_1474),13));
    zext_ln215_4_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_2_reg_1479),13));
    zext_ln215_5_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln647_fu_504_p2),13));
    zext_ln215_6_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_3_reg_1497),13));
    zext_ln215_7_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_4_reg_1502),13));
    zext_ln215_8_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln647_5_reg_1507),13));
    zext_ln215_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_start_addr_V),13));
    zext_ln895_10_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1573),34));
    zext_ln895_11_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_5_fu_1071_p3),64));
    zext_ln895_12_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1585),33));
    zext_ln895_13_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_6_fu_1110_p3),64));
    zext_ln895_14_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_1595),34));
    zext_ln895_15_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_7_fu_1145_p3),64));
    zext_ln895_16_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_1492_pp0_iter1_reg),33));
    zext_ln895_17_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_8_fu_1184_p3),64));
    zext_ln895_18_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_1605),34));
    zext_ln895_19_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_9_fu_1219_p3),64));
    zext_ln895_1_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_fu_888_p3),64));
    zext_ln895_20_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_1617),33));
    zext_ln895_21_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_10_fu_1258_p3),64));
    zext_ln895_22_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_reg_1627),34));
    zext_ln895_23_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_11_fu_1293_p3),64));
    zext_ln895_24_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_reg_1639),33));
    zext_ln895_25_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_12_fu_1332_p3),64));
    zext_ln895_26_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1649),34));
    zext_ln895_27_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_13_fu_1367_p3),64));
    zext_ln895_28_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_1661),33));
    zext_ln895_29_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_14_fu_1406_p3),64));
    zext_ln895_2_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1529),34));
    zext_ln895_30_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_reg_1671),34));
    zext_ln895_31_fu_1448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_15_fu_1441_p3),64));
    zext_ln895_3_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_1_fu_923_p3),64));
    zext_ln895_4_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1541),33));
    zext_ln895_5_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_2_fu_962_p3),64));
    zext_ln895_6_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1551),34));
    zext_ln895_7_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_3_fu_997_p3),64));
    zext_ln895_8_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1563),33));
    zext_ln895_9_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln895_4_fu_1036_p3),64));
    zext_ln895_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1519),33));
end behav;
